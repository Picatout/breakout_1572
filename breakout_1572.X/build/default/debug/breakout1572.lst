MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  VIDEO DISPLAY ZONES
                      00027 ;  scan lines     display
                      00028 ;  =======================    
                      00029 ;    30-49     |   score and balls count
                      00030 ;    50-57     |   top wall
                      00031 ;    58-250    |   play ground
                      00032 ;    58-73     |   empty zone
                      00033 ;    74-81     |   mauve bricks
                      00034 ;    82-89     |   yellow bricks
                      00035 ;    90-97     |   blue bricks
                      00036 ;    98-105    |   dark green bricks
                      00037 ;    106-113   |   gray bricks
                      00038 ;    114-250   |   empty zone
                      00039 ;    243-250   |   paddle zone    
                      00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00041  
                      00042     
                      00043     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044     
8007   3FA7           00045     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00046     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00047     
                      00048     radix dec
                      00049 
                      00050 ; constants
  00000800            00051 PROG_SIZE equ 2048  ; program words
  00000080            00052 EEPROM_SIZE equ 128 ; high endurance flash words
                      00053  
  01B4F360            00054 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00055 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00056 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00057  
                      00058 ; NTSC signal 
  00003D76            00059 Fhorz equ 15734 ; horizontal frequency
  0000071B            00060 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00061 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00062 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00063 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00064 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00065 ; boolean flags 
  00000000            00066 F_HI_LINE equ 0 ; lcount > 255
  00000001            00067 F_EVEN equ 1    ; even field
  00000002            00068 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00069 F_SOUND equ 3   ; sound enabled 
  00000004            00070 F_START equ 4   ; game started 
  00000005            00071 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00072 F_OVER equ 6    ; game over
                      00073  
                      00074 ;pins assignment
  00000000            00075 AUDIO EQU RA0
  00000000            00076 PADDLE equ RA0
  00000001            00077 CHROMA equ RA1
  00000002            00078 SYNC_OUT equ RA2
  00000003            00079 START_BTN equ RA3 
  00000004            00080 VIDEO_OUT equ RA4
  00000005            00081 CLKIN equ RA5
                      00082  
                      00083     ; constants used in video display
                      00084 ; values are in Tcy for x dimension.
                      00085 ; values are in scan lines for y dimension.    
  0000001E            00086 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00087 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00088 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00089 COURT_WIDTH equ 248 ; Tcy
  00000008            00090 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00091 BRICK_WIDTH equ 16  ; Tcy
  00000004            00092 BORDER_WIDTH equ 4  ; Tcy
  00000020            00093 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00094 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00095 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00096 BALL_WIDTH equ 8 ; Tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00097 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00098 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00099 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00100 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00101 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00102 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  0000004A            00103 ROW1_Y equ 74
  00000052            00104 ROW2_Y equ 82
  0000005A            00105 ROW3_Y equ 90
  00000062            00106 ROW4_Y equ 98
  0000006A            00107 ROW5_Y equ 106
                      00108  
                      00109 
                      00110 ;;;;;;;;;;;;;;;;;;;;;;
                      00111 ;; assembler macros ;;
                      00112 ;;;;;;;;;;;;;;;;;;;;;;
                      00113 
                      00114 ; leave task 
                      00115 leave macro
                      00116     goto isr_exit
                      00117     endm
                      00118     
                      00119 ; move to next task on slice limit
                      00120 ; parameters:
                      00121 ;   s  nomber of slices used by the task    
                      00122 next_task macro s    
                      00123     incf slice
                      00124     movlw s
                      00125     subwf slice,W
                      00126     skpz
                      00127     leave
                      00128     clrf slice
                      00129     incf task
                      00130     movlw s
                      00131     addwf lcount
                      00132     leave
                      00133     endm
                      00134     
                      00135     
                      00136 ; case switch
                      00137 ; parameters:
                      00138 ;   var is control variable
                      00139 ;   n  is constant to compare to var
                      00140 ;   adr  is goto address if var==n 
                      00141 case macro var, n, adr
                      00142     movlw n
                      00143     subwf var,W
                      00144     skpnz
                      00145     goto adr
                      00146     endm
                      00147 
                      00148 ; swap variable with WREG    
                      00149 swap_var macro var
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     xorwf var,W
                      00152     xorwf var
                      00153     endm
                      00154     
                      00155 
                      00156 ; delay in machine cycle T
                      00157 ; parameters:
                      00158 ;   T   number of machine cycles    
                      00159 tdelay macro T
                      00160     variable q=(T)/3
                      00161     variable r=(T)%3
                      00162     if (q)
                      00163     movlw q
                      00164     decfsz WREG
                      00165     goto $-1
                      00166     endif
                      00167     if (r==2)
                      00168     goto $+1
                      00169     endif 
                      00170     if (r==1)
                      00171     nop
                      00172     endif
                      00173     endm
                      00174 
                      00175 ; enable weak pull on VIDEO_OUT
                      00176 ; to create a porch
                      00177 porch_on macro
                      00178     banksel WPUA
                      00179     bsf WPUA,VIDEO_OUT
                      00180     endm
                      00181     
                      00182 ; disable weak pull on VIDEO_OUT
                      00183 ; to remove porch
                      00184 porch_off macro
                      00185     banksel WPUA
                      00186     bcf WPUA,VIDEO_OUT
                      00187     endm
                      00188     
                      00189 ; enable chroma output
                      00190 chroma_on macro
                      00191     banksel TRISA
                      00192     bcf TRISA, CHROMA
                      00193     endm
                      00194     
                      00195 ;disable chroma output    
                      00196 chroma_off macro
                      00197     banksel TRISA
                      00198     bsf TRISA,CHROMA
                      00199     endm
                      00200     
                      00201 ; output chroma reference    
                      00202 chroma_ref macro
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     banksel PWM1CON
                      00204     bcf PWM1CON,POL
                      00205     endm
                      00206     
                      00207 ; set chroma phase to 180 degree
                      00208 chroma_invert macro
                      00209     banksel PWM1CON
                      00210     bsf PWM1CON,POL
                      00211     endm
                      00212 
                      00213 ;;;;;;;;;;;;;;;;;;;;;;
                      00214 ;   colors macros
                      00215 ; each one take 5 T 
                      00216 ;;;;;;;;;;;;;;;;;;;;;;
  00000008            00217 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00218 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00219 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00220 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00221 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00222 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00223 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00224  
                      00225 ;set video output to black    
                      00226 black macro
                      00227     movlw BLACK
                      00228     movwf TRISA
                      00229 ;    goto $+1
                      00230     endm
                      00231     
                      00232 ; set video output to white    
                      00233 white macro    
                      00234     movlw WHITE
                      00235     movwf TRISA
                      00236     endm
                      00237 
                      00238 #define gray white
                      00239     
                      00240 ; set video output to mauve    
                      00241 mauve macro
                      00242 ;    chroma_ref
                      00243 ;    banksel TRISA
                      00244     movlw MAUVE
                      00245     movwf TRISA
                      00246     endm
                      00247 
                      00248 ; set video output to yellow   
                      00249 yellow macro
                      00250     movlw YELLOW
                      00251     movwf TRISA
                      00252     endm
                      00253     
                      00254 ; set video output to blue
                      00255 blue macro
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     movlw BLUE
                      00257     movwf TRISA
                      00258     endm
                      00259     
                      00260 ; set video output to dark blue    
                      00261 dark_green macro
                      00262     movlw DARK_GREEN
                      00263     movwf TRISA
                      00264     endm
                      00265 
                      00266     
                      00267 ; draw 8 bricks wall
                      00268 ; input in temp1
                      00269 draw_wall macro color
                      00270     local next_brick
                      00271     movlw 16
                      00272     pushw
                      00273 next_brick
                      00274     lslf temp1
                      00275     rlf temp2
                      00276     movlw BLACK
                      00277     skpnc
                      00278     movlw color
                      00279     movwf TRISA
                      00280     tdelay BRICK_WIDTH-9
                      00281     decfsz T
                      00282     bra next_brick
                      00283     dropn 1
                      00284     endm
                      00285     
                      00286     
                      00287 ; draw left and right borders
                      00288 ; parameters:
                      00289 ;   width delay determine width
                      00290 ;   width 5T+nT    
                      00291 draw_border macro width
                      00292     banksel TRISA
                      00293     bsf TRISA,CHROMA
                      00294     bcf TRISA,VIDEO_OUT
                      00295     tdelay width
                      00296     bsf TRISA,VIDEO_OUT
                      00297     endm
                      00298     
                      00299 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00300 ;  stack manipulation macros
                      00301 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00302 STACK_SIZE equ 16 ; size of argument stack
                      00303 #define T INDF0 ; top of argument stack
                      00304 #define SP FSR0 ; use FSR0 as stack pointer 
                      00305 ; push WREG on T
                      00306 pushw  macro
                      00307     movwi --SP
                      00308     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309   
                      00310 ; pop WREG from T
                      00311 popw macro
                      00312     moviw SP++
                      00313     endm
                      00314     
                      00315 ; swap WREG with 
                      00316 swapw  macro
                      00317     xorwf T
                      00318     xorwf T,W
                      00319     xorwf T
                      00320     endm
                      00321 
                      00322 ; drop n elements from stack
                      00323 dropn macro n
                      00324     addfsr T,n
                      00325     endm
                      00326 
                      00327 ; copy nth element of stack to WREG
                      00328 ;  n {0..31}    
                      00329 pickn macro n
                      00330     moviw n[SP]
                      00331     endm
                      00332    
                      00333 ; copy WREG to nth element of stack
                      00334 ; n {0..31}
                      00335 pokew macro n
                      00336     movwi n[SP]
                      00337     endm
                      00338     
                      00339     
                      00340 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00341 ;;    variables
                      00342 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00343     
                      00344     udata 0x20
0020                  00345 stack res 16 ; arguments stack
0030                  00346 seed res 4 ; prng seed
                      00347  
                      00348 v_array   udata 0xA0
00A0                  00349 row1 res 2; brick wall row1
00A2                  00350 row2 res 2
00A4                  00351 row3 res 2
00A6                  00352 row4 res 2
00A8                  00353 row5 res 2
00AA                  00354 row6 res 2
00AC                  00355 mask res 1 
00AD                  00356 d1 res 1 ; score msd digit pixels
00AE                  00357 d2 res 1 ; score 2nd digit pixels
00AF                  00358 d3 res 1 ; score lsd digit pixels
00B0                  00359 balls res 1 ; number of recking balls available 
00B1                  00360 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00361   
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362     udata_shr
0000                  00363 flags  res 1 ; boolean variables
0001                  00364 lcount res 1 ; video field line counter
0002                  00365 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00366 task res 1 ; where in video phase 
0004                  00367 temp1 res 1 ; temporary storage
0005                  00368 temp2 res 1 ; 
0006                  00369 paddle_pos res 1 
0007                  00370 ball_x res 1
0008                  00371 ball_y res 1
0009                  00372 ball_dx res 1
000A                  00373 ball_dy res 1
000B                  00374 ball_speed res 1
000C                  00375 score res 2 ; score stored in Binary Coded Decimal
000E                  00376 ball_timer res 1 
                      00377 ;heading res 1 ; ball direction:0=N,2=NW,3=NE,4=S,6=SW,7=SE 
                      00378  
                      00379 ;; code 
                      00380 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00381     GOTO    START                   ; go to beginning of program
0001   0001           00382     reset
0002   0001           00383     reset
0003   0001           00384     reset
                      00385 
                      00386 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00387 ; interrupt service routine triggered by PWM3 period rollover
                      00388 ISR CODE 0x0004
0004                  00389 isr
0004   1900           00390     btfsc flags, F_SYNC
0005   2???           00391     goto task_switch
                      00392  ; chroma sync
                      00393     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00394     banksel TRISA
000A   108C           00395     bcf TRISA,CHROMA
                      00396     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00397     bsf TRISA,CHROMA
                      00398     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00399 task_switch ; horizontal scan line used as round robin task scheduler   
0012   08??           00400     movfw task
0013   000B           00401     brw
0014   2???           00402     goto pre_vsync ;task 0, vertical pre-equalization pulses
0015   2???           00403     goto vsync ;task 1, vertical sync pulses
0016   2???           00404     goto post_vsync ;task 2, vertical post-equalization pulses
0017   2???           00405     goto vsync_end ;task 3, return to normal video line
0018   2???           00406     goto sound ;task 4, check sound timer expiration
0019   2???           00407     goto user_input ;task 5,  read button and paddle
001A   2???           00408     goto move_ball ;task 6, move recking ball.
001B   2???           00409     goto collision ; task 7, check for collision with brick wall and paddle
001C   2???           00410     goto video_first ; task 8, wait FIRST_VIDEO line.
001D   2???           00411     goto draw_score ;task 9,  draw score en ball count
001E   2???           00412     goto draw_top_wall ;task 10,  draw top wall
001F   2???           00413     goto draw_void ;task 11, draw play space
0020   2???           00414     goto draw_row1 ;task 12, draw top bricks row
0021   2???           00415     goto draw_row2 ;task 13, draw second bricks row
0022   2???           00416     goto draw_row3 ;task 14,  draw third bricks row
0023   2???           00417     goto draw_row4 ;task 15,  draw fourth bricks row
0024   2???           00418     goto draw_row5 ;task 16, draw fifth bricks row
0025   2???           00419     goto draw_empty;task 17, draw empty space down to bottom
0026   2???           00420     goto draw_paddle ;task 18, draw paddle
0027   2???           00421     goto wait_field_end ;task 19, idle to end of video field
0028   0001           00422     reset ; error trap, task out of range
0029                  00423 isr_exit  
                      00424     porch_off
0029   0024               M     banksel WPUA
002A   120C               M     bcf WPUA,VIDEO_OUT
002B   003B           00425     banksel PWM3INTF
002C   103D           00426     bcf PWM3INTF,PRIF
002D   0009           00427     retfie
                      00428 
                      00429 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00430 ;;  all tasks routine are here            ;;
                      00431 ;;  each must be terminate by leave macro ;;    
                      00432 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00433     
                      00434 ; task 0, vertical synchronization pre equalization
002E                  00435 pre_vsync
002E   08??           00436     movfw slice
002F   1903           00437     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   2???           00438     goto set_presync
                      00439     next_task 6
0031   0A??               M     incf slice
0032   3006               M     movlw 6
0033   02??               M     subwf slice,W
0034   1D03               M     skpz
                          M     leave
0035   2???               M     goto isr_exit
0036   01??               M     clrf slice
0037   0A??               M     incf task
0038   3006               M     movlw 6
0039   07??               M     addwf lcount
                          M     leave
003A   2???               M     goto isr_exit
003B                  00440 set_presync    
003B   003B           00441     banksel PWM3DC
003C   3041           00442     movlw HEQUAL
003D   00B3           00443     movwf PWM3DCL
003E   01B4           00444     clrf PWM3DCH
003F   3003           00445     movlw high HALF_LINE
0040   00B6           00446     movwf PWM3PRH
0041   308D           00447     movlw low HALF_LINE
0042   00B5           00448     movwf PWM3PRL
0043   17BF           00449     bsf PWM3LDCON,7
0044   0A??           00450     incf slice
                      00451     leave
0045   2???               M     goto isr_exit
                      00452     
                      00453 ; task 1, vertical synchronization pulses
0046                  00454 vsync 
0046   08??           00455     movfw slice
0047   1903           00456     skpnz
0048   2???           00457     goto set_vsync
                      00458     next_task 6
0049   0A??               M     incf slice
004A   3006               M     movlw 6
004B   02??               M     subwf slice,W
004C   1D03               M     skpz
                          M     leave
004D   2???               M     goto isr_exit
004E   01??               M     clrf slice
004F   0A??               M     incf task
0050   3006               M     movlw 6
0051   07??               M     addwf lcount
                          M     leave
0052   2???               M     goto isr_exit
0053                  00459 set_vsync
0053   003B           00460     banksel PWM3DC
0054   3008           00461     movlw low VSYNC_PULSE
0055   00B3           00462     movwf PWM3DCL
0056   3003           00463     movlw high VSYNC_PULSE
0057   00B4           00464     movwf PWM3DCH
0058   17BF           00465     bsf PWM3LDCON,7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   0A??           00466     incf slice
                      00467     leave
005A   2???               M     goto isr_exit
                      00468     
                      00469 ; task 2, vertical synchronisation post equalization pulses
005B                  00470 post_vsync
005B   08??           00471     movfw slice
005C   1903           00472     skpnz
005D   2???           00473     goto set_presync
005E   3006           00474     movlw 6
005F   02??           00475     subwf slice,W
0060   1903           00476     skpnz
0061   2???           00477     goto post_last
0062   0A??           00478     incf slice
                      00479     leave
0063   2???               M     goto isr_exit
0064                  00480 post_last    
0064   0A??           00481     incf task
0065   01??           00482     clrf slice
0066   1C80           00483     btfss flags, F_EVEN
                      00484     leave
0067   2???               M     goto isr_exit
                      00485     
                      00486 ; task 3, vertical synchronization completed, return to normal line
0068                  00487 vsync_end
0068   1100           00488     bcf flags, F_SYNC
0069   003B           00489     banksel PWM3DC
006A   3086           00490     movlw HSYNC
006B   00B3           00491     movwf PWM3DCL
006C   01B4           00492     clrf PWM3DCH
006D   3007           00493     movlw high HPERIOD
006E   00B6           00494     movwf PWM3PRH
006F   301B           00495     movlw low HPERIOD
0070   00B5           00496     movwf PWM3PRL
0071   17BF           00497     bsf PWM3LDCON,7
0072   0A??           00498     incf task
0073   3009           00499     movlw 9
0074   00??           00500     movwf lcount
                      00501     leave
0075   2???               M     goto isr_exit
                      00502 
                      00503 ; task 4,  sound timer
0076                  00504 sound
0076   0A??           00505     incf task
0077   0A??           00506     incf lcount
0078   1D80           00507     btfss flags, F_SOUND
                      00508     leave
0079   2???               M     goto isr_exit
007A   1A80           00509     btfsc flags, F_PAUSE
007B   2???           00510     call sound_fx1
007C   002?           00511     banksel sound_timer
007D   0B??           00512     decfsz sound_timer
                      00513     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   2???               M     goto isr_exit
007F   1180           00514     bcf flags, F_SOUND
0080   003B           00515     banksel PWM2CON
0081   132B           00516     bcf PWM2CON,OE
0082   13AB           00517     bcf PWM2CON,EN
                      00518     leave
0083   2???               M     goto isr_exit
                      00519 
                      00520 ; low pitch to high-pitch    
0084                  00521 sound_fx1
0084   1D80           00522     btfss flags, F_SOUND
0085   0008           00523     return
0086   1C80           00524     btfss flags, F_EVEN
0087   0008           00525     return
0088   003B           00526     banksel PWM2CON
0089   36A6           00527     lsrf PWM2PRH
008A   0CA5           00528     rrf PWM2PRL
008B   36A4           00529     lsrf PWM2DCH
008C   0CA3           00530     rrf PWM2DCL
008D   17AF           00531     bsf PWM2LDCON,LDA
008E   0008           00532     return
                      00533     
                      00534 ; high pitch to low-pitch    
008F                  00535 sound_fx2
008F   1D80           00536     btfss flags, F_SOUND
0090   0008           00537     return
0091   1C80           00538     btfss flags, F_EVEN
0092   0008           00539     return
0093   003B           00540     banksel PWM2CON
0094   35A5           00541     lslf PWM2PRL
0095   0DA6           00542     rlf PWM2PRH
0096   35A3           00543     lslf PWM2DCL
0097   0DA4           00544     rlf PWM2DCH
0098   17AF           00545     bsf PWM2LDCON,LDA
0099   0008           00546     return
                      00547     
                      00548 ; produce a pong sound
                      00549 ; input: ( d i -- )
                      00550 ;   d duration
                      00551 ;   i index frequency table    
009A                  00552 pong
009A   1580           00553     bsf flags, F_SOUND
009B   003B           00554     banksel PWM2CON
009C   0800           00555     movfw T
009D   2???           00556     call frequency
009E   00A6           00557     movwf PWM2PRH
009F   0A00           00558     incf T,W
00A0   2???           00559     call frequency
00A1   00A5           00560     movwf PWM2PRL
00A2   3626           00561     lsrf PWM2PRH,W
00A3   00A4           00562     movwf PWM2DCH
00A4   0C25           00563     rrf PWM2PRL,W
00A5   00A3           00564     movwf PWM2DCL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A6   17AF           00565     bsf PWM2LDCON,LDA
00A7   172B           00566     bsf PWM2CON,OE
00A8   17AB           00567     bsf PWM2CON,EN
00A9   002?           00568     banksel sound_timer
                      00569     pickn 1
00AA   3F01               M     moviw 1[SP]
00AB   00??           00570     movwf sound_timer
                      00571     dropn 2
00AC   3102               M     addfsr T,2
00AD   0008           00572     return
                      00573     
                      00574 ;task 5, read button and paddle position
00AE                  00575 user_input
00AE   0A??           00576     incf task
00AF   0A??           00577     incf lcount
00B0   2???           00578     call read_paddle
00B1   1B00           00579     btfsc flags, F_OVER
00B2   3???           00580     bra game_over
00B3   1A00           00581     btfsc flags,F_START
00B4   3???           00582     bra game_running
                      00583 ; game not running
00B5   2???           00584     call read_button
00B6   1D03           00585     skpz
00B7   3???           00586     bra skip_2_tasks
                      00587 ; start game    
00B8   2???           00588     call game_init
                      00589     leave
00B9   2???               M     goto isr_exit
00BA                  00590 game_running
00BA   1E80           00591     btfss flags, F_PAUSE
                      00592     leave
00BB   2???               M     goto isr_exit
                      00593 ; game on pause    
00BC                  00594 wait_trigger
00BC   2???           00595     call read_button
00BD   1D03           00596     skpz
00BE   3???           00597     bra skip_2_tasks
00BF   1280           00598     bcf flags,F_PAUSE
00C0   2???           00599     call set_ball_dx
                      00600     leave
00C1   2???               M     goto isr_exit
                      00601 ; game over
00C2                  00602 game_over
00C2   2???           00603     call read_button
00C3   1D03           00604     skpz
00C4   3???           00605     bra skip_2_tasks
00C5   1300           00606     bcf flags,F_OVER
00C6   2???           00607     call game_init
00C7   0A??           00608     incf task
00C8   0A??           00609     incf lcount
                      00610     leave
00C9   2???               M     goto isr_exit
                      00611 ; while game not running skip 'move_ball' and 'collision' tasks    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA                  00612 skip_2_tasks
00CA   08??           00613     movfw paddle_pos
00CB   3E04           00614     addlw 4
00CC   00??           00615     movwf ball_x
00CD   0A??           00616     incf task
00CE   0A??           00617     incf task
00CF   2???           00618     call lfsr_rand
                      00619     leave
00D0   2???               M     goto isr_exit
                      00620 
                      00621     
00D1                  00622 read_button
00D1   0020           00623     banksel PORTA
00D2   080C           00624     movfw PORTA
00D3   3908           00625     andlw 1<<START_BTN
00D4   0008           00626     return
                      00627     
00D5                  00628 read_paddle
00D5   003B           00629     banksel PWM2CON
00D6   13AB           00630     bcf PWM2CON,EN
00D7   0021           00631     banksel TRISA
00D8   140C           00632     bsf TRISA, PADDLE
00D9   0021           00633     banksel ADCON0
00DA   3003           00634     movlw 3
00DB   009D           00635     movwf ADCON0
00DC   189D           00636     btfsc ADCON0,NOT_DONE
00DD   2???           00637     goto $-1
00DE   3010           00638     movlw 4<<CHS0
00DF   009D           00639     movwf ADCON0
00E0   081C           00640     movfw ADRESH
00E1   1D80           00641     btfss flags, F_SOUND
00E2   3???           00642     bra $+3
00E3   003B           00643     banksel PWM2CON
00E4   17AB           00644     bsf PWM2CON,EN
00E5   00??           00645     movwf paddle_pos
00E6   304A           00646     movlw PADDLE_LIMIT
00E7   02??           00647     subwf paddle_pos,W
00E8   1C03           00648     skpc
00E9   3???           00649     bra $+3
00EA   304A           00650     movlw PADDLE_LIMIT
00EB   00??           00651     movwf paddle_pos
00EC   0021           00652     banksel TRISA
00ED   100C           00653     bcf TRISA, AUDIO
00EE   0008           00654     return
                      00655     
                      00656    
                      00657 ; task 6, move recking ball.   
00EF                  00658 move_ball
00EF   0B??           00659     decfsz ball_timer
00F0   3???           00660     bra move_ball_exit
00F1   08??           00661     movfw ball_speed
00F2   00??           00662     movwf ball_timer
00F3   08??           00663     movfw ball_dx
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   07??           00664     addwf ball_x
00F5   1D03           00665     skpz
00F6   3???           00666     bra right_bound
00F7   0A??           00667     incf ball_x
00F8   09??           00668     comf ball_dx
00F9   0A??           00669     incf ball_dx
00FA   3???           00670     bra move_y
00FB                  00671 right_bound    
00FB   08??           00672     movfw ball_x
00FC   3C52           00673     sublw BALL_RIGHT_BOUND
00FD   1803           00674     skpnc
00FE   3???           00675     bra move_y
00FF   03??           00676     decf ball_x
0100   09??           00677     comf ball_dx
0101   0A??           00678     incf ball_dx
0102                  00679 move_y
0102   08??           00680     movfw ball_dy
0103   07??           00681     addwf ball_y
0104   303A           00682     movlw BALL_TOP_BOUND
0105   02??           00683     subwf ball_y,W
0106   1803           00684     skpnc
0107   3???           00685     bra bottom_bound
0108   09??           00686     comf ball_dy
0109   0A??           00687     incf ball_dy
010A   3???           00688     bra move_ball_exit
010B                  00689 bottom_bound
010B   08??           00690     movfw ball_y
010C   3CFA           00691     sublw BALL_BOTTOM_BOUND
010D   1803           00692     skpnc
010E   3???           00693     bra move_ball_exit
010F   09??           00694     comf ball_dy
0110   0A??           00695     incf ball_dy
0111                  00696 move_ball_exit    
0111   0A??           00697     incf task
0112   0A??           00698     incf lcount
                      00699     leave
0113   2???               M     goto isr_exit
                      00700 
                      00701 ; task 7, collision detection
0114                  00702 collision
0114   30??           00703     movlw high row1
0115   0087           00704     movwf FSR1H
0116   30??           00705     movlw low row1
0117   0086           00706     movwf FSR1L
                      00707 ;    banksel row1
                      00708 ; pre-compute ball column and compute brick mask
                      00709 ; column = 3*ball_x/16
0118   35??           00710     lslf ball_x,W
0119   07??           00711     addwf ball_x,W
011A   0E89           00712     swapf WREG
011B   390F           00713     andlw 15
011C   00??           00714     movwf temp1
011D   3008           00715     movlw 8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011E   02??           00716     subwf temp1,W
011F   1C03           00717     skpc
0120   3???           00718     bra $+3
0121   00??           00719     movwf temp1
0122   3141           00720     addfsr FSR1,1
                      00721 ; create mask    
0123   3080           00722     movlw 0x80
0124   00??           00723     movwf mask
0125   08??           00724     movfw temp1
0126   1903           00725     skpnz
0127   3???           00726     bra $+4
0128   36??           00727     lsrf mask
0129   0B??           00728     decfsz temp1
012A   3???           00729     bra $-2
                      00730 ; ball/paddle test
012B   30EC           00731     movlw PADDLE_Y-BALL_HEIGHT+1
                      00732     pushw
012C   0019               M     movwi --SP
012D   30FB           00733     movlw PADDLE_Y+PADDLE_THICKNESS
                      00734     pushw
012E   0019               M     movwi --SP
012F   08??           00735     movfw ball_y
0130   2???           00736     call between
0131   1803           00737     skpnc
0132   3???           00738     bra check_paddle_bounce
0133   08??           00739     movfw ball_y
0134   3CF3           00740     sublw PADDLE_Y
0135   1C03           00741     skpc
0136   3???           00742     bra ball_lost
0137   3???           00743     bra row1_coll
0138                  00744 ball_lost    
0138   1680           00745     bsf flags, F_PAUSE ; pause game
0139   0B??           00746     decfsz balls
013A   3???           00747     bra $+2
013B   1200           00748     bcf flags, F_START
013C   3004           00749     movlw 4
013D   07??           00750     addwf paddle_pos,W
013E   00??           00751     movwf ball_x
013F   30EB           00752     movlw PADDLE_Y-BRICK_HEIGHT
0140   00??           00753     movwf ball_y
0141   30FC           00754     movlw -4
0142   00??           00755     movwf ball_dy
0143   3008           00756     movlw 8
                      00757     pushw
0144   0019               M     movwi --SP
0145   3002           00758     movlw 2
                      00759     pushw
0146   0019               M     movwi --SP
0147   2???           00760     call pong
0148   3???           00761     bra collision_exit
                      00762 ; if ball_x over paddle bounce ball
0149                  00763 check_paddle_bounce
0149   08??           00764     movfw paddle_pos
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00765     pushw
014A   0019               M     movwi --SP
014B   300A           00766     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+2
014C   07??           00767     addwf paddle_pos,W
                      00768     pushw
014D   0019               M     movwi --SP
014E   08??           00769     movfw ball_x
014F   2???           00770     call between
0150   1C03           00771     skpc
0151   3???           00772     bra collision_exit
0152   30FC           00773     movlw -4
0153   00??           00774     movwf ball_dy
0154   2???           00775     call set_ball_dx
0155   3002           00776     movlw 2
                      00777     pushw
0156   0019               M     movwi --SP
                      00778     pushw
0157   0019               M     movwi --SP
0158   2???           00779     call pong
0159   3???           00780     bra collision_exit
                      00781 ; row1 collision?    
015A                  00782 row1_coll    
015A   3043           00783     movlw ROW1_Y-BRICK_HEIGHT+1
                      00784     pushw
015B   0019               M     movwi --SP
015C   3052           00785     movlw ROW1_Y+BRICK_HEIGHT
015D   08??           00786     movfw ball_y
015E   2???           00787     call between
015F   1C03           00788     skpc
0160   3???           00789     bra row2_coll
                      00790 ; ball inside row1 bounds, check if brick present
0161   08??           00791     movfw mask
0162   0501           00792     andwf INDF1,W
0163   1903           00793     skpnz
0164   3???           00794     bra collision_exit
0165   09??           00795     comf mask,W
0166   0581           00796     andwf INDF1
0167   3009           00797     movlw 9
0168   2???           00798     call inc_score
0169   3???           00799     bra brick_bounce
                      00800 ; row2 collision?    
016A                  00801 row2_coll
016A   304B           00802     movlw ROW2_Y-BRICK_HEIGHT+1
                      00803     pushw
016B   0019               M     movwi --SP
016C   305A           00804     movlw ROW2_Y+BRICK_HEIGHT
                      00805     pushw
016D   0019               M     movwi --SP
016E   08??           00806     movfw ball_y
016F   2???           00807     call between
0170   1C03           00808     skpc
0171   3???           00809     bra row3_coll
0172   3142           00810     addfsr FSR1,2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   08??           00811     movfw mask
0174   0501           00812     andwf INDF1, W
0175   1903           00813     skpnz
0176   3???           00814     bra collision_exit
0177   09??           00815     comf mask,W
0178   0581           00816     andwf INDF1
0179   3006           00817     movlw 6
017A   2???           00818     call inc_score
017B   3???           00819     bra brick_bounce
                      00820 ; row3 collision?    
017C                  00821 row3_coll
017C   3053           00822     movlw ROW3_Y-BRICK_HEIGHT+1
                      00823     pushw
017D   0019               M     movwi --SP
017E   3062           00824     movlw ROW3_Y+BRICK_HEIGHT
                      00825     pushw
017F   0019               M     movwi --SP
0180   08??           00826     movfw ball_y
0181   2???           00827     call between
0182   1C03           00828     skpc
0183   3???           00829     bra row4_coll
0184   3142           00830     addfsr FSR1,2
0185   08??           00831     movfw mask
0186   0501           00832     andwf INDF1,W
0187   1903           00833     skpnz
0188   3???           00834     bra collision_exit
0189   09??           00835     comf mask,W
018A   0581           00836     andwf INDF1
018B   3003           00837     movlw 3
018C   2???           00838     call inc_score
018D   3???           00839     bra brick_bounce
                      00840 ; row4 collision?    
018E                  00841 row4_coll
018E   305B           00842     movlw ROW4_Y-BRICK_HEIGHT+1
                      00843     pushw
018F   0019               M     movwi --SP
0190   306A           00844     movlw ROW4_Y+BRICK_HEIGHT
                      00845     pushw
0191   0019               M     movwi --SP
0192   08??           00846     movfw ball_y
0193   2???           00847     call between
0194   1C03           00848     skpc
0195   3???           00849     bra row5_coll
0196   3142           00850     addfsr FSR1,2
0197   08??           00851     movfw mask
0198   0501           00852     andwf INDF1,W
0199   1903           00853     skpnz
019A   3???           00854     bra collision_exit
019B   09??           00855     comf mask,W
019C   0581           00856     andwf INDF1
019D   3002           00857     movlw 2
019E   2???           00858     call inc_score
019F   3???           00859     bra brick_bounce
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00860 ; row5 collision?    
01A0                  00861 row5_coll    
01A0   3063           00862     movlw ROW5_Y-BRICK_HEIGHT+1
                      00863     pushw
01A1   0019               M     movwi --SP
01A2   3072           00864     movlw ROW5_Y+BRICK_HEIGHT
                      00865     pushw
01A3   0019               M     movwi --SP
01A4   08??           00866     movfw ball_y
01A5   2???           00867     call between
01A6   1C03           00868     skpc
01A7   3???           00869     bra collision_exit
01A8   3142           00870     addfsr FSR1,2
01A9   08??           00871     movfw mask
01AA   0501           00872     andwf INDF1,W
01AB   1903           00873     skpnz
01AC   3???           00874     bra collision_exit
01AD   09??           00875     comf mask,W
01AE   0581           00876     andwf INDF1
01AF   3001           00877     movlw 1
01B0   2???           00878     call inc_score
01B1                  00879 brick_bounce
01B1   09??           00880     comf ball_dy
01B2   0A??           00881     incf ball_dy
01B3   2???           00882     call set_ball_dx
01B4   3001           00883     movlw 1
                      00884     pushw
01B5   0019               M     movwi --SP
01B6   3000           00885     movlw 0
                      00886     pushw
01B7   0019               M     movwi --SP
01B8   2???           00887     call pong
01B9                  00888 collision_exit
01B9   0A??           00889     incf task
01BA   0A??           00890     incf lcount
                      00891     leave
01BB   2???               M     goto isr_exit
                      00892 
                      00893 ; check if  lb <= x < hb
                      00894 ; input:
                      00895 ;    WREG  x
                      00896 ;    stack ( lb hb -- )     
                      00897 ; output:
                      00898 ;   Carry bit set if true    
01BC                  00899 between
01BC   00??           00900     movwf temp1
                      00901     pickn 1
01BD   3F01               M     moviw 1[SP]
01BE   02??           00902     subwf temp1,W
01BF   1C03           00903     skpc
01C0   3???           00904     bra between_exit
01C1   0800           00905     movfw T
01C2   02??           00906     subwf temp1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C3   0803           00907     movfw STATUS
01C4   3A01           00908     xorlw 1
01C5   0083           00909     movwf STATUS
01C6                  00910 between_exit    
                      00911     dropn 2
01C6   3102               M     addfsr T,2
01C7   0008           00912     return
                      00913     
                      00914 ; task 8, wait for first video line
01C8                  00915 video_first
01C8   0A??           00916     incf lcount
01C9   301E           00917     movlw FIRST_VIDEO_LINE
01CA   02??           00918     subwf lcount,W
01CB   1D03           00919     skpz
                      00920     leave
01CC   2???               M     goto isr_exit
01CD   01??           00921     clrf slice
01CE   0A??           00922     incf task
                      00923     leave
01CF   2???               M     goto isr_exit
                      00924    
                      00925 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00926 ; The following tasks are responsible to render video display.
                      00927 ; Each video line must be completed by setting color to black.
                      00928 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00929     
                      00930  
                      00931 ; task 9, draw score en ball count
01D0                  00932 draw_score ; lcount enter at 30 leave at 50
01D0   0021           00933     banksel TRISA
01D1   08??           00934     movfw slice
01D2   3689           00935     lsrf WREG
01D3   3689           00936     lsrf WREG
                      00937     pushw
01D4   0019               M     movwi --SP
01D5   300F           00938     movlw 0xf
01D6   05??           00939     andwf score+1,W
01D7   2???           00940     call digit_offset
01D8   0700           00941     addwf T,W
01D9   2???           00942     call digits
01DA   00??           00943     movwf d3
01DB   0E??           00944     swapf score+1,W
01DC   390F           00945     andlw 0xf
01DD   2???           00946     call digit_offset
01DE   0700           00947     addwf T,W
01DF   2???           00948     call digits
01E0   00??           00949     movwf d2
01E1   300F           00950     movlw 0xf
01E2   05??           00951     andwf score,W
01E3   2???           00952     call digit_offset
01E4   0700           00953     addwf T,W
01E5   2???           00954     call digits
01E6   2???           00955     call digit_row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E7   08??           00956     movfw d2
01E8   2???           00957     call digit_row
01E9   08??           00958     movfw d3
01EA   2???           00959     call digit_row
                      00960     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
01EB   3014               M     movlw q
01EC   0B89               M     decfsz WREG
01ED   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01EE   120C           00961     bcf TRISA,VIDEO_OUT
                      00962     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
01EF   3001               M     movlw q
01F0   0B89               M     decfsz WREG
01F1   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01F2   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F3   160C           00963     bsf TRISA,VIDEO_OUT
                      00964     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
01F4   300A               M     movlw q
01F5   0B89               M     decfsz WREG
01F6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F7   08??           00965     movfw balls
01F8   2???           00966     call digit_offset
01F9   0700           00967     addwf T,W
01FA   2???           00968     call digits
01FB   2???           00969     call digit_row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FC                  00970 score_exit
                      00971     next_task 5*4
01FC   0A??               M     incf slice
01FD   3014               M     movlw 5*4
01FE   02??               M     subwf slice,W
01FF   1D03               M     skpz
                          M     leave
0200   2???               M     goto isr_exit
0201   01??               M     clrf slice
0202   0A??               M     incf task
0203   3014               M     movlw 5*4
0204   07??               M     addwf lcount
                          M     leave
0205   2???               M     goto isr_exit
                      00972 
                      00973 ; display digit row pixels   
0206                  00974 digit_row
                      00975     pushw
0206   0019               M     movwi --SP
0207   0D80           00976     rlf T
0208   301A           00977     movlw BLACK
0209   1803           00978     skpnc
020A   300A           00979     movlw WHITE
020B   008C           00980     movwf TRISA
020C   0D80           00981     rlf T
020D   301A           00982     movlw BLACK
020E   1803           00983     skpnc
020F   300A           00984     movlw WHITE
0210   008C           00985     movwf TRISA
0211   0D80           00986     rlf T
0212   301A           00987     movlw BLACK
0213   1803           00988     skpnc
0214   300A           00989     movlw WHITE
0215   008C           00990     movwf TRISA
                      00991     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0216   3001               M     movlw q
0217   0B89               M     decfsz WREG
0218   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00992     dropn 1
0219   3101               M     addfsr T,1
021A   160C           00993     bsf TRISA,VIDEO_OUT
021B   0008           00994     return
                      00995     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996 ; task 10,  draw top wall, 8 screen lines    
021C                  00997 draw_top_wall ;lcount enter at 50 leave at 58
021C   1C80           00998     btfss flags, F_EVEN
021D   3???           00999     bra top_wall_exit
021E   0021           01000     banksel TRISA
                      01001     tdelay LEFT_MARGIN -2
  0010                    M     variable q=(LEFT_MARGIN -2)/3
  0002                    M     variable r=(LEFT_MARGIN -2)%3
                          M     if (q)
021F   3010               M     movlw q
0220   0B89               M     decfsz WREG
0221   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0222   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01002     white
0223   300A               M     movlw WHITE
0224   008C               M     movwf TRISA
                      01003     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0225   3057               M     movlw q
0226   0B89               M     decfsz WREG
0227   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01004     black
0228   301A               M     movlw BLACK
0229   008C               M     movwf TRISA
                          M ;    goto $+1
022A                  01005 top_wall_exit
                      01006     next_task BRICK_HEIGHT
022A   0A??               M     incf slice
022B   3008               M     movlw BRICK_HEIGHT
022C   02??               M     subwf slice,W
022D   1D03               M     skpz
                          M     leave
022E   2???               M     goto isr_exit
022F   01??               M     clrf slice
0230   0A??               M     incf task
0231   3008               M     movlw BRICK_HEIGHT
0232   07??               M     addwf lcount
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0233   2???               M     goto isr_exit
                      01007 
                      01008 ; task 11,  only on even field draw vertical side bands.    
0234                  01009 draw_void ;enter at 58 leave at 74| 255-58
0234   1C80           01010     btfss flags, F_EVEN
0235   3???           01011     bra no_wall_draw
0236   08??           01012     movfw ball_y
0237   02??           01013     subwf lcount,W
0238   1C03           01014     skpc
0239   3???           01015     bra no_ball_dly
023A   3008           01016     movlw BALL_HEIGHT
023B   07??           01017     addwf ball_y,W
023C   02??           01018     subwf lcount,W
023D   1C03           01019     skpc
023E   3???           01020     bra yes_ball
023F   3???           01021     bra no_ball
0240                  01022 no_ball_dly
                      01023     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0240   3002               M     movlw q
0241   0B89               M     decfsz WREG
0242   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0243                  01024 no_ball    
                      01025     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
0243   300D               M     movlw q
0244   0B89               M     decfsz WREG
0245   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01026     draw_border BORDER_WIDTH
0246   0021               M     banksel TRISA
0247   148C               M     bsf TRISA,CHROMA
0248   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
0249   3001               M     movlw q
024A   0B89               M     decfsz WREG
024B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
024C   0000               M     nop
                          M     endif
024D   160C               M     bsf TRISA,VIDEO_OUT
                      01027     black
024E   301A               M     movlw BLACK
024F   008C               M     movwf TRISA
                          M ;    goto $+1
                      01028     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0250   3052               M     movlw q
0251   0B89               M     decfsz WREG
0252   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0253   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01029     draw_border BORDER_WIDTH
0254   0021               M     banksel TRISA
0255   148C               M     bsf TRISA,CHROMA
0256   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
0257   3001               M     movlw q
0258   0B89               M     decfsz WREG
0259   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
025A   0000               M     nop
                          M     endif
025B   160C               M     bsf TRISA,VIDEO_OUT
025C   3???           01030     bra draw_void_exit
025D                  01031 yes_ball
025D   0021           01032     banksel TRISA
025E   08??           01033     movfw ball_x
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025F   1903           01034     skpnz
0260   3???           01035     bra ball_at_left
0261   3C52           01036     sublw BALL_RIGHT_BOUND
0262   1903           01037     skpnz
0263   3???           01038     bra ball_at_right
0264                  01039 ball_in_middle    
0264   3001           01040     movlw 1
0265   02??           01041     subwf ball_x,W
0266   1903           01042     skpnz
0267   3E01           01043     addlw 1
0268   00??           01044     movwf temp1
                      01045     tdelay LEFT_MARGIN-22
  000A                    M     variable q=(LEFT_MARGIN-22)/3
  0000                    M     variable r=(LEFT_MARGIN-22)%3
                          M     if (q)
0269   300A               M     movlw q
026A   0B89               M     decfsz WREG
026B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
026C   120C           01046     bcf TRISA,VIDEO_OUT
                      01047     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
026D   3001               M     movlw q
026E   0B89               M     decfsz WREG
026F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0270   08??           01048     movfw temp1
0271   160C           01049     bsf TRISA,VIDEO_OUT
0272   0B89           01050     decfsz WREG
0273   3???           01051     bra $-1
0274   120C           01052     bcf TRISA, VIDEO_OUT
                      01053     tdelay BALL_WIDTH-1
  0002                    M     variable q=(BALL_WIDTH-1)/3
  0001                    M     variable r=(BALL_WIDTH-1)%3
                          M     if (q)
0275   3002               M     movlw q
0276   0B89               M     decfsz WREG
0277   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0278   0000               M     nop
                          M     endif
0279   08??           01054     movfw ball_x
027A   160C           01055     bsf TRISA,VIDEO_OUT
027B   3C52           01056     sublw BALL_RIGHT_BOUND
027C   0B89           01057     decfsz WREG
027D   3???           01058     bra $-1
027E   120C           01059     bcf TRISA,VIDEO_OUT
                      01060     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
027F   3001               M     movlw q
0280   0B89               M     decfsz WREG
0281   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0282   0000               M     nop
                          M     endif
0283   160C           01061     bsf TRISA,VIDEO_OUT
0284   3???           01062     bra draw_void_exit
0285                  01063 ball_at_left
                      01064     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0285   300C               M     movlw q
0286   0B89               M     decfsz WREG
0287   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0288   0000               M     nop
                          M     endif
0289   120C           01065     bcf TRISA,VIDEO_OUT
                      01066     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
028A   3004               M     movlw q
028B   0B89               M     decfsz WREG
028C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
028D   160C           01067     bsf TRISA,VIDEO_OUT
                      01068     tdelay COURT_WIDTH-6
  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
028E   3050               M     movlw q
028F   0B89               M     decfsz WREG
0290   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0291   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0292   0000           01069     nop
0293   120C           01070     bcf TRISA,VIDEO_OUT
                      01071     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0294   3001               M     movlw q
0295   0B89               M     decfsz WREG
0296   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0297   0000               M     nop
                          M     endif
0298   160C           01072     bsf TRISA,VIDEO_OUT
0299   3???           01073     bra draw_void_exit
029A                  01074 ball_at_right
                      01075     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
029A   300B               M     movlw q
029B   0B89               M     decfsz WREG
029C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
029D   0000               M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029E   120C           01076     bcf TRISA,VIDEO_OUT
                      01077     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
029F   3001               M     movlw q
02A0   0B89               M     decfsz WREG
02A1   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02A2   0000               M     nop
                          M     endif
02A3   160C           01078     bsf TRISA,VIDEO_OUT
                      01079     tdelay COURT_WIDTH-2
  0052                    M     variable q=(COURT_WIDTH-2)/3
  0000                    M     variable r=(COURT_WIDTH-2)%3
                          M     if (q)
02A4   3052               M     movlw q
02A5   0B89               M     decfsz WREG
02A6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02A7   120C           01080     bcf TRISA,VIDEO_OUT
                      01081     tdelay 10
  0003                    M     variable q=(10)/3
  0001                    M     variable r=(10)%3
                          M     if (q)
02A8   3003               M     movlw q
02A9   0B89               M     decfsz WREG
02AA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02AB   0000               M     nop
                          M     endif
02AC   160C           01082     bsf TRISA,VIDEO_OUT
02AD                  01083 draw_void_exit    
02AD   0A??           01084     incf slice
02AE   0A??           01085     incf lcount
02AF   30FB           01086     movlw LAST_VIDEO_LINE+1
02B0   02??           01087     subwf lcount,W
02B1   1D03           01088     skpz
                      01089     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B2   2???               M     goto isr_exit
02B3   01??           01090     clrf slice
02B4   3013           01091     movlw 19
02B5   00??           01092     movwf task
                      01093     leave
02B6   2???               M     goto isr_exit
02B7                  01094 no_wall_draw
                      01095     next_task 2*BRICK_HEIGHT
02B7   0A??               M     incf slice
02B8   3010               M     movlw 2*BRICK_HEIGHT
02B9   02??               M     subwf slice,W
02BA   1D03               M     skpz
                          M     leave
02BB   2???               M     goto isr_exit
02BC   01??               M     clrf slice
02BD   0A??               M     incf task
02BE   3010               M     movlw 2*BRICK_HEIGHT
02BF   07??               M     addwf lcount
                          M     leave
02C0   2???               M     goto isr_exit
                      01096     
                      01097 ; task 12, draw top brick row
02C1                  01098 draw_row1 ; lcount enter at 74 leave at 82
                      01099     chroma_ref
02C1   003B               M     banksel PWM1CON
02C2   121B               M     bcf PWM1CON,POL
02C3   0021           01100     banksel TRISA
02C4   08??           01101     movfw row1
02C5   00??           01102     movwf temp1
02C6   08??           01103     movfw row1+1
02C7   00??           01104     movwf temp2
                      01105     tdelay LEFT_MARGIN-6
  000F                    M     variable q=(LEFT_MARGIN-6)/3
  0001                    M     variable r=(LEFT_MARGIN-6)%3
                          M     if (q)
02C8   300F               M     movlw q
02C9   0B89               M     decfsz WREG
02CA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02CB   0000               M     nop
                          M     endif
                      01106 ;    draw_border BORDER_WIDTH
                      01107     draw_wall MAUVE
  0000                    M     local next_brick
02CC   3010               M     movlw 16
                          M     pushw
02CD   0019               M     movwi --SP
02CE                      M next_brick
02CE   35??               M     lslf temp1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CF   0D??               M     rlf temp2
02D0   301A               M     movlw BLACK
02D1   1803               M     skpnc
02D2   3008               M     movlw MAUVE
02D3   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02D4   3002               M     movlw q
02D5   0B89               M     decfsz WREG
02D6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02D7   0000               M     nop
                          M     endif
02D8   0B80               M     decfsz T
02D9   3???               M     bra next_brick
                          M     dropn 1
02DA   3101               M     addfsr T,1
                      01108     black
02DB   301A               M     movlw BLACK
02DC   008C               M     movwf TRISA
                          M ;    goto $+1
                      01109     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02DD   3001               M     movlw q
02DE   0B89               M     decfsz WREG
02DF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01110 ;    draw_border BORDER_WIDTH
                      01111     next_task BRICK_HEIGHT
02E0   0A??               M     incf slice
02E1   3008               M     movlw BRICK_HEIGHT
02E2   02??               M     subwf slice,W
02E3   1D03               M     skpz
                          M     leave
02E4   2???               M     goto isr_exit
02E5   01??               M     clrf slice
02E6   0A??               M     incf task
02E7   3008               M     movlw BRICK_HEIGHT
02E8   07??               M     addwf lcount
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
02E9   2???               M     goto isr_exit
                      01112     
                      01113 ; task 13, draw 2nd brick row    
02EA                  01114 draw_row2 ;lcount enter at 82 leave at 90
                      01115     chroma_invert
02EA   003B               M     banksel PWM1CON
02EB   161B               M     bsf PWM1CON,POL
02EC   002?           01116     banksel row2
02ED   08??           01117     movfw row2
02EE   00??           01118     movwf temp1
02EF   08??           01119     movfw row2+1
02F0   00??           01120     movwf temp2
                      01121     tdelay LEFT_MARGIN-6
  000F                    M     variable q=(LEFT_MARGIN-6)/3
  0001                    M     variable r=(LEFT_MARGIN-6)%3
                          M     if (q)
02F1   300F               M     movlw q
02F2   0B89               M     decfsz WREG
02F3   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02F4   0000               M     nop
                          M     endif
                      01122 ;    draw_border BORDER_WIDTH
                      01123     draw_wall YELLOW
  0000                    M     local next_brick
02F5   3010               M     movlw 16
                          M     pushw
02F6   0019               M     movwi --SP
02F7                      M next_brick
02F7   35??               M     lslf temp1
02F8   0D??               M     rlf temp2
02F9   301A               M     movlw BLACK
02FA   1803               M     skpnc
02FB   3008               M     movlw YELLOW
02FC   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02FD   3002               M     movlw q
02FE   0B89               M     decfsz WREG
02FF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0300   0000               M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0301   0B80               M     decfsz T
0302   3???               M     bra next_brick
                          M     dropn 1
0303   3101               M     addfsr T,1
                      01124     black
0304   301A               M     movlw BLACK
0305   008C               M     movwf TRISA
                          M ;    goto $+1
                      01125     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0306   3001               M     movlw q
0307   0B89               M     decfsz WREG
0308   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01126 ;    draw_border BORDER_WIDTH
                      01127     next_task BRICK_HEIGHT
0309   0A??               M     incf slice
030A   3008               M     movlw BRICK_HEIGHT
030B   02??               M     subwf slice,W
030C   1D03               M     skpz
                          M     leave
030D   2???               M     goto isr_exit
030E   01??               M     clrf slice
030F   0A??               M     incf task
0310   3008               M     movlw BRICK_HEIGHT
0311   07??               M     addwf lcount
                          M     leave
0312   2???               M     goto isr_exit
                      01128 
                      01129 ; task 14, draw 3rd brick row    
0313                  01130 draw_row3 ; lcount enter at 90 leave at 98
                      01131 ;    btfss flags, F_EVEN
                      01132 ;    bra row3_exit
                      01133     chroma_ref
0313   003B               M     banksel PWM1CON
0314   121B               M     bcf PWM1CON,POL
0315   002?           01134     banksel row3
0316   08??           01135     movfw row3
0317   00??           01136     movwf temp1
0318   08??           01137     movfw row3+1
0319   00??           01138     movwf temp2
                      01139     tdelay LEFT_MARGIN-6
  000F                    M     variable q=(LEFT_MARGIN-6)/3
  0001                    M     variable r=(LEFT_MARGIN-6)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
031A   300F               M     movlw q
031B   0B89               M     decfsz WREG
031C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
031D   0000               M     nop
                          M     endif
                      01140 ;    draw_border BORDER_WIDTH
                      01141     draw_wall BLUE
  0000                    M     local next_brick
031E   3010               M     movlw 16
                          M     pushw
031F   0019               M     movwi --SP
0320                      M next_brick
0320   35??               M     lslf temp1
0321   0D??               M     rlf temp2
0322   301A               M     movlw BLACK
0323   1803               M     skpnc
0324   3018               M     movlw BLUE
0325   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
0326   3002               M     movlw q
0327   0B89               M     decfsz WREG
0328   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0329   0000               M     nop
                          M     endif
032A   0B80               M     decfsz T
032B   3???               M     bra next_brick
                          M     dropn 1
032C   3101               M     addfsr T,1
                      01142     black
032D   301A               M     movlw BLACK
032E   008C               M     movwf TRISA
                          M ;    goto $+1
                      01143     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
032F   3001               M     movlw q
0330   0B89               M     decfsz WREG
0331   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01144 ;    draw_border BORDER_WIDTH
0332                  01145 row3_exit    
                      01146     next_task BRICK_HEIGHT
0332   0A??               M     incf slice
0333   3008               M     movlw BRICK_HEIGHT
0334   02??               M     subwf slice,W
0335   1D03               M     skpz
                          M     leave
0336   2???               M     goto isr_exit
0337   01??               M     clrf slice
0338   0A??               M     incf task
0339   3008               M     movlw BRICK_HEIGHT
033A   07??               M     addwf lcount
                          M     leave
033B   2???               M     goto isr_exit
                      01147     
                      01148 ; task 15, draw 4th brick row    
033C                  01149 draw_row4 ; lcount enter at 98 leave at 106
                      01150     chroma_invert
033C   003B               M     banksel PWM1CON
033D   161B               M     bsf PWM1CON,POL
033E   002?           01151     banksel row4
033F   08??           01152     movfw row4
0340   00??           01153     movwf temp1
0341   08??           01154     movfw row4+1
0342   00??           01155     movwf temp2
                      01156     tdelay LEFT_MARGIN-6
  000F                    M     variable q=(LEFT_MARGIN-6)/3
  0001                    M     variable r=(LEFT_MARGIN-6)%3
                          M     if (q)
0343   300F               M     movlw q
0344   0B89               M     decfsz WREG
0345   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0346   0000               M     nop
                          M     endif
                      01157 ;    draw_border BORDER_WIDTH
                      01158     draw_wall MAUVE
  0000                    M     local next_brick
0347   3010               M     movlw 16
                          M     pushw
0348   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0349                      M next_brick
0349   35??               M     lslf temp1
034A   0D??               M     rlf temp2
034B   301A               M     movlw BLACK
034C   1803               M     skpnc
034D   3008               M     movlw MAUVE
034E   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
034F   3002               M     movlw q
0350   0B89               M     decfsz WREG
0351   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0352   0000               M     nop
                          M     endif
0353   0B80               M     decfsz T
0354   3???               M     bra next_brick
                          M     dropn 1
0355   3101               M     addfsr T,1
                      01159     black
0356   301A               M     movlw BLACK
0357   008C               M     movwf TRISA
                          M ;    goto $+1
                      01160     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0358   3001               M     movlw q
0359   0B89               M     decfsz WREG
035A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01161 ;    draw_border BORDER_WIDTH
                      01162     next_task BRICK_HEIGHT
035B   0A??               M     incf slice
035C   3008               M     movlw BRICK_HEIGHT
035D   02??               M     subwf slice,W
035E   1D03               M     skpz
                          M     leave
035F   2???               M     goto isr_exit
0360   01??               M     clrf slice
0361   0A??               M     incf task
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0362   3008               M     movlw BRICK_HEIGHT
0363   07??               M     addwf lcount
                          M     leave
0364   2???               M     goto isr_exit
                      01163 
                      01164 ; task 16, draw 5th brick row    
0365                  01165 draw_row5 ; lcount enter at 106 leave at 114
                      01166     chroma_ref
0365   003B               M     banksel PWM1CON
0366   121B               M     bcf PWM1CON,POL
0367   002?           01167     banksel row5
0368   08??           01168     movfw row5
0369   00??           01169     movwf temp1
036A   08??           01170     movfw row5+1
036B   00??           01171     movwf temp2
                      01172     tdelay LEFT_MARGIN-6
  000F                    M     variable q=(LEFT_MARGIN-6)/3
  0001                    M     variable r=(LEFT_MARGIN-6)%3
                          M     if (q)
036C   300F               M     movlw q
036D   0B89               M     decfsz WREG
036E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
036F   0000               M     nop
                          M     endif
                      01173 ;    draw_border BORDER_WIDTH
                      01174     draw_wall YELLOW
  0000                    M     local next_brick
0370   3010               M     movlw 16
                          M     pushw
0371   0019               M     movwi --SP
0372                      M next_brick
0372   35??               M     lslf temp1
0373   0D??               M     rlf temp2
0374   301A               M     movlw BLACK
0375   1803               M     skpnc
0376   3008               M     movlw YELLOW
0377   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
0378   3002               M     movlw q
0379   0B89               M     decfsz WREG
037A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
037B   0000               M     nop
                          M     endif
037C   0B80               M     decfsz T
037D   3???               M     bra next_brick
                          M     dropn 1
037E   3101               M     addfsr T,1
                      01175     black
037F   301A               M     movlw BLACK
0380   008C               M     movwf TRISA
                          M ;    goto $+1
                      01176     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0381   3001               M     movlw q
0382   0B89               M     decfsz WREG
0383   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01177 ;    draw_border BORDER_WIDTH
                      01178     black
0384   301A               M     movlw BLACK
0385   008C               M     movwf TRISA
                          M ;    goto $+1
                      01179     next_task BRICK_HEIGHT
0386   0A??               M     incf slice
0387   3008               M     movlw BRICK_HEIGHT
0388   02??               M     subwf slice,W
0389   1D03               M     skpz
                          M     leave
038A   2???               M     goto isr_exit
038B   01??               M     clrf slice
038C   0A??               M     incf task
038D   3008               M     movlw BRICK_HEIGHT
038E   07??               M     addwf lcount
                          M     leave
038F   2???               M     goto isr_exit
                      01180 
                      01181 ; task 17,draw all rows between paddle and lower brick row    
0390                  01182 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01183     tdelay LEFT_MARGIN
  0011                    M     variable q=(LEFT_MARGIN)/3
  0001                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0390   3011               M     movlw q
0391   0B89               M     decfsz WREG
0392   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0393   0000               M     nop
                          M     endif
                      01184 ;    draw_border BORDER_WIDTH
                      01185     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
0394   306A               M     movlw q
0395   0B89               M     decfsz WREG
0396   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0397   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01186 ;    draw_border BORDER_WIDTH
                      01187     black
0398   301A               M     movlw BLACK
0399   008C               M     movwf TRISA
                          M ;    goto $+1
039A   0A??           01188     incf lcount
039B   30F3           01189     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
039C   02??           01190     subwf lcount,W
039D   1D03           01191     skpz
                      01192     leave
039E   2???               M     goto isr_exit
039F   01??           01193     clrf slice
03A0   0A??           01194     incf task
                      01195     leave
03A1   2???               M     goto isr_exit
                      01196 ;    next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
                      01197 
                      01198     
                      01199 ; task 18, draw paddle at bottom screen    
03A2                  01200 draw_paddle
                      01201     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
03A2   3012               M     movlw q
03A3   0B89               M     decfsz WREG
03A4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
03A5   08??           01202     movfw paddle_pos
03A6   1903           01203     skpnz
03A7   3???           01204     bra $+3
03A8   0B89           01205     decfsz WREG
03A9   3???           01206     bra $-1
03AA   0021           01207     banksel TRISA
03AB   120C           01208     bcf TRISA,VIDEO_OUT
                      01209     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
03AC   300A               M     movlw q
03AD   0B89               M     decfsz WREG
03AE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
03AF   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
03B0   160C           01210     bsf TRISA,VIDEO_OUT
                      01211     next_task PADDLE_THICKNESS
03B1   0A??               M     incf slice
03B2   3008               M     movlw PADDLE_THICKNESS
03B3   02??               M     subwf slice,W
03B4   1D03               M     skpz
                          M     leave
03B5   2???               M     goto isr_exit
03B6   01??               M     clrf slice
03B7   0A??               M     incf task
03B8   3008               M     movlw PADDLE_THICKNESS
03B9   07??               M     addwf lcount
                          M     leave
03BA   2???               M     goto isr_exit
                      01212 
                      01213 ; task 19,  wait end of this field, reset task to zero    
03BB                  01214 wait_field_end
03BB   0A??           01215     incf lcount
03BC   1903           01216     skpnz
03BD   1400           01217     bsf flags, F_HI_LINE
03BE   1800           01218     btfsc flags, F_HI_LINE
03BF   2???           01219     goto hi_line
                      01220     leave
03C0   2???               M     goto isr_exit
03C1                  01221 hi_line
03C1   1880           01222     btfsc flags,F_EVEN
03C2   2???           01223     goto even_field
03C3   3005           01224     movlw 5
03C4   02??           01225     subwf lcount,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C5   1D03           01226     skpz
                      01227     leave
03C6   2???               M     goto isr_exit
03C7   2???           01228     goto field_end
03C8                  01229 even_field
03C8   3006           01230     movlw 6
03C9   02??           01231     subwf lcount,W
03CA   1D03           01232     skpz
                      01233     leave
03CB   2???               M     goto isr_exit
                      01234 ; even field last line is half_line    
                      01235 ; set PWM3 for line 263 half-line
03CC   003B           01236     banksel PWM3DC
03CD   3003           01237     movlw high HALF_LINE
03CE   00B6           01238     movwf PWM3PRH
03CF   308D           01239     movlw low HALF_LINE
03D0   00B5           01240     movwf PWM3PRL
03D1   17BF           01241     bsf PWM3LDCON,7
03D2                  01242 field_end
03D2   01??           01243     clrf task
03D3   01??           01244     clrf slice
03D4   01??           01245     clrf lcount
03D5   1000           01246     bcf flags, F_HI_LINE
03D6   1500           01247     bsf flags, F_SYNC
                      01248 ; toggle odd/even field flag    
03D7   3002           01249     movlw 1<<F_EVEN
03D8   06??           01250     xorwf flags
                      01251     leave
03D9   2???               M     goto isr_exit
                      01252 
                      01253 ; helper functions
                      01254 
                      01255     
                      01256 ; increment user score
                      01257 ; This is a BCD addition where a single digit is added to score.   
                      01258 ; score is stored as big indian
                      01259 ; argument: 
                      01260 ;   WREG ->  bdc digit to add to score variable
03DA                  01261 inc_score
03DA   07??           01262     addwf score+1
03DB   1883           01263     btfsc STATUS,DC
03DC   3???           01264     bra $+6
03DD   300F           01265     movlw 15
03DE   05??           01266     andwf score+1,W
03DF   3C09           01267     sublw 9
03E0   1803           01268     skpnc
03E1   3???           01269     bra $+3
03E2   3006           01270     movlw 6
03E3   07??           01271     addwf score+1
03E4   0E??           01272     swapf score+1,W
03E5   390F           01273     andlw 15
03E6   3C09           01274     sublw 9
03E7   1803           01275     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E8   3???           01276     bra game_over_test
03E9   3060           01277     movlw 0x60
03EA   07??           01278     addwf score+1
03EB   0A??           01279     incf score
03EC   3001           01280     movlw 1
03ED   00??           01281     movwf ball_speed
03EE                  01282 game_over_test ; all bricks destroyed?
03EE   1C00           01283     btfss score,0
03EF   0008           01284     return
03F0   3068           01285     movlw 0x68
03F1   02??           01286     subwf score+1,W
03F2   1903           01287     skpnz
03F3   1700           01288     bsf flags,F_OVER
03F4   0008           01289     return
                      01290     
                      01291 ;***********************************
                      01292 ; digit_offset, compute digit position in 'digits' table
                      01293 ;   position = digit * 5
                      01294 ; 
                      01295 ; input: WREG -> digit value {0..9}
                      01296 ;         
                      01297 ; output: WREG -> displacement in table
                      01298 ;***********************************
03F5                  01299 digit_offset    
                      01300     pushw 
03F5   0019               M     movwi --SP
03F6   3589           01301     lslf WREG
03F7   3589           01302     lslf WREG
03F8   0780           01303     addwf T
                      01304     popw
03F9   0012               M     moviw SP++
03FA   0008           01305     return
                      01306     
03FB                  01307 brick_wall_init
03FB   30??           01308     movlw high row1
03FC   0087           01309     movwf FSR1H
03FD   30??           01310     movlw low row1
03FE   0086           01311     movwf FSR1L
03FF   300C           01312     movlw 12
0400   00??           01313     movwf temp1
0401   30FF           01314     movlw 0xff
0402                  01315 bw_init
0402   001E           01316     movwi FSR1++
0403   0B??           01317     decfsz temp1
0404   3???           01318     bra bw_init
0405   0008           01319     return
                      01320 
                      01321 ;    LFSR 32 bits
                      01322 ;    REF:  http://www.ece.cmu.edu/~koopman/lfsr/index.html
                      01323 ;    must be initialized with 0xFFFFFFFF
  7FFFF159            01324 LFSR_MASK equ 0x7FFFF159
0406                  01325 lfsr_rand
0406   002?           01326     banksel seed
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0407   0C??           01327     rrf seed+3,W   ; rotation du LFSR 1 bit vers la droite
0408   0C??           01328     rrf seed, F
0409   0C??           01329     rrf seed+1,F
040A   0C??           01330     rrf seed+2,F
040B   0C??           01331     rrf seed+3,F
040C   1B80           01332     btfsc seed+3,7
040D   2???           01333     goto lfsr_rand_exit
040E   3059           01334     movlw LFSR_MASK & 0xFF
040F   06??           01335     xorwf seed
0410   30F1           01336     movlw (LFSR_MASK>>8) & 0xFF
0411   06??           01337     xorwf seed+1
0412   30FF           01338     movlw (LFSR_MASK>>16) & 0xFF
0413   06??           01339     xorwf seed+2
0414   307F           01340     movlw (LFSR_MASK>>24) & 0xFF
0415   06??           01341     xorwf seed+3
0416                  01342 lfsr_rand_exit
0416   301F           01343     movlw 0x1F
0417   05??           01344     andwf seed,W  ; modulo 32
0418   0008           01345     return
                      01346     
0419                  01347 set_ball_dx
0419   2???           01348     call lfsr_rand ;random
041A   3007           01349     movlw 7
041B   05??           01350     andwf seed,W
041C   3589           01351     lslf WREG
041D   000B           01352     brw
041E   3000           01353     movlw 0
041F   3???           01354     bra set_ball_dx_exit
0420   3001           01355     movlw 1
0421   3???           01356     bra set_ball_dx_exit
0422   30FF           01357     movlw -1
0423   3???           01358     bra set_ball_dx_exit
0424   3000           01359     movlw 0
0425   3???           01360     bra set_ball_dx_exit
0426   3001           01361     movlw 1
0427   3???           01362     bra set_ball_dx_exit
0428   30FF           01363     movlw -1
0429   3???           01364     bra set_ball_dx_exit
042A   30FF           01365     movlw -1
042B   3???           01366     bra set_ball_dx_exit
042C   3001           01367     movlw 1
042D                  01368 set_ball_dx_exit
042D   00??           01369     movwf ball_dx
042E   0008           01370     return
                      01371     
042F                  01372 game_init
042F   01??           01373     clrf score
0430   01??           01374     clrf score+1
0431   2???           01375     call brick_wall_init
0432   002?           01376     banksel balls
0433   3003           01377     movlw 3
0434   00??           01378     movwf balls
0435   01??           01379     clrf ball_timer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0436   0A??           01380     incf ball_timer
0437   30EB           01381     movlw PADDLE_Y-BRICK_HEIGHT
0438   00??           01382     movwf ball_y
0439   2???           01383     call set_ball_dx
043A   30FC           01384     movlw -4
043B   00??           01385     movwf ball_dy
043C   3002           01386     movlw 2
043D   00??           01387     movwf ball_speed
043E   1600           01388     bsf flags, F_START
043F   1280           01389     bcf flags, F_PAUSE
0440   0008           01390     return
                      01391     
                      01392 ; delay by TIMER0
                      01393 ; parameter
                      01394 ;   WREG -> 2*Tcy+7cy    
0441                  01395 t0delay 
0441   0989           01396     comf WREG
0442   0095           01397     movwf TMR0
0443   110B           01398     bcf INTCON,T0IF
0444   1D0B           01399     btfss INTCON,T0IF
0445   3???           01400     bra $-1
0446   0008           01401     return
                      01402     
                      01403 MAIN_PROG CODE                      ; let linker place main program
                      01404 
0000                  01405 START
                      01406 ; clear common RAM
0000   0185           01407     clrf FSR0H
0001   3070           01408     movlw 0x70
0002   0084           01409     movwf FSR0L
0003   0103           01410     clrw
0004   001A           01411     movwi FSR0++
0005   1F84           01412     btfss FSR0L,7
0006   3???           01413     bra $-2
                      01414 ; clear banked RAM
0007   0184           01415     clrf FSR0L
0008   3020           01416     movlw 0x20
0009   0085           01417     movwf FSR0H
000A   0103           01418     clrw 
000B   001A           01419     movwi FSR0++
000C   1C05           01420     btfss FSR0H,0
000D   3???           01421     bra $-2
                      01422 ; initialize LFSR seed
000E   002?           01423     banksel seed
000F   09??           01424     comf seed
0010   09??           01425     comf seed+1
0011   09??           01426     comf seed+2
0012   09??           01427     comf seed+3
                      01428 ;   setup arguments stack pointer
0013   30??           01429     movlw high (stack+STACK_SIZE)
0014   0085           01430     movwf FSR0H
0015   30??           01431     movlw low (stack+STACK_SIZE)
0016   0084           01432     movwf FSR0L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01433 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01434 ; TIMER0 prescale 1:2
0017   3050           01435     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01436     movwf OPTION_REG
                      01437 ; disable analog inputs, except AN0
0019   0023           01438     banksel ANSELA
001A   018C           01439     clrf ANSELA
                      01440 ; paddle potentiometer input     
001B   140C           01441     bsf ANSELA,PADDLE
001C   0021           01442     banksel ADCON1
001D   3020           01443     movlw (2<<ADCS0)
001E   009E           01444     movwf ADCON1
                      01445 ; pin setup
001F   0024           01446     banksel WPUA
0020   018C           01447     clrf WPUA
0021   0021           01448     banksel TRISA
0022   110C           01449     bcf TRISA,SYNC_OUT
0023   100C           01450     bcf TRISA,AUDIO
0024   0022           01451     banksel LATA
0025   160C           01452     bsf LATA, VIDEO_OUT
                      01453 ; PWM1 chroma signal on RA1
0026   003B           01454     banksel PWM1CON
0027   019F           01455     clrf PWM1LDCON
0028   0191           01456     clrf PWM1PHL
0029   0192           01457     clrf PWM1PHH
002A   0197           01458     clrf PWM1OFL
002B   0198           01459     clrf PWM1OFH
002C   0196           01460     clrf PWM1PRH
002D   3007           01461     movlw 7
002E   0095           01462     movwf PWM1PRL
002F   3004           01463     movlw 4
0030   0093           01464     movwf PWM1DCL
0031   0194           01465     clrf PWM1DCH
0032   179F           01466     bsf PWM1LDCON,7
0033   30C0           01467     movlw (1<<EN)|(1<<OE)
0034   009B           01468     movwf PWM1CON
                      01469 ; PWM2 sound
0035   003B           01470     banksel PWM2CON
0036   01A1           01471     clrf PWM2PHL
0037   01A2           01472     clrf PWM2PHH
0038   01A7           01473     clrf PWM2OFL
0039   01A8           01474     clrf PWM2OFH
003A   3030           01475     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01476     movwf PWM2CLKCON
003C   300D           01477     movlw high 3578;7
003D   00A6           01478     movwf PWM2PRH
003E   30FA           01479     movlw low 3578;7
003F   00A5           01480     movwf PWM2PRL
0040   3626           01481     lsrf PWM2PRH,W
0041   00A4           01482     movwf PWM2DCH
0042   0C25           01483     rrf PWM2PRL,W
0043   00A3           01484     movwf PWM2DCL
0044   17AF           01485     bsf PWM2LDCON,LDA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01486 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01487     banksel PWM3CON
0046   01BF           01488     clrf PWM3LDCON
0047   01B1           01489     clrf PWM3PHL
0048   01B2           01490     clrf PWM3PHH
0049   01B7           01491     clrf PWM3OFL
004A   01B8           01492     clrf PWM3OFH
004B   301B           01493     movlw low HPERIOD
004C   00B5           01494     movwf PWM3PRL
004D   3007           01495     movlw high HPERIOD
004E   00B6           01496     movwf PWM3PRH
004F   3086           01497     movlw HSYNC
0050   00B3           01498     movwf PWM3DCL
0051   01B4           01499     clrf PWM3DCH
0052   30D0           01500     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01501     movwf PWM3CON
0054   17BF           01502     bsf PWM3LDCON,7
0055   143C           01503     bsf PWM3INTE,PRIE
                      01504 ; enbable interrupt    
0056   0020           01505     banksel PIR3
0057   1313           01506     bcf PIR3,PWM3IF
0058   0021           01507     banksel PIE3
0059   1713           01508     bsf PIE3,PWM3IE
005A   170B           01509     bsf INTCON,PEIE
005B   178B           01510     bsf INTCON,GIE
005C   01??           01511     clrf flags
005D   1500           01512     bsf flags, F_SYNC
                      01513 ; all processing done in ISR    
005E   2???           01514     goto $
                      01515 
                      01516 ; digits character table
005F                  01517 digits
005F   000B           01518     brw
0060   3440 34A0 34A0 01519     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01520     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01521     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01522     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01523     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01524     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01525     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01526     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01527     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01528     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0092   0001           01529     reset
                      01530     
0093                  01531 frequency
0093   000B           01532     brw
0094   348B 34D3      01533     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01534     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01535     reset
                      01536     
                      01537 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01538 max_score 
                      01539  
3FA7 1EFF             01540     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LFSR_MASK                         7FFFF159
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_00DD                         000000DD
_ISR_00E2                         000000E2
_ISR_00E9                         000000E9
_ISR_0120                         00000120
_ISR_0127                         00000127
_ISR_012A                         0000012A
_ISR_013A                         0000013A
_ISR_01ED                         000001ED
_ISR_01F1                         000001F1
_ISR_01F2                         000001F2
_ISR_01F6                         000001F6
_ISR_0218                         00000218
_ISR_0221                         00000221
_ISR_0222                         00000222
_ISR_0227                         00000227
_ISR_0242                         00000242
_ISR_0245                         00000245
_ISR_024B                         0000024B
_ISR_0252                         00000252
_ISR_0253                         00000253
_ISR_0259                         00000259
_ISR_026B                         0000026B
_ISR_026F                         0000026F
_ISR_0273                         00000273
_ISR_0277                         00000277
_ISR_027D                         0000027D
_ISR_0281                         00000281
_ISR_0287                         00000287
_ISR_028C                         0000028C
_ISR_0290                         00000290
_ISR_0291                         00000291
_ISR_0296                         00000296
_ISR_029C                         0000029C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_02A1                         000002A1
_ISR_02A6                         000002A6
_ISR_02AA                         000002AA
_ISR_02CA                         000002CA
_ISR_02D6                         000002D6
_ISR_02DF                         000002DF
_ISR_02F3                         000002F3
_ISR_02FF                         000002FF
_ISR_0308                         00000308
_ISR_031C                         0000031C
_ISR_0328                         00000328
_ISR_0331                         00000331
_ISR_0345                         00000345
_ISR_0351                         00000351
_ISR_035A                         0000035A
_ISR_036E                         0000036E
_ISR_037A                         0000037A
_ISR_0383                         00000383
_ISR_0392                         00000392
_ISR_0396                         00000396
_ISR_0397                         00000397
_ISR_03A4                         000003A4
_ISR_03A7                         000003A7
_ISR_03A9                         000003A9
_ISR_03AE                         000003AE
_ISR_03AF                         000003AF
_ISR_03DC                         000003DC
_ISR_03E1                         000003E1
_ISR_0445                         00000445
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
ball_at_left                      00000285
ball_at_right                     0000029A
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    00000264
ball_lost                         00000138
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B0
between                           000001BC
between_exit                      000001C6
black                             
blue                              
bottom_bound                      0000010B
brick_bounce                      000001B1
brick_wall_init                   000003FB
bw_init                           00000402
case                              
check_paddle_bounce               00000149
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000114
collision_exit                    000001B9
d1                                000000AD
d2                                000000AE
d3                                000000AF
dark_green                        
digit_offset                      000003F5
digit_row                         00000206
digits                            0000005F
draw_border                       
draw_empty                        00000390
draw_paddle                       000003A2
draw_row1                         000002C1
draw_row2                         000002EA
draw_row3                         00000313
draw_row4                         0000033C
draw_row5                         00000365
draw_score                        000001D0
draw_top_wall                     0000021C
draw_void                         00000234
draw_void_exit                    000002AD
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        000003C8
field_end                         000003D2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

flags                             00000000
frequency                         00000093
game_init                         0000042F
game_over                         000000C2
game_over_test                    000003EE
game_running                      000000BA
gray                              white
hi_line                           000003C1
inc_score                         000003DA
isr                               00000004
isr_exit                          00000029
lcount                            00000001
leave                             
lfsr_rand                         00000406
lfsr_rand_exit                    00000416
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000EF
move_ball_exit                    00000111
move_y                            00000102
next_task                         
no_ball                           00000243
no_ball_dly                       00000240
no_wall_draw                      000002B7
paddle_pos                        00000006
pickn                             
pokew                             
pong                              0000009A
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         0000002E
pushw                             
q                                 0000000A
r                                 00000002
read_button                       000000D1
read_paddle                       000000D5
right_bound                       000000FB
row1                              000000A0
row1_coll                         0000015A
row2                              000000A2
row2_coll                         0000016A
row3                              000000A4
row3_coll                         0000017C
row3_exit                         00000332
row4                              000000A6
row4_coll                         0000018E
row5                              000000A8
row5_coll                         000001A0
row6                              000000AA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  17:05:56         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

score                             0000000C
score_exit                        000001FC
seed                              00000030
set_ball_dx                       00000419
set_ball_dx_exit                  0000042D
set_presync                       0000003B
set_vsync                         00000053
skip_2_tasks                      000000CA
slice                             00000002
sound                             00000076
sound_fx1                         00000084
sound_fx2                         0000008F
sound_timer                       000000B1
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000441
task                              00000003
task_switch                       00000012
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     0000022A
user_input                        000000AE
video_first                       000001C8
vsync                             00000046
vsync_end                         00000068
wait_field_end                    000003BB
wait_trigger                      000000BC
white                             
yellow                            
yes_ball                          0000025D

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   320 suppressed

