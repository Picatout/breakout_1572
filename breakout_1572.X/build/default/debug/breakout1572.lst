MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00034 ;    12        |  1      | task 5, sound timer
                      00035 ;    13        |  1      | task 6, user input
                      00036 ;    14        |  1      | task 7, move ball
                      00037 ;    15        |  1      | task 8, collision control
                      00038 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00039 ;    30-49     |  20     | task 10, display score and balls count
                      00040 ;    50-57     |  8      | task 11, draw top border
                      00041 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00042 ;    74-113    |  40     | task 13, draw bricks rows
                      00043 ;    114-242   |  129    | task 14, draw space below bricks rows
                      00044 ;    243-250   |  8      | task 15, draw paddle
                      00045 ;    251-262/3 |  11/12  | task 16, wait end of field    
                      00046 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00047  
                      00048     
                      00049     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00050     
8007   3FA7           00051     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00052     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00053     
                      00054     radix dec
                      00055 
                      00056 ; constants
  00000800            00057 PROG_SIZE equ 2048  ; program words
  00000080            00058 EEPROM_SIZE equ 128 ; high endurance flash words
                      00059  
  01B4F360            00060 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00061 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00062 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00063  
                      00064 ; NTSC signal 
  00003D76            00065 Fhorz equ 15734 ; horizontal frequency
  0000071B            00066 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00067 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00068 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00069 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00070 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00071 ; boolean flags 
  00000000            00072 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00073 F_EVEN equ 1    ; even field
  00000002            00074 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00075 F_SOUND equ 3   ; sound enabled 
  00000004            00076 F_START equ 4   ; game started 
  00000005            00077 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00078 F_OVER equ 6    ; game over
  00000007            00079 F_COOL equ 7    ; player got maximum score
                      00080  
                      00081 ;pins assignment
  00000000            00082 AUDIO EQU RA0
  00000000            00083 PADDLE equ RA0
  00000001            00084 CHROMA equ RA1
  00000002            00085 SYNC_OUT equ RA2
  00000003            00086 START_BTN equ RA3 
  00000004            00087 VIDEO_OUT equ RA4
  00000005            00088 CLKIN equ RA5
                      00089  
                      00090     ; constants used in video display
                      00091 ; values are in Tcy for x dimension.
                      00092 ; values are in scan lines for y dimension.    
  0000001E            00093 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  0000004A            00094 FIRST_BRICK_Y equ 74 ; lcount first brick scan line
  000000FA            00095 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000030            00096 LEFT_MARGIN equ 48  ; tcy delay before any display
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00097 PLAY_WIDTH equ 48 ; pixels
  00000005            00098 PIXEL_WIDTH equ 5; pixel width in tcy 
  00000008            00099 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00100 BRICK_WIDTH equ 4  ; pixels
  00000004            00101 BORDER_WIDTH equ 4  ; Tcy
  00000006            00102 PADDLE_WIDTH equ 6 ; pixels
  00000008            00103 PADDLE_THICKNESS equ 8 ; scan lines
  0000002A            00104 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  00000002            00105 BALL_WIDTH equ 2 ; pixels
  000000C0            00106 BALL_MASK equ 0xC0 ;  
  00000008            00107 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00108 BALL_LEFT_BOUND equ 0 ; pixel
  0000002E            00109 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00110 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00111 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE
  000000F3            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  000000FC            00113 PADDLE_MASK equ 0xFC 
  00000005            00114 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00115 ROW1_Y equ 74
  00000052            00116 ROW2_Y equ 82
  0000005A            00117 ROW3_Y equ 90
  00000062            00118 ROW4_Y equ 98
  0000006A            00119 ROW5_Y equ 106
                      00120  
                      00121 
                      00122 ;;;;;;;;;;;;;;;;;;;;;;
                      00123 ;; assembler macros ;;
                      00124 ;;;;;;;;;;;;;;;;;;;;;;
                      00125 
                      00126 ; leave task 
                      00127 leave macro
                      00128     goto isr_exit
                      00129     endm
                      00130     
                      00131 ; move to next task on slice limit
                      00132 ; parameters:
                      00133 ;   s  nomber of slices used by the task    
                      00134 next_task macro s    
                      00135     incf slice
                      00136     movlw s
                      00137     subwf slice,W
                      00138     skpz
                      00139     leave
                      00140     clrf slice
                      00141     incf task
                      00142     leave
                      00143     endm
                      00144     
                      00145     
                      00146 ; swap variable with WREG    
                      00147 swap_var macro var
                      00148     xorwf var
                      00149     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     endm
                      00152     
                      00153 
                      00154 ; delay in machine cycle T
                      00155 ; parameters:
                      00156 ;   mc   number of machine cycles    
                      00157 tdelay macro mc 
                      00158     if mc==0
                      00159     exitm
                      00160     endif
                      00161     if mc==1
                      00162     nop
                      00163     exitm
                      00164     endif
                      00165     if mc==2
                      00166     bra $+1
                      00167     exitm
                      00168     endif
                      00169     if mc==3
                      00170     nop
                      00171     bra $+1
                      00172     exitm
                      00173     endif
                      00174     if mc==4
                      00175     call _4tcy
                      00176     exitm
                      00177     endif
                      00178     if mc==5
                      00179     call _5tcy
                      00180     exitm
                      00181     endif
                      00182     if mc==6
                      00183     call _6tcy
                      00184     exitm
                      00185     endif
                      00186     if mc==7
                      00187     call _7tcy
                      00188     exitm
                      00189     endif
                      00190     if mc>7
                      00191     variable q=(mc-5)/3
                      00192     variable r=(mc-5)%3+1
                      00193     movlw q
                      00194     call _3ntcy
                      00195     if (r==2)
                      00196     bra $+1
                      00197     exitm
                      00198     endif 
                      00199     if (r==1)
                      00200     nop
                      00201     exitm
                      00202     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endif
                      00204     endm
                      00205 
                      00206 ; enable weak pull on VIDEO_OUT
                      00207 ; to create a porch
                      00208 porch_on macro
                      00209     banksel WPUA
                      00210     bsf WPUA,VIDEO_OUT
                      00211     endm
                      00212     
                      00213 ; disable weak pull on VIDEO_OUT
                      00214 ; to remove porch
                      00215 porch_off macro
                      00216     banksel WPUA
                      00217     bcf WPUA,VIDEO_OUT
                      00218     endm
                      00219     
                      00220 ; enable chroma output
                      00221 chroma_on macro
                      00222     banksel TRISA
                      00223     bcf TRISA, CHROMA
                      00224     endm
                      00225     
                      00226 ;disable chroma output    
                      00227 chroma_off macro
                      00228     banksel TRISA
                      00229     bsf TRISA,CHROMA
                      00230     endm
                      00231     
                      00232 ; output chroma reference    
                      00233 chroma_ref macro
                      00234     banksel PWM1CON
                      00235     bcf PWM1CON,POL
                      00236     endm
                      00237     
                      00238 ; set chroma phase to 180 degree
                      00239 chroma_invert macro
                      00240     banksel PWM1CON
                      00241     bsf PWM1CON,POL
                      00242     endm
                      00243 
                      00244 ;;;;;;;;;;;;;;;;;;;;;;
                      00245 ;   colors macros
                      00246 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00247 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00248 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00249 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00250 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00251 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00252 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00253 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00254  
                      00255 ;set video output to black    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 black macro
                      00257     movlw BLACK
                      00258     movwf TRISA
                      00259     endm
                      00260     
                      00261 ; set video output to white    
                      00262 white macro    
                      00263     movlw WHITE
                      00264     movwf TRISA
                      00265     endm
                      00266 
                      00267 #define gray white
                      00268     
                      00269 ; set video output to mauve    
                      00270 mauve macro
                      00271     movlw MAUVE
                      00272     movwf TRISA
                      00273     endm
                      00274 
                      00275 ; set video output to yellow   
                      00276 yellow macro
                      00277     movlw YELLOW
                      00278     movwf TRISA
                      00279     endm
                      00280     
                      00281 ; set video output to blue
                      00282 blue macro
                      00283     movlw BLUE
                      00284     movwf TRISA
                      00285     endm
                      00286     
                      00287 ; set video output to dark blue    
                      00288 dark_green macro
                      00289     movlw DARK_GREEN
                      00290     movwf TRISA
                      00291     endm
                      00292 
                      00293 ; shift out 1 bit    
                      00294 display_bit macro n
                      00295     lslf vbuffer+n
                      00296     movlw BLACK
                      00297     skpnc
                      00298     movfw fg_color
                      00299     movwf TRISA
                      00300     endm
                      00301     
                      00302 ; display a byte of pixels    
                      00303 ; input:
                      00304 ;   n is byte number {0..5}    
                      00305 display_byte macro n
                      00306     display_bit n
                      00307     display_bit n
                      00308     display_bit n
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     display_bit n
                      00310     display_bit n
                      00311     display_bit n
                      00312     display_bit n
                      00313     display_bit n
                      00314     endm
                      00315     
                      00316 ; draw left and right borders
                      00317 ; parameters:
                      00318 ;   width delay determine width
                      00319 draw_border macro width
                      00320     banksel TRISA
                      00321     bsf TRISA,CHROMA
                      00322     bcf TRISA,VIDEO_OUT
                      00323     tdelay width
                      00324     bsf TRISA,VIDEO_OUT
                      00325     endm
                      00326     
                      00327 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00328 ;  stack manipulation macros
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00330 STACK_SIZE equ 16 ; size of argument stack
                      00331 #define T INDF0 ; indirect access to top of argument stack
                      00332 #define SP FSR0 ; use FSR0 as stack pointer 
                      00333 ; push WREG on T
                      00334 pushw  macro
                      00335     movwi --SP
                      00336     endm
                      00337   
                      00338 ; pop WREG from T
                      00339 popw macro
                      00340     moviw SP++
                      00341     endm
                      00342     
                      00343 ; swap WREG with 
                      00344 swapw  macro
                      00345     xorwf T
                      00346     xorwf T,W
                      00347     xorwf T
                      00348     endm
                      00349 
                      00350 ; drop n elements from stack
                      00351 dropn macro n
                      00352     addfsr T,n
                      00353     endm
                      00354 
                      00355 ; copy nth element of stack to WREG
                      00356 ;  n {0..31}, 0 is T   
                      00357 pickn macro n
                      00358     moviw n[SP]
                      00359     endm
                      00360    
                      00361 ; copy WREG to nth element of stack
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; n {0..31}, 0 is T
                      00363 pokew macro n
                      00364     movwi n[SP]
                      00365     endm
                      00366     
                      00367     
                      00368 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00369 ;;    variables
                      00370 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00371  
                      00372     
                      00373     udata 0x20 ; bank 0
0020                  00374 stack res 16 ; arguments stack
0030                  00375 seed res 2 ; prng seed used by lfsr16
                      00376  
                      00377 ; video display manipulate TRISA register
                      00378 ; to avoid banksel during video update
                      00379 ; place variables related to video in same bank as TRISA 
                      00380 v_array   udata 0xA0 ; bank 1
00A0                  00381 vbuffer res 6
00A6                  00382 temp3 res 1
00A7                  00383 row1 res 6; brick wall row1
00AD                  00384 fill1 res 2 
00AF                  00385 row2 res 6
00B5                  00386 fill2 res 2 
00B7                  00387 row3 res 6
00BD                  00388 fill3 res 2 
00BF                  00389 row4 res 6
00C5                  00390 fill4 res 2 
00C7                  00391 row5 res 6
00CD                  00392 fill5 res 2
00CF                  00393 row6 res 6 
00D5                  00394 fg_color res 1
00D6                  00395 paddle_byte res 1 ; paddle offset in vbuffer
00D7                  00396 paddle_mask res 2 ; paddle mask to put in vbuffer 
00D9                  00397 ball_byte res 1 ; byte offset in vbuffer
00DA                  00398 ball_mask res 2 ; ball mask to put in vbuffer 
00DC                  00399 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DD                  00400 balls res 1 ; number of recking balls available
                      00401  
                      00402 ; common 16 bytes RAM accessible whatever the selected bank 
                      00403     udata_shr 
0000                  00404 flags  res 1 ; boolean variables
0001                  00405 lcount res 1 ; video field line counter
0002                  00406 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00407 task res 1 ; where in video phase 
0004                  00408 temp1 res 1 ; temporary storage
0005                  00409 temp2 res 1 ; 
0006                  00410 paddle_pos res 1 
0007                  00411 ball_x res 1
0008                  00412 ball_y res 1
0009                  00413 ball_dx res 1
000A                  00414 ball_dy res 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B                  00415 ball_speed res 1
000C                  00416 score res 2 ; score stored in Binary Coded Decimal
000E                  00417 ball_timer res 1 
000F                  00418 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00419  
                      00420 ;; cpu reset entry point
                      00421 RES_VECT  CODE    0x0000            
0000   2???           00422     goto    initialize  ; go to beginning of program
0001   0001           00423     reset   
0002   0001           00424     reset
0003   0001           00425     reset
                      00426 
                      00427 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00428 ; interrupt service routine triggered by PWM3 period rollover
                      00429 ; after initialization is done all processing in done inside 
                      00430 ; this interrupt.
                      00431 ; It is designed as a round robin scheduler.    
                      00432 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00433 ISR CODE 0x0004
0004                  00434 isr
0004   0A??           00435     incf lcount
0005   1903           00436     skpnz
0006   1400           00437     bsf flags, F_BIT8
0007   1900           00438     btfsc flags, F_SYNC
0008   2???           00439     goto task_switch
0009   002?           00440     banksel vbuffer
000A   01??           00441     clrf vbuffer
000B   01??           00442     clrf vbuffer+1
000C   01??           00443     clrf vbuffer+2
000D   01??           00444     clrf vbuffer+3
000E   01??           00445     clrf vbuffer+4
000F   01??           00446     clrf vbuffer+5
                      00447 ; generate chroma sync
                      00448     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 18==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 18>7
  0004                    M     variable q=(18-5)/3
  0002                    M     variable r=(18-5)%3+1
0010   3004               M     movlw q
0011   2???               M     call _3ntcy
                          M     if (r==2)
0012   3???               M     bra $+1
                          M     exitm
                      00449     chroma_ref
0013   003B               M     banksel PWM1CON
0014   121B               M     bcf PWM1CON,POL
0015   0021           00450     banksel TRISA
0016   108C           00451     bcf TRISA,CHROMA
                      00452     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16==6
                          M     call _6tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 16==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 16>7
  0003                    M     variable q=(16-5)/3
  0003                    M     variable r=(16-5)%3+1
0017   3003               M     movlw q
0018   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0019   148C           00453     bsf TRISA,CHROMA
                      00454     porch_on
001A   0024               M     banksel WPUA
001B   160C               M     bsf WPUA,VIDEO_OUT
001C                  00455 task_switch ; round robin task scheduler   
001C   08??           00456     movfw task
001D   000B           00457     brw
001E   2???           00458     goto pre_vsync ;task 0, vertical pre-equalization pulses
001F   2???           00459     goto vsync ;task 1, vertical sync pulses
0020   2???           00460     goto post_vsync ;task 2, vertical post-equalization pulses
0021   2???           00461     goto vsync_end ;task 3, return to normal video line
0022   2???           00462     goto reserved_task; task 4, do nothing, reserved 
0023   2???           00463     goto sound ;task 5, check sound timer expiration
0024   2???           00464     goto user_input ;task 6,  read button and paddle
0025   2???           00465     goto move_ball ;task 7, move recking ball.
0026   2???           00466     goto collision ; task 8, check for collision with brick wall and paddle
0027   2???           00467     goto video_first ; task 9, wait FIRST_VIDEO line.
0028   2???           00468     goto draw_score ;task 10,  draw score en ball count
0029   2???           00469     goto draw_top_wall ;task 11,  draw top wall
002A   2???           00470     goto draw_sides ;task 12, draw play space
002B   2???           00471     goto draw_bricks  ;task 13, draw bricks rows
002C   2???           00472     goto draw_empty;task 14, draw empty space down to bottom
002D   2???           00473     goto draw_paddle ;task 15, draw paddle
002E   2???           00474     goto wait_field_end ;task 16, idle to end of video field
002F   0001           00475     reset ; error trap, task out of range
0030                  00476 isr_exit  
                      00477     porch_off
0030   0024               M     banksel WPUA
0031   120C               M     bcf WPUA,VIDEO_OUT
0032   003B           00478     banksel PWM3INTF
0033   103D           00479     bcf PWM3INTF,PRIF
0034   0009           00480     retfie
                      00481 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00482 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00483 ;;  all tasks routine are here            ;;
                      00484 ;;  each must be terminate by leave macro ;;    
                      00485 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00486     
                      00487 ; task 0, vertical synchronization pre equalization
                      00488 ; 6 half horizontal scan lines    
0035                  00489 pre_vsync
0035   08??           00490     movfw slice
0036   1903           00491     skpnz
0037   2???           00492     goto set_presync
                      00493     next_task 6
0038   0A??               M     incf slice
0039   3006               M     movlw 6
003A   02??               M     subwf slice,W
003B   1D03               M     skpz
                          M     leave
003C   2???               M     goto isr_exit
003D   01??               M     clrf slice
003E   0A??               M     incf task
                          M     leave
003F   2???               M     goto isr_exit
0040                  00494 set_presync    
0040   003B           00495     banksel PWM3DC
0041   3041           00496     movlw HEQUAL
0042   00B3           00497     movwf PWM3DCL
0043   01B4           00498     clrf PWM3DCH
0044   3003           00499     movlw high HALF_LINE
0045   00B6           00500     movwf PWM3PRH
0046   308D           00501     movlw low HALF_LINE
0047   00B5           00502     movwf PWM3PRL
0048   17BF           00503     bsf PWM3LDCON,7
0049   0A??           00504     incf slice
                      00505     leave
004A   2???               M     goto isr_exit
                      00506     
                      00507 ; task 1, vertical synchronization pulses
                      00508 ; 6 half horizontal scan lines    
004B                  00509 vsync 
004B   08??           00510     movfw slice
004C   1903           00511     skpnz
004D   2???           00512     goto set_vsync
                      00513     next_task 6
004E   0A??               M     incf slice
004F   3006               M     movlw 6
0050   02??               M     subwf slice,W
0051   1D03               M     skpz
                          M     leave
0052   2???               M     goto isr_exit
0053   01??               M     clrf slice
0054   0A??               M     incf task
                          M     leave
0055   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056                  00514 set_vsync
0056   003B           00515     banksel PWM3DC
0057   3008           00516     movlw low VSYNC_PULSE
0058   00B3           00517     movwf PWM3DCL
0059   3003           00518     movlw high VSYNC_PULSE
005A   00B4           00519     movwf PWM3DCH
005B   17BF           00520     bsf PWM3LDCON,7
005C   0A??           00521     incf slice
                      00522     leave
005D   2???               M     goto isr_exit
                      00523     
                      00524 ; task 2, vertical synchronisation post equalization pulses
                      00525 ; 6 half horizontal scan lines    
005E                  00526 post_vsync
005E   08??           00527     movfw slice
005F   1903           00528     skpnz
0060   2???           00529     goto set_presync
0061   3006           00530     movlw 6
0062   02??           00531     subwf slice,W
0063   1903           00532     skpnz
0064   2???           00533     goto post_last
0065   0A??           00534     incf slice
                      00535     leave
0066   2???               M     goto isr_exit
0067                  00536 post_last    
0067   0A??           00537     incf task
0068   01??           00538     clrf slice
0069   1C80           00539     btfss flags, F_EVEN
                      00540     leave
006A   2???               M     goto isr_exit
                      00541     
                      00542 ; task 3, vertical synchronization completed, return to normal line
                      00543 ; rest horizonal line to its normal length.
                      00544 ; set lcount to 9.    
006B                  00545 vsync_end
006B   1100           00546     bcf flags, F_SYNC
006C   003B           00547     banksel PWM3DC
006D   3086           00548     movlw HSYNC
006E   00B3           00549     movwf PWM3DCL
006F   01B4           00550     clrf PWM3DCH
0070   3007           00551     movlw high HPERIOD
0071   00B6           00552     movwf PWM3PRH
0072   301B           00553     movlw low HPERIOD
0073   00B5           00554     movwf PWM3PRL
0074   17BF           00555     bsf PWM3LDCON,7
0075   0A??           00556     incf task
0076   36??           00557     lsrf lcount
                      00558     leave
0077   2???               M     goto isr_exit
                      00559 
                      00560 ; task 4, reserved slot
0078                  00561 reserved_task
0078   0A??           00562     incf task
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00563     leave
0079   2???               M     goto isr_exit
                      00564     
                      00565 ; task 5,  sound timer
                      00566 ; if sound active process it.    
007A                  00567 sound
007A   0A??           00568     incf task
007B   1D80           00569     btfss flags, F_SOUND
                      00570     leave
007C   2???               M     goto isr_exit
007D   1A80           00571     btfsc flags, F_PAUSE
007E   2???           00572     call sound_fx1
007F   002?           00573     banksel sound_timer
0080   0B??           00574     decfsz sound_timer
                      00575     leave
0081   2???               M     goto isr_exit
0082   1180           00576     bcf flags, F_SOUND
0083   003B           00577     banksel PWM2CON
0084   132B           00578     bcf PWM2CON,OE
0085   13AB           00579     bcf PWM2CON,EN
                      00580     leave
0086   2???               M     goto isr_exit
                      00581 
                      00582 ; sound effect, low pitch to high-pitch    
0087                  00583 sound_fx1
0087   1D80           00584     btfss flags, F_SOUND
0088   0008           00585     return
0089   1C80           00586     btfss flags, F_EVEN
008A   0008           00587     return
008B   003B           00588     banksel PWM2CON
008C   36A6           00589     lsrf PWM2PRH
008D   0CA5           00590     rrf PWM2PRL
008E   36A4           00591     lsrf PWM2DCH
008F   0CA3           00592     rrf PWM2DCL
0090   17AF           00593     bsf PWM2LDCON,LDA
0091   0008           00594     return
                      00595     
                      00596 ; sound effect, high pitch to low-pitch    
0092                  00597 sound_fx2
0092   1D80           00598     btfss flags, F_SOUND
0093   0008           00599     return
0094   1C80           00600     btfss flags, F_EVEN
0095   0008           00601     return
0096   003B           00602     banksel PWM2CON
0097   35A5           00603     lslf PWM2PRL
0098   0DA6           00604     rlf PWM2PRH
0099   35A3           00605     lslf PWM2DCL
009A   0DA4           00606     rlf PWM2DCH
009B   17AF           00607     bsf PWM2LDCON,LDA
009C   0008           00608     return
                      00609     
                      00610 ; initialize sound generation.
                      00611 ; input:
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00612 ;   T = duration
                      00613 ;   WREG = index in frequency table    
                      00614 ; outpout:
                      00615 ;   none    
009D                  00616 sound_init
                      00617     pushw  ; ( d i -- )
009D   0019               M     movwi --SP
009E   1580           00618     bsf flags, F_SOUND
009F   003B           00619     banksel PWM2CON
00A0   0800           00620     movfw T
00A1   2???           00621     call frequency
00A2   00A6           00622     movwf PWM2PRH
00A3   0A00           00623     incf T,W
00A4   2???           00624     call frequency
00A5   00A5           00625     movwf PWM2PRL
00A6   3626           00626     lsrf PWM2PRH,W
00A7   00A4           00627     movwf PWM2DCH
00A8   0C25           00628     rrf PWM2PRL,W
00A9   00A3           00629     movwf PWM2DCL
00AA   17AF           00630     bsf PWM2LDCON,LDA
00AB   172B           00631     bsf PWM2CON,OE
00AC   17AB           00632     bsf PWM2CON,EN
00AD   002?           00633     banksel sound_timer
                      00634     pickn 1
00AE   3F01               M     moviw 1[SP]
00AF   00??           00635     movwf sound_timer
                      00636     dropn 2
00B0   3102               M     addfsr T,2
00B1   0008           00637     return
                      00638     
                      00639 ;task 6, read button and paddle position
00B2                  00640 user_input
00B2   0A??           00641     incf task
00B3   2???           00642     call read_paddle
00B4   1B00           00643     btfsc flags, F_OVER
00B5   3???           00644     bra game_over
00B6   1A00           00645     btfsc flags,F_START
00B7   3???           00646     bra game_running
                      00647 ; game not running
00B8   2???           00648     call read_button
00B9   1D03           00649     skpz
00BA   3???           00650     bra skip_2_tasks
                      00651 ; start game    
00BB   2???           00652     call game_init
                      00653     leave
00BC   2???               M     goto isr_exit
00BD                  00654 game_running
00BD   1E80           00655     btfss flags, F_PAUSE
                      00656     leave
00BE   2???               M     goto isr_exit
                      00657 ; game on pause    
00BF                  00658 wait_trigger
00BF   2???           00659     call read_button
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   1D03           00660     skpz
00C1   3???           00661     bra skip_2_tasks
00C2   1280           00662     bcf flags,F_PAUSE
00C3   2???           00663     call set_ball_dx
                      00664     leave
00C4   2???               M     goto isr_exit
                      00665 ; game over
00C5                  00666 game_over
00C5   2???           00667     call read_button
00C6   1D03           00668     skpz
00C7   3???           00669     bra skip_2_tasks
00C8   2???           00670     call game_init
00C9   0A??           00671     incf task
                      00672     leave
00CA   2???               M     goto isr_exit
                      00673 ; while game not running skip 'move_ball' and 'collision' tasks    
00CB                  00674 skip_2_tasks
00CB   08??           00675     movfw paddle_pos
00CC   3E02           00676     addlw 2
00CD   00??           00677     movwf ball_x
00CE   2???           00678     call compute_ball_mask
00CF   0A??           00679     incf task
00D0   0A??           00680     incf task
00D1   2???           00681     call lfsr16
                      00682     leave
00D2   2???               M     goto isr_exit
                      00683 
                      00684     
00D3                  00685 read_button
00D3   0020           00686     banksel PORTA
00D4   080C           00687     movfw PORTA
00D5   3908           00688     andlw 1<<START_BTN
00D6   0008           00689     return
                      00690     
00D7                  00691 read_paddle
00D7   003B           00692     banksel PWM2CON
00D8   13AB           00693     bcf PWM2CON,EN
00D9   0021           00694     banksel TRISA
00DA   140C           00695     bsf TRISA, PADDLE
00DB   0021           00696     banksel ADCON0
00DC   3003           00697     movlw 3
00DD   009D           00698     movwf ADCON0
00DE   189D           00699     btfsc ADCON0,NOT_DONE
00DF   2???           00700     goto $-1
00E0   3010           00701     movlw 4<<CHS0
00E1   009D           00702     movwf ADCON0
00E2   361C           00703     lsrf ADRESH,W
00E3   00??           00704     movwf paddle_pos
                      00705     ;lsrf paddle_pos
00E4   302A           00706     movlw PADDLE_LIMIT
00E5   02??           00707     subwf paddle_pos,W
00E6   302A           00708     movlw PADDLE_LIMIT
00E7   1803           00709     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   00??           00710     movwf paddle_pos
00E9   1D80           00711     btfss flags, F_SOUND
00EA   3???           00712     bra $+3
00EB   003B           00713     banksel PWM2CON
00EC   17AB           00714     bsf PWM2CON,EN
00ED   0021           00715     banksel TRISA
00EE   100C           00716     bcf TRISA, AUDIO
                      00717 ; create paddle mask
00EF   3002           00718     movlw 2
00F0   07??           00719     addwf paddle_pos,W
00F1   00??           00720     movwf ball_x
00F2   2???           00721     call compute_paddle_mask
00F3   0008           00722     return
                      00723 
                      00724 ; paddle_mask and paddle_pos used when it is time to display paddle
                      00725 ; paddle_byte=paddle_pos/8
                      00726 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00F4                  00727 compute_paddle_mask
00F4   36??           00728     lsrf paddle_pos,W
00F5   3689           00729     lsrf WREG
00F6   3689           00730     lsrf WREG
00F7   00??           00731     movwf paddle_byte
00F8   30FC           00732     movlw PADDLE_MASK
00F9   00??           00733     movwf paddle_mask
00FA   01??           00734     clrf paddle_mask+1
00FB   3007           00735     movlw 7
00FC   05??           00736     andwf paddle_pos,W
00FD   1903           00737     skpnz
00FE   0008           00738     return
00FF   36??           00739     lsrf paddle_mask
0100   0C??           00740     rrf paddle_mask+1
0101   0B89           00741     decfsz WREG
0102   3???           00742     bra $-3
0103   0008           00743     return
                      00744     
                      00745     
                      00746     
                      00747     
                      00748 ; task 7, move recking ball.   
0104                  00749 move_ball
0104   0B??           00750     decfsz ball_timer
0105   3???           00751     bra move_ball_exit
0106   08??           00752     movfw ball_speed
0107   00??           00753     movwf ball_timer
0108   08??           00754     movfw ball_dx
0109   07??           00755     addwf ball_x
010A   1F80           00756     btfss ball_dx,7
010B   3???           00757     bra right_bound
010C                  00758 left_bound
010C   1F80           00759     btfss ball_x,7
010D   3???           00760     bra move_y
010E   01??           00761     clrf ball_x
010F   09??           00762     comf ball_dx
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0110   0A??           00763     incf ball_dx
0111   3???           00764     bra move_y
0112                  00765 right_bound    
0112   08??           00766     movfw ball_x
0113   3C2E           00767     sublw BALL_RIGHT_BOUND
0114   1803           00768     skpnc
0115   3???           00769     bra move_y
0116   03??           00770     decf ball_x
0117   09??           00771     comf ball_dx
0118   0A??           00772     incf ball_dx
0119                  00773 move_y
0119   08??           00774     movfw ball_dy
011A   07??           00775     addwf ball_y
011B   303A           00776     movlw BALL_TOP_BOUND
011C   02??           00777     subwf ball_y,W
011D   1803           00778     skpnc
011E   3???           00779     bra bottom_bound
011F   303A           00780     movlw BALL_TOP_BOUND
0120   00??           00781     movwf ball_y
0121   09??           00782     comf ball_dy
0122   0A??           00783     incf ball_dy
0123   3???           00784     bra move_ball_exit
0124                  00785 bottom_bound
0124   08??           00786     movfw ball_y
0125   3CFA           00787     sublw BALL_BOTTOM_BOUND
0126   1C03           00788     skpc
0127   3???           00789     bra move_ball_exit
0128                  00790 ball_lost    
0128   1680           00791     bsf flags, F_PAUSE ; pause game
0129   0B??           00792     decfsz balls
012A   3???           00793     bra $+3
012B   1200           00794     bcf flags, F_START
012C   1700           00795     bsf flags, F_OVER
012D   3002           00796     movlw 2
012E   07??           00797     addwf paddle_pos,W
012F   00??           00798     movwf ball_x
0130   30EC           00799     movlw PADDLE_Y-BALL_HEIGHT+1
0131   00??           00800     movwf ball_y
0132   30FC           00801     movlw -4
0133   00??           00802     movwf ball_dy
0134   3008           00803     movlw 8
                      00804     pushw
0135   0019               M     movwi --SP
0136   3002           00805     movlw 2
0137   2???           00806     call sound_init
0138   0A??           00807     incf task ; skip collision task
0139                  00808 move_ball_exit
0139   2???           00809     call compute_ball_mask
013A   0A??           00810     incf task
                      00811     leave
013B   2???               M     goto isr_exit
                      00812 
                      00813 ; compute ball_mask and ball_byte
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00814 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00815 ; ball_byte= ball_x/8     
013C                  00816 compute_ball_mask
013C   36??           00817     lsrf ball_x,W
013D   3689           00818     lsrf WREG
013E   3689           00819     lsrf WREG
013F   00??           00820     movwf ball_byte
0140   30C0           00821     movlw BALL_MASK
0141   00??           00822     movwf ball_mask
0142   01??           00823     clrf ball_mask+1
0143   3007           00824     movlw 7
0144   05??           00825     andwf ball_x,W
0145   1903           00826     skpnz
0146   0008           00827     return
0147   36??           00828     lsrf ball_mask
0148   0C??           00829     rrf ball_mask+1
0149   0B89           00830     decfsz WREG
014A   3???           00831     bra $-3
014B   0008           00832     return
                      00833     
                      00834 ; task 8, collision detection
014C                  00835 collision
014C   002?           00836     banksel vbuffer
014D   30??           00837     movlw high row1
014E   0087           00838     movwf FSR1H
014F   30??           00839     movlw low row1
0150   0086           00840     movwf FSR1L
0151   1B80           00841     btfsc ball_dy,7
0152   3???           00842     bra bricks_test
0153                  00843 paddle_test    
                      00844 ; paddle bounce test
0153   30EC           00845     movlw PADDLE_Y-BALL_HEIGHT+1
0154   02??           00846     subwf ball_y,W
0155   1C03           00847     skpc
0156   3???           00848     bra bricks_test
                      00849 ; if ball_x over paddle bounce ball
0157                  00850 check_paddle_bounce
0157   08??           00851     movfw paddle_pos
                      00852     pushw
0158   0019               M     movwi --SP
0159   3E06           00853     addlw PADDLE_WIDTH
                      00854     pushw
015A   0019               M     movwi --SP
015B   08??           00855     movfw ball_x
015C   2???           00856     call between
015D   1C03           00857     skpc
015E   3???           00858     bra collision_exit
015F                  00859 paddle_bounce 
015F   30FA           00860     movlw BALL_BOTTOM_BOUND
0160   00??           00861     movwf ball_y
0161   09??           00862     comf ball_dy
0162   0A??           00863     incf ball_dy
0163   08??           00864     movfw ball_x
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0164   02??           00865     subwf paddle_pos,W
0165   30FF           00866     movlw -1
0166   1903           00867     skpnz
0167   00??           00868     movwf ball_dx
0168   3005           00869     movlw PADDLE_WIDTH-1
0169   07??           00870     addwf paddle_pos,W
016A   3001           00871     movlw 1
016B   1903           00872     skpnz
016C   00??           00873     movwf ball_dx
016D   3002           00874     movlw 2
                      00875     pushw
016E   0019               M     movwi --SP
016F   2???           00876     call sound_init
0170   3???           00877     bra collision_exit
                      00878 ; brick wall collision test    
0171                  00879 bricks_test
                      00880 ; initialize pointer
0171   0187           00881      clrf FSR1H
0172   30??           00882      movlw low row1
0173   0086           00883      movwf FSR1L
                      00884 ; over which brick pixel the ball is?
                      00885 ; bricks are 4 pixels wide    
                      00886 ; if pixel==3 ball bridge 2 bricks     
0174   3003           00887      movlw 3
0175   05??           00888      andwf ball_x,W
0176   00??           00889      movwf temp1
0177   1B80           00890      btfsc ball_dy,7
0178   3???           00891      bra going_up
0179                  00892 going_down
0179   3043           00893      movlw ROW1_Y-BALL_HEIGHT+1
                      00894      pushw
017A   0019               M     movwi --SP
017B   306B           00895      movlw ROW5_Y+1
                      00896      pushw
017C   0019               M     movwi --SP
017D   2???           00897      call between
017E   1C03           00898      skpc
017F   3???           00899      bra collision_exit ; no collision
0180   08??           00900      movfw ball_y
0181   3C43           00901      sublw ROW1_Y-BALL_HEIGHT+1
0182   39F8           00902      andlw 0xf8
0183   0786           00903      addwf FSR1L
0184   08??           00904      movfw ball_mask
0185   0501           00905      andwf INDF1,W
0186   1903           00906      skpnz
0187   3???           00907      bra collision_exit
0188                  00908 remove_brick     
0188   300F           00909      movlw 0x0f
0189   1980           00910      btfsc ball_x,3
018A   0E89           00911      swapf WREG
018B   0581           00912      andwf INDF1
018C   3???           00913      bra pong_sound
018D                  00914 going_up
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018D   304A           00915      movlw ROW1_Y
                      00916      pushw
018E   0019               M     movwi --SP
018F   3071           00917      movlw ROW5_Y+BRICK_HEIGHT-1
                      00918      pushw
0190   0019               M     movwi --SP
0191   08??           00919      movfw ball_y
0192   2???           00920      call between
0193   1C03           00921      skpc
0194   3???           00922      bra collision_exit
0195   08??           00923      movfw ball_y
0196   3C71           00924      sublw ROW5_Y+BRICK_HEIGHT-1
0197   39F8           00925      andlw 0xf8
0198   0786           00926      addwf FSR1L
0199   08??           00927      movfw ball_mask
019A   0701           00928      addwf INDF1,W
019B   1903           00929      skpnz
019C   3???           00930      bra collision_exit
019D   3???           00931      bra remove_brick
019E                  00932 pong_sound
019E   3001           00933      movlw 1
                      00934      pushw
019F   0019               M     movwi --SP
01A0   3000           00935      movlw 0
01A1   2???           00936     call sound_init
01A2                  00937 collision_exit
01A2   0A??           00938     incf task
                      00939     leave
01A3   2???               M     goto isr_exit
                      00940 
                      00941     
                      00942     
                      00943 ; check if  lb <= x < hb
                      00944 ; 13 tcy    
                      00945 ; input:
                      00946 ;    WREG  x
                      00947 ;    stack ( lb hb -- )     
                      00948 ; output:
                      00949 ;   Carry bit set if true    
01A4                  00950 between
01A4   00??           00951     movwf temp2
                      00952     pickn 1
01A5   3F01               M     moviw 1[SP]
01A6   02??           00953     subwf temp2,W
01A7   1C03           00954     skpc
01A8   3???           00955     bra between_exit2
01A9   0800           00956     movfw T
01AA   02??           00957     subwf temp2
01AB   0803           00958     movfw STATUS
01AC   3A01           00959     xorlw 1
01AD   0083           00960     movwf STATUS
01AE                  00961 between_exit    
                      00962     dropn 2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AE   3102               M     addfsr T,2
01AF   0008           00963     return  ; 13 tcy
                      00964 ; add tcy to have constant tcy for this routine whatever the path    
01B0                  00965 between_exit2
01B0   3???           00966     bra $+1
01B1   3???           00967     bra between_exit
                      00968     
                      00969 ; task 9, wait for first video line
01B2                  00970 video_first
01B2   301D           00971     movlw FIRST_VIDEO_LINE-1
01B3   02??           00972     subwf lcount,W
01B4   1D03           00973     skpz
                      00974     leave
01B5   2???               M     goto isr_exit
01B6   01??           00975     clrf slice
01B7   0A??           00976     incf task
                      00977     leave
01B8   2???               M     goto isr_exit
                      00978    
                      00979 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00980 ; The following tasks are responsible to render video display.
                      00981 ; Each video line must be completed by setting color to black.
                      00982 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00983 
                      00984 ; check if ball is visible on this scan line    
                      00985 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT    
                      00986 ;  22 tcy   
                      00987 ;  input:
                      00988 ;       none    
                      00989 ;  output:
                      00990 ;       C set if true   
01B9                  00991 ball_visible
01B9   08??           00992     movfw ball_y
                      00993     pushw
01BA   0019               M     movwi --SP
01BB   3E08           00994     addlw BALL_HEIGHT
                      00995     pushw
01BC   0019               M     movwi --SP
01BD   08??           00996     movfw lcount
01BE   2???           00997     call between ; +13 tcy
01BF   0008           00998     return
                      00999     
                      01000     
                      01001     
01C0                  01002 display_vbuffer
                      01003     display_byte 0
                          M     display_bit 0
01C0   35??               M     lslf vbuffer+0
01C1   301A               M     movlw BLACK
01C2   1803               M     skpnc
01C3   08??               M     movfw fg_color
01C4   008C               M     movwf TRISA
                          M     display_bit 0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C5   35??               M     lslf vbuffer+0
01C6   301A               M     movlw BLACK
01C7   1803               M     skpnc
01C8   08??               M     movfw fg_color
01C9   008C               M     movwf TRISA
                          M     display_bit 0
01CA   35??               M     lslf vbuffer+0
01CB   301A               M     movlw BLACK
01CC   1803               M     skpnc
01CD   08??               M     movfw fg_color
01CE   008C               M     movwf TRISA
                          M     display_bit 0
01CF   35??               M     lslf vbuffer+0
01D0   301A               M     movlw BLACK
01D1   1803               M     skpnc
01D2   08??               M     movfw fg_color
01D3   008C               M     movwf TRISA
                          M     display_bit 0
01D4   35??               M     lslf vbuffer+0
01D5   301A               M     movlw BLACK
01D6   1803               M     skpnc
01D7   08??               M     movfw fg_color
01D8   008C               M     movwf TRISA
                          M     display_bit 0
01D9   35??               M     lslf vbuffer+0
01DA   301A               M     movlw BLACK
01DB   1803               M     skpnc
01DC   08??               M     movfw fg_color
01DD   008C               M     movwf TRISA
                          M     display_bit 0
01DE   35??               M     lslf vbuffer+0
01DF   301A               M     movlw BLACK
01E0   1803               M     skpnc
01E1   08??               M     movfw fg_color
01E2   008C               M     movwf TRISA
                          M     display_bit 0
01E3   35??               M     lslf vbuffer+0
01E4   301A               M     movlw BLACK
01E5   1803               M     skpnc
01E6   08??               M     movfw fg_color
01E7   008C               M     movwf TRISA
                      01004     display_byte 1
                          M     display_bit 1
01E8   35??               M     lslf vbuffer+1
01E9   301A               M     movlw BLACK
01EA   1803               M     skpnc
01EB   08??               M     movfw fg_color
01EC   008C               M     movwf TRISA
                          M     display_bit 1
01ED   35??               M     lslf vbuffer+1
01EE   301A               M     movlw BLACK
01EF   1803               M     skpnc
01F0   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F1   008C               M     movwf TRISA
                          M     display_bit 1
01F2   35??               M     lslf vbuffer+1
01F3   301A               M     movlw BLACK
01F4   1803               M     skpnc
01F5   08??               M     movfw fg_color
01F6   008C               M     movwf TRISA
                          M     display_bit 1
01F7   35??               M     lslf vbuffer+1
01F8   301A               M     movlw BLACK
01F9   1803               M     skpnc
01FA   08??               M     movfw fg_color
01FB   008C               M     movwf TRISA
                          M     display_bit 1
01FC   35??               M     lslf vbuffer+1
01FD   301A               M     movlw BLACK
01FE   1803               M     skpnc
01FF   08??               M     movfw fg_color
0200   008C               M     movwf TRISA
                          M     display_bit 1
0201   35??               M     lslf vbuffer+1
0202   301A               M     movlw BLACK
0203   1803               M     skpnc
0204   08??               M     movfw fg_color
0205   008C               M     movwf TRISA
                          M     display_bit 1
0206   35??               M     lslf vbuffer+1
0207   301A               M     movlw BLACK
0208   1803               M     skpnc
0209   08??               M     movfw fg_color
020A   008C               M     movwf TRISA
                          M     display_bit 1
020B   35??               M     lslf vbuffer+1
020C   301A               M     movlw BLACK
020D   1803               M     skpnc
020E   08??               M     movfw fg_color
020F   008C               M     movwf TRISA
                      01005     display_byte 2
                          M     display_bit 2
0210   35??               M     lslf vbuffer+2
0211   301A               M     movlw BLACK
0212   1803               M     skpnc
0213   08??               M     movfw fg_color
0214   008C               M     movwf TRISA
                          M     display_bit 2
0215   35??               M     lslf vbuffer+2
0216   301A               M     movlw BLACK
0217   1803               M     skpnc
0218   08??               M     movfw fg_color
0219   008C               M     movwf TRISA
                          M     display_bit 2
021A   35??               M     lslf vbuffer+2
021B   301A               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021C   1803               M     skpnc
021D   08??               M     movfw fg_color
021E   008C               M     movwf TRISA
                          M     display_bit 2
021F   35??               M     lslf vbuffer+2
0220   301A               M     movlw BLACK
0221   1803               M     skpnc
0222   08??               M     movfw fg_color
0223   008C               M     movwf TRISA
                          M     display_bit 2
0224   35??               M     lslf vbuffer+2
0225   301A               M     movlw BLACK
0226   1803               M     skpnc
0227   08??               M     movfw fg_color
0228   008C               M     movwf TRISA
                          M     display_bit 2
0229   35??               M     lslf vbuffer+2
022A   301A               M     movlw BLACK
022B   1803               M     skpnc
022C   08??               M     movfw fg_color
022D   008C               M     movwf TRISA
                          M     display_bit 2
022E   35??               M     lslf vbuffer+2
022F   301A               M     movlw BLACK
0230   1803               M     skpnc
0231   08??               M     movfw fg_color
0232   008C               M     movwf TRISA
                          M     display_bit 2
0233   35??               M     lslf vbuffer+2
0234   301A               M     movlw BLACK
0235   1803               M     skpnc
0236   08??               M     movfw fg_color
0237   008C               M     movwf TRISA
                      01006     display_byte 3
                          M     display_bit 3
0238   35??               M     lslf vbuffer+3
0239   301A               M     movlw BLACK
023A   1803               M     skpnc
023B   08??               M     movfw fg_color
023C   008C               M     movwf TRISA
                          M     display_bit 3
023D   35??               M     lslf vbuffer+3
023E   301A               M     movlw BLACK
023F   1803               M     skpnc
0240   08??               M     movfw fg_color
0241   008C               M     movwf TRISA
                          M     display_bit 3
0242   35??               M     lslf vbuffer+3
0243   301A               M     movlw BLACK
0244   1803               M     skpnc
0245   08??               M     movfw fg_color
0246   008C               M     movwf TRISA
                          M     display_bit 3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0247   35??               M     lslf vbuffer+3
0248   301A               M     movlw BLACK
0249   1803               M     skpnc
024A   08??               M     movfw fg_color
024B   008C               M     movwf TRISA
                          M     display_bit 3
024C   35??               M     lslf vbuffer+3
024D   301A               M     movlw BLACK
024E   1803               M     skpnc
024F   08??               M     movfw fg_color
0250   008C               M     movwf TRISA
                          M     display_bit 3
0251   35??               M     lslf vbuffer+3
0252   301A               M     movlw BLACK
0253   1803               M     skpnc
0254   08??               M     movfw fg_color
0255   008C               M     movwf TRISA
                          M     display_bit 3
0256   35??               M     lslf vbuffer+3
0257   301A               M     movlw BLACK
0258   1803               M     skpnc
0259   08??               M     movfw fg_color
025A   008C               M     movwf TRISA
                          M     display_bit 3
025B   35??               M     lslf vbuffer+3
025C   301A               M     movlw BLACK
025D   1803               M     skpnc
025E   08??               M     movfw fg_color
025F   008C               M     movwf TRISA
                      01007     display_byte 4
                          M     display_bit 4
0260   35??               M     lslf vbuffer+4
0261   301A               M     movlw BLACK
0262   1803               M     skpnc
0263   08??               M     movfw fg_color
0264   008C               M     movwf TRISA
                          M     display_bit 4
0265   35??               M     lslf vbuffer+4
0266   301A               M     movlw BLACK
0267   1803               M     skpnc
0268   08??               M     movfw fg_color
0269   008C               M     movwf TRISA
                          M     display_bit 4
026A   35??               M     lslf vbuffer+4
026B   301A               M     movlw BLACK
026C   1803               M     skpnc
026D   08??               M     movfw fg_color
026E   008C               M     movwf TRISA
                          M     display_bit 4
026F   35??               M     lslf vbuffer+4
0270   301A               M     movlw BLACK
0271   1803               M     skpnc
0272   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0273   008C               M     movwf TRISA
                          M     display_bit 4
0274   35??               M     lslf vbuffer+4
0275   301A               M     movlw BLACK
0276   1803               M     skpnc
0277   08??               M     movfw fg_color
0278   008C               M     movwf TRISA
                          M     display_bit 4
0279   35??               M     lslf vbuffer+4
027A   301A               M     movlw BLACK
027B   1803               M     skpnc
027C   08??               M     movfw fg_color
027D   008C               M     movwf TRISA
                          M     display_bit 4
027E   35??               M     lslf vbuffer+4
027F   301A               M     movlw BLACK
0280   1803               M     skpnc
0281   08??               M     movfw fg_color
0282   008C               M     movwf TRISA
                          M     display_bit 4
0283   35??               M     lslf vbuffer+4
0284   301A               M     movlw BLACK
0285   1803               M     skpnc
0286   08??               M     movfw fg_color
0287   008C               M     movwf TRISA
                      01008     display_byte 5
                          M     display_bit 5
0288   35??               M     lslf vbuffer+5
0289   301A               M     movlw BLACK
028A   1803               M     skpnc
028B   08??               M     movfw fg_color
028C   008C               M     movwf TRISA
                          M     display_bit 5
028D   35??               M     lslf vbuffer+5
028E   301A               M     movlw BLACK
028F   1803               M     skpnc
0290   08??               M     movfw fg_color
0291   008C               M     movwf TRISA
                          M     display_bit 5
0292   35??               M     lslf vbuffer+5
0293   301A               M     movlw BLACK
0294   1803               M     skpnc
0295   08??               M     movfw fg_color
0296   008C               M     movwf TRISA
                          M     display_bit 5
0297   35??               M     lslf vbuffer+5
0298   301A               M     movlw BLACK
0299   1803               M     skpnc
029A   08??               M     movfw fg_color
029B   008C               M     movwf TRISA
                          M     display_bit 5
029C   35??               M     lslf vbuffer+5
029D   301A               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029E   1803               M     skpnc
029F   08??               M     movfw fg_color
02A0   008C               M     movwf TRISA
                          M     display_bit 5
02A1   35??               M     lslf vbuffer+5
02A2   301A               M     movlw BLACK
02A3   1803               M     skpnc
02A4   08??               M     movfw fg_color
02A5   008C               M     movwf TRISA
                          M     display_bit 5
02A6   35??               M     lslf vbuffer+5
02A7   301A               M     movlw BLACK
02A8   1803               M     skpnc
02A9   08??               M     movfw fg_color
02AA   008C               M     movwf TRISA
                          M     display_bit 5
02AB   35??               M     lslf vbuffer+5
02AC   301A               M     movlw BLACK
02AD   1803               M     skpnc
02AE   08??               M     movfw fg_color
02AF   008C               M     movwf TRISA
02B0   0008           01009     return
                      01010  
                      01011 ; task 10, draw score en ball count
                      01012 ;  lcount 30-49    
02B1                  01013 draw_score 
02B1   0021           01014     banksel TRISA
02B2   08??           01015     movfw slice
02B3   3689           01016     lsrf WREG
02B4   3689           01017     lsrf WREG
                      01018     pushw
02B5   0019               M     movwi --SP
02B6   300F           01019     movlw 0xf
02B7   05??           01020     andwf score,W
02B8   2???           01021     call digit_offset
02B9   0700           01022     addwf T,W
02BA   2???           01023     call digits
02BB   04??           01024     iorwf vbuffer
02BC   0E??           01025     swapf score+1,W
02BD   390F           01026     andlw 0xf
02BE   2???           01027     call digit_offset
02BF   0700           01028     addwf T,W
02C0   2???           01029     call digits
02C1   0E89           01030     swapf WREG
02C2   04??           01031     iorwf vbuffer
02C3   300F           01032     movlw 0xf
02C4   05??           01033     andwf score+1,W
02C5   2???           01034     call digit_offset
02C6   0700           01035     addwf T,W
02C7   2???           01036     call digits
02C8   04??           01037     iorwf vbuffer+1
02C9   08??           01038     movfw balls
02CA   2???           01039     call digit_offset
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CB   0700           01040     addwf T,W
02CC   2???           01041     call digits
02CD   04??           01042     iorwf vbuffer+5
02CE   2???           01043     call display_vbuffer
                      01044     dropn 1
02CF   3101               M     addfsr T,1
02D0                  01045 score_exit
                      01046     next_task 5*4
02D0   0A??               M     incf slice
02D1   3014               M     movlw 5*4
02D2   02??               M     subwf slice,W
02D3   1D03               M     skpz
                          M     leave
02D4   2???               M     goto isr_exit
02D5   01??               M     clrf slice
02D6   0A??               M     incf task
                          M     leave
02D7   2???               M     goto isr_exit
                      01047 
                      01048     
                      01049 ; task 11,  draw top wall, 8 screen lines 
                      01050 ; lcount 50-57    
02D8                  01051 draw_top_wall
02D8   0021           01052     banksel TRISA
02D9   09??           01053     comf vbuffer
02DA   09??           01054     comf vbuffer+1
02DB   09??           01055     comf vbuffer+2
02DC   09??           01056     comf vbuffer+3
02DD   09??           01057     comf vbuffer+4
02DE   09??           01058     comf vbuffer+5
02DF   300A           01059     movlw WHITE
02E0   00??           01060     movwf fg_color
                      01061     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>7
  000E                    M     variable q=(LEFT_MARGIN-5)/3
  0002                    M     variable r=(LEFT_MARGIN-5)%3+1
02E1   300E               M     movlw q
02E2   2???               M     call _3ntcy
                          M     if (r==2)
02E3   3???               M     bra $+1
                          M     exitm
                      01062     white
02E4   300A               M     movlw WHITE
02E5   008C               M     movwf TRISA
02E6   2???           01063     call display_vbuffer
                      01064     white
02E7   300A               M     movlw WHITE
02E8   008C               M     movwf TRISA
                      01065     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02E9   2???               M     call _4tcy
                          M     exitm
                      01066     black
02EA   301A               M     movlw BLACK
02EB   008C               M     movwf TRISA
                      01067     next_task BRICK_HEIGHT
02EC   0A??               M     incf slice
02ED   3008               M     movlw BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EE   02??               M     subwf slice,W
02EF   1D03               M     skpz
                          M     leave
02F0   2???               M     goto isr_exit
02F1   01??               M     clrf slice
02F2   0A??               M     incf task
                          M     leave
02F3   2???               M     goto isr_exit
                      01068 
                      01069 ; put ball mask in video_buffer
                      01070 ; 38 tcy    
02F4                  01071 put_ball_in_buffer
02F4   2???           01072     call ball_visible ; +22tcy
02F5   1C03           01073     skpc
02F6   3???           01074     bra kill_time
02F7   0187           01075     clrf FSR1H
02F8   30??           01076     movlw low vbuffer
02F9   0086           01077     movwf FSR1L
02FA   08??           01078     movfw ball_byte
02FB   0786           01079     addwf FSR1L
02FC   08??           01080     movfw ball_mask
02FD   001E           01081     movwi FSR1++
02FE   08??           01082     movfw ball_mask+1
02FF   3FC0           01083     movwi [FSR1]
0300   0008           01084     return ; 37 tcy
0301                  01085 kill_time 
                      01086     tdelay 8
                          M     if 8==0
                          M     exitm
                          M     endif
                          M     if 8==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 8==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 8==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 8==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 8==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 8==6
                          M     call _6tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 8==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 8>7
  0001                    M     variable q=(8-5)/3
  0001                    M     variable r=(8-5)%3+1
0301   3001               M     movlw q
0302   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0303   0000               M     nop
                          M     exitm
0304   0008           01087     return ; 37 tcy
                      01088     
                      01089 ; task 12,  only on even field draw vertical sides and ball.
                      01090 ; lcount 58-73    
0305                  01091 draw_sides 
0305   0021           01092     banksel TRISA
0306   2???           01093     call put_ball_in_buffer
                      01094     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==6
                          M     call _6tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-31==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31>7
  0004                    M     variable q=(LEFT_MARGIN-31-5)/3
  0001                    M     variable r=(LEFT_MARGIN-31-5)%3+1
0307   3004               M     movlw q
0308   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0309   0000               M     nop
                          M     exitm
                      01095     white
030A   300A               M     movlw WHITE
030B   008C               M     movwf TRISA
030C   2???           01096     call display_vbuffer
                      01097     white
030D   300A               M     movlw WHITE
030E   008C               M     movwf TRISA
                      01098     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
030F   2???               M     call _4tcy
                          M     exitm
                      01099     black
0310   301A               M     movlw BLACK
0311   008C               M     movwf TRISA
                      01100     next_task 2*BRICK_HEIGHT
0312   0A??               M     incf slice
0313   3010               M     movlw 2*BRICK_HEIGHT
0314   02??               M     subwf slice,W
0315   1D03               M     skpz
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0316   2???               M     goto isr_exit
0317   01??               M     clrf slice
0318   0A??               M     incf task
                          M     leave
0319   2???               M     goto isr_exit
                      01101  
031A                  01102 copy_row
031A   0016           01103     moviw FSR1++
031B   04??           01104     iorwf vbuffer
031C   0016           01105     moviw FSR1++
031D   04??           01106     iorwf vbuffer+1
031E   0016           01107     moviw FSR1++
031F   04??           01108     iorwf vbuffer+2
0320   0016           01109     moviw FSR1++
0321   04??           01110     iorwf vbuffer+3
0322   0016           01111     moviw FSR1++
0323   04??           01112     iorwf vbuffer+4
0324   0016           01113     moviw FSR1++
0325   04??           01114     iorwf vbuffer+5
0326   0008           01115     return    
                      01116 
0327                  01117 rows_common
0327   00??           01118     movwf fg_color
0328   0187           01119     clrf FSR1H
0329   2???           01120     call copy_row
                      01121     tdelay LEFT_MARGIN-28
                          M     if LEFT_MARGIN-28==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28==6
                          M     call _6tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-28==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-28>7
  0005                    M     variable q=(LEFT_MARGIN-28-5)/3
  0001                    M     variable r=(LEFT_MARGIN-28-5)%3+1
032A   3005               M     movlw q
032B   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
032C   0000               M     nop
                          M     exitm
                      01122     white
032D   300A               M     movlw WHITE
032E   008C               M     movwf TRISA
032F   2???           01123     call display_vbuffer
                      01124     white
0330   300A               M     movlw WHITE
0331   008C               M     movwf TRISA
                      01125     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0332   2???               M     call _4tcy
                          M     exitm
                      01126     black
0333   301A               M     movlw BLACK
0334   008C               M     movwf TRISA
                      01127     next_task BRICKS_ROWS*BRICK_HEIGHT
0335   0A??               M     incf slice
0336   3028               M     movlw BRICKS_ROWS*BRICK_HEIGHT
0337   02??               M     subwf slice,W
0338   1D03               M     skpz
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0339   2???               M     goto isr_exit
033A   01??               M     clrf slice
033B   0A??               M     incf task
                          M     leave
033C   2???               M     goto isr_exit
                      01128     
                      01129 ; task 13, draw brick rows
                      01130 ; lcount 74-113   
033D                  01131 draw_bricks
033D   30??           01132     movlw low row1
033E   0086           01133     movwf FSR1L
033F   304A           01134     movlw FIRST_BRICK_Y
0340   02??           01135     subwf lcount,W
0341   3689           01136     lsrf WREG
0342   3689           01137     lsrf WREG
0343   3689           01138     lsrf WREG
0344   0786           01139     addwf FSR1L
0345   003B           01140     banksel PWM1CON
0346   121B           01141     bcf PWM1CON,POL
0347   1889           01142     btfsc WREG,1
0348   161B           01143     bsf PWM1CON,POL
0349   0021           01144     banksel TRISA
034A   3589           01145     lslf WREG
034B   000B           01146     brw
034C   3008           01147     movlw YELLOW
034D   3???           01148     bra rows_common
034E   3008           01149     movlw YELLOW
034F   3???           01150     bra rows_common
0350   3008           01151     movlw MAUVE
0351   3???           01152     bra rows_common
0352   3008           01153     movlw MAUVE
0353   3???           01154     bra rows_common
0354   300A           01155     movlw WHITE
0355   3???           01156     bra rows_common
0356   300A           01157     movlw WHITE
0357   3???           01158     bra rows_common
                      01159     
  00000028            01160 MSG_FIRST equ 40
  00000028            01161 MSG_HEIGHT equ 40
  00000010            01162 MSG_PIXELS_COUNT equ 16 
                      01163 ; task 14
                      01164 ; draw all rows below bricks to paddle
                      01165 ; lcount 114-242 
0358                  01166 draw_empty
0358   0021           01167     banksel TRISA
0359   1B00           01168     btfsc flags, F_OVER
035A   3???           01169     bra print_msg
035B   2???           01170     call put_ball_in_buffer
                      01171     tdelay LEFT_MARGIN-33
                          M     if LEFT_MARGIN-33==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33>7
  0003                    M     variable q=(LEFT_MARGIN-33-5)/3
  0002                    M     variable r=(LEFT_MARGIN-33-5)%3+1
035C   3003               M     movlw q
035D   2???               M     call _3ntcy
                          M     if (r==2)
035E   3???               M     bra $+1
                          M     exitm
                      01172     white
035F   300A               M     movlw WHITE
0360   008C               M     movwf TRISA
0361   2???           01173     call display_vbuffer
                      01174     white
0362   300A               M     movlw WHITE
0363   008C               M     movwf TRISA
                      01175     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0364   2???               M     call _4tcy
                          M     exitm
                      01176     black
0365   301A               M     movlw BLACK
0366   008C               M     movwf TRISA
0367   3???           01177     bra draw_empty_exit
0368                  01178 print_msg    
0368   3008           01179     movlw YELLOW ; message color
0369   00??           01180     movwf fg_color
036A   3028           01181     movlw MSG_FIRST
                      01182     pushw
036B   0019               M     movwi --SP
036C   3050           01183     movlw MSG_FIRST+MSG_HEIGHT
                      01184     pushw
036D   0019               M     movwi --SP
036E   08??           01185     movfw slice
036F   2???           01186     call between
0370   1C03           01187     skpc
0371   3???           01188     bra msg
0372   1F80           01189     btfss flags, F_COOL
0373   3???           01190     bra display_end
                      01191 ; perfect score display 'COOL' message
0374   30??           01192     movlw high cool_msg
0375   0087           01193     movwf FSR1H
0376   30??           01194     movlw low cool_msg
0377   0086           01195     movwf FSR1L
0378   2???           01196     call display_msg
0379   3???           01197     bra msg
                      01198 ; display 'END!' message    
037A                  01199 display_end
037A   30??           01200     movlw high end_msg
037B   0087           01201     movwf FSR1H
037C   30??           01202     movlw low end_msg
037D   0086           01203     movwf FSR1L
037E   2???           01204     call display_msg
037F                  01205 msg
037F   2???           01206     call display_vbuffer
0380                  01207 draw_empty_exit
                      01208     next_task LAST_VIDEO_LINE-ROW5_Y-BRICK_HEIGHT
0380   0A??               M     incf slice
0381   3088               M     movlw LAST_VIDEO_LINE-ROW5_Y-BRICK_HEIGHT
0382   02??               M     subwf slice,W
0383   1D03               M     skpz
                          M     leave
0384   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0385   01??               M     clrf slice
0386   0A??               M     incf task
                          M     leave
0387   2???               M     goto isr_exit
                      01209 ;    incf slice
                      01210 ;    movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01211 ;    subwf lcount,W
                      01212 ;    skpz
                      01213 ;    leave
                      01214 ;    clrf slice
                      01215 ;    incf task
                      01216 ;    leave
                      01217 
                      01218 ; display end message
                      01219 ; message as a maximum of 24 vbuffer    
0388                  01220 display_msg
0388   3028           01221     movlw MSG_FIRST
0389   02??           01222     subwf slice,W
038A   3689           01223     lsrf WREG
038B   3689           01224     lsrf WREG
038C   3689           01225     lsrf WREG
038D   00??           01226     movwf temp1
038E   3589           01227     lslf WREG
038F   07??           01228     addwf temp1,W
0390   0786           01229     addwf FSR1L
0391   1803           01230     skpnc
0392   0A87           01231     incf FSR1H
0393   0016           01232     moviw FSR1++
0394   00??           01233     movwf vbuffer+1
0395   0016           01234     moviw FSR1++
0396   00??           01235     movwf vbuffer+2
0397   0016           01236     moviw FSR1++
0398   00??           01237     movwf vbuffer+3
0399   0008           01238     return
                      01239     
                      01240 ; task 15, draw paddle at bottom screen  
                      01241 ; lcount 243-250    
039A                  01242 draw_paddle
039A   0021           01243     banksel TRISA
039B   0187           01244     clrf FSR1H
039C   30??           01245     movlw low vbuffer
039D   0086           01246     movwf FSR1L
039E   08??           01247     movfw paddle_byte
039F   0786           01248     addwf FSR1L
03A0   08??           01249     movfw paddle_mask
03A1   001E           01250     movwi FSR1++
03A2   08??           01251     movfw paddle_mask+1
03A3   3FC0           01252     movwi  [FSR1]
03A4   300A           01253     movlw WHITE
03A5   00??           01254     movwf fg_color
                      01255     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>7
  000D                    M     variable q=(LEFT_MARGIN-3-5)/3
  0002                    M     variable r=(LEFT_MARGIN-3-5)%3+1
03A6   300D               M     movlw q
03A7   2???               M     call _3ntcy
                          M     if (r==2)
03A8   3???               M     bra $+1
                          M     exitm
                      01256     white
03A9   300A               M     movlw WHITE
03AA   008C               M     movwf TRISA
03AB   2???           01257     call display_vbuffer
                      01258     white
03AC   300A               M     movlw WHITE
03AD   008C               M     movwf TRISA
                      01259     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
03AE   2???               M     call _4tcy
                          M     exitm
                      01260     black
03AF   301A               M     movlw BLACK
03B0   008C               M     movwf TRISA
                      01261     next_task PADDLE_THICKNESS
03B1   0A??               M     incf slice
03B2   3008               M     movlw PADDLE_THICKNESS
03B3   02??               M     subwf slice,W
03B4   1D03               M     skpz
                          M     leave
03B5   2???               M     goto isr_exit
03B6   01??               M     clrf slice
03B7   0A??               M     incf task
                          M     leave
03B8   2???               M     goto isr_exit
                      01262 
                      01263 ; task 16,  wait end of this field, reset task to zero    
                      01264 ; lcount 251-262/3    
03B9                  01265 wait_field_end
03B9   1800           01266     btfsc flags, F_BIT8
03BA   2???           01267     goto hi_line
                      01268     leave
03BB   2???               M     goto isr_exit
03BC                  01269 hi_line
03BC   1880           01270     btfsc flags,F_EVEN
03BD   2???           01271     goto even_field
03BE   3005           01272     movlw 5
03BF   02??           01273     subwf lcount,W
03C0   1D03           01274     skpz
                      01275     leave
03C1   2???               M     goto isr_exit
03C2   2???           01276     goto field_end
03C3                  01277 even_field
03C3   3006           01278     movlw 6
03C4   02??           01279     subwf lcount,W
03C5   1D03           01280     skpz
                      01281     leave
03C6   2???               M     goto isr_exit
                      01282 ; even field last line is half_line    
                      01283 ; set PWM3 for line 263 half-line
03C7   003B           01284     banksel PWM3DC
03C8   3003           01285     movlw high HALF_LINE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C9   00B6           01286     movwf PWM3PRH
03CA   308D           01287     movlw low HALF_LINE
03CB   00B5           01288     movwf PWM3PRL
03CC   17BF           01289     bsf PWM3LDCON,7
03CD                  01290 field_end
03CD   01??           01291     clrf task
03CE   01??           01292     clrf slice
03CF   01??           01293     clrf lcount
03D0   1000           01294     bcf flags, F_BIT8
03D1   1500           01295     bsf flags, F_SYNC
                      01296 ; toggle odd/even field flag    
03D2   3002           01297     movlw 1<<F_EVEN
03D3   06??           01298     xorwf flags
                      01299     leave
03D4   2???               M     goto isr_exit
                      01300 
                      01301 ; helper functions
                      01302 
                      01303 ; delay = (3*n+5)*tcy    
                      01304 ;input:
                      01305 ;   WREG <- n    
03D5                  01306 _3ntcy
03D5   0B89           01307     decfsz WREG
03D6   3???           01308     bra $-1
03D7   0008           01309     return
                      01310     
03D8                  01311 _7tcy ; call here for 7*tcy delay using a single instruction
03D8   0000           01312     nop
03D9                  01313 _6tcy ; call here for 6*tcy delay using a single instruction
03D9   0000           01314     nop
03DA                  01315 _5tcy ; call here for 5*tcy delay using a single instruction
03DA   0000           01316     nop
03DB                  01317 _4tcy ; call here for 4*Tcy delay using a single instruction    
03DB   0008           01318     return
                      01319 
                      01320 ;division by 3
                      01321 ; input:
                      01322 ;   WREG value to divide
                      01323 ; output:
                      01324 ;   WREG  quotient
                      01325 ;   temp1  remainder    
                      01326 ;div3
                      01327 ;    movwf temp1
                      01328 ;    clrf temp2
                      01329 ;    movlw 0xc0
                      01330 ;    pushw
                      01331 ;div3_loop
                      01332 ;    movfw T
                      01333 ;    subwf temp1,W
                      01334 ;    skpnc
                      01335 ;    movwf temp1
                      01336 ;    rlf temp2
                      01337 ;    lsrf T
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01338 ;    skpc
                      01339 ;    bra div3_loop
                      01340 ;    dropn 1
                      01341 ;    movfw temp2
                      01342 ;    return
                      01343 ;    
                      01344     
                      01345 ; increment user score
                      01346 ; This is a BCD addition where a single digit is added to score.   
                      01347 ; score is stored as big indian
                      01348 ; argument: 
                      01349 ;   WREG ->  bdc digit to add to score variable
03DC                  01350 inc_score
03DC   07??           01351     addwf score+1
03DD   1883           01352     btfsc STATUS,DC
03DE   3???           01353     bra $+6
03DF   300F           01354     movlw 15
03E0   05??           01355     andwf score+1,W
03E1   3C09           01356     sublw 9
03E2   1803           01357     skpnc
03E3   3???           01358     bra $+3
03E4   3006           01359     movlw 6
03E5   07??           01360     addwf score+1
03E6   0E??           01361     swapf score+1,W
03E7   390F           01362     andlw 15
03E8   3C09           01363     sublw 9
03E9   1803           01364     skpnc
03EA   3???           01365     bra game_over_test
03EB   3060           01366     movlw 0x60
03EC   07??           01367     addwf score+1
03ED   0A??           01368     incf score
03EE   3001           01369     movlw 1
03EF   00??           01370     movwf ball_speed
03F0                  01371 game_over_test ; all bricks destroyed?
03F0   3003           01372     movlw 3
03F1   02??           01373     subwf score,W
03F2   1D03           01374     skpz
03F3   0008           01375     return
03F4   3036           01376     movlw 0x36
03F5   02??           01377     subwf score+1,W
03F6   1D03           01378     skpz
03F7   0008           01379     return
03F8   1700           01380     bsf flags,F_OVER ; game over
03F9   1780           01381     bsf flags,F_COOL ; with maximum score.
03FA   0008           01382     return
                      01383     
                      01384 ;***********************************
                      01385 ; digit_offset, compute digit position in 'digits' table
                      01386 ;   position = digit * 5
                      01387 ; 
                      01388 ; input: WREG -> digit value {0..9}
                      01389 ;         
                      01390 ; output: WREG -> displacement in table
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01391 ;***********************************
03FB                  01392 digit_offset    
                      01393     pushw 
03FB   0019               M     movwi --SP
03FC   3589           01394     lslf WREG
03FD   3589           01395     lslf WREG
03FE   0780           01396     addwf T
                      01397     popw
03FF   0012               M     moviw SP++
0400   0008           01398     return
                      01399     
0401                  01400 brick_wall_init
0401   30??           01401     movlw high row1
0402   0087           01402     movwf FSR1H
0403   30??           01403     movlw low row1
0404   0086           01404     movwf FSR1L
0405   3028           01405     movlw BRICKS_ROWS*8
0406   00??           01406     movwf temp1
0407   30FF           01407     movlw 0xff
0408                  01408 bw_init
0408   001E           01409     movwi FSR1++
0409   0B??           01410     decfsz temp1
040A   3???           01411     bra bw_init
040B   0008           01412     return
                      01413 
                      01414 ; compute tcy delay from pixel coordinateur
                      01415 ;  1 pixel is 5 tcy wide.
                      01416 ; input:
                      01417 ;   WREG  px
                      01418 ; output
                      01419 ;   WREG  tcy    
040C                  01420 px2tcy
                      01421    pushw
040C   0019               M     movwi --SP
040D   3589           01422    lslf WREG
040E   3589           01423    lslf WREG
040F   0780           01424    addwf T
                      01425    popw
0410   0012               M     moviw SP++
0411   0008           01426    return
                      01427 
                      01428    
                      01429     
                      01430     
                      01431     
                      01432 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
0412                  01433 lfsr16
0412   002?           01434     banksel seed
0413   08??           01435     movfw seed+1
0414   00??           01436     movwf temp1
0415   3589           01437     lslf WREG
0416   3589           01438     lslf WREG
0417   00??           01439     movwf temp2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0418   06??           01440     xorwf temp1
0419   35??           01441     lslf temp2
041A   08??           01442     movfw temp2
041B   06??           01443     xorwf temp1
041C   35??           01444     lslf temp2
041D   35??           01445     lslf temp2,W
041E   06??           01446     xorwf temp1
041F   35??           01447     lslf temp1
0420   0D??           01448     rlf seed
0421   0D??           01449     rlf seed+1
0422   08??           01450     movfw seed
0423   0008           01451     return
                      01452     
                      01453 
0424                  01454 set_ball_dx
0424   2???           01455     call lfsr16 ;random
0425   3007           01456     movlw 7
0426   05??           01457     andwf seed,W
0427   3589           01458     lslf WREG
0428   000B           01459     brw
0429   3000           01460     movlw 0
042A   3???           01461     bra set_ball_dx_exit
042B   3001           01462     movlw 1
042C   3???           01463     bra set_ball_dx_exit
042D   30FF           01464     movlw -1
042E   3???           01465     bra set_ball_dx_exit
042F   3000           01466     movlw 0
0430   3???           01467     bra set_ball_dx_exit
0431   3001           01468     movlw 1
0432   3???           01469     bra set_ball_dx_exit
0433   30FF           01470     movlw -1
0434   3???           01471     bra set_ball_dx_exit
0435   30FF           01472     movlw -1
0436   3???           01473     bra set_ball_dx_exit
0437   3001           01474     movlw 1
0438                  01475 set_ball_dx_exit
0438   00??           01476     movwf ball_dx
0439   0008           01477     return
                      01478     
043A                  01479 game_init
043A   01??           01480     clrf score
043B   01??           01481     clrf score+1
043C   2???           01482     call brick_wall_init
043D   002?           01483     banksel balls
043E   3003           01484     movlw 3
043F   00??           01485     movwf balls
0440   01??           01486     clrf ball_timer
0441   0A??           01487     incf ball_timer
0442   30EC           01488     movlw PADDLE_Y-BALL_HEIGHT+1
0443   00??           01489     movwf ball_y
0444   2???           01490     call set_ball_dx
0445   30FC           01491     movlw -4
0446   00??           01492     movwf ball_dy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0447   3002           01493     movlw 2
0448   00??           01494     movwf ball_speed
0449   01??           01495     clrf flags
044A   1600           01496     bsf flags, F_START
044B   0008           01497     return
                      01498     
                      01499 ; delay by TIMER0
                      01500 ; parameter
                      01501 ;   WREG -> 2*Tcy+7cy    
044C                  01502 t0delay 
044C   0989           01503     comf WREG
044D   0095           01504     movwf TMR0
044E   110B           01505     bcf INTCON,T0IF
044F   1D0B           01506     btfss INTCON,T0IF
0450   3???           01507     bra $-1
0451   0008           01508     return
                      01509     
                      01510 MAIN_PROG CODE                      ; let linker place main program
                      01511 
0000                  01512 initialize
                      01513 ; clear common RAM
0000   0185           01514     clrf FSR0H
0001   3070           01515     movlw 0x70
0002   0084           01516     movwf FSR0L
0003   0103           01517     clrw
0004   001A           01518     movwi FSR0++
0005   1F84           01519     btfss FSR0L,7
0006   3???           01520     bra $-2
                      01521 ; clear banked RAM
0007   0184           01522     clrf FSR0L
0008   3020           01523     movlw 0x20
0009   0085           01524     movwf FSR0H
000A   0103           01525     clrw 
000B   001A           01526     movwi FSR0++
000C   1C05           01527     btfss FSR0H,0
000D   3???           01528     bra $-2
                      01529 ; initialize LFSR seed
000E   002?           01530     banksel seed
000F   09??           01531     comf seed
0010   09??           01532     comf seed+1
0011   09??           01533     comf seed+2
0012   09??           01534     comf seed+3
                      01535 ;   setup arguments stack pointer
0013   30??           01536     movlw high (stack+STACK_SIZE)
0014   0085           01537     movwf FSR0H
0015   30??           01538     movlw low (stack+STACK_SIZE)
0016   0084           01539     movwf FSR0L
                      01540 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01541 ; TIMER0 prescale 1:2
0017   3050           01542     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01543     movwf OPTION_REG
                      01544 ; disable analog inputs, except AN0
0019   0023           01545     banksel ANSELA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001A   018C           01546     clrf ANSELA
                      01547 ; paddle potentiometer input     
001B   140C           01548     bsf ANSELA,PADDLE
001C   0021           01549     banksel ADCON1
001D   3020           01550     movlw (2<<ADCS0)
001E   009E           01551     movwf ADCON1
                      01552 ; pin setup
001F   0024           01553     banksel WPUA
0020   018C           01554     clrf WPUA
0021   0021           01555     banksel TRISA
0022   110C           01556     bcf TRISA,SYNC_OUT
0023   100C           01557     bcf TRISA,AUDIO
0024   0022           01558     banksel LATA
0025   160C           01559     bsf LATA, VIDEO_OUT
                      01560 ; PWM1 chroma signal on RA1
0026   003B           01561     banksel PWM1CON
0027   019F           01562     clrf PWM1LDCON
0028   0191           01563     clrf PWM1PHL
0029   0192           01564     clrf PWM1PHH
002A   0197           01565     clrf PWM1OFL
002B   0198           01566     clrf PWM1OFH
002C   0196           01567     clrf PWM1PRH
002D   3007           01568     movlw 7
002E   0095           01569     movwf PWM1PRL
002F   3004           01570     movlw 4
0030   0093           01571     movwf PWM1DCL
0031   0194           01572     clrf PWM1DCH
0032   179F           01573     bsf PWM1LDCON,7
0033   30C0           01574     movlw (1<<EN)|(1<<OE)
0034   009B           01575     movwf PWM1CON
                      01576 ; PWM2 sound
0035   003B           01577     banksel PWM2CON
0036   01A1           01578     clrf PWM2PHL
0037   01A2           01579     clrf PWM2PHH
0038   01A7           01580     clrf PWM2OFL
0039   01A8           01581     clrf PWM2OFH
003A   3030           01582     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01583     movwf PWM2CLKCON
003C   300D           01584     movlw high 3578;7
003D   00A6           01585     movwf PWM2PRH
003E   30FA           01586     movlw low 3578;7
003F   00A5           01587     movwf PWM2PRL
0040   3626           01588     lsrf PWM2PRH,W
0041   00A4           01589     movwf PWM2DCH
0042   0C25           01590     rrf PWM2PRL,W
0043   00A3           01591     movwf PWM2DCL
0044   17AF           01592     bsf PWM2LDCON,LDA
                      01593 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01594     banksel PWM3CON
0046   01BF           01595     clrf PWM3LDCON
0047   01B1           01596     clrf PWM3PHL
0048   01B2           01597     clrf PWM3PHH
0049   01B7           01598     clrf PWM3OFL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004A   01B8           01599     clrf PWM3OFH
004B   301B           01600     movlw low HPERIOD
004C   00B5           01601     movwf PWM3PRL
004D   3007           01602     movlw high HPERIOD
004E   00B6           01603     movwf PWM3PRH
004F   3086           01604     movlw HSYNC
0050   00B3           01605     movwf PWM3DCL
0051   01B4           01606     clrf PWM3DCH
0052   30D0           01607     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01608     movwf PWM3CON
0054   17BF           01609     bsf PWM3LDCON,7
0055   143C           01610     bsf PWM3INTE,PRIE
                      01611 ; enbable interrupt    
0056   0020           01612     banksel PIR3
0057   1313           01613     bcf PIR3,PWM3IF
0058   0021           01614     banksel PIE3
0059   1713           01615     bsf PIE3,PWM3IE
005A   170B           01616     bsf INTCON,PEIE
005B   178B           01617     bsf INTCON,GIE
005C   01??           01618     clrf flags
005D   1500           01619     bsf flags, F_SYNC
                      01620 ; test code
                      01621 ; all processing done in ISR    
005E   2???           01622     goto $
                      01623 
                      01624 ; digits character table
005F                  01625 digits
005F   000B           01626     brw
0060   3440 34A0 34A0 01627     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01628     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01629     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01630     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01631     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01632     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01633     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01634     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01635     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01636     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01637     reset
                      01638     
0093                  01639 frequency
0093   000B           01640     brw
0094   348B 34D3      01641     dt high 35795, low 35795 ; 100 hertz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0096   340D 34FB      01642     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01643     reset
                      01644   
                      01645 ;display END! when game is over    
0099                  01646 end_msg
                      01647 ;    brw
0099   00E8 00C8 0000 01648     data 0xe8,0xc8,0
009C   008E 00A8 0000 01649     data 0x8e,0xa8,0
009F   00EA 00A8 0000 01650     data 0xea,0xa8,0
00A2   008A 00A0 0000 01651     data 0x8a,0xa0,0
00A5   00EA 00C8 0000 01652     data 0xea,0xc8,0
                      01653   
00A8                  01654 cool_msg
                      01655 ;    brw
00A8   00EE 00E8 0000 01656     data 0xee,0xe8,0
00AB   008A 00A8 0000 01657     data 0x8a,0xa8,0
00AE   008A 00A8 0000 01658     data 0x8a,0xa8,0
00B1   008A 00A8 0000 01659     data 0x8a,0xa8,0
00B4   00EE 00EE 0000 01660     data 0xee,0xee,0
                      01661     
                      01662 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01663 max_score 
                      01664  
3FA7 1EFF             01665     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000030
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000002A
PADDLE_MASK                       000000FC
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000006
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0012                         00000012
_ISR_00DF                         000000DF
_ISR_00EA                         000000EA
_ISR_0102                         00000102
_ISR_012A                         0000012A
_ISR_014A                         0000014A
_ISR_01B0                         000001B0
_ISR_02E3                         000002E3
_ISR_035E                         0000035E
_ISR_03A8                         000003A8
_ISR_03D6                         000003D6
_ISR_03DE                         000003DE
_ISR_03E3                         000003E3
_ISR_0450                         00000450
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
ball_byte                         000000D9
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000128
ball_mask                         000000DA
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001B9
ball_x                            00000007
ball_y                            00000008
balls                             000000DD
between                           000001A4
between_exit                      000001AE
between_exit2                     000001B0
black                             
blue                              
bottom_bound                      00000124
brick_wall_init                   00000401
bricks_test                       00000171
bw_init                           00000408
check_paddle_bounce               00000157
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         0000014C
collision_exit                    000001A2
compute_ball_mask                 0000013C
compute_paddle_mask               000000F4
cool_msg                          000000A8
copy_row                          0000031A
dark_green                        
digit_offset                      000003FB
digits                            0000005F
display_bit                       
display_byte                      
display_end                       0000037A
display_msg                       00000388
display_vbuffer                   000001C0
draw_border                       
draw_bricks                       0000033D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

draw_empty                        00000358
draw_empty_exit                   00000380
draw_paddle                       0000039A
draw_score                        000002B1
draw_sides                        00000305
draw_top_wall                     000002D8
dropn                             
eeprom                            00000780
end_msg                           00000099
even_field                        000003C3
fg_color                          000000D5
field_end                         000003CD
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
flags                             00000000
frequency                         00000093
game_init                         0000043A
game_over                         000000C5
game_over_test                    000003F0
game_running                      000000BD
going_down                        00000179
going_up                          0000018D
gray                              white
hi_line                           000003BC
inc_score                         000003DC
initialize                        00000000
isr                               00000004
isr_exit                          00000030
kill_time                         00000301
lcount                            00000001
leave                             
left_bound                        0000010C
lfsr16                            00000412
mauve                             
max_score                         00000780
move_ball                         00000104
move_ball_exit                    00000139
move_y                            00000119
msg                               0000037F
next_task                         
old_dx                            0000000F
paddle_bounce                     0000015F
paddle_byte                       000000D6
paddle_mask                       000000D7
paddle_pos                        00000006
paddle_test                       00000153
pickn                             
pokew                             
pong_sound                        0000019E
popw                              
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000035
print_msg                         00000368
pushw                             
put_ball_in_buffer                000002F4
px2tcy                            0000040C
q                                 0000000D
r                                 00000002
read_button                       000000D3
read_paddle                       000000D7
remove_brick                      00000188
reserved_task                     00000078
right_bound                       00000112
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       00000327
score                             0000000C
score_exit                        000002D0
seed                              00000030
set_ball_dx                       00000424
set_ball_dx_exit                  00000438
set_presync                       00000040
set_vsync                         00000056
skip_2_tasks                      000000CB
slice                             00000002
sound                             0000007A
sound_fx1                         00000087
sound_fx2                         00000092
sound_init                        0000009D
sound_timer                       000000DC
stack                             00000020
swap_var                          
swapw                             
t0delay                           0000044C
task                              00000003
task_switch                       0000001C
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
user_input                        000000B2
vbuffer                           000000A0
video_first                       000001B2
vsync                             0000004B
vsync_end                         0000006B
wait_field_end                    000003B9
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-21-2019  22:53:07         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

wait_trigger                      000000BF
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   340 suppressed

