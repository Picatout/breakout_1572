MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00034 ;    12        |  1      | task 5, sound timer
                      00035 ;    13        |  1      | task 6, user input
                      00036 ;    14        |  1      | task 7, move ball
                      00037 ;    15        |  1      | task 8, collision control
                      00038 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00039 ;    30-49     |  20     | task 10, display score and balls count
                      00040 ;    50-57     |  8      | task 11, draw top border
                      00041 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00042 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00043 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00044 ;    242-249   |  8      | task 15, draw paddle
                      00045 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00046 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00047  
                      00048     
                      00049     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00050     
8007   3FA7           00051     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00052     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00053     
                      00054     radix dec
                      00055 
                      00056 ; constants
  00000800            00057 PROG_SIZE equ 2048  ; program words
  00000080            00058 EEPROM_SIZE equ 128 ; high endurance flash words
                      00059  
  01B4F360            00060 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00061 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00062 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00063  
                      00064 ; NTSC signal 
  00003D76            00065 Fhorz equ 15734 ; horizontal frequency
  0000071B            00066 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00067 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00068 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00069 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00070 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00071 ; boolean flags 
  00000000            00072 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00073 F_EVEN equ 1    ; even field
  00000002            00074 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00075 F_SOUND equ 3   ; sound enabled 
  00000004            00076 F_START equ 4   ; game started 
  00000005            00077 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00078 F_OVER equ 6    ; game over
  00000007            00079 F_COOL equ 7    ; player got maximum score
                      00080  
                      00081 ;pins assignment
  00000000            00082 AUDIO EQU RA0
  00000000            00083 PADDLE equ RA0
  00000001            00084 CHROMA equ RA1
  00000002            00085 SYNC_OUT equ RA2
  00000003            00086 START_BTN equ RA3 
  00000004            00087 VIDEO_OUT equ RA4
  00000005            00088 CLKIN equ RA5
                      00089  
                      00090     ; constants used in video display
                      00091 ; values are in Tcy for x dimension.
                      00092 ; values are in scan lines for y dimension.    
  0000001E            00093 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  0000004A            00094 FIRST_BRICK_Y equ 74 ; lcount first brick scan line
  000000F9            00095 LAST_VIDEO_LINE  equ 249 ; last video line displayed
  00000045            00096 LEFT_MARGIN equ 69  ; tcy delay before any display
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00097 PLAY_WIDTH equ 48 ; pixels
  00000005            00098 PIXEL_WIDTH equ 5; pixel width in tcy 
  00000008            00099 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00100 BRICK_WIDTH equ 4  ; pixels
  00000004            00101 BORDER_WIDTH equ 4  ; Tcy
  00000006            00102 PADDLE_WIDTH equ 6 ; pixels
  00000008            00103 PADDLE_THICKNESS equ 8 ; scan lines
  0000002A            00104 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  00000002            00105 BALL_WIDTH equ 2 ; pixels
  000000C0            00106 BALL_MASK equ 0xC0 ;  
  00000008            00107 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00108 BALL_LEFT_BOUND equ 0 ; pixel
  0000002E            00109 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00110 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00111 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE
  000000F2            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  000000FC            00113 PADDLE_MASK equ 0xFC 
  00000006            00114 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00115 ROW1_Y equ 74
  00000052            00116 ROW2_Y equ 82
  0000005A            00117 ROW3_Y equ 90
  00000062            00118 ROW4_Y equ 98
  0000006A            00119 ROW5_Y equ 106
  00000072            00120 ROW6_Y equ 114 
                      00121 
                      00122 ;;;;;;;;;;;;;;;;;;;;;;
                      00123 ;; assembler macros ;;
                      00124 ;;;;;;;;;;;;;;;;;;;;;;
                      00125 
                      00126 ; leave task 
                      00127 leave macro
                      00128     goto isr_exit
                      00129     endm
                      00130     
                      00131 ; move to next task on slice limit
                      00132 ; parameters:
                      00133 ;   s  nomber of slices used by the task    
                      00134 next_task macro s    
                      00135     incf slice
                      00136     movlw s
                      00137     subwf slice,W
                      00138     skpz
                      00139     leave
                      00140     clrf slice
                      00141     incf task
                      00142     leave
                      00143     endm
                      00144     
                      00145     
                      00146 ; swap variable with WREG    
                      00147 swap_var macro var
                      00148     xorwf var
                      00149     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     endm
                      00152     
                      00153 
                      00154 ; delay in machine cycle T
                      00155 ; parameters:
                      00156 ;   mc   number of machine cycles    
                      00157 tdelay macro mc 
                      00158     if mc==0
                      00159     exitm
                      00160     endif
                      00161     if mc==1
                      00162     nop
                      00163     exitm
                      00164     endif
                      00165     if mc==2
                      00166     bra $+1
                      00167     exitm
                      00168     endif
                      00169     if mc==3
                      00170     nop
                      00171     bra $+1
                      00172     exitm
                      00173     endif
                      00174     if mc==4
                      00175     call _4tcy
                      00176     exitm
                      00177     endif
                      00178     if mc==5
                      00179     call _5tcy
                      00180     exitm
                      00181     endif
                      00182     if mc==6
                      00183     call _6tcy
                      00184     exitm
                      00185     endif
                      00186     if mc==7
                      00187     call _7tcy
                      00188     exitm
                      00189     endif
                      00190     if mc>7
                      00191     variable q=(mc-5)/3
                      00192     variable r=(mc-5)%3+1
                      00193     movlw q
                      00194     call _3ntcy
                      00195     if (r==2)
                      00196     bra $+1
                      00197     exitm
                      00198     endif 
                      00199     if (r==1)
                      00200     nop
                      00201     exitm
                      00202     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endif
                      00204     endm
                      00205 
                      00206 ; enable weak pull on VIDEO_OUT
                      00207 ; to create a porch
                      00208 porch_on macro
                      00209     banksel WPUA
                      00210     bsf WPUA,VIDEO_OUT
                      00211     endm
                      00212     
                      00213 ; disable weak pull on VIDEO_OUT
                      00214 ; to remove porch
                      00215 porch_off macro
                      00216     banksel WPUA
                      00217     bcf WPUA,VIDEO_OUT
                      00218     endm
                      00219     
                      00220 ; enable chroma output
                      00221 chroma_on macro
                      00222     banksel TRISA
                      00223     bcf TRISA, CHROMA
                      00224     endm
                      00225     
                      00226 ;disable chroma output    
                      00227 chroma_off macro
                      00228     banksel TRISA
                      00229     bsf TRISA,CHROMA
                      00230     endm
                      00231     
                      00232 ; output chroma reference    
                      00233 chroma_ref macro
                      00234     banksel PWM1CON
                      00235     bcf PWM1CON,POL
                      00236     endm
                      00237     
                      00238 ; set chroma phase to 180 degree
                      00239 chroma_invert macro
                      00240     banksel PWM1CON
                      00241     bsf PWM1CON,POL
                      00242     endm
                      00243 
                      00244 ;;;;;;;;;;;;;;;;;;;;;;
                      00245 ;   colors macros
                      00246 ;   TRISA configuration    
                      00247 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00248 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00249 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00250 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00251 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00252 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00253 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00254 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00255  
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ;set video output to black    
                      00257 black macro
                      00258     movlw BLACK
                      00259     movwf TRISA
                      00260     endm
                      00261     
                      00262 ; set video output to white    
                      00263 white macro    
                      00264     movlw WHITE
                      00265     movwf TRISA
                      00266     endm
                      00267 
                      00268 #define gray white
                      00269     
                      00270 ; set video output to mauve    
                      00271 mauve macro
                      00272     movlw MAUVE
                      00273     movwf TRISA
                      00274     endm
                      00275 
                      00276 ; set video output to yellow   
                      00277 yellow macro
                      00278     movlw YELLOW
                      00279     movwf TRISA
                      00280     endm
                      00281     
                      00282 ; set video output to blue
                      00283 blue macro
                      00284     movlw BLUE
                      00285     movwf TRISA
                      00286     endm
                      00287     
                      00288 ; set video output to dark blue    
                      00289 dark_green macro
                      00290     movlw DARK_GREEN
                      00291     movwf TRISA
                      00292     endm
                      00293 
                      00294 ; shift out 1 bit    
                      00295 display_bit macro n
                      00296     lslf vbuffer+n
                      00297     movlw BLACK
                      00298     skpnc
                      00299     movfw fg_color
                      00300     movwf TRISA
                      00301     endm
                      00302     
                      00303 ; display a byte of pixels    
                      00304 ; input:
                      00305 ;   n is byte number {0..5}    
                      00306 display_byte macro n
                      00307     display_bit n
                      00308     display_bit n
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     display_bit n
                      00310     display_bit n
                      00311     display_bit n
                      00312     display_bit n
                      00313     display_bit n
                      00314     display_bit n
                      00315     endm
                      00316     
                      00317    
                      00318 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00319 ;  stack manipulation macros
                      00320 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00321 STACK_SIZE equ 16 ; size of argument stack
                      00322 #define T INDF0 ; indirect access to top of argument stack
                      00323 #define SP FSR0 ; use FSR0 as stack pointer 
                      00324 ; push WREG on T
                      00325 pushw  macro
                      00326     movwi --SP
                      00327     endm
                      00328   
                      00329 ; pop WREG from T
                      00330 popw macro
                      00331     moviw SP++
                      00332     endm
                      00333     
                      00334 ; swap WREG with 
                      00335 swapw  macro
                      00336     xorwf T
                      00337     xorwf T,W
                      00338     xorwf T
                      00339     endm
                      00340 
                      00341 ; drop n elements from stack
                      00342 dropn macro n
                      00343     addfsr T,n
                      00344     endm
                      00345 
                      00346 ; copy nth element of stack to WREG
                      00347 ;  n {0..31}, 0 is T   
                      00348 pickn macro n
                      00349     moviw n[SP]
                      00350     endm
                      00351    
                      00352 ; copy WREG to nth element of stack
                      00353 ; n {0..31}, 0 is T
                      00354 pokew macro n
                      00355     movwi n[SP]
                      00356     endm
                      00357     
                      00358     
                      00359 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00360 ;;    variables
                      00361 ;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362  
                      00363     
                      00364     udata 0x20 ; bank 0
0020                  00365 stack res 16 ; arguments stack
0030                  00366 seed res 2 ; prng seed used by lfsr16
                      00367  
                      00368 ; video display manipulate TRISA register
                      00369 ; to avoid banksel during video update
                      00370 ; place variables related to video in same bank as TRISA 
                      00371 v_array   udata 0xA0 ; bank 1
00A0                  00372 vbuffer res 6
00A6                  00373 temp3 res 1
00A7                  00374 row1 res 6; brick wall row1
00AD                  00375 fill1 res 2 
00AF                  00376 row2 res 6
00B5                  00377 fill2 res 2 
00B7                  00378 row3 res 6
00BD                  00379 fill3 res 2 
00BF                  00380 row4 res 6
00C5                  00381 fill4 res 2 
00C7                  00382 row5 res 6
00CD                  00383 fill5 res 2
00CF                  00384 row6 res 6
00D5                  00385 fill6 res 2 
00D7                  00386 fg_color res 1
00D8                  00387 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00388 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00389 ball_byte res 1 ; byte offset in vbuffer
00DC                  00390 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00391 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00392 balls res 1 ; number of recking balls available
                      00393  
                      00394 ; common 16 bytes RAM accessible whatever the selected bank 
                      00395     udata_shr 
0000                  00396 flags  res 1 ; boolean variables
0001                  00397 lcount res 1 ; video field line counter
0002                  00398 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00399 task res 1 ; where in video phase 
0004                  00400 temp1 res 1 ; temporary storage
0005                  00401 temp2 res 1 ; 
0006                  00402 paddle_pos res 1 
0007                  00403 ball_x res 1
0008                  00404 ball_y res 1
0009                  00405 ball_dx res 1
000A                  00406 ball_dy res 1
000B                  00407 ball_speed res 1
000C                  00408 score res 2 ; score stored in Binary Coded Decimal
000E                  00409 ball_timer res 1 
000F                  00410 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00411  
                      00412 ;; cpu reset entry point
                      00413 RES_VECT  CODE    0x0000            
0000   2???           00414     goto    initialize  ; go to beginning of program
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   0001           00415     reset   
0002   0001           00416     reset
0003   0001           00417     reset
                      00418 
                      00419 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00420 ; interrupt service routine triggered by PWM3 period rollover
                      00421 ; after initialization is done all processing in done inside 
                      00422 ; this interrupt.
                      00423 ; It is designed as a round robin scheduler.    
                      00424 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00425 ISR CODE 0x0004
0004                  00426 isr
0004   0A??           00427     incf lcount
0005   1903           00428     skpnz
0006   1400           00429     bsf flags, F_BIT8
0007   1900           00430     btfsc flags, F_SYNC
0008   2???           00431     goto task_switch
0009   002?           00432     banksel vbuffer
000A   01??           00433     clrf vbuffer
000B   01??           00434     clrf vbuffer+1
000C   01??           00435     clrf vbuffer+2
000D   01??           00436     clrf vbuffer+3
000E   01??           00437     clrf vbuffer+4
000F   01??           00438     clrf vbuffer+5
                      00439 ; generate chroma sync
                      00440     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18==6
                          M     call _6tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 18==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 18>7
  0004                    M     variable q=(18-5)/3
  0002                    M     variable r=(18-5)%3+1
0010   3004               M     movlw q
0011   2???               M     call _3ntcy
                          M     if (r==2)
0012   3???               M     bra $+1
                          M     exitm
                      00441     chroma_ref
0013   003B               M     banksel PWM1CON
0014   121B               M     bcf PWM1CON,POL
0015   0021           00442     banksel TRISA
0016   108C           00443     bcf TRISA,CHROMA
                      00444     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 16==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 16>7
  0003                    M     variable q=(16-5)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0003                    M     variable r=(16-5)%3+1
0017   3003               M     movlw q
0018   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0019   148C           00445     bsf TRISA,CHROMA
                      00446     porch_on
001A   0024               M     banksel WPUA
001B   160C               M     bsf WPUA,VIDEO_OUT
001C                  00447 task_switch ; round robin task scheduler   
001C   08??           00448     movfw task
001D   000B           00449     brw
001E   2???           00450     goto pre_vsync ;task 0, vertical pre-equalization pulses
001F   2???           00451     goto vsync ;task 1, vertical sync pulses
0020   2???           00452     goto post_vsync ;task 2, vertical post-equalization pulses
0021   2???           00453     goto vsync_end ;task 3, return to normal video line
0022   2???           00454     goto reserved_task; task 4, do nothing, reserved 
0023   2???           00455     goto sound ;task 5, check sound timer expiration
0024   2???           00456     goto user_input ;task 6,  read button and paddle
0025   2???           00457     goto move_ball ;task 7, move recking ball.
0026   2???           00458     goto collision ; task 8, check for collision with brick wall and paddle
0027   2???           00459     goto video_first ; task 9, wait FIRST_VIDEO line.
0028   2???           00460     goto draw_score ;task 10,  draw score en ball count
0029   2???           00461     goto draw_top_wall ;task 11,  draw top wall
002A   2???           00462     goto draw_sides ;task 12, draw play space
002B   2???           00463     goto draw_bricks  ;task 13, draw bricks rows
002C   2???           00464     goto draw_empty;task 14, draw empty space down to bottom
002D   2???           00465     goto draw_paddle ;task 15, draw paddle
002E   2???           00466     goto wait_field_end ;task 16, idle to end of video field
002F   0001           00467     reset ; error trap, task out of range
0030                  00468 isr_exit  
                      00469     porch_off
0030   0024               M     banksel WPUA
0031   120C               M     bcf WPUA,VIDEO_OUT
0032   003B           00470     banksel PWM3INTF
0033   103D           00471     bcf PWM3INTF,PRIF
0034   0009           00472     retfie
                      00473 
                      00474 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00475 ;;  all tasks routine are here            ;;
                      00476 ;;  each must be terminate by leave macro ;;    
                      00477 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00478     
                      00479 ; task 0, vertical synchronization pre equalization
                      00480 ; 6 half horizontal scan lines    
0035                  00481 pre_vsync
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035   08??           00482     movfw slice
0036   1903           00483     skpnz
0037   2???           00484     goto set_presync
                      00485     next_task 6
0038   0A??               M     incf slice
0039   3006               M     movlw 6
003A   02??               M     subwf slice,W
003B   1D03               M     skpz
                          M     leave
003C   2???               M     goto isr_exit
003D   01??               M     clrf slice
003E   0A??               M     incf task
                          M     leave
003F   2???               M     goto isr_exit
0040                  00486 set_presync    
0040   003B           00487     banksel PWM3DC
0041   3041           00488     movlw HEQUAL
0042   00B3           00489     movwf PWM3DCL
0043   01B4           00490     clrf PWM3DCH
0044   3003           00491     movlw high HALF_LINE
0045   00B6           00492     movwf PWM3PRH
0046   308D           00493     movlw low HALF_LINE
0047   00B5           00494     movwf PWM3PRL
0048   17BF           00495     bsf PWM3LDCON,7
0049   0A??           00496     incf slice
                      00497     leave
004A   2???               M     goto isr_exit
                      00498     
                      00499 ; task 1, vertical synchronization pulses
                      00500 ; 6 half horizontal scan lines    
004B                  00501 vsync 
004B   08??           00502     movfw slice
004C   1903           00503     skpnz
004D   2???           00504     goto set_vsync
                      00505     next_task 6
004E   0A??               M     incf slice
004F   3006               M     movlw 6
0050   02??               M     subwf slice,W
0051   1D03               M     skpz
                          M     leave
0052   2???               M     goto isr_exit
0053   01??               M     clrf slice
0054   0A??               M     incf task
                          M     leave
0055   2???               M     goto isr_exit
0056                  00506 set_vsync
0056   003B           00507     banksel PWM3DC
0057   3008           00508     movlw low VSYNC_PULSE
0058   00B3           00509     movwf PWM3DCL
0059   3003           00510     movlw high VSYNC_PULSE
005A   00B4           00511     movwf PWM3DCH
005B   17BF           00512     bsf PWM3LDCON,7
005C   0A??           00513     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00514     leave
005D   2???               M     goto isr_exit
                      00515     
                      00516 ; task 2, vertical synchronisation post equalization pulses
                      00517 ; 6 half horizontal scan lines    
005E                  00518 post_vsync
005E   08??           00519     movfw slice
005F   1903           00520     skpnz
0060   2???           00521     goto set_presync
0061   3006           00522     movlw 6
0062   02??           00523     subwf slice,W
0063   1903           00524     skpnz
0064   2???           00525     goto post_last
0065   0A??           00526     incf slice
                      00527     leave
0066   2???               M     goto isr_exit
0067                  00528 post_last    
0067   0A??           00529     incf task
0068   01??           00530     clrf slice
0069   1C80           00531     btfss flags, F_EVEN
                      00532     leave
006A   2???               M     goto isr_exit
                      00533     
                      00534 ; task 3, vertical synchronization completed, return to normal line
                      00535 ; rest horizonal line to its normal length.
                      00536 ; set lcount to 9.    
006B                  00537 vsync_end
006B   1100           00538     bcf flags, F_SYNC
006C   003B           00539     banksel PWM3DC
006D   3086           00540     movlw HSYNC
006E   00B3           00541     movwf PWM3DCL
006F   01B4           00542     clrf PWM3DCH
0070   3007           00543     movlw high HPERIOD
0071   00B6           00544     movwf PWM3PRH
0072   301B           00545     movlw low HPERIOD
0073   00B5           00546     movwf PWM3PRL
0074   17BF           00547     bsf PWM3LDCON,7
0075   0A??           00548     incf task
0076   36??           00549     lsrf lcount
                      00550     leave
0077   2???               M     goto isr_exit
                      00551 
                      00552 ; task 4, reserved slot
0078                  00553 reserved_task
0078   0A??           00554     incf task
                      00555     leave
0079   2???               M     goto isr_exit
                      00556     
                      00557 ; task 5,  sound timer
                      00558 ; if sound active process it.    
007A                  00559 sound
007A   0A??           00560     incf task
007B   1D80           00561     btfss flags, F_SOUND
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00562     leave
007C   2???               M     goto isr_exit
007D   1A80           00563     btfsc flags, F_PAUSE
007E   2???           00564     call sound_fx1
007F   002?           00565     banksel sound_timer
0080   0B??           00566     decfsz sound_timer
                      00567     leave
0081   2???               M     goto isr_exit
0082   1180           00568     bcf flags, F_SOUND
0083   003B           00569     banksel PWM2CON
0084   132B           00570     bcf PWM2CON,OE
0085   13AB           00571     bcf PWM2CON,EN
                      00572     leave
0086   2???               M     goto isr_exit
                      00573 
                      00574 ; sound effect, low pitch to high-pitch    
0087                  00575 sound_fx1
0087   1D80           00576     btfss flags, F_SOUND
0088   0008           00577     return
0089   1C80           00578     btfss flags, F_EVEN
008A   0008           00579     return
008B   003B           00580     banksel PWM2CON
008C   36A6           00581     lsrf PWM2PRH
008D   0CA5           00582     rrf PWM2PRL
008E   36A4           00583     lsrf PWM2DCH
008F   0CA3           00584     rrf PWM2DCL
0090   17AF           00585     bsf PWM2LDCON,LDA
0091   0008           00586     return
                      00587     
                      00588 ; sound effect, high pitch to low-pitch    
0092                  00589 sound_fx2
0092   1D80           00590     btfss flags, F_SOUND
0093   0008           00591     return
0094   1C80           00592     btfss flags, F_EVEN
0095   0008           00593     return
0096   003B           00594     banksel PWM2CON
0097   35A5           00595     lslf PWM2PRL
0098   0DA6           00596     rlf PWM2PRH
0099   35A3           00597     lslf PWM2DCL
009A   0DA4           00598     rlf PWM2DCH
009B   17AF           00599     bsf PWM2LDCON,LDA
009C   0008           00600     return
                      00601     
                      00602 ; initialize sound generation.
                      00603 ; input:
                      00604 ;   T = duration
                      00605 ;   WREG = index in frequency table    
                      00606 ; outpout:
                      00607 ;   none    
009D                  00608 sound_init
                      00609     pushw  ; ( d i -- )
009D   0019               M     movwi --SP
009E   1580           00610     bsf flags, F_SOUND
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009F   003B           00611     banksel PWM2CON
00A0   0800           00612     movfw T
00A1   2???           00613     call frequency
00A2   00A6           00614     movwf PWM2PRH
00A3   0A00           00615     incf T,W
00A4   2???           00616     call frequency
00A5   00A5           00617     movwf PWM2PRL
00A6   3626           00618     lsrf PWM2PRH,W
00A7   00A4           00619     movwf PWM2DCH
00A8   0C25           00620     rrf PWM2PRL,W
00A9   00A3           00621     movwf PWM2DCL
00AA   17AF           00622     bsf PWM2LDCON,LDA
00AB   172B           00623     bsf PWM2CON,OE
00AC   17AB           00624     bsf PWM2CON,EN
00AD   002?           00625     banksel sound_timer
                      00626     pickn 1
00AE   3F01               M     moviw 1[SP]
00AF   00??           00627     movwf sound_timer
                      00628     dropn 2
00B0   3102               M     addfsr T,2
00B1   0008           00629     return
                      00630     
                      00631 ;task 6, read button and paddle position
00B2                  00632 user_input
00B2   0A??           00633     incf task
00B3   2???           00634     call read_paddle
00B4   1B00           00635     btfsc flags, F_OVER
00B5   3???           00636     bra game_over
00B6   1A00           00637     btfsc flags,F_START
00B7   3???           00638     bra game_running
                      00639 ; game not running
00B8   2???           00640     call read_button
00B9   1D03           00641     skpz
00BA   3???           00642     bra skip_2_tasks
                      00643 ; start game    
00BB   2???           00644     call game_init
                      00645     leave
00BC   2???               M     goto isr_exit
00BD                  00646 game_running
00BD   1E80           00647     btfss flags, F_PAUSE
                      00648     leave
00BE   2???               M     goto isr_exit
                      00649 ; game on pause    
00BF                  00650 wait_trigger
00BF   2???           00651     call read_button
00C0   1D03           00652     skpz
00C1   3???           00653     bra skip_2_tasks
00C2   1280           00654     bcf flags,F_PAUSE
00C3   2???           00655     call set_ball_dx
                      00656     leave
00C4   2???               M     goto isr_exit
                      00657 ; game over
00C5                  00658 game_over
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C5   2???           00659     call read_button
00C6   1D03           00660     skpz
00C7   3???           00661     bra skip_2_tasks
00C8   2???           00662     call game_init
                      00663 ;    incf task
                      00664     leave
00C9   2???               M     goto isr_exit
                      00665 ; while game not running skip 'move_ball' and 'collision' tasks    
00CA                  00666 skip_2_tasks
00CA   08??           00667     movfw paddle_pos
00CB   3E02           00668     addlw 2
00CC   00??           00669     movwf ball_x
00CD   2???           00670     call compute_ball_mask
00CE   0A??           00671     incf task ; skip move_ball
00CF   0A??           00672     incf task ; skip collision
00D0   2???           00673     call lfsr16
                      00674     leave
00D1   2???               M     goto isr_exit
                      00675 
                      00676     
00D2                  00677 read_button
00D2   0020           00678     banksel PORTA
00D3   080C           00679     movfw PORTA
00D4   3908           00680     andlw 1<<START_BTN
00D5   0008           00681     return
                      00682     
00D6                  00683 read_paddle
00D6   003B           00684     banksel PWM2CON
00D7   13AB           00685     bcf PWM2CON,EN
00D8   0021           00686     banksel TRISA
00D9   140C           00687     bsf TRISA, PADDLE
00DA   0021           00688     banksel ADCON0
00DB   3003           00689     movlw 3
00DC   009D           00690     movwf ADCON0
00DD   189D           00691     btfsc ADCON0,NOT_DONE
00DE   2???           00692     goto $-1
00DF   3010           00693     movlw 4<<CHS0
00E0   009D           00694     movwf ADCON0
00E1   361C           00695     lsrf ADRESH,W
00E2   00??           00696     movwf paddle_pos
                      00697     ;lsrf paddle_pos
00E3   302A           00698     movlw PADDLE_LIMIT
00E4   02??           00699     subwf paddle_pos,W
00E5   302A           00700     movlw PADDLE_LIMIT
00E6   1803           00701     skpnc
00E7   00??           00702     movwf paddle_pos
00E8   1D80           00703     btfss flags, F_SOUND
00E9   3???           00704     bra $+3
00EA   003B           00705     banksel PWM2CON
00EB   17AB           00706     bsf PWM2CON,EN
00EC   0021           00707     banksel TRISA
00ED   100C           00708     bcf TRISA, AUDIO
                      00709 ; create paddle mask
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EE   2???           00710     call compute_paddle_mask
00EF   0008           00711     return
                      00712 
                      00713 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00714 ; paddle_byte=paddle_pos/8
                      00715 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00F0                  00716 compute_paddle_mask
00F0   36??           00717     lsrf paddle_pos,W
00F1   3689           00718     lsrf WREG
00F2   3689           00719     lsrf WREG
00F3   00??           00720     movwf paddle_byte
00F4   30FC           00721     movlw PADDLE_MASK
00F5   00??           00722     movwf paddle_mask
00F6   01??           00723     clrf paddle_mask+1
00F7   3007           00724     movlw 7
00F8   05??           00725     andwf paddle_pos,W
00F9   1903           00726     skpnz
00FA   0008           00727     return
00FB   36??           00728     lsrf paddle_mask
00FC   0C??           00729     rrf paddle_mask+1
00FD   0B89           00730     decfsz WREG
00FE   3???           00731     bra $-3
00FF   0008           00732     return
                      00733     
                      00734     
                      00735     
                      00736     
                      00737 ; task 7, move recking ball.   
0100                  00738 move_ball
0100   0B??           00739     decfsz ball_timer
0101   3???           00740     bra move_ball_exit
0102   08??           00741     movfw ball_speed
0103   00??           00742     movwf ball_timer
0104   08??           00743     movfw ball_dx
0105   07??           00744     addwf ball_x
0106   1F80           00745     btfss ball_dx,7
0107   3???           00746     bra right_bound
0108                  00747 left_bound
0108   1F80           00748     btfss ball_x,7
0109   3???           00749     bra move_y
010A   01??           00750     clrf ball_x
010B   09??           00751     comf ball_dx
010C   0A??           00752     incf ball_dx
010D   3???           00753     bra move_y
010E                  00754 right_bound    
010E   08??           00755     movfw ball_x
010F   3C2E           00756     sublw BALL_RIGHT_BOUND
0110   1803           00757     skpnc
0111   3???           00758     bra move_y
0112   03??           00759     decf ball_x
0113   09??           00760     comf ball_dx
0114   0A??           00761     incf ball_dx
0115                  00762 move_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0115   08??           00763     movfw ball_dy
0116   07??           00764     addwf ball_y
0117   1F80           00765     btfss ball_dy,7
0118   3???           00766     bra bottom_bound
0119                  00767 top_bound    
0119   303A           00768     movlw BALL_TOP_BOUND
011A   02??           00769     subwf ball_y,W
011B   1803           00770     skpnc
011C   3???           00771     bra move_ball_exit
011D   303A           00772     movlw BALL_TOP_BOUND
011E   00??           00773     movwf ball_y
011F   09??           00774     comf ball_dy
0120   0A??           00775     incf ball_dy
0121   3???           00776     bra move_ball_exit
0122                  00777 bottom_bound
0122   08??           00778     movfw ball_y
0123   3CE9           00779     sublw PADDLE_Y-BALL_HEIGHT-1
0124   1803           00780     skpnc
0125   3???           00781     bra move_ball_exit
0126   2???           00782     call paddle_bounce
0127   1803           00783     skpnc
0128   3???           00784     bra move_ball_exit
0129                  00785 ball_lost
0129   1680           00786     bsf flags, F_PAUSE ; pause game
012A   002?           00787     banksel balls
012B   0B??           00788     decfsz balls
012C   3???           00789     bra $+3
012D   1200           00790     bcf flags, F_START
012E   1700           00791     bsf flags, F_OVER
012F   3002           00792     movlw 2
0130   07??           00793     addwf paddle_pos,W
0131   00??           00794     movwf ball_x
0132   30EB           00795     movlw PADDLE_Y-BALL_HEIGHT+1
0133   00??           00796     movwf ball_y
0134   30FC           00797     movlw -4
0135   00??           00798     movwf ball_dy
0136   3008           00799     movlw 8
                      00800     pushw
0137   0019               M     movwi --SP
0138   3002           00801     movlw 2
0139   2???           00802     call sound_init
013A   0A??           00803     incf task ; skip collision task
013B                  00804 move_ball_exit
013B   2???           00805     call compute_ball_mask
013C   0A??           00806     incf task
                      00807     leave
013D   2???               M     goto isr_exit
                      00808 
                      00809 ; check if ball is bouncing on paddle
                      00810 ; input:
                      00811 ;   none
                      00812 ; output:
                      00813 ;   C set if bounced    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013E                  00814 paddle_bounce
                      00815 ; if ball_x over paddle bounce ball
013E   08??           00816     movfw paddle_pos
                      00817     pushw
013F   0019               M     movwi --SP
0140   3E06           00818     addlw PADDLE_WIDTH
                      00819     pushw
0141   0019               M     movwi --SP
0142   08??           00820     movfw ball_x
0143   2???           00821     call between
0144   1803           00822     skpnc
0145   3???           00823     bra bounced
0146   1003           00824     bcf STATUS,C
0147   0008           00825     return
0148                  00826 bounced
0148   30EA           00827     movlw PADDLE_Y-BALL_HEIGHT
0149   00??           00828     movwf ball_y
014A   09??           00829     comf ball_dy
014B   0A??           00830     incf ball_dy
                      00831 ; bounce direction depend where paddle was hit.    
014C   08??           00832     movfw ball_x
014D   02??           00833     subwf paddle_pos,W
014E   1903           00834     skpnz
014F   3???           00835     bra bounce_left
0150   3004           00836     movlw PADDLE_WIDTH-2
0151   07??           00837     addwf paddle_pos,W
0152   02??           00838     subwf ball_x,W
0153   3001           00839     movlw 1
0154   1803           00840     skpnc
0155   00??           00841     movwf ball_dx ; bounce right
0156   3???           00842     bra paddle_sound
0157                  00843 bounce_left
0157   30FF           00844     movlw -1
0158   00??           00845     movwf ball_dx
0159                  00846 paddle_sound    
0159   3002           00847     movlw 2
                      00848     pushw
015A   0019               M     movwi --SP
015B   2???           00849     call sound_init
                      00850 ; skip collision task
015C   0A??           00851     incf task
                      00852 ; report bounce    
015D   1403           00853     bsf STATUS,C
015E   0008           00854     return
                      00855     
                      00856     
                      00857 ; compute ball_mask and ball_byte
                      00858 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00859 ; ball_byte= ball_x/8     
015F                  00860 compute_ball_mask
015F   002?           00861     banksel vbuffer
0160   36??           00862     lsrf ball_x,W
0161   3689           00863     lsrf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0162   3689           00864     lsrf WREG
0163   00??           00865     movwf ball_byte
0164   30C0           00866     movlw BALL_MASK
0165   00??           00867     movwf ball_mask
0166   01??           00868     clrf ball_mask+1
0167   3007           00869     movlw 7
0168   05??           00870     andwf ball_x,W
0169   1903           00871     skpnz
016A   0008           00872     return
016B   36??           00873     lsrf ball_mask
016C   0C??           00874     rrf ball_mask+1
016D   0B89           00875     decfsz WREG
016E   3???           00876     bra $-3
016F   0008           00877     return
                      00878     
                      00879 ; task 8, collision detection
0170                  00880 collision
0170   304A           00881     movlw ROW1_Y
                      00882     pushw
0171   0019               M     movwi --SP
0172   307A           00883     movlw ROW6_Y+BRICK_HEIGHT
                      00884     pushw
0173   0019               M     movwi --SP
0174   08??           00885     movfw ball_y
0175   2???           00886     call between
0176   1C03           00887     skpc
0177   3???           00888     bra collision_exit
0178   002?           00889     banksel vbuffer
0179   0187           00890     clrf FSR1H
017A   30??           00891     movlw low row1
017B   0086           00892     movwf FSR1L
017C   304A           00893     movlw ROW1_Y
017D   02??           00894     subwf ball_y,W
017E   39F8           00895     andlw 0xf8
                      00896     pushw
017F   0019               M     movwi --SP
0180   0786           00897     addwf FSR1L
0181   08??           00898     movfw ball_byte
0182   0786           00899     addwf FSR1L
0183   08??           00900     movfw ball_mask
0184   0501           00901     andwf INDF1,W
0185   1903           00902     skpnz
0186   3???           00903     bra collision_exit
0187   300F           00904     movlw 0x0f
0188   1980           00905     btfsc ball_x,3
0189   0E89           00906     swapf WREG
018A   0581           00907     andwf INDF1
018B   09??           00908     comf ball_dy
018C   0A??           00909     incf ball_dy
                      00910     popw
018D   0012               M     moviw SP++
018E   3689           00911     lsrf WREG
018F   3689           00912     lsrf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0190   000B           00913     brw
0191   3009           00914     movlw 9
0192   3???           00915     bra add_score
0193   3009           00916     movlw 9
0194   3???           00917     bra add_score
0195   3007           00918     movlw 7
0196   3???           00919     bra add_score
0197   3005           00920     movlw 5
0198   3???           00921     bra add_score
0199   3003           00922     movlw 3
019A   3???           00923     bra add_score
019B   3001           00924     movlw 1
019C                  00925 add_score    
019C   2???           00926     call inc_score
019D                  00927 pong_sound
019D   3001           00928     movlw 1
                      00929     pushw
019E   0019               M     movwi --SP
019F   3000           00930     movlw 0
01A0   2???           00931     call sound_init
01A1                  00932 collision_exit
01A1   0A??           00933     incf task
                      00934     leave
01A2   2???               M     goto isr_exit
                      00935 
                      00936     
                      00937     
                      00938 ; check if  lb <= x < hb
                      00939 ; 13 tcy    
                      00940 ; input:
                      00941 ;    WREG  x
                      00942 ;    stack ( lb hb -- )     
                      00943 ; output:
                      00944 ;   Carry bit set if true    
01A3                  00945 between
01A3   00??           00946     movwf temp2
                      00947     pickn 1
01A4   3F01               M     moviw 1[SP]
01A5   02??           00948     subwf temp2,W
01A6   1C03           00949     skpc
01A7   3???           00950     bra between_exit2
01A8   0800           00951     movfw T
01A9   02??           00952     subwf temp2
01AA   0803           00953     movfw STATUS
01AB   3A01           00954     xorlw 1
01AC   0083           00955     movwf STATUS
01AD                  00956 between_exit    
                      00957     dropn 2
01AD   3102               M     addfsr T,2
01AE   0008           00958     return  ; 13 tcy
                      00959 ; add tcy to have constant tcy for this routine whatever the path    
01AF                  00960 between_exit2
01AF   3???           00961     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B0   3???           00962     bra between_exit
                      00963     
                      00964 ; task 9, wait for first video line
01B1                  00965 video_first
01B1   301D           00966     movlw FIRST_VIDEO_LINE-1
01B2   02??           00967     subwf lcount,W
01B3   1D03           00968     skpz
                      00969     leave
01B4   2???               M     goto isr_exit
01B5   01??           00970     clrf slice
01B6   0A??           00971     incf task
                      00972     leave
01B7   2???               M     goto isr_exit
                      00973    
                      00974 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00975 ; The following tasks are responsible to render video display.
                      00976 ; Each video line must be completed by setting color to black.
                      00977 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00978 
                      00979 ; check if ball is visible on this scan line    
                      00980 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT    
                      00981 ;  22 tcy   
                      00982 ;  input:
                      00983 ;       none    
                      00984 ;  output:
                      00985 ;       C set if true   
01B8                  00986 ball_visible
01B8   08??           00987     movfw ball_y
                      00988     pushw
01B9   0019               M     movwi --SP
01BA   3E08           00989     addlw BALL_HEIGHT
                      00990     pushw
01BB   0019               M     movwi --SP
01BC   08??           00991     movfw lcount
01BD   2???           00992     call between ; +13 tcy
01BE   0008           00993     return
                      00994     
                      00995     
                      00996     
01BF                  00997 display_vbuffer
                      00998     display_byte 0
                          M     display_bit 0
01BF   35??               M     lslf vbuffer+0
01C0   301A               M     movlw BLACK
01C1   1803               M     skpnc
01C2   08??               M     movfw fg_color
01C3   008C               M     movwf TRISA
                          M     display_bit 0
01C4   35??               M     lslf vbuffer+0
01C5   301A               M     movlw BLACK
01C6   1803               M     skpnc
01C7   08??               M     movfw fg_color
01C8   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 0
01C9   35??               M     lslf vbuffer+0
01CA   301A               M     movlw BLACK
01CB   1803               M     skpnc
01CC   08??               M     movfw fg_color
01CD   008C               M     movwf TRISA
                          M     display_bit 0
01CE   35??               M     lslf vbuffer+0
01CF   301A               M     movlw BLACK
01D0   1803               M     skpnc
01D1   08??               M     movfw fg_color
01D2   008C               M     movwf TRISA
                          M     display_bit 0
01D3   35??               M     lslf vbuffer+0
01D4   301A               M     movlw BLACK
01D5   1803               M     skpnc
01D6   08??               M     movfw fg_color
01D7   008C               M     movwf TRISA
                          M     display_bit 0
01D8   35??               M     lslf vbuffer+0
01D9   301A               M     movlw BLACK
01DA   1803               M     skpnc
01DB   08??               M     movfw fg_color
01DC   008C               M     movwf TRISA
                          M     display_bit 0
01DD   35??               M     lslf vbuffer+0
01DE   301A               M     movlw BLACK
01DF   1803               M     skpnc
01E0   08??               M     movfw fg_color
01E1   008C               M     movwf TRISA
                          M     display_bit 0
01E2   35??               M     lslf vbuffer+0
01E3   301A               M     movlw BLACK
01E4   1803               M     skpnc
01E5   08??               M     movfw fg_color
01E6   008C               M     movwf TRISA
                      00999     display_byte 1
                          M     display_bit 1
01E7   35??               M     lslf vbuffer+1
01E8   301A               M     movlw BLACK
01E9   1803               M     skpnc
01EA   08??               M     movfw fg_color
01EB   008C               M     movwf TRISA
                          M     display_bit 1
01EC   35??               M     lslf vbuffer+1
01ED   301A               M     movlw BLACK
01EE   1803               M     skpnc
01EF   08??               M     movfw fg_color
01F0   008C               M     movwf TRISA
                          M     display_bit 1
01F1   35??               M     lslf vbuffer+1
01F2   301A               M     movlw BLACK
01F3   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F4   08??               M     movfw fg_color
01F5   008C               M     movwf TRISA
                          M     display_bit 1
01F6   35??               M     lslf vbuffer+1
01F7   301A               M     movlw BLACK
01F8   1803               M     skpnc
01F9   08??               M     movfw fg_color
01FA   008C               M     movwf TRISA
                          M     display_bit 1
01FB   35??               M     lslf vbuffer+1
01FC   301A               M     movlw BLACK
01FD   1803               M     skpnc
01FE   08??               M     movfw fg_color
01FF   008C               M     movwf TRISA
                          M     display_bit 1
0200   35??               M     lslf vbuffer+1
0201   301A               M     movlw BLACK
0202   1803               M     skpnc
0203   08??               M     movfw fg_color
0204   008C               M     movwf TRISA
                          M     display_bit 1
0205   35??               M     lslf vbuffer+1
0206   301A               M     movlw BLACK
0207   1803               M     skpnc
0208   08??               M     movfw fg_color
0209   008C               M     movwf TRISA
                          M     display_bit 1
020A   35??               M     lslf vbuffer+1
020B   301A               M     movlw BLACK
020C   1803               M     skpnc
020D   08??               M     movfw fg_color
020E   008C               M     movwf TRISA
                      01000     display_byte 2
                          M     display_bit 2
020F   35??               M     lslf vbuffer+2
0210   301A               M     movlw BLACK
0211   1803               M     skpnc
0212   08??               M     movfw fg_color
0213   008C               M     movwf TRISA
                          M     display_bit 2
0214   35??               M     lslf vbuffer+2
0215   301A               M     movlw BLACK
0216   1803               M     skpnc
0217   08??               M     movfw fg_color
0218   008C               M     movwf TRISA
                          M     display_bit 2
0219   35??               M     lslf vbuffer+2
021A   301A               M     movlw BLACK
021B   1803               M     skpnc
021C   08??               M     movfw fg_color
021D   008C               M     movwf TRISA
                          M     display_bit 2
021E   35??               M     lslf vbuffer+2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021F   301A               M     movlw BLACK
0220   1803               M     skpnc
0221   08??               M     movfw fg_color
0222   008C               M     movwf TRISA
                          M     display_bit 2
0223   35??               M     lslf vbuffer+2
0224   301A               M     movlw BLACK
0225   1803               M     skpnc
0226   08??               M     movfw fg_color
0227   008C               M     movwf TRISA
                          M     display_bit 2
0228   35??               M     lslf vbuffer+2
0229   301A               M     movlw BLACK
022A   1803               M     skpnc
022B   08??               M     movfw fg_color
022C   008C               M     movwf TRISA
                          M     display_bit 2
022D   35??               M     lslf vbuffer+2
022E   301A               M     movlw BLACK
022F   1803               M     skpnc
0230   08??               M     movfw fg_color
0231   008C               M     movwf TRISA
                          M     display_bit 2
0232   35??               M     lslf vbuffer+2
0233   301A               M     movlw BLACK
0234   1803               M     skpnc
0235   08??               M     movfw fg_color
0236   008C               M     movwf TRISA
                      01001     display_byte 3
                          M     display_bit 3
0237   35??               M     lslf vbuffer+3
0238   301A               M     movlw BLACK
0239   1803               M     skpnc
023A   08??               M     movfw fg_color
023B   008C               M     movwf TRISA
                          M     display_bit 3
023C   35??               M     lslf vbuffer+3
023D   301A               M     movlw BLACK
023E   1803               M     skpnc
023F   08??               M     movfw fg_color
0240   008C               M     movwf TRISA
                          M     display_bit 3
0241   35??               M     lslf vbuffer+3
0242   301A               M     movlw BLACK
0243   1803               M     skpnc
0244   08??               M     movfw fg_color
0245   008C               M     movwf TRISA
                          M     display_bit 3
0246   35??               M     lslf vbuffer+3
0247   301A               M     movlw BLACK
0248   1803               M     skpnc
0249   08??               M     movfw fg_color
024A   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 3
024B   35??               M     lslf vbuffer+3
024C   301A               M     movlw BLACK
024D   1803               M     skpnc
024E   08??               M     movfw fg_color
024F   008C               M     movwf TRISA
                          M     display_bit 3
0250   35??               M     lslf vbuffer+3
0251   301A               M     movlw BLACK
0252   1803               M     skpnc
0253   08??               M     movfw fg_color
0254   008C               M     movwf TRISA
                          M     display_bit 3
0255   35??               M     lslf vbuffer+3
0256   301A               M     movlw BLACK
0257   1803               M     skpnc
0258   08??               M     movfw fg_color
0259   008C               M     movwf TRISA
                          M     display_bit 3
025A   35??               M     lslf vbuffer+3
025B   301A               M     movlw BLACK
025C   1803               M     skpnc
025D   08??               M     movfw fg_color
025E   008C               M     movwf TRISA
                      01002     display_byte 4
                          M     display_bit 4
025F   35??               M     lslf vbuffer+4
0260   301A               M     movlw BLACK
0261   1803               M     skpnc
0262   08??               M     movfw fg_color
0263   008C               M     movwf TRISA
                          M     display_bit 4
0264   35??               M     lslf vbuffer+4
0265   301A               M     movlw BLACK
0266   1803               M     skpnc
0267   08??               M     movfw fg_color
0268   008C               M     movwf TRISA
                          M     display_bit 4
0269   35??               M     lslf vbuffer+4
026A   301A               M     movlw BLACK
026B   1803               M     skpnc
026C   08??               M     movfw fg_color
026D   008C               M     movwf TRISA
                          M     display_bit 4
026E   35??               M     lslf vbuffer+4
026F   301A               M     movlw BLACK
0270   1803               M     skpnc
0271   08??               M     movfw fg_color
0272   008C               M     movwf TRISA
                          M     display_bit 4
0273   35??               M     lslf vbuffer+4
0274   301A               M     movlw BLACK
0275   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0276   08??               M     movfw fg_color
0277   008C               M     movwf TRISA
                          M     display_bit 4
0278   35??               M     lslf vbuffer+4
0279   301A               M     movlw BLACK
027A   1803               M     skpnc
027B   08??               M     movfw fg_color
027C   008C               M     movwf TRISA
                          M     display_bit 4
027D   35??               M     lslf vbuffer+4
027E   301A               M     movlw BLACK
027F   1803               M     skpnc
0280   08??               M     movfw fg_color
0281   008C               M     movwf TRISA
                          M     display_bit 4
0282   35??               M     lslf vbuffer+4
0283   301A               M     movlw BLACK
0284   1803               M     skpnc
0285   08??               M     movfw fg_color
0286   008C               M     movwf TRISA
                      01003     display_byte 5
                          M     display_bit 5
0287   35??               M     lslf vbuffer+5
0288   301A               M     movlw BLACK
0289   1803               M     skpnc
028A   08??               M     movfw fg_color
028B   008C               M     movwf TRISA
                          M     display_bit 5
028C   35??               M     lslf vbuffer+5
028D   301A               M     movlw BLACK
028E   1803               M     skpnc
028F   08??               M     movfw fg_color
0290   008C               M     movwf TRISA
                          M     display_bit 5
0291   35??               M     lslf vbuffer+5
0292   301A               M     movlw BLACK
0293   1803               M     skpnc
0294   08??               M     movfw fg_color
0295   008C               M     movwf TRISA
                          M     display_bit 5
0296   35??               M     lslf vbuffer+5
0297   301A               M     movlw BLACK
0298   1803               M     skpnc
0299   08??               M     movfw fg_color
029A   008C               M     movwf TRISA
                          M     display_bit 5
029B   35??               M     lslf vbuffer+5
029C   301A               M     movlw BLACK
029D   1803               M     skpnc
029E   08??               M     movfw fg_color
029F   008C               M     movwf TRISA
                          M     display_bit 5
02A0   35??               M     lslf vbuffer+5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A1   301A               M     movlw BLACK
02A2   1803               M     skpnc
02A3   08??               M     movfw fg_color
02A4   008C               M     movwf TRISA
                          M     display_bit 5
02A5   35??               M     lslf vbuffer+5
02A6   301A               M     movlw BLACK
02A7   1803               M     skpnc
02A8   08??               M     movfw fg_color
02A9   008C               M     movwf TRISA
                          M     display_bit 5
02AA   35??               M     lslf vbuffer+5
02AB   301A               M     movlw BLACK
02AC   1803               M     skpnc
02AD   08??               M     movfw fg_color
02AE   008C               M     movwf TRISA
02AF   0008           01004     return
                      01005  
                      01006 ; task 10, draw score en ball count
                      01007 ;  lcount 30-49    
02B0                  01008 draw_score 
02B0   0021           01009     banksel TRISA
02B1   08??           01010     movfw slice
02B2   3689           01011     lsrf WREG
02B3   3689           01012     lsrf WREG
                      01013     pushw
02B4   0019               M     movwi --SP
02B5   300F           01014     movlw 0xf
02B6   05??           01015     andwf score,W
02B7   2???           01016     call digits
02B8   04??           01017     iorwf vbuffer
02B9   0E??           01018     swapf score+1,W
02BA   390F           01019     andlw 0xf
02BB   2???           01020     call digits
02BC   0E89           01021     swapf WREG
02BD   04??           01022     iorwf vbuffer
02BE   300F           01023     movlw 0xf
02BF   05??           01024     andwf score+1,W
02C0   2???           01025     call digits
02C1   04??           01026     iorwf vbuffer+1
02C2   08??           01027     movfw balls
02C3   2???           01028     call digits
02C4   04??           01029     iorwf vbuffer+5
                      01030     tdelay 9
                          M     if 9==0
                          M     exitm
                          M     endif
                          M     if 9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 9==2
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 9>7
  0001                    M     variable q=(9-5)/3
  0002                    M     variable r=(9-5)%3+1
02C5   3001               M     movlw q
02C6   2???               M     call _3ntcy
                          M     if (r==2)
02C7   3???               M     bra $+1
                          M     exitm
02C8   2???           01031     call display_vbuffer
                      01032     dropn 1
02C9   3101               M     addfsr T,1
02CA                  01033 score_exit
                      01034     next_task 5*4
02CA   0A??               M     incf slice
02CB   3014               M     movlw 5*4
02CC   02??               M     subwf slice,W
02CD   1D03               M     skpz
                          M     leave
02CE   2???               M     goto isr_exit
02CF   01??               M     clrf slice
02D0   0A??               M     incf task
                          M     leave
02D1   2???               M     goto isr_exit
                      01035 
                      01036     
                      01037 ; task 11,  draw top wall, 8 screen lines 
                      01038 ; lcount 50-57    
02D2                  01039 draw_top_wall
02D2   0021           01040     banksel TRISA
02D3   09??           01041     comf vbuffer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4   09??           01042     comf vbuffer+1
02D5   09??           01043     comf vbuffer+2
02D6   09??           01044     comf vbuffer+3
02D7   09??           01045     comf vbuffer+4
02D8   09??           01046     comf vbuffer+5
02D9   300A           01047     movlw WHITE
02DA   00??           01048     movwf fg_color
                      01049     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>7
  0015                    M     variable q=(LEFT_MARGIN-5)/3
  0002                    M     variable r=(LEFT_MARGIN-5)%3+1
02DB   3015               M     movlw q
02DC   2???               M     call _3ntcy
                          M     if (r==2)
02DD   3???               M     bra $+1
                          M     exitm
                      01050     white
02DE   300A               M     movlw WHITE
02DF   008C               M     movwf TRISA
02E0   2???           01051     call display_vbuffer
                      01052     white
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E1   300A               M     movlw WHITE
02E2   008C               M     movwf TRISA
                      01053     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02E3   2???               M     call _4tcy
                          M     exitm
                      01054     black
02E4   301A               M     movlw BLACK
02E5   008C               M     movwf TRISA
                      01055     next_task BRICK_HEIGHT
02E6   0A??               M     incf slice
02E7   3008               M     movlw BRICK_HEIGHT
02E8   02??               M     subwf slice,W
02E9   1D03               M     skpz
                          M     leave
02EA   2???               M     goto isr_exit
02EB   01??               M     clrf slice
02EC   0A??               M     incf task
                          M     leave
02ED   2???               M     goto isr_exit
                      01056 
                      01057 ; put ball mask in video_buffer
                      01058 ; 38 tcy    
02EE                  01059 put_ball_in_buffer
02EE   2???           01060     call ball_visible ; +22tcy
02EF   1C03           01061     skpc
02F0   3???           01062     bra kill_time
02F1   0187           01063     clrf FSR1H
02F2   30??           01064     movlw low vbuffer
02F3   0086           01065     movwf FSR1L
02F4   08??           01066     movfw ball_byte
02F5   0786           01067     addwf FSR1L
02F6   08??           01068     movfw ball_mask
02F7   001E           01069     movwi FSR1++
02F8   08??           01070     movfw ball_mask+1
02F9   3FC0           01071     movwi [FSR1]
02FA   0008           01072     return ; 37 tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FB                  01073 kill_time 
                      01074     tdelay 8
                          M     if 8==0
                          M     exitm
                          M     endif
                          M     if 8==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 8==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 8==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 8==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 8==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 8==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 8==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 8>7
  0001                    M     variable q=(8-5)/3
  0001                    M     variable r=(8-5)%3+1
02FB   3001               M     movlw q
02FC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02FD   0000               M     nop
                          M     exitm
02FE   0008           01075     return ; 37 tcy
                      01076     
                      01077 ; task 12,  only on even field draw vertical sides and ball.
                      01078 ; lcount 58-73    
02FF                  01079 draw_sides 
02FF   0021           01080     banksel TRISA
0300   2???           01081     call put_ball_in_buffer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01082     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31>7
  000B                    M     variable q=(LEFT_MARGIN-31-5)/3
  0001                    M     variable r=(LEFT_MARGIN-31-5)%3+1
0301   300B               M     movlw q
0302   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0303   0000               M     nop
                          M     exitm
                      01083     white
0304   300A               M     movlw WHITE
0305   008C               M     movwf TRISA
0306   2???           01084     call display_vbuffer
                      01085     white
0307   300A               M     movlw WHITE
0308   008C               M     movwf TRISA
                      01086     tdelay BORDER_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0309   2???               M     call _4tcy
                          M     exitm
                      01087     black
030A   301A               M     movlw BLACK
030B   008C               M     movwf TRISA
                      01088     next_task 2*BRICK_HEIGHT
030C   0A??               M     incf slice
030D   3010               M     movlw 2*BRICK_HEIGHT
030E   02??               M     subwf slice,W
030F   1D03               M     skpz
                          M     leave
0310   2???               M     goto isr_exit
0311   01??               M     clrf slice
0312   0A??               M     incf task
                          M     leave
0313   2???               M     goto isr_exit
                      01089  
0314                  01090 copy_row
0314   0016           01091     moviw FSR1++
0315   04??           01092     iorwf vbuffer
0316   0016           01093     moviw FSR1++
0317   04??           01094     iorwf vbuffer+1
0318   0016           01095     moviw FSR1++
0319   04??           01096     iorwf vbuffer+2
031A   0016           01097     moviw FSR1++
031B   04??           01098     iorwf vbuffer+3
031C   0016           01099     moviw FSR1++
031D   04??           01100     iorwf vbuffer+4
031E   0016           01101     moviw FSR1++
031F   04??           01102     iorwf vbuffer+5
0320   0008           01103     return    
                      01104 
0321                  01105 rows_common
0321   00??           01106     movwf fg_color
0322   0187           01107     clrf FSR1H
0323   2???           01108     call copy_row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01109     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0324   2???               M     call _4tcy
                          M     exitm
                      01110     white
0325   300A               M     movlw WHITE
0326   008C               M     movwf TRISA
0327   2???           01111     call display_vbuffer
                      01112     white
0328   300A               M     movlw WHITE
0329   008C               M     movwf TRISA
                      01113     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
032A   2???               M     call _4tcy
                          M     exitm
                      01114     black
032B   301A               M     movlw BLACK
032C   008C               M     movwf TRISA
                      01115     next_task BRICKS_ROWS*BRICK_HEIGHT
032D   0A??               M     incf slice
032E   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032F   02??               M     subwf slice,W
0330   1D03               M     skpz
                          M     leave
0331   2???               M     goto isr_exit
0332   01??               M     clrf slice
0333   0A??               M     incf task
                          M     leave
0334   2???               M     goto isr_exit
                      01116     
                      01117 ; task 13, draw brick rows
                      01118 ; lcount 74-121   
0335                  01119 draw_bricks
0335   2???           01120     call put_ball_in_buffer
0336   30??           01121     movlw low row1
0337   0086           01122     movwf FSR1L
0338   30F8           01123     movlw 0xf8
0339   05??           01124     andwf slice,W
                      01125 ;    lsrf slice,W
                      01126 ;    lsrf WREG
                      01127 ;    lsrf WREG
033A   0786           01128     addwf FSR1L
033B   003B           01129     banksel PWM1CON
033C   121B           01130     bcf PWM1CON,POL
033D   1889           01131     btfsc WREG,1
033E   161B           01132     bsf PWM1CON,POL
033F   0021           01133     banksel TRISA
0340   3589           01134     lslf WREG
0341   000B           01135     brw
0342   3008           01136     movlw YELLOW
0343   3???           01137     bra rows_common
0344   3008           01138     movlw YELLOW
0345   3???           01139     bra rows_common
0346   3008           01140     movlw MAUVE
0347   3???           01141     bra rows_common
0348   3008           01142     movlw MAUVE
0349   3???           01143     bra rows_common
034A   300A           01144     movlw WHITE
034B   3???           01145     bra rows_common
034C   300A           01146     movlw WHITE
034D   3???           01147     bra rows_common
034E   300A           01148     movlw WHITE
034F   3???           01149     bra rows_common
                      01150     
  00000028            01151 MSG_FIRST equ 40
  00000028            01152 MSG_HEIGHT equ 40
  00000010            01153 MSG_PIXELS_COUNT equ 16 
                      01154 ; task 14
                      01155 ; draw all rows below bricks to paddle
                      01156 ; lcount 122-241 
0350                  01157 draw_empty
0350   0021           01158     banksel TRISA
0351   1B00           01159     btfsc flags, F_OVER
0352   3???           01160     bra print_msg
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0353   2???           01161     call put_ball_in_buffer
                      01162     tdelay LEFT_MARGIN-33
                          M     if LEFT_MARGIN-33==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-33>7
  000A                    M     variable q=(LEFT_MARGIN-33-5)/3
  0002                    M     variable r=(LEFT_MARGIN-33-5)%3+1
0354   300A               M     movlw q
0355   2???               M     call _3ntcy
                          M     if (r==2)
0356   3???               M     bra $+1
                          M     exitm
                      01163     white
0357   300A               M     movlw WHITE
0358   008C               M     movwf TRISA
0359   2???           01164     call display_vbuffer
                      01165     white
035A   300A               M     movlw WHITE
035B   008C               M     movwf TRISA
                      01166     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
035C   2???               M     call _4tcy
                          M     exitm
                      01167     black
035D   301A               M     movlw BLACK
035E   008C               M     movwf TRISA
035F   3???           01168     bra draw_empty_exit
0360                  01169 print_msg    
0360   3008           01170     movlw YELLOW ; message color
0361   00??           01171     movwf fg_color
0362   3028           01172     movlw MSG_FIRST
                      01173     pushw
0363   0019               M     movwi --SP
0364   3050           01174     movlw MSG_FIRST+MSG_HEIGHT
                      01175     pushw
0365   0019               M     movwi --SP
0366   08??           01176     movfw slice
0367   2???           01177     call between
0368   1C03           01178     skpc
0369   3???           01179     bra msg
036A   1F80           01180     btfss flags, F_COOL
036B   3???           01181     bra display_end
                      01182 ; perfect score display 'COOL' message
036C   30??           01183     movlw high cool_msg
036D   0087           01184     movwf FSR1H
036E   30??           01185     movlw low cool_msg
036F   0086           01186     movwf FSR1L
0370   2???           01187     call display_msg
0371   3???           01188     bra msg
                      01189 ; display 'END!' message    
0372                  01190 display_end
0372   30??           01191     movlw high end_msg
0373   0087           01192     movwf FSR1H
0374   30??           01193     movlw low end_msg
0375   0086           01194     movwf FSR1L
0376   2???           01195     call display_msg
0377                  01196 msg
0377   2???           01197     call display_vbuffer
0378                  01198 draw_empty_exit
                      01199     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0378   0A??               M     incf slice
0379   3078               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
037A   02??               M     subwf slice,W
037B   1D03               M     skpz
                          M     leave
037C   2???               M     goto isr_exit
037D   01??               M     clrf slice
037E   0A??               M     incf task
                          M     leave
037F   2???               M     goto isr_exit
                      01200 ;    incf slice
                      01201 ;    movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01202 ;    subwf lcount,W
                      01203 ;    skpz
                      01204 ;    leave
                      01205 ;    clrf slice
                      01206 ;    incf task
                      01207 ;    leave
                      01208 
                      01209 ; display end message
                      01210 ; message as a maximum of 24 vbuffer    
0380                  01211 display_msg
0380   3028           01212     movlw MSG_FIRST
0381   02??           01213     subwf slice,W
0382   3689           01214     lsrf WREG
0383   3689           01215     lsrf WREG
0384   3689           01216     lsrf WREG
0385   00??           01217     movwf temp1
0386   3589           01218     lslf WREG
0387   07??           01219     addwf temp1,W
0388   0786           01220     addwf FSR1L
0389   1803           01221     skpnc
038A   0A87           01222     incf FSR1H
038B   0016           01223     moviw FSR1++
038C   00??           01224     movwf vbuffer+1
038D   0016           01225     moviw FSR1++
038E   00??           01226     movwf vbuffer+2
038F   0016           01227     moviw FSR1++
0390   00??           01228     movwf vbuffer+3
0391   0008           01229     return
                      01230     
                      01231 ; task 15, draw paddle at bottom screen  
                      01232 ; lcount 242-249    
0392                  01233 draw_paddle
0392   0021           01234     banksel TRISA
0393   0187           01235     clrf FSR1H
0394   30??           01236     movlw low vbuffer
0395   0086           01237     movwf FSR1L
0396   08??           01238     movfw paddle_byte
0397   0786           01239     addwf FSR1L
0398   08??           01240     movfw paddle_mask
0399   001E           01241     movwi FSR1++
039A   08??           01242     movfw paddle_mask+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

039B   3FC0           01243     movwi  [FSR1]
039C   300A           01244     movlw WHITE
039D   00??           01245     movwf fg_color
                      01246     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>7
  0014                    M     variable q=(LEFT_MARGIN-3-5)/3
  0002                    M     variable r=(LEFT_MARGIN-3-5)%3+1
039E   3014               M     movlw q
039F   2???               M     call _3ntcy
                          M     if (r==2)
03A0   3???               M     bra $+1
                          M     exitm
                      01247     white
03A1   300A               M     movlw WHITE
03A2   008C               M     movwf TRISA
03A3   2???           01248     call display_vbuffer
                      01249     white
03A4   300A               M     movlw WHITE
03A5   008C               M     movwf TRISA
                      01250     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
03A6   2???               M     call _4tcy
                          M     exitm
                      01251     black
03A7   301A               M     movlw BLACK
03A8   008C               M     movwf TRISA
                      01252     next_task PADDLE_THICKNESS
03A9   0A??               M     incf slice
03AA   3008               M     movlw PADDLE_THICKNESS
03AB   02??               M     subwf slice,W
03AC   1D03               M     skpz
                          M     leave
03AD   2???               M     goto isr_exit
03AE   01??               M     clrf slice
03AF   0A??               M     incf task
                          M     leave
03B0   2???               M     goto isr_exit
                      01253 
                      01254 ; task 16,  wait end of this field, reset task to zero    
                      01255 ; lcount 251-262/3    
03B1                  01256 wait_field_end
03B1   1800           01257     btfsc flags, F_BIT8
03B2   2???           01258     goto hi_line
                      01259     leave
03B3   2???               M     goto isr_exit
03B4                  01260 hi_line
03B4   1880           01261     btfsc flags,F_EVEN
03B5   2???           01262     goto even_field
03B6   3005           01263     movlw 5
03B7   02??           01264     subwf lcount,W
03B8   1D03           01265     skpz
                      01266     leave
03B9   2???               M     goto isr_exit
03BA   2???           01267     goto field_end
03BB                  01268 even_field
03BB   3006           01269     movlw 6
03BC   02??           01270     subwf lcount,W
03BD   1D03           01271     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01272     leave
03BE   2???               M     goto isr_exit
                      01273 ; even field last line is half_line    
                      01274 ; set PWM3 for line 263 half-line
03BF   003B           01275     banksel PWM3DC
03C0   3003           01276     movlw high HALF_LINE
03C1   00B6           01277     movwf PWM3PRH
03C2   308D           01278     movlw low HALF_LINE
03C3   00B5           01279     movwf PWM3PRL
03C4   17BF           01280     bsf PWM3LDCON,7
03C5                  01281 field_end
03C5   01??           01282     clrf task
03C6   01??           01283     clrf slice
03C7   01??           01284     clrf lcount
03C8   1000           01285     bcf flags, F_BIT8
03C9   1500           01286     bsf flags, F_SYNC
                      01287 ; toggle odd/even field flag    
03CA   3002           01288     movlw 1<<F_EVEN
03CB   06??           01289     xorwf flags
                      01290     leave
03CC   2???               M     goto isr_exit
                      01291 
                      01292 ; helper functions
                      01293 
                      01294 ; delay = (3*n+5)*tcy    
                      01295 ;input:
                      01296 ;   WREG <- n    
03CD                  01297 _3ntcy
03CD   0B89           01298     decfsz WREG
03CE   3???           01299     bra $-1
03CF   0008           01300     return
                      01301     
03D0                  01302 _7tcy ; call here for 7*tcy delay using a single instruction
03D0   0000           01303     nop
03D1                  01304 _6tcy ; call here for 6*tcy delay using a single instruction
03D1   0000           01305     nop
03D2                  01306 _5tcy ; call here for 5*tcy delay using a single instruction
03D2   0000           01307     nop
03D3                  01308 _4tcy ; call here for 4*Tcy delay using a single instruction    
03D3   0008           01309     return
                      01310 
                      01311 ; increment user score
                      01312 ; This is a BCD addition where a single digit is added to score.   
                      01313 ; score is stored as big indian
                      01314 ; argument: 
                      01315 ;   WREG ->  bdc digit to add to score variable
03D4                  01316 inc_score
03D4   07??           01317     addwf score+1
03D5   1883           01318     btfsc STATUS,DC
03D6   3???           01319     bra $+6
03D7   300F           01320     movlw 15
03D8   05??           01321     andwf score+1,W
03D9   3C09           01322     sublw 9
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DA   1803           01323     skpnc
03DB   3???           01324     bra $+3
03DC   3006           01325     movlw 6
03DD   07??           01326     addwf score+1
03DE   0E??           01327     swapf score+1,W
03DF   390F           01328     andlw 15
03E0   3C09           01329     sublw 9
03E1   1803           01330     skpnc
03E2   3???           01331     bra game_over_test
03E3   3060           01332     movlw 0x60
03E4   07??           01333     addwf score+1
03E5   0A??           01334     incf score
03E6   3001           01335     movlw 1
03E7   00??           01336     movwf ball_speed
03E8                  01337 game_over_test ; all bricks destroyed?
03E8   3003           01338     movlw 3
03E9   02??           01339     subwf score,W
03EA   1D03           01340     skpz
03EB   0008           01341     return
03EC   3036           01342     movlw 0x36
03ED   02??           01343     subwf score+1,W
03EE   1D03           01344     skpz
03EF   0008           01345     return
03F0   1700           01346     bsf flags,F_OVER ; game over
03F1   1780           01347     bsf flags,F_COOL ; with maximum score.
03F2   0008           01348     return
                      01349     
                      01350     
03F3                  01351 brick_wall_init
03F3   30??           01352     movlw high row1
03F4   0087           01353     movwf FSR1H
03F5   30??           01354     movlw low row1
03F6   0086           01355     movwf FSR1L
03F7   3030           01356     movlw BRICKS_ROWS*8
03F8   00??           01357     movwf temp1
03F9   30FF           01358     movlw 0xff
03FA                  01359 bw_init
03FA   001E           01360     movwi FSR1++
03FB   0B??           01361     decfsz temp1
03FC   3???           01362     bra bw_init
03FD   0008           01363     return
                      01364 
                      01365 ; compute tcy delay from pixel coordinateur
                      01366 ;  1 pixel is 5 tcy wide.
                      01367 ; input:
                      01368 ;   WREG  px
                      01369 ; output
                      01370 ;   WREG  tcy    
03FE                  01371 px2tcy
                      01372    pushw
03FE   0019               M     movwi --SP
03FF   3589           01373    lslf WREG
0400   3589           01374    lslf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0401   0780           01375    addwf T
                      01376    popw
0402   0012               M     moviw SP++
0403   0008           01377    return
                      01378 
                      01379    
                      01380     
                      01381     
                      01382     
                      01383 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
0404                  01384 lfsr16
0404   002?           01385     banksel seed
0405   08??           01386     movfw seed+1
0406   00??           01387     movwf temp1
0407   3589           01388     lslf WREG
0408   3589           01389     lslf WREG
0409   00??           01390     movwf temp2
040A   06??           01391     xorwf temp1
040B   35??           01392     lslf temp2
040C   08??           01393     movfw temp2
040D   06??           01394     xorwf temp1
040E   35??           01395     lslf temp2
040F   35??           01396     lslf temp2,W
0410   06??           01397     xorwf temp1
0411   35??           01398     lslf temp1
0412   0D??           01399     rlf seed
0413   0D??           01400     rlf seed+1
0414   08??           01401     movfw seed
0415   0008           01402     return
                      01403     
                      01404 
0416                  01405 set_ball_dx
0416   2???           01406     call lfsr16 ;random
0417   3007           01407     movlw 7
0418   05??           01408     andwf seed,W
0419   3589           01409     lslf WREG
041A   000B           01410     brw
041B   3000           01411     movlw 0
041C   3???           01412     bra set_ball_dx_exit
041D   3001           01413     movlw 1
041E   3???           01414     bra set_ball_dx_exit
041F   30FF           01415     movlw -1
0420   3???           01416     bra set_ball_dx_exit
0421   3000           01417     movlw 0
0422   3???           01418     bra set_ball_dx_exit
0423   3001           01419     movlw 1
0424   3???           01420     bra set_ball_dx_exit
0425   30FF           01421     movlw -1
0426   3???           01422     bra set_ball_dx_exit
0427   30FF           01423     movlw -1
0428   3???           01424     bra set_ball_dx_exit
0429   3001           01425     movlw 1
042A                  01426 set_ball_dx_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042A   00??           01427     movwf ball_dx
042B   0008           01428     return
                      01429     
042C                  01430 game_init
042C   01??           01431     clrf score
042D   01??           01432     clrf score+1
042E   2???           01433     call brick_wall_init
042F   002?           01434     banksel balls
0430   3003           01435     movlw 3
0431   00??           01436     movwf balls
0432   01??           01437     clrf ball_timer
0433   0A??           01438     incf ball_timer
0434   30EB           01439     movlw PADDLE_Y-BALL_HEIGHT+1
0435   00??           01440     movwf ball_y
0436   2???           01441     call set_ball_dx
0437   30FC           01442     movlw -4
0438   00??           01443     movwf ball_dy
0439   3002           01444     movlw 2
043A   00??           01445     movwf ball_speed
043B   01??           01446     clrf flags
043C   1600           01447     bsf flags, F_START
043D   0008           01448     return
                      01449     
                      01450 ; delay by TIMER0
                      01451 ; parameter
                      01452 ;   WREG -> 2*Tcy+7cy    
043E                  01453 t0delay 
043E   0989           01454     comf WREG
043F   0095           01455     movwf TMR0
0440   110B           01456     bcf INTCON,T0IF
0441   1D0B           01457     btfss INTCON,T0IF
0442   3???           01458     bra $-1
0443   0008           01459     return
                      01460     
                      01461 MAIN_PROG CODE                      ; let linker place main program
                      01462 
0000                  01463 initialize
                      01464 ; clear common RAM
0000   0185           01465     clrf FSR0H
0001   3070           01466     movlw 0x70
0002   0084           01467     movwf FSR0L
0003   0103           01468     clrw
0004   001A           01469     movwi FSR0++
0005   1F84           01470     btfss FSR0L,7
0006   3???           01471     bra $-2
                      01472 ; clear banked RAM
0007   0184           01473     clrf FSR0L
0008   3020           01474     movlw 0x20
0009   0085           01475     movwf FSR0H
000A   0103           01476     clrw 
000B   001A           01477     movwi FSR0++
000C   1C05           01478     btfss FSR0H,0
000D   3???           01479     bra $-2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01480 ; initialize LFSR seed
000E   002?           01481     banksel seed
000F   09??           01482     comf seed
0010   09??           01483     comf seed+1
0011   09??           01484     comf seed+2
0012   09??           01485     comf seed+3
                      01486 ;   setup arguments stack pointer
0013   30??           01487     movlw high (stack+STACK_SIZE)
0014   0085           01488     movwf FSR0H
0015   30??           01489     movlw low (stack+STACK_SIZE)
0016   0084           01490     movwf FSR0L
                      01491 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01492 ; TIMER0 prescale 1:2
0017   3050           01493     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01494     movwf OPTION_REG
                      01495 ; disable analog inputs, except AN0
0019   0023           01496     banksel ANSELA
001A   018C           01497     clrf ANSELA
                      01498 ; paddle potentiometer input     
001B   140C           01499     bsf ANSELA,PADDLE
001C   0021           01500     banksel ADCON1
001D   3020           01501     movlw (2<<ADCS0)
001E   009E           01502     movwf ADCON1
                      01503 ; pin setup
001F   0024           01504     banksel WPUA
0020   018C           01505     clrf WPUA
0021   0021           01506     banksel TRISA
0022   110C           01507     bcf TRISA,SYNC_OUT
0023   100C           01508     bcf TRISA,AUDIO
0024   0022           01509     banksel LATA
0025   160C           01510     bsf LATA, VIDEO_OUT
                      01511 ; PWM1 chroma signal on RA1
0026   003B           01512     banksel PWM1CON
0027   019F           01513     clrf PWM1LDCON
0028   0191           01514     clrf PWM1PHL
0029   0192           01515     clrf PWM1PHH
002A   0197           01516     clrf PWM1OFL
002B   0198           01517     clrf PWM1OFH
002C   0196           01518     clrf PWM1PRH
002D   3007           01519     movlw 7
002E   0095           01520     movwf PWM1PRL
002F   3004           01521     movlw 4
0030   0093           01522     movwf PWM1DCL
0031   0194           01523     clrf PWM1DCH
0032   179F           01524     bsf PWM1LDCON,7
0033   30C0           01525     movlw (1<<EN)|(1<<OE)
0034   009B           01526     movwf PWM1CON
                      01527 ; PWM2 sound
0035   003B           01528     banksel PWM2CON
0036   01A1           01529     clrf PWM2PHL
0037   01A2           01530     clrf PWM2PHH
0038   01A7           01531     clrf PWM2OFL
0039   01A8           01532     clrf PWM2OFH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003A   3030           01533     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01534     movwf PWM2CLKCON
003C   300D           01535     movlw high 3578;7
003D   00A6           01536     movwf PWM2PRH
003E   30FA           01537     movlw low 3578;7
003F   00A5           01538     movwf PWM2PRL
0040   3626           01539     lsrf PWM2PRH,W
0041   00A4           01540     movwf PWM2DCH
0042   0C25           01541     rrf PWM2PRL,W
0043   00A3           01542     movwf PWM2DCL
0044   17AF           01543     bsf PWM2LDCON,LDA
                      01544 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01545     banksel PWM3CON
0046   01BF           01546     clrf PWM3LDCON
0047   01B1           01547     clrf PWM3PHL
0048   01B2           01548     clrf PWM3PHH
0049   01B7           01549     clrf PWM3OFL
004A   01B8           01550     clrf PWM3OFH
004B   301B           01551     movlw low HPERIOD
004C   00B5           01552     movwf PWM3PRL
004D   3007           01553     movlw high HPERIOD
004E   00B6           01554     movwf PWM3PRH
004F   3086           01555     movlw HSYNC
0050   00B3           01556     movwf PWM3DCL
0051   01B4           01557     clrf PWM3DCH
0052   30D0           01558     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01559     movwf PWM3CON
0054   17BF           01560     bsf PWM3LDCON,7
0055   143C           01561     bsf PWM3INTE,PRIE
                      01562 ; enbable interrupt    
0056   0020           01563     banksel PIR3
0057   1313           01564     bcf PIR3,PWM3IF
0058   0021           01565     banksel PIE3
0059   1713           01566     bsf PIE3,PWM3IE
005A   170B           01567     bsf INTCON,PEIE
005B   178B           01568     bsf INTCON,GIE
005C   2???           01569     call game_init
005D   01??           01570     clrf flags
005E   1500           01571     bsf flags, F_SYNC
                      01572 ; test code
005F   1600           01573     bsf flags, F_START
                      01574 ; all processing done in ISR    
0060   2???           01575     goto $
                      01576 
                      01577 ;digits character table
                      01578 ; input:
                      01579 ;   T -> glyph row
                      01580 ;   WREG -> digit
                      01581 ; output:
                      01582 ;   WREG -> pixels
                      01583 ;   T -> glyph row    
0061                  01584 digits
                      01585     pushw 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0061   0019               M     movwi --SP
0062   3589           01586     lslf WREG
0063   3589           01587     lslf WREG
0064   0780           01588     addwf T
                      01589     popw
0065   0012               M     moviw SP++
0066   0700           01590     addwf T,W
0067   000B           01591     brw
0068   3440 34A0 34A0 01592     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006D   3440 34C0 3440 01593     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0072   34E0 3420 34C0 01594     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0077   34E0 3420 34C0 01595     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
007C   34A0 34A0 34E0 01596     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0081   34E0 3480 34E0 01597     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0086   34C0 3480 34E0 01598     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
008B   34E0 3420 3420 01599     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0090   34E0 34A0 34E0 01600     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0095   34E0 34A0 34E0 01601     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
009A   0001           01602     reset
                      01603     
009B                  01604 frequency
009B   000B           01605     brw
009C   348B 34D3      01606     dt high 35795, low 35795 ; 100 hertz
009E   340D 34FB      01607     dt high 3579, low 3579 ; 1000 hertz
00A0   0001           01608     reset
                      01609   
                      01610 ;display END! when game is over    
00A1                  01611 end_msg
                      01612 ;    brw
00A1   00E8 00C8 0000 01613     data 0xe8,0xc8,0
00A4   008E 00A8 0000 01614     data 0x8e,0xa8,0
00A7   00EA 00A8 0000 01615     data 0xea,0xa8,0
00AA   008A 00A0 0000 01616     data 0x8a,0xa0,0
00AD   00EA 00C8 0000 01617     data 0xea,0xc8,0
                      01618   
00B0                  01619 cool_msg
                      01620 ;    brw
00B0   00EE 00E8 0000 01621     data 0xee,0xe8,0
00B3   008A 00A8 0000 01622     data 0x8a,0xa8,0
00B6   008A 00A8 0000 01623     data 0x8a,0xa8,0
00B9   008A 00A8 0000 01624     data 0x8a,0xa8,0
00BC   00EE 00EE 0000 01625     data 0xee,0xee,0
                      01626     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01627 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01628 max_score 
                      01629  
3FA7 1EFF             01630     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000002A
PADDLE_MASK                       000000FC
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000006
PADDLE_Y                          000000F2
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0012                         00000012
_ISR_00DE                         000000DE
_ISR_00E9                         000000E9
_ISR_00FE                         000000FE
_ISR_012C                         0000012C
_ISR_016E                         0000016E
_ISR_01AF                         000001AF
_ISR_02C7                         000002C7
_ISR_02DD                         000002DD
_ISR_0356                         00000356
_ISR_03A0                         000003A0
_ISR_03CE                         000003CE
_ISR_03D6                         000003D6
_ISR_03DB                         000003DB
_ISR_0442                         00000442
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_0060                   00000060
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
add_score                         0000019C
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000129
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001B8
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           000001A3
between_exit                      000001AD
between_exit2                     000001AF
black                             
blue                              
bottom_bound                      00000122
bounce_left                       00000157
bounced                           00000148
brick_wall_init                   000003F3
bw_init                           000003FA
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000170
collision_exit                    000001A1
compute_ball_mask                 0000015F
compute_paddle_mask               000000F0
cool_msg                          000000B0
copy_row                          00000314
dark_green                        
digits                            00000061
display_bit                       
display_byte                      
display_end                       00000372
display_msg                       00000380
display_vbuffer                   000001BF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

draw_bricks                       00000335
draw_empty                        00000350
draw_empty_exit                   00000378
draw_paddle                       00000392
draw_score                        000002B0
draw_sides                        000002FF
draw_top_wall                     000002D2
dropn                             
eeprom                            00000780
end_msg                           000000A1
even_field                        000003BB
fg_color                          000000D7
field_end                         000003C5
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         0000009B
game_init                         0000042C
game_over                         000000C5
game_over_test                    000003E8
game_running                      000000BD
gray                              white
hi_line                           000003B4
inc_score                         000003D4
initialize                        00000000
isr                               00000004
isr_exit                          00000030
kill_time                         000002FB
lcount                            00000001
leave                             
left_bound                        00000108
lfsr16                            00000404
mauve                             
max_score                         00000780
move_ball                         00000100
move_ball_exit                    0000013B
move_y                            00000115
msg                               00000377
next_task                         
old_dx                            0000000F
paddle_bounce                     0000013E
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000159
pickn                             
pokew                             
pong_sound                        0000019D
popw                              
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000035
print_msg                         00000360
pushw                             
put_ball_in_buffer                000002EE
px2tcy                            000003FE
q                                 00000014
r                                 00000002
read_button                       000000D2
read_paddle                       000000D6
reserved_task                     00000078
right_bound                       0000010E
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       00000321
score                             0000000C
score_exit                        000002CA
seed                              00000030
set_ball_dx                       00000416
set_ball_dx_exit                  0000042A
set_presync                       00000040
set_vsync                         00000056
skip_2_tasks                      000000CA
slice                             00000002
sound                             0000007A
sound_fx1                         00000087
sound_fx2                         00000092
sound_init                        0000009D
sound_timer                       000000DE
stack                             00000020
swap_var                          
swapw                             
t0delay                           0000043E
task                              00000003
task_switch                       0000001C
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         00000119
user_input                        000000B2
vbuffer                           000000A0
video_first                       000001B1
vsync                             0000004B
vsync_end                         0000006B
wait_field_end                    000003B1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-22-2019  12:57:22         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

wait_trigger                      000000BF
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   341 suppressed

