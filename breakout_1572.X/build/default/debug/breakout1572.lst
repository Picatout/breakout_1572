MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled.    
                      00025 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00026     
                      00027     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00028     
8007   3FA7           00029     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00030     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00031     
                      00032     radix dec
                      00033 
                      00034 ; constants
  00000800            00035 PROG_SIZE equ 2048  ; program words
  00000080            00036 EEPROM_SIZE equ 128 ; high endurance flash words
                      00037  
  01B4F360            00038 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00039 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00040 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00041  
                      00042 ; NTSC signal 
  00003D76            00043 Fhorz equ 15734 ; horizontal frequency
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000071B            00044 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00045 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00046 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00047 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00048 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00049 ; boolean flags 
  00000000            00050 F_HI_LINE equ 0 ; lcount > 255
  00000001            00051 F_EVEN equ 1    ; even field
  00000002            00052 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00053 F_SOUND equ 3   ; sound enabled 
  00000004            00054 F_START equ 4   ; game started 
  00000005            00055 F_PAUSE equ 5   ; game pause after a ball lost
                      00056  
                      00057 ;pins assignment
  00000000            00058 AUDIO EQU RA0
  00000000            00059 PADDLE equ RA0
  00000001            00060 CHROMA equ RA1
  00000002            00061 SYNC_OUT equ RA2
  00000003            00062 START_BTN equ RA3 
  00000004            00063 VIDEO_OUT equ RA4
  00000005            00064 CLKIN equ RA5
                      00065  
                      00066 
                      00067 ;;;;;;;;;;;;;;;;;;;;;;
                      00068 ;; assembler macros ;;
                      00069 ;;;;;;;;;;;;;;;;;;;;;;
                      00070 
                      00071 ; leave task 
                      00072 leave macro
                      00073     goto isr_exit
                      00074     endm
                      00075     
                      00076 ; move to next task on slice limit
                      00077 ; parameters:
                      00078 ;   s  nomber of slices used by the task    
                      00079 next_task macro s    
                      00080     incf slice
                      00081     movlw s
                      00082     subwf slice,W
                      00083     skpz
                      00084     leave
                      00085     clrf slice
                      00086     incf task
                      00087     movlw s
                      00088     addwf lcount
                      00089     leave
                      00090     endm
                      00091     
                      00092     
                      00093 ; case switch
                      00094 ; parameters:
                      00095 ;   var is control variable
                      00096 ;   n  is constant to compare to var
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;   adr  is goto address if var==n 
                      00098 case macro var, n, adr
                      00099     movlw n
                      00100     subwf var,W
                      00101     skpnz
                      00102     goto adr
                      00103     endm
                      00104 
                      00105 ; swap variable with WREG    
                      00106 swap_var macro var
                      00107     xorwf var
                      00108     xorwf var,W
                      00109     xorwf var
                      00110     endm
                      00111     
                      00112     
                      00113 ; delay in machine cycle T
                      00114 ; parameters:
                      00115 ;   T   number of machine cycles    
                      00116 tdelay macro T
                      00117     variable q=(T)/3
                      00118     variable r=(T)%3
                      00119     if (q)
                      00120     movlw q
                      00121     decfsz WREG
                      00122     goto $-1
                      00123     endif
                      00124     if (r==2)
                      00125     goto $+1
                      00126     endif 
                      00127     if (r==1)
                      00128     nop
                      00129     endif
                      00130     endm
                      00131 
                      00132 ; enable weak pull on VIDEO_OUT
                      00133 ; to create a porch
                      00134 porch_on macro
                      00135     banksel WPUA
                      00136     bsf WPUA,VIDEO_OUT
                      00137     endm
                      00138     
                      00139 ; disable weak pull on VIDEO_OUT
                      00140 ; to remove porch
                      00141 porch_off macro
                      00142     banksel WPUA
                      00143     bcf WPUA,VIDEO_OUT
                      00144     endm
                      00145     
                      00146 ; enable chroma output
                      00147 chroma_on macro
                      00148     banksel TRISA
                      00149     bcf TRISA, CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     endm
                      00151     
                      00152 ;disable chroma output    
                      00153 chroma_off macro
                      00154     banksel TRISA
                      00155     bsf TRISA,CHROMA
                      00156     endm
                      00157     
                      00158 ; output chroma reference    
                      00159 chroma_ref macro
                      00160     banksel PWM1CON
                      00161     bcf PWM1CON,POL
                      00162     endm
                      00163     
                      00164 ; set chroma phase to 180 degree
                      00165 chroma_invert macro
                      00166     banksel PWM1CON
                      00167     bsf PWM1CON,POL
                      00168     endm
                      00169 
                      00170 ;;;;;;;;;;;;;;;;;;;;;;
                      00171 ;   colors macros
                      00172 ; each one take 5 T 
                      00173 ;;;;;;;;;;;;;;;;;;;;;;
                      00174     
                      00175 ;set video output to black    
                      00176 black macro
                      00177 ;    banksel TRISA
                      00178     bsf TRISA,CHROMA
                      00179     bsf TRISA,VIDEO_OUT
                      00180 ;    goto $+1
                      00181     endm
                      00182     
                      00183 ; set video output to white    
                      00184 white macro    
                      00185 ;    banksel TRISA
                      00186     bsf TRISA,CHROMA
                      00187     bcf TRISA,VIDEO_OUT
                      00188 ;    goto $+1
                      00189     endm
                      00190 
                      00191 ; set video output to yellow    
                      00192 yellow macro
                      00193 ;    chroma_ref
                      00194 ;    banksel TRISA
                      00195     bcf TRISA,VIDEO_OUT
                      00196     bcf TRISA,CHROMA
                      00197     endm
                      00198 
                      00199 ; set video output to cyan   
                      00200 cyan macro
                      00201 ;    chroma_invert
                      00202 ;    banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     bcf TRISA,VIDEO_OUT
                      00204     bcf TRISA,CHROMA
                      00205     endm
                      00206     
                      00207 ; set video output to green
                      00208 green macro
                      00209 ;    chroma_ref
                      00210 ;    banksel TRISA
                      00211     bsf TRISA, VIDEO_OUT
                      00212     bcf TRISA,CHROMA
                      00213     endm
                      00214     
                      00215 ; set video output to dark blue    
                      00216 dark_blue macro
                      00217 ;    chroma_invert
                      00218 ;    banksel TRISA
                      00219     bsf TRISA, VIDEO_OUT
                      00220     bcf TRISA,CHROMA
                      00221     endm
                      00222 
                      00223     
                      00224 ; draw a brick
                      00225 ; use 6T+BRICK_WIDTH
                      00226 ; if carry is 1 draw in color else draw black    
  00000015            00227 BRICK_WIDTH equ 21   
                      00228 draw_brick macro color
                      00229     local no_brick
                      00230     local brick_delay
                      00231     skpc
                      00232     bra no_brick
                      00233     color
                      00234     nop
                      00235     bra brick_delay
                      00236 no_brick
                      00237     black
                      00238     bra brick_delay 
                      00239 brick_delay    
                      00240     tdelay BRICK_WIDTH
                      00241     endm
                      00242 
                      00243 ; draw 8 bricks wall
                      00244 ; parameter in temp
                      00245 draw_wall macro color
                      00246     local next_brick
                      00247     movlw 8
                      00248     pushw
                      00249 next_brick    
                      00250     lslf temp
                      00251     draw_brick color
                      00252     decfsz T
                      00253     bra next_brick
                      00254     dropn 1
                      00255     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     
                      00257     
                      00258 ; draw left and right borders
                      00259 ; parameters:
                      00260 ;   width delay determine width
                      00261 ;   width 5T+nT    
                      00262 draw_border macro width
                      00263     banksel TRISA
                      00264     bsf TRISA,CHROMA
                      00265     bcf TRISA,VIDEO_OUT
                      00266     tdelay width
                      00267     bsf TRISA,VIDEO_OUT
                      00268     endm
                      00269     
                      00270 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00271 ;  stack manipulation macros
                      00272 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00273 STACK_SIZE equ 16 ; size of argument stack
                      00274 #define T INDF0 ; top of argument stack
                      00275 #define SP FSR0 ; use FSR0 as stack pointer 
                      00276 ; push WREG on T
                      00277 pushw  macro
                      00278     movwi --SP
                      00279     endm
                      00280   
                      00281 ; pop WREG from T
                      00282 popw macro
                      00283     moviw SP++
                      00284     endm
                      00285     
                      00286 ; swap WREG with 
                      00287 swapw  macro
                      00288     xorwf T
                      00289     xorwf T,W
                      00290     xorwf T
                      00291     endm
                      00292 
                      00293 ; drop n elements from stack
                      00294 dropn macro n
                      00295     addfsr T,n
                      00296     endm
                      00297 
                      00298 ; copy nth element of stack to WREG
                      00299 ;  n {0..31}    
                      00300 pickn macro n
                      00301     moviw n[SP]
                      00302     endm
                      00303    
                      00304 ; copy WREG to nth element of stack
                      00305 ; n {0..31}
                      00306 pokew macro n
                      00307     movwi n[SP]
                      00308     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     
                      00310     
                      00311 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00312 ;;    variables
                      00313 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00314     
                      00315     udata 0x20
0020                  00316 stack res 16 ; arguments stack
                      00317 
                      00318 v_array   udata 0xA0
00A0                  00319 row1 res 1; brick wall row1
00A1                  00320 row2 res 1
00A2                  00321 row3 res 1
00A3                  00322 row4 res 1
00A4                  00323 row5 res 1
00A5                  00324 d1 res 1 ; score msd digit pixels
00A6                  00325 d2 res 1 ; score 2nd digit pixels
00A7                  00326 d3 res 1 ; score lsd digit pixels
00A8                  00327 balls res 1 ; number of recking balls available 
00A9                  00328 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00329   
                      00330     udata_shr
0000                  00331 flags  res 1 ; boolean variables
0001                  00332 lcount res 1 ; video field line counter
0002                  00333 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00334 task res 1 ; where in video phase 
0004                  00335 temp res 2 ; temporary storage
0006                  00336 paddle_pos res 1 
0007                  00337 ball_x res 1
0008                  00338 ball_y res 1
0009                  00339 ball_dx res 1
000A                  00340 ball_dy res 1
000B                  00341 ball_speed res 1
000C                  00342 score res 2 ; score stored in Binary Coded Decimal
000E                  00343 ball_timer res 1 
000F                  00344 ticks res 1
                      00345  
                      00346 ;; code 
                      00347 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00348     GOTO    START                   ; go to beginning of program
0001   0001           00349     reset
0002   0001           00350     reset
0003   0001           00351     reset
                      00352 
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00354 ; interrupt service routine triggered by PWM3 period rollover
                      00355 ISR CODE 0x0004
0004                  00356 isr
0004   1900           00357     btfsc flags, F_SYNC
0005   2???           00358     goto task_switch
                      00359  ; chroma sync
                      00360     tdelay 30
  000A                    M     variable q=(30)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00361     banksel TRISA
000A   108C           00362     bcf TRISA,CHROMA
                      00363     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00364     bsf TRISA,CHROMA
                      00365     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00366 task_switch ; horizontal scan line used as round robin task scheduler   
0012   08??           00367     movfw task
0013   000B           00368     brw
0014   2???           00369     goto pre_vsync ;task 0, vertical pre-equalization pulses
0015   2???           00370     goto vsync ;task 1, vertical sync pulses
0016   2???           00371     goto post_vsync ;task 2, vertical post-equalization pulses
0017   2???           00372     goto vsync_end ;task 3, return to normal video line
0018   2???           00373     goto user_input ;task 4,  read button and paddle
0019   2???           00374     goto move_ball ;task 5, move recking ball.
001A   2???           00375     goto collision ; task 6, check for collision with brick wall and paddle
001B   2???           00376     goto sound ;task 7, check sound timer expiration
001C   2???           00377     goto video_first ; task 8, wait FIRST_VIDEO line.
001D   2???           00378     goto draw_score ;task 9,  draw score en ball count
001E   2???           00379     goto draw_top_wall ;task 10,  draw top wall
001F   2???           00380     goto draw_void ;task 11, draw play space
0020   2???           00381     goto draw_row1 ;task 12, draw top bricks row
0021   2???           00382     goto draw_row2 ;task 13, draw second bricks row
0022   2???           00383     goto draw_row3 ;task 14,  draw third bricks row
0023   2???           00384     goto draw_row4 ;task 15,  draw fourth bricks row
0024   2???           00385     goto draw_row5 ;task 16, draw fifth bricks row
0025   2???           00386     goto draw_empty;task 17, draw empty space down to bottom
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0026   2???           00387     goto draw_paddle ;task 18, draw paddle
0027   2???           00388     goto wait_field_end ;task 19, idle to end of video field
0028   0001           00389     reset ; error trap, task out of range
0029                  00390 isr_exit  
                      00391     porch_off
0029   0024               M     banksel WPUA
002A   120C               M     bcf WPUA,VIDEO_OUT
002B   003B           00392     banksel PWM3INTF
002C   103D           00393     bcf PWM3INTF,PRIF
002D   0009           00394     retfie
                      00395 
                      00396 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00397 ;;  all tasks routine are here            ;;
                      00398 ;;  each must be terminate by leave macro ;;    
                      00399 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00400     
                      00401 ; task 0, vertical synchronization pre equalization
002E                  00402 pre_vsync
002E   08??           00403     movfw slice
002F   1903           00404     skpnz
0030   2???           00405     goto set_presync
                      00406     next_task 6
0031   0A??               M     incf slice
0032   3006               M     movlw 6
0033   02??               M     subwf slice,W
0034   1D03               M     skpz
                          M     leave
0035   2???               M     goto isr_exit
0036   01??               M     clrf slice
0037   0A??               M     incf task
0038   3006               M     movlw 6
0039   07??               M     addwf lcount
                          M     leave
003A   2???               M     goto isr_exit
003B                  00407 set_presync    
003B   003B           00408     banksel PWM3DC
003C   3041           00409     movlw HEQUAL
003D   00B3           00410     movwf PWM3DCL
003E   01B4           00411     clrf PWM3DCH
003F   3003           00412     movlw high HALF_LINE
0040   00B6           00413     movwf PWM3PRH
0041   308D           00414     movlw low HALF_LINE
0042   00B5           00415     movwf PWM3PRL
0043   17BF           00416     bsf PWM3LDCON,7
0044   0A??           00417     incf slice
                      00418     leave
0045   2???               M     goto isr_exit
                      00419     
                      00420 ; task 1, vertical synchronization pulses
0046                  00421 vsync 
0046   08??           00422     movfw slice
0047   1903           00423     skpnz
0048   2???           00424     goto set_vsync
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00425     next_task 6
0049   0A??               M     incf slice
004A   3006               M     movlw 6
004B   02??               M     subwf slice,W
004C   1D03               M     skpz
                          M     leave
004D   2???               M     goto isr_exit
004E   01??               M     clrf slice
004F   0A??               M     incf task
0050   3006               M     movlw 6
0051   07??               M     addwf lcount
                          M     leave
0052   2???               M     goto isr_exit
0053                  00426 set_vsync
0053   003B           00427     banksel PWM3DC
0054   3008           00428     movlw low VSYNC_PULSE
0055   00B3           00429     movwf PWM3DCL
0056   3003           00430     movlw high VSYNC_PULSE
0057   00B4           00431     movwf PWM3DCH
0058   17BF           00432     bsf PWM3LDCON,7
0059   0A??           00433     incf slice
                      00434     leave
005A   2???               M     goto isr_exit
                      00435     
                      00436 ; task 2, vertical synchronisation post equalization pulses
005B                  00437 post_vsync
005B   08??           00438     movfw slice
005C   1903           00439     skpnz
005D   2???           00440     goto set_presync
005E   3006           00441     movlw 6
005F   02??           00442     subwf slice,W
0060   1903           00443     skpnz
0061   2???           00444     goto post_last
0062   0A??           00445     incf slice
                      00446     leave
0063   2???               M     goto isr_exit
0064                  00447 post_last    
0064   0A??           00448     incf task
0065   01??           00449     clrf slice
0066   1C80           00450     btfss flags, F_EVEN
                      00451     leave
0067   2???               M     goto isr_exit
                      00452     
                      00453 ; task 3, vertical synchronization completed, return to normal line
0068                  00454 vsync_end
0068   1100           00455     bcf flags, F_SYNC
0069   003B           00456     banksel PWM3DC
006A   3086           00457     movlw HSYNC
006B   00B3           00458     movwf PWM3DCL
006C   01B4           00459     clrf PWM3DCH
006D   3007           00460     movlw high HPERIOD
006E   00B6           00461     movwf PWM3PRH
006F   301B           00462     movlw low HPERIOD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   00B5           00463     movwf PWM3PRL
0071   17BF           00464     bsf PWM3LDCON,7
0072   0A??           00465     incf task
0073   0A??           00466     incf ticks
0074   3009           00467     movlw 9
0075   00??           00468     movwf lcount
                      00469     leave
0076   2???               M     goto isr_exit
                      00470 
                      00471 ; constants used in video display
                      00472 ; values are in Tcy for x dimension.
                      00473 ; values are in scan lines for y dimension.    
  0000001E            00474 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00475 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00476 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00477 COURT_WIDTH equ 248 ; Tcy
  00000008            00478 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00479 BORDER_WIDTH equ 4  ; Tcy
  00000020            00480 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00481 PADDLE_TICKNESS equ 8 ; scan lines
  0000004A            00482 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00483 BALL_WIDTH equ 8 ; Tcy
  00000008            00484 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00485 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00486 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00487 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00488 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00489 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_TICKNESS+1 ; 
  0000004A            00490 ROW1_Y equ 74
  00000052            00491 ROW2_Y equ 82
  0000005A            00492 ROW3_Y equ 90
  00000062            00493 ROW4_Y equ 98
  0000006A            00494 ROW5_Y equ 106
                      00495  
                      00496 ;task 4, read button and paddle position
0077                  00497 user_input
0077   0A??           00498     incf task
0078   0A??           00499     incf lcount
0079   2???           00500     call read_paddle
007A   1A00           00501     btfsc flags,F_START
007B   3???           00502     bra game_running
                      00503 ; game not running
007C   2???           00504     call read_button
007D   1D03           00505     skpz
007E   3???           00506     bra skip_2_tasks
                      00507 ; start game    
007F   2???           00508     call game_init
                      00509     leave
0080   2???               M     goto isr_exit
0081                  00510 game_running
0081   1E80           00511     btfss flags, F_PAUSE
                      00512     leave
0082   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00513 ; game on pause    
0083                  00514 wait_trigger
0083   2???           00515     call read_button
0084   1D03           00516     skpz
0085   3???           00517     bra skip_2_tasks
0086   1280           00518     bcf flags,F_PAUSE
0087   2???           00519     call set_ball_dx
                      00520     leave
0088   2???               M     goto isr_exit
                      00521 ; while game not running skip 'move_ball' and 'collision' tasks    
0089                  00522 skip_2_tasks
0089   0A??           00523     incf task
008A   0A??           00524     incf task
                      00525     leave
008B   2???               M     goto isr_exit
                      00526 
008C                  00527 read_button
008C   0020           00528     banksel PORTA
008D   080C           00529     movfw PORTA
008E   3908           00530     andlw 1<<START_BTN
008F   0008           00531     return
                      00532     
0090                  00533 read_paddle
0090   0021           00534     banksel TRISA
0091   140C           00535     bsf TRISA, PADDLE
0092   0021           00536     banksel ADCON0
0093   3003           00537     movlw 3
0094   009D           00538     movwf ADCON0
0095   189D           00539     btfsc ADCON0,NOT_DONE
0096   2???           00540     goto $-1
0097   101D           00541     bcf ADCON0,ADON
0098   081C           00542     movfw ADRESH
0099   00??           00543     movwf paddle_pos
009A   304A           00544     movlw PADDLE_LIMIT
009B   02??           00545     subwf paddle_pos,W
009C   1C03           00546     skpc
009D   3???           00547     bra $+3
009E   304A           00548     movlw PADDLE_LIMIT
009F   00??           00549     movwf paddle_pos
00A0   0021           00550     banksel TRISA
00A1   100C           00551     bcf TRISA, AUDIO
00A2   0008           00552     return
                      00553     
                      00554    
                      00555 ; task 5, move recking ball.   
00A3                  00556 move_ball
00A3   0B??           00557     decfsz ball_timer
00A4   3???           00558     bra move_ball_exit
00A5   08??           00559     movfw ball_speed
00A6   00??           00560     movwf ball_timer
00A7   08??           00561     movfw ball_dx
00A8   07??           00562     addwf ball_x
00A9   1D03           00563     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AA   3???           00564     bra right_bound
00AB   09??           00565     comf ball_dx
00AC   3???           00566     bra move_y
00AD                  00567 right_bound    
00AD   08??           00568     movfw ball_x
00AE   3C52           00569     sublw BALL_RIGHT_BOUND
00AF   1803           00570     skpnc
00B0   3???           00571     bra move_y
00B1   03??           00572     decf ball_x
00B2   09??           00573     comf ball_dx
00B3                  00574 move_y
00B3   08??           00575     movfw ball_dy
00B4   07??           00576     addwf ball_y
00B5   303A           00577     movlw BALL_TOP_BOUND
00B6   02??           00578     subwf ball_y,W
00B7   1803           00579     skpnc
00B8   3???           00580     bra bottom_bound
00B9   09??           00581     comf ball_dy
00BA   0A??           00582     incf ball_dy
00BB   3???           00583     bra move_ball_exit
00BC                  00584 bottom_bound
00BC   08??           00585     movfw ball_y
00BD   3CFA           00586     sublw BALL_BOTTOM_BOUND
00BE   1803           00587     skpnc
00BF   3???           00588     bra move_ball_exit
00C0   09??           00589     comf ball_dy
00C1   0A??           00590     incf ball_dy
00C2                  00591 move_ball_exit    
00C2   0A??           00592     incf task
00C3   0A??           00593     incf lcount
                      00594     leave
00C4   2???               M     goto isr_exit
                      00595 
                      00596 ; task 6, collision detection
00C5                  00597 collision
00C5   002?           00598     banksel row1
                      00599 ; pre-compute x column (brick bit mask)    
                      00600 ; column = 7-(3*ball_x/32)
00C6   35??           00601     lslf ball_x,W
00C7   07??           00602     addwf ball_x,W
00C8   3689           00603     lsrf WREG
00C9   0E89           00604     swapf WREG
00CA   390F           00605     andlw 15
00CB   3C07           00606     sublw 7
                      00607 ; create mask    
00CC   00??           00608     movwf temp
00CD   3001           00609     movlw 1
                      00610     pushw
00CE   0019               M     movwi --SP
00CF   08??           00611     movfw temp
00D0   1903           00612     skpnz
00D1   3???           00613     bra $+4
00D2   3580           00614     lslf T
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D3   0B89           00615     decfsz WREG
00D4   3???           00616     bra $-2
                      00617 ; ball/paddle test
00D5   30EC           00618     movlw PADDLE_Y-BALL_HEIGHT+1
                      00619     pushw
00D6   0019               M     movwi --SP
00D7   30FB           00620     movlw PADDLE_Y+PADDLE_TICKNESS
                      00621     pushw
00D8   0019               M     movwi --SP
00D9   08??           00622     movfw ball_y
00DA   2???           00623     call between
00DB   1803           00624     skpnc
00DC   3???           00625     bra check_paddle_bounce
00DD   08??           00626     movfw ball_y
00DE   3CF3           00627     sublw PADDLE_Y
00DF   1C03           00628     skpc
00E0   3???           00629     bra ball_lost
00E1   3???           00630     bra row1_coll
00E2                  00631 ball_lost    
00E2   0B??           00632     decfsz balls
00E3   3???           00633     bra $+2
00E4   1200           00634     bcf flags, F_START
00E5   1680           00635     bsf flags, F_PAUSE ; pause game
00E6   3004           00636     movlw 4
00E7   07??           00637     addwf paddle_pos,W
00E8   00??           00638     movwf ball_x
00E9   30EB           00639     movlw PADDLE_Y-BRICK_HEIGHT
00EA   00??           00640     movwf ball_y
00EB   30FC           00641     movlw -4
00EC   00??           00642     movwf ball_dy
00ED   3???           00643     bra collision_exit
                      00644 ; if ball_x over paddle bounce ball
00EE                  00645 check_paddle_bounce
00EE   3007           00646     movlw BALL_WIDTH-1
00EF   02??           00647     subwf paddle_pos,W
                      00648     pushw
00F0   0019               M     movwi --SP
00F1   3020           00649     movlw PADDLE_WIDTH
00F2   07??           00650     addwf paddle_pos,W
                      00651     pushw
00F3   0019               M     movwi --SP
00F4   08??           00652     movfw ball_x
00F5   2???           00653     call between
00F6   1C03           00654     skpc
00F7   3???           00655     bra collision_exit
00F8   30FC           00656     movlw -4
00F9   00??           00657     movwf ball_dy
00FA   3???           00658     bra collision_exit
                      00659 ; row1 collision?    
00FB                  00660 row1_coll    
00FB   3043           00661     movlw ROW1_Y-BRICK_HEIGHT+1
                      00662     pushw
00FC   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FD   3052           00663     movlw ROW1_Y+BRICK_HEIGHT
                      00664     pushw
00FE   0019               M     movwi --SP
00FF   08??           00665     movfw ball_y
0100   2???           00666     call between
0101   1C03           00667     skpc
0102   3???           00668     bra row2_coll
                      00669 ; ball inside row1 bounds
0103   0800           00670     movfw T
0104   05??           00671     andwf row1, W
0105   1903           00672     skpnz
0106   3???           00673     bra collision_exit
0107   0900           00674     comf T,W
0108   05??           00675     andwf row1
0109   3009           00676     movlw 9
010A   2???           00677     call inc_score
010B   3???           00678     bra bounce_y
                      00679 ; row2 collision?    
010C                  00680 row2_coll
010C   304B           00681     movlw ROW2_Y-BRICK_HEIGHT+1
                      00682     pushw
010D   0019               M     movwi --SP
010E   305A           00683     movlw ROW2_Y+BRICK_HEIGHT
                      00684     pushw
010F   0019               M     movwi --SP
0110   08??           00685     movfw ball_y
0111   2???           00686     call between
0112   1C03           00687     skpc
0113   3???           00688     bra row3_coll
0114   0800           00689     movfw T
0115   05??           00690     andwf row2, W
0116   1903           00691     skpnz
0117   3???           00692     bra collision_exit
0118   0900           00693     comf T,W
0119   05??           00694     andwf row2
011A   3006           00695     movlw 6
011B   2???           00696     call inc_score
011C   3???           00697     bra bounce_y
                      00698 ; row3 collision?    
011D                  00699 row3_coll
011D   3053           00700     movlw ROW3_Y-BRICK_HEIGHT+1
                      00701     pushw
011E   0019               M     movwi --SP
011F   3062           00702     movlw ROW3_Y+BRICK_HEIGHT
                      00703     pushw
0120   0019               M     movwi --SP
0121   08??           00704     movfw ball_y
0122   2???           00705     call between
0123   1C03           00706     skpc
0124   3???           00707     bra row4_coll
0125   0800           00708     movfw T
0126   05??           00709     andwf row3,W
0127   1903           00710     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0128   3???           00711     bra collision_exit
0129   0900           00712     comf T,W
012A   05??           00713     andwf row3
012B   3003           00714     movlw 3
012C   2???           00715     call inc_score
012D   3???           00716     bra bounce_y
                      00717 ; row4 collision?    
012E                  00718 row4_coll
012E   305B           00719     movlw ROW4_Y-BRICK_HEIGHT+1
                      00720     pushw
012F   0019               M     movwi --SP
0130   306A           00721     movlw ROW4_Y+BRICK_HEIGHT
                      00722     pushw
0131   0019               M     movwi --SP
0132   08??           00723     movfw ball_y
0133   2???           00724     call between
0134   1C03           00725     skpc
0135   3???           00726     bra row5_coll
0136   0800           00727     movfw T
0137   05??           00728     andwf row4,W
0138   1903           00729     skpnz
0139   3???           00730     bra collision_exit
013A   0900           00731     comf T,W
013B   05??           00732     andwf row4
013C   3002           00733     movlw 2
013D   2???           00734     call inc_score
013E   3???           00735     bra bounce_y
                      00736 ; row5 collision?    
013F                  00737 row5_coll    
013F   3063           00738     movlw ROW5_Y-BRICK_HEIGHT+1
                      00739     pushw
0140   0019               M     movwi --SP
0141   3072           00740     movlw ROW5_Y+BRICK_HEIGHT
                      00741     pushw
0142   0019               M     movwi --SP
0143   08??           00742     movfw ball_y
0144   2???           00743     call between
0145   1C03           00744     skpc
0146   3???           00745     bra collision_exit
0147   0800           00746     movfw T
0148   05??           00747     andwf row5,W
0149   1903           00748     skpnz
014A   3???           00749     bra collision_exit
014B   0900           00750     comf T,W
014C   05??           00751     andwf row5
014D   3001           00752     movlw 1
014E   2???           00753     call inc_score
014F                  00754 bounce_y
014F   09??           00755     comf ball_dy
0150   0A??           00756     incf ball_dy
0151                  00757 collision_exit
                      00758     popw
0151   0012               M     moviw SP++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0152   0A??           00759     incf task
0153   0A??           00760     incf lcount
                      00761     leave
0154   2???               M     goto isr_exit
                      00762 
                      00763 ; check if  lb <= x < hb
                      00764 ; input:
                      00765 ;    WREG  x
                      00766 ;    stack ( lb hb -- )     
                      00767 ; output:
                      00768 ;   Carry bit set if true    
0155                  00769 between
0155   00??           00770     movwf temp
                      00771     pickn 1
0156   3F01               M     moviw 1[SP]
0157   02??           00772     subwf temp,W
0158   1C03           00773     skpc
0159   3???           00774     bra between_exit
015A   0800           00775     movfw T
015B   02??           00776     subwf temp
015C   0803           00777     movfw STATUS
015D   3A01           00778     xorlw 1
015E   0083           00779     movwf STATUS
015F                  00780 between_exit    
                      00781     dropn 2
015F   3102               M     addfsr T,2
0160   0008           00782     return
                      00783     
                      00784 ; task 7,  sound timer
0161                  00785 sound
0161   0A??           00786     incf task
0162   0A??           00787     incf lcount
0163   1D80           00788     btfss flags, F_SOUND
                      00789     leave
0164   2???               M     goto isr_exit
0165   002?           00790     banksel sound_timer
0166   0B??           00791     decfsz sound_timer
                      00792     leave
0167   2???               M     goto isr_exit
0168   1180           00793     bcf flags, F_SOUND
0169   003B           00794     banksel PWM2CON
016A   132B           00795     bcf PWM2CON,OE
016B   13AB           00796     bcf PWM2CON,EN
                      00797     leave
016C   2???               M     goto isr_exit
                      00798     
                      00799 ; task 8, wait for first video line
016D                  00800 video_first
016D   0A??           00801     incf lcount
016E   301E           00802     movlw FIRST_VIDEO_LINE
016F   02??           00803     subwf lcount,W
0170   1D03           00804     skpz
                      00805     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0171   2???               M     goto isr_exit
0172   01??           00806     clrf slice
0173   0A??           00807     incf task
                      00808     leave
0174   2???               M     goto isr_exit
                      00809    
                      00810 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00811 ; The following tasks are responsible to render video display.
                      00812 ; Each video line must be completed by setting color to black.
                      00813 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00814     
                      00815  
                      00816 ; task 8, draw score en ball count
0175                  00817 draw_score ; lcount enter at 30 leave at 50
0175   0021           00818     banksel TRISA
0176   08??           00819     movfw slice
0177   3689           00820     lsrf WREG
0178   3689           00821     lsrf WREG
                      00822     pushw
0179   0019               M     movwi --SP
017A   300F           00823     movlw 0xf
017B   05??           00824     andwf score+1,W
017C   2???           00825     call digit_offset
017D   0700           00826     addwf T,W
017E   2???           00827     call digits
017F   00??           00828     movwf d3
0180   0E??           00829     swapf score+1,W
0181   390F           00830     andlw 0xf
0182   2???           00831     call digit_offset
0183   0700           00832     addwf T,W
0184   2???           00833     call digits
0185   00??           00834     movwf d2
0186   300F           00835     movlw 0xf
0187   05??           00836     andwf score,W
0188   2???           00837     call digit_offset
0189   0700           00838     addwf T,W
018A   2???           00839     call digits
018B   2???           00840     call digit_row
018C   08??           00841     movfw d2
018D   2???           00842     call digit_row
018E   08??           00843     movfw d3
018F   2???           00844     call digit_row
                      00845     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
0190   3014               M     movlw q
0191   0B89               M     decfsz WREG
0192   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
0193   120C           00846     bcf TRISA,VIDEO_OUT
                      00847     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
0194   3001               M     movlw q
0195   0B89               M     decfsz WREG
0196   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0197   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0198   160C           00848     bsf TRISA,VIDEO_OUT
                      00849     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0199   300A               M     movlw q
019A   0B89               M     decfsz WREG
019B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
019C   08??           00850     movfw balls
019D   2???           00851     call digit_offset
019E   0700           00852     addwf T,W
019F   2???           00853     call digits
01A0   2???           00854     call digit_row
01A1                  00855 score_exit
                      00856     next_task 5*4
01A1   0A??               M     incf slice
01A2   3014               M     movlw 5*4
01A3   02??               M     subwf slice,W
01A4   1D03               M     skpz
                          M     leave
01A5   2???               M     goto isr_exit
01A6   01??               M     clrf slice
01A7   0A??               M     incf task
01A8   3014               M     movlw 5*4
01A9   07??               M     addwf lcount
                          M     leave
01AA   2???               M     goto isr_exit
                      00857 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002            00858 digit_version equ 2
                      00859 ; display digit row    
01AB                  00860 digit_row
                      00861  if digit_version==1
                      00862     rlf WREG
                      00863     skpnc
                      00864     bcf TRISA,VIDEO_OUT
                      00865     rlf WREG
                      00866     bra $+1
                      00867     bsf TRISA,VIDEO_OUT
                      00868     skpnc
                      00869     bcf TRISA,VIDEO_OUT
                      00870     rlf WREG
                      00871     bra $+1
                      00872     bsf TRISA,VIDEO_OUT
                      00873     skpnc
                      00874     bcf TRISA,VIDEO_OUT
                      00875     nop
                      00876     bra $+1
                      00877     bsf TRISA,VIDEO_OUT
                      00878  else
01AB   0D89           00879     rlf WREG
01AC   1803           00880     skpnc
01AD   120C           00881     bcf TRISA,VIDEO_OUT
01AE   1C03           00882     skpc
01AF   160C           00883     bsf TRISA,VIDEO_OUT
01B0   0D89           00884     rlf WREG
01B1   1803           00885     skpnc
01B2   120C           00886     bcf TRISA,VIDEO_OUT
01B3   1C03           00887     skpc
01B4   160C           00888     bsf TRISA,VIDEO_OUT
01B5   0D89           00889     rlf WREG
01B6   1803           00890     skpnc
01B7   120C           00891     bcf TRISA,VIDEO_OUT
01B8   1C03           00892     skpc
01B9   160C           00893     bsf TRISA,VIDEO_OUT
01BA   3???           00894     bra $+1
01BB   3???           00895     bra $+1
01BC   160C           00896     bsf TRISA,VIDEO_OUT
                      00897  endif
01BD   0008           00898     return
                      00899     
                      00900 ; task 9,  draw top wall, 8 screen lines    
01BE                  00901 draw_top_wall ;lcount enter at 50 leave at 58
01BE   1C80           00902     btfss flags, F_EVEN
01BF   3???           00903     bra top_wall_exit
01C0   0021           00904     banksel TRISA
                      00905     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
  0002                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
01C1   3010               M     movlw q
01C2   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C3   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01C4   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00906     white
                          M ;    banksel TRISA
01C5   148C               M     bsf TRISA,CHROMA
01C6   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00907     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
01C7   3057               M     movlw q
01C8   0B89               M     decfsz WREG
01C9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00908     black
                          M ;    banksel TRISA
01CA   148C               M     bsf TRISA,CHROMA
01CB   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
01CC                  00909 top_wall_exit
                      00910     next_task BRICK_HEIGHT
01CC   0A??               M     incf slice
01CD   3008               M     movlw BRICK_HEIGHT
01CE   02??               M     subwf slice,W
01CF   1D03               M     skpz
                          M     leave
01D0   2???               M     goto isr_exit
01D1   01??               M     clrf slice
01D2   0A??               M     incf task
01D3   3008               M     movlw BRICK_HEIGHT
01D4   07??               M     addwf lcount
                          M     leave
01D5   2???               M     goto isr_exit
                      00911 
                      00912 ; task 10,  only on even field draw vertical side bands.    
01D6                  00913 draw_void ;enter at 58 leave at 74| 255-58
01D6   1C80           00914     btfss flags, F_EVEN
01D7   3???           00915     bra no_wall_draw
01D8   08??           00916     movfw ball_y
01D9   02??           00917     subwf lcount,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DA   1C03           00918     skpc
01DB   3???           00919     bra no_ball_dly
01DC   3008           00920     movlw 8
01DD   07??           00921     addwf ball_y,W
01DE   02??           00922     subwf lcount,W
01DF   1C03           00923     skpc
01E0   3???           00924     bra yes_ball
01E1   3???           00925     bra no_ball
01E2                  00926 no_ball_dly
                      00927     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
01E2   3002               M     movlw q
01E3   0B89               M     decfsz WREG
01E4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01E5                  00928 no_ball    
                      00929     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
01E5   300D               M     movlw q
01E6   0B89               M     decfsz WREG
01E7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00930     draw_border BORDER_WIDTH
01E8   0021               M     banksel TRISA
01E9   148C               M     bsf TRISA,CHROMA
01EA   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
01EB   3001               M     movlw q
01EC   0B89               M     decfsz WREG
01ED   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
01EE   0000               M     nop
                          M     endif
01EF   160C               M     bsf TRISA,VIDEO_OUT
                      00931     black
                          M ;    banksel TRISA
01F0   148C               M     bsf TRISA,CHROMA
01F1   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00932     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
01F2   3052               M     movlw q
01F3   0B89               M     decfsz WREG
01F4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01F5   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00933     draw_border BORDER_WIDTH
01F6   0021               M     banksel TRISA
01F7   148C               M     bsf TRISA,CHROMA
01F8   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
01F9   3001               M     movlw q
01FA   0B89               M     decfsz WREG
01FB   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01FC   0000               M     nop
                          M     endif
01FD   160C               M     bsf TRISA,VIDEO_OUT
01FE   3???           00934     bra draw_void_exit
01FF                  00935 yes_ball
01FF   0021           00936     banksel TRISA
0200   08??           00937     movfw ball_x
0201   1903           00938     skpnz
0202   3???           00939     bra ball_at_left
0203   3C52           00940     sublw BALL_RIGHT_BOUND
0204   1903           00941     skpnz
0205   3???           00942     bra ball_at_right
0206                  00943 ball_in_middle    
                      00944     tdelay LEFT_MARGIN-17
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000B                    M     variable q=(LEFT_MARGIN-17)/3
  0002                    M     variable r=(LEFT_MARGIN-17)%3
                          M     if (q)
0206   300B               M     movlw q
0207   0B89               M     decfsz WREG
0208   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0209   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
020A   120C           00945     bcf TRISA,VIDEO_OUT
                      00946     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
020B   3001               M     movlw q
020C   0B89               M     decfsz WREG
020D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
020E   08??           00947     movfw ball_x
020F   160C           00948     bsf TRISA,VIDEO_OUT
0210   0B89           00949     decfsz WREG
0211   3???           00950     bra $-1
0212   120C           00951     bcf TRISA, VIDEO_OUT
                      00952     tdelay BALL_WIDTH
  0002                    M     variable q=(BALL_WIDTH)/3
  0002                    M     variable r=(BALL_WIDTH)%3
                          M     if (q)
0213   3002               M     movlw q
0214   0B89               M     decfsz WREG
0215   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0216   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0217   160C           00953     bsf TRISA,VIDEO_OUT
0218   08??           00954     movfw ball_x
0219   3C4F           00955     sublw BALL_RIGHT_BOUND-3
021A   1C03           00956     skpc
021B   3???           00957     bra $+6
021C   1903           00958     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021D   3???           00959     bra $+4
021E   0B89           00960     decfsz WREG
021F   3???           00961     bra $-1
0220   0000           00962     nop
0221   120C           00963     bcf TRISA,VIDEO_OUT
                      00964     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0222   3001               M     movlw q
0223   0B89               M     decfsz WREG
0224   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0225   0000               M     nop
                          M     endif
0226   160C           00965     bsf TRISA,VIDEO_OUT
0227   3???           00966     bra draw_void_exit
0228                  00967 ball_at_left
                      00968     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0228   300C               M     movlw q
0229   0B89               M     decfsz WREG
022A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
022B   0000               M     nop
                          M     endif
022C   120C           00969     bcf TRISA,VIDEO_OUT
                      00970     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
022D   3004               M     movlw q
022E   0B89               M     decfsz WREG
022F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0230   160C           00971     bsf TRISA,VIDEO_OUT
                      00972     tdelay COURT_WIDTH-6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
0231   3050               M     movlw q
0232   0B89               M     decfsz WREG
0233   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0234   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0235   0000           00973     nop
0236   120C           00974     bcf TRISA,VIDEO_OUT
                      00975     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0237   3001               M     movlw q
0238   0B89               M     decfsz WREG
0239   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
023A   0000               M     nop
                          M     endif
023B   160C           00976     bsf TRISA,VIDEO_OUT
023C   3???           00977     bra draw_void_exit
023D                  00978 ball_at_right
                      00979     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
023D   300B               M     movlw q
023E   0B89               M     decfsz WREG
023F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0240   0000               M     nop
                          M     endif
0241   120C           00980     bcf TRISA,VIDEO_OUT
                      00981     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0242   3001               M     movlw q
0243   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0245   0000               M     nop
                          M     endif
0246   160C           00982     bsf TRISA,VIDEO_OUT
                      00983     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0247   3052               M     movlw q
0248   0B89               M     decfsz WREG
0249   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
024A   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
024B   0000           00984     nop
024C   120C           00985     bcf TRISA,VIDEO_OUT
                      00986     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
024D   3004               M     movlw q
024E   0B89               M     decfsz WREG
024F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0250   160C           00987     bsf TRISA,VIDEO_OUT
0251                  00988 draw_void_exit    
0251   0A??           00989     incf slice
0252   0A??           00990     incf lcount
0253   30FB           00991     movlw LAST_VIDEO_LINE+1
0254   02??           00992     subwf lcount,W
0255   1D03           00993     skpz
                      00994     leave
0256   2???               M     goto isr_exit
0257   01??           00995     clrf slice
0258   3013           00996     movlw 19
0259   00??           00997     movwf task
                      00998     leave
025A   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00999     ;    next_task 125*BRICK_HEIGHT
025B                  01000 no_wall_draw
                      01001     next_task 2*BRICK_HEIGHT
025B   0A??               M     incf slice
025C   3010               M     movlw 2*BRICK_HEIGHT
025D   02??               M     subwf slice,W
025E   1D03               M     skpz
                          M     leave
025F   2???               M     goto isr_exit
0260   01??               M     clrf slice
0261   0A??               M     incf task
0262   3010               M     movlw 2*BRICK_HEIGHT
0263   07??               M     addwf lcount
                          M     leave
0264   2???               M     goto isr_exit
                      01002     
                      01003 ; task 11, draw top brick row
0265                  01004 draw_row1 ; lcount enter at 74 leave at 82
                      01005     chroma_ref
0265   003B               M     banksel PWM1CON
0266   121B               M     bcf PWM1CON,POL
0267   0021           01006     banksel TRISA
0268   08??           01007     movfw row1
0269   00??           01008     movwf temp
                      01009     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
026A   3010               M     movlw q
026B   0B89               M     decfsz WREG
026C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
026D   0000               M     nop
                          M     endif
                      01010 ;    draw_border BORDER_WIDTH
                      01011     draw_wall yellow
  0000                    M     local next_brick
026E   3008               M     movlw 8
                          M     pushw
026F   0019               M     movwi --SP
0270                      M next_brick    
0270   35??               M     lslf temp
                          M     draw_brick yellow
  0000                    M     local no_brick
  0000                    M     local brick_delay
0271   1C03               M     skpc
0272   3???               M     bra no_brick
                          M     yellow
                          M ;    chroma_ref
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;    banksel TRISA
0273   120C               M     bcf TRISA,VIDEO_OUT
0274   108C               M     bcf TRISA,CHROMA
0275   0000               M     nop
0276   3???               M     bra brick_delay
0277                      M no_brick
                          M     black
                          M ;    banksel TRISA
0277   148C               M     bsf TRISA,CHROMA
0278   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0279   3???               M     bra brick_delay 
027A                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
027A   3007               M     movlw q
027B   0B89               M     decfsz WREG
027C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
027D   0B80               M     decfsz T
027E   3???               M     bra next_brick
                          M     dropn 1
027F   3101               M     addfsr T,1
                      01012     black
                          M ;    banksel TRISA
0280   148C               M     bsf TRISA,CHROMA
0281   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01013     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0282   3001               M     movlw q
0283   0B89               M     decfsz WREG
0284   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01014 ;    draw_border BORDER_WIDTH
                      01015     next_task BRICK_HEIGHT
0285   0A??               M     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0286   3008               M     movlw BRICK_HEIGHT
0287   02??               M     subwf slice,W
0288   1D03               M     skpz
                          M     leave
0289   2???               M     goto isr_exit
028A   01??               M     clrf slice
028B   0A??               M     incf task
028C   3008               M     movlw BRICK_HEIGHT
028D   07??               M     addwf lcount
                          M     leave
028E   2???               M     goto isr_exit
                      01016     
                      01017 ; task 12, draw 2nd brick row    
028F                  01018 draw_row2 ;lcount enter at 82 leave at 90
                      01019     chroma_invert
028F   003B               M     banksel PWM1CON
0290   161B               M     bsf PWM1CON,POL
0291   002?           01020     banksel row2
0292   08??           01021     movfw row2
0293   00??           01022     movwf temp
                      01023     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
0294   3010               M     movlw q
0295   0B89               M     decfsz WREG
0296   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0297   0000               M     nop
                          M     endif
                      01024 ;    draw_border BORDER_WIDTH
                      01025     draw_wall cyan
  0000                    M     local next_brick
0298   3008               M     movlw 8
                          M     pushw
0299   0019               M     movwi --SP
029A                      M next_brick    
029A   35??               M     lslf temp
                          M     draw_brick cyan
  0000                    M     local no_brick
  0000                    M     local brick_delay
029B   1C03               M     skpc
029C   3???               M     bra no_brick
                          M     cyan
                          M ;    chroma_invert
                          M ;    banksel TRISA
029D   120C               M     bcf TRISA,VIDEO_OUT
029E   108C               M     bcf TRISA,CHROMA
029F   0000               M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A0   3???               M     bra brick_delay
02A1                      M no_brick
                          M     black
                          M ;    banksel TRISA
02A1   148C               M     bsf TRISA,CHROMA
02A2   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02A3   3???               M     bra brick_delay 
02A4                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02A4   3007               M     movlw q
02A5   0B89               M     decfsz WREG
02A6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02A7   0B80               M     decfsz T
02A8   3???               M     bra next_brick
                          M     dropn 1
02A9   3101               M     addfsr T,1
                      01026     black
                          M ;    banksel TRISA
02AA   148C               M     bsf TRISA,CHROMA
02AB   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01027     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02AC   3001               M     movlw q
02AD   0B89               M     decfsz WREG
02AE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01028 ;    draw_border BORDER_WIDTH
                      01029     next_task BRICK_HEIGHT
02AF   0A??               M     incf slice
02B0   3008               M     movlw BRICK_HEIGHT
02B1   02??               M     subwf slice,W
02B2   1D03               M     skpz
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B3   2???               M     goto isr_exit
02B4   01??               M     clrf slice
02B5   0A??               M     incf task
02B6   3008               M     movlw BRICK_HEIGHT
02B7   07??               M     addwf lcount
                          M     leave
02B8   2???               M     goto isr_exit
                      01030 
                      01031 ; task 13, draw 3rd brick row    
02B9                  01032 draw_row3 ; lcount enter at 90 leave at 98
                      01033 ;    btfss flags, F_EVEN
                      01034 ;    bra row3_exit
                      01035     chroma_ref
02B9   003B               M     banksel PWM1CON
02BA   121B               M     bcf PWM1CON,POL
02BB   002?           01036     banksel row3
02BC   08??           01037     movfw row3
02BD   00??           01038     movwf temp
                      01039     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
02BE   3010               M     movlw q
02BF   0B89               M     decfsz WREG
02C0   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02C1   0000               M     nop
                          M     endif
                      01040 ;    draw_border BORDER_WIDTH
                      01041     draw_wall green
  0000                    M     local next_brick
02C2   3008               M     movlw 8
                          M     pushw
02C3   0019               M     movwi --SP
02C4                      M next_brick    
02C4   35??               M     lslf temp
                          M     draw_brick green
  0000                    M     local no_brick
  0000                    M     local brick_delay
02C5   1C03               M     skpc
02C6   3???               M     bra no_brick
                          M     green
                          M ;    chroma_ref
                          M ;    banksel TRISA
02C7   160C               M     bsf TRISA, VIDEO_OUT
02C8   108C               M     bcf TRISA,CHROMA
02C9   0000               M     nop
02CA   3???               M     bra brick_delay
02CB                      M no_brick
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     black
                          M ;    banksel TRISA
02CB   148C               M     bsf TRISA,CHROMA
02CC   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02CD   3???               M     bra brick_delay 
02CE                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02CE   3007               M     movlw q
02CF   0B89               M     decfsz WREG
02D0   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02D1   0B80               M     decfsz T
02D2   3???               M     bra next_brick
                          M     dropn 1
02D3   3101               M     addfsr T,1
                      01042     black
                          M ;    banksel TRISA
02D4   148C               M     bsf TRISA,CHROMA
02D5   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01043     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02D6   3001               M     movlw q
02D7   0B89               M     decfsz WREG
02D8   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01044 ;    draw_border BORDER_WIDTH
02D9                  01045 row3_exit    
                      01046     next_task BRICK_HEIGHT
02D9   0A??               M     incf slice
02DA   3008               M     movlw BRICK_HEIGHT
02DB   02??               M     subwf slice,W
02DC   1D03               M     skpz
                          M     leave
02DD   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DE   01??               M     clrf slice
02DF   0A??               M     incf task
02E0   3008               M     movlw BRICK_HEIGHT
02E1   07??               M     addwf lcount
                          M     leave
02E2   2???               M     goto isr_exit
                      01047     
                      01048 ; task 14, draw 4th brick row    
02E3                  01049 draw_row4 ; lcount enter at 98 leave at 106
                      01050     chroma_invert
02E3   003B               M     banksel PWM1CON
02E4   161B               M     bsf PWM1CON,POL
02E5   002?           01051     banksel row4
02E6   08??           01052     movfw row4
02E7   00??           01053     movwf temp
                      01054     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
02E8   3010               M     movlw q
02E9   0B89               M     decfsz WREG
02EA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02EB   0000               M     nop
                          M     endif
                      01055 ;    draw_border BORDER_WIDTH
                      01056     draw_wall dark_blue
  0000                    M     local next_brick
02EC   3008               M     movlw 8
                          M     pushw
02ED   0019               M     movwi --SP
02EE                      M next_brick    
02EE   35??               M     lslf temp
                          M     draw_brick dark_blue
  0000                    M     local no_brick
  0000                    M     local brick_delay
02EF   1C03               M     skpc
02F0   3???               M     bra no_brick
                          M     dark_blue
                          M ;    chroma_invert
                          M ;    banksel TRISA
02F1   160C               M     bsf TRISA, VIDEO_OUT
02F2   108C               M     bcf TRISA,CHROMA
02F3   0000               M     nop
02F4   3???               M     bra brick_delay
02F5                      M no_brick
                          M     black
                          M ;    banksel TRISA
02F5   148C               M     bsf TRISA,CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F6   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02F7   3???               M     bra brick_delay 
02F8                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02F8   3007               M     movlw q
02F9   0B89               M     decfsz WREG
02FA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02FB   0B80               M     decfsz T
02FC   3???               M     bra next_brick
                          M     dropn 1
02FD   3101               M     addfsr T,1
                      01057     black
                          M ;    banksel TRISA
02FE   148C               M     bsf TRISA,CHROMA
02FF   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01058     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0300   3001               M     movlw q
0301   0B89               M     decfsz WREG
0302   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01059 ;    draw_border BORDER_WIDTH
                      01060     next_task BRICK_HEIGHT
0303   0A??               M     incf slice
0304   3008               M     movlw BRICK_HEIGHT
0305   02??               M     subwf slice,W
0306   1D03               M     skpz
                          M     leave
0307   2???               M     goto isr_exit
0308   01??               M     clrf slice
0309   0A??               M     incf task
030A   3008               M     movlw BRICK_HEIGHT
030B   07??               M     addwf lcount
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
030C   2???               M     goto isr_exit
                      01061 
                      01062 ; task 15, draw 5th brick row    
030D                  01063 draw_row5 ; lcount enter at 106 leave at 114
030D   002?           01064     banksel row5
030E   08??           01065     movfw row5
030F   00??           01066     movwf temp
                      01067     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
  0002                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
0310   3010               M     movlw q
0311   0B89               M     decfsz WREG
0312   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0313   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01068 ;    draw_border BORDER_WIDTH
                      01069     draw_wall white
  0000                    M     local next_brick
0314   3008               M     movlw 8
                          M     pushw
0315   0019               M     movwi --SP
0316                      M next_brick    
0316   35??               M     lslf temp
                          M     draw_brick white
  0000                    M     local no_brick
  0000                    M     local brick_delay
0317   1C03               M     skpc
0318   3???               M     bra no_brick
                          M     white
                          M ;    banksel TRISA
0319   148C               M     bsf TRISA,CHROMA
031A   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
031B   0000               M     nop
031C   3???               M     bra brick_delay
031D                      M no_brick
                          M     black
                          M ;    banksel TRISA
031D   148C               M     bsf TRISA,CHROMA
031E   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
031F   3???               M     bra brick_delay 
0320                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
0320   3007               M     movlw q
0321   0B89               M     decfsz WREG
0322   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0323   0B80               M     decfsz T
0324   3???               M     bra next_brick
                          M     dropn 1
0325   3101               M     addfsr T,1
                      01070     black
                          M ;    banksel TRISA
0326   148C               M     bsf TRISA,CHROMA
0327   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01071     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0328   3001               M     movlw q
0329   0B89               M     decfsz WREG
032A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01072 ;    draw_border BORDER_WIDTH
                      01073     black
                          M ;    banksel TRISA
032B   148C               M     bsf TRISA,CHROMA
032C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01074     next_task BRICK_HEIGHT
032D   0A??               M     incf slice
032E   3008               M     movlw BRICK_HEIGHT
032F   02??               M     subwf slice,W
0330   1D03               M     skpz
                          M     leave
0331   2???               M     goto isr_exit
0332   01??               M     clrf slice
0333   0A??               M     incf task
0334   3008               M     movlw BRICK_HEIGHT
0335   07??               M     addwf lcount
                          M     leave
0336   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01075 
                      01076 ; task 16,draw all rows between paddle and lower brick row    
0337                  01077 draw_empty ; lcount enter at 114 leave at LAST_VIDEO-112-BRICK_HEIGHT 
                      01078     tdelay LEFT_MARGIN
  0011                    M     variable q=(LEFT_MARGIN)/3
  0001                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0337   3011               M     movlw q
0338   0B89               M     decfsz WREG
0339   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
033A   0000               M     nop
                          M     endif
                      01079 ;    draw_border BORDER_WIDTH
                      01080     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
033B   306A               M     movlw q
033C   0B89               M     decfsz WREG
033D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
033E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01081 ;    draw_border BORDER_WIDTH
                      01082     black
                          M ;    banksel TRISA
033F   148C               M     bsf TRISA,CHROMA
0340   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01083     next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
0341   0A??               M     incf slice
0342   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
0343   02??               M     subwf slice,W
0344   1D03               M     skpz
                          M     leave
0345   2???               M     goto isr_exit
0346   01??               M     clrf slice
0347   0A??               M     incf task
0348   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
0349   07??               M     addwf lcount
                          M     leave
034A   2???               M     goto isr_exit
                      01084 
                      01085     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01086 ; task 18, draw paddle at bottom screen    
034B                  01087 draw_paddle
                      01088     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
034B   3012               M     movlw q
034C   0B89               M     decfsz WREG
034D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
034E   08??           01089     movfw paddle_pos
034F   1903           01090     skpnz
0350   3???           01091     bra $+3
0351   0B89           01092     decfsz WREG
0352   3???           01093     bra $-1
0353   0021           01094     banksel TRISA
0354   120C           01095     bcf TRISA,VIDEO_OUT
                      01096     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
0355   300A               M     movlw q
0356   0B89               M     decfsz WREG
0357   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0358   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0359   160C           01097     bsf TRISA,VIDEO_OUT
                      01098     next_task PADDLE_TICKNESS
035A   0A??               M     incf slice
035B   3008               M     movlw PADDLE_TICKNESS
035C   02??               M     subwf slice,W
035D   1D03               M     skpz
                          M     leave
035E   2???               M     goto isr_exit
035F   01??               M     clrf slice
0360   0A??               M     incf task
0361   3008               M     movlw PADDLE_TICKNESS
0362   07??               M     addwf lcount
                          M     leave
0363   2???               M     goto isr_exit
                      01099 
                      01100 ; task 19,  wait end of this field, reset task to zero    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0364                  01101 wait_field_end
0364   0A??           01102     incf lcount
0365   1903           01103     skpnz
0366   1400           01104     bsf flags, F_HI_LINE
0367   1800           01105     btfsc flags, F_HI_LINE
0368   2???           01106     goto hi_line
                      01107     leave
0369   2???               M     goto isr_exit
036A                  01108 hi_line
036A   1880           01109     btfsc flags,F_EVEN
036B   2???           01110     goto even_field
036C   3005           01111     movlw 5
036D   02??           01112     subwf lcount,W
036E   1D03           01113     skpz
                      01114     leave
036F   2???               M     goto isr_exit
0370   2???           01115     goto field_end
0371                  01116 even_field
0371   3006           01117     movlw 6
0372   02??           01118     subwf lcount,W
0373   1D03           01119     skpz
                      01120     leave
0374   2???               M     goto isr_exit
                      01121 ; even field last line is half_line    
                      01122 ; set PWM3 for line 263 half-line
0375   003B           01123     banksel PWM3DC
0376   3003           01124     movlw high HALF_LINE
0377   00B6           01125     movwf PWM3PRH
0378   308D           01126     movlw low HALF_LINE
0379   00B5           01127     movwf PWM3PRL
037A   17BF           01128     bsf PWM3LDCON,7
037B                  01129 field_end
037B   01??           01130     clrf task
037C   01??           01131     clrf slice
037D   01??           01132     clrf lcount
037E   1000           01133     bcf flags, F_HI_LINE
037F   1500           01134     bsf flags, F_SYNC
                      01135 ; toggle odd/even field flag    
0380   3002           01136     movlw 1<<F_EVEN
0381   06??           01137     xorwf flags
                      01138     leave
0382   2???               M     goto isr_exit
                      01139 
                      01140 ; helper functions
                      01141 
                      01142 ; add 2 BCD digits
                      01143 ; parameters:
                      01144 ;   WREG -> first digit
                      01145 ;   T -> second digit
                      01146 ;   C -> carry from previous digits add    
                      01147 ; output:
                      01148 ;   T -> sum
                      01149 ;   C -> overflow
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0383                  01150 bcd_add
0383   3D80           01151     addwfc T    
0384   300A           01152     movlw 10
0385   0200           01153     subwf T,W
0386   1C03           01154     skpc
0387   0008           01155     return
0388   3006           01156     movlw 6
0389   0780           01157     addwf T
038A   300F           01158     movlw 15
038B   0580           01159     andwf T
038C   1403           01160     bsf STATUS,C
038D   0008           01161     return
                      01162     
                      01163 ; increment user score
                      01164 ; This is a BCD addition where a single digit is added to score.   
                      01165 ; score is stored as big indian
                      01166 ; argument: 
                      01167 ;   WREG ->  bdc digit to add to score variable
038E                  01168 inc_score
                      01169     pushw
038E   0019               M     movwi --SP
038F   1003           01170     clrc
0390   300F           01171     movlw 15
0391   05??           01172     andwf score+1,W
0392   2???           01173     call bcd_add
0393   0103           01174     clrw 
                      01175     pushw
0394   0019               M     movwi --SP
0395   0E??           01176     swapf score+1,W
0396   390F           01177     andlw 15
0397   2???           01178     call bcd_add
0398   1803           01179     skpnc
0399   0A??           01180     incf score
                      01181     popw
039A   0012               M     moviw SP++
039B   0E89           01182     swapf WREG
039C   0400           01183     iorwf T,W
039D   00??           01184     movwf score+1
                      01185     dropn 1
039E   3101               M     addfsr T,1
039F   0008           01186     return
                      01187     
                      01188 ;***********************************
                      01189 ; digit_offset, compute digit position in 'digits' table
                      01190 ;   position = digit * 5
                      01191 ; 
                      01192 ; input: WREG -> digit value {0..9}
                      01193 ;         
                      01194 ; output: WREG -> displacement in table
                      01195 ;***********************************
03A0                  01196 digit_offset    
                      01197     pushw 
03A0   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A1   3589           01198     lslf WREG
03A2   3589           01199     lslf WREG
03A3   0780           01200     addwf T
                      01201     popw
03A4   0012               M     moviw SP++
03A5   0008           01202     return
                      01203     
03A6                  01204 init_brick_wall
03A6   30??           01205     movlw high row1
03A7   0087           01206     movwf FSR1H
03A8   30??           01207     movlw low row1
03A9   0086           01208     movwf FSR1L
03AA   3005           01209     movlw 5
03AB   00??           01210     movwf temp
03AC   30FF           01211     movlw 0xff
03AD                  01212 ibw    
03AD   001E           01213     movwi FSR1++
03AE   0B??           01214     decfsz temp
03AF   3???           01215     bra ibw
03B0   0008           01216     return
                      01217 
03B1                  01218 set_ball_dx
03B1   3007           01219     movlw 7
03B2   05??           01220     andwf ticks,W
03B3   3589           01221     lslf WREG
03B4   000B           01222     brw
03B5   3000           01223     movlw 0
03B6   3???           01224     bra set_ball_dx_exit
03B7   3001           01225     movlw 1
03B8   3???           01226     bra set_ball_dx_exit
03B9   30FF           01227     movlw -1
03BA   3???           01228     bra set_ball_dx_exit
03BB   3000           01229     movlw 0
03BC   3???           01230     bra set_ball_dx_exit
03BD   3001           01231     movlw 1
03BE   3???           01232     bra set_ball_dx_exit
03BF   30FF           01233     movlw -1
03C0   3???           01234     bra set_ball_dx_exit
03C1   3000           01235     movlw 0
03C2   3???           01236     bra set_ball_dx_exit
03C3   3001           01237     movlw 1
03C4                  01238 set_ball_dx_exit
03C4   00??           01239     movwf ball_dx
03C5   0008           01240     return
                      01241     
03C6                  01242 game_init
03C6   01??           01243     clrf score
03C7   01??           01244     clrf score+1
03C8   2???           01245     call init_brick_wall
03C9   002?           01246     banksel balls
03CA   3003           01247     movlw 3
03CB   00??           01248     movwf balls
03CC   01??           01249     clrf ball_timer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CD   3004           01250     movlw 4
03CE   07??           01251     addwf paddle_pos,W
03CF   00??           01252     movwf ball_x
03D0   30EB           01253     movlw PADDLE_Y-BRICK_HEIGHT
03D1   00??           01254     movwf ball_y
03D2   2???           01255     call set_ball_dx
03D3   30FC           01256     movlw -4
03D4   00??           01257     movwf ball_dy
03D5   3002           01258     movlw 2
03D6   00??           01259     movwf ball_speed
03D7   1600           01260     bsf flags, F_START
03D8   1280           01261     bcf flags, F_PAUSE
03D9   0008           01262     return
                      01263     
                      01264 ; delay by TIMER0
                      01265 ; parameter
                      01266 ;   WREG -> 2*Tcy+7cy    
03DA                  01267 t0delay 
03DA   0989           01268     comf WREG
03DB   0095           01269     movwf TMR0
03DC   110B           01270     bcf INTCON,T0IF
03DD   1D0B           01271     btfss INTCON,T0IF
03DE   3???           01272     bra $-1
03DF   0008           01273     return
                      01274     
                      01275 MAIN_PROG CODE                      ; let linker place main program
                      01276 
0000                  01277 START
                      01278 ; clear common RAM
0000   0185           01279     clrf FSR0H
0001   3070           01280     movlw 0x70
0002   0084           01281     movwf FSR0L
0003   0103           01282     clrw
0004   001A           01283     movwi FSR0++
0005   1F84           01284     btfss FSR0L,7
0006   3???           01285     bra $-2
                      01286 ; clear banked RAM
0007   0184           01287     clrf FSR0L
0008   3020           01288     movlw 0x20
0009   0085           01289     movwf FSR0H
000A   0103           01290     clrw 
000B   001A           01291     movwi FSR0++
000C   1C05           01292     btfss FSR0H,0
000D   3???           01293     bra $-2
                      01294 ;   setup arguments stack pointer
000E   30??           01295     movlw high (stack+STACK_SIZE)
000F   0085           01296     movwf FSR0H
0010   30??           01297     movlw low (stack+STACK_SIZE)
0011   0084           01298     movwf FSR0L
                      01299 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01300 ; TIMER0 prescale 1:2
0012   3050           01301     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0013   0095           01302     movwf OPTION_REG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01303 ; disable analog inputs, except AN0
0014   0023           01304     banksel ANSELA
0015   018C           01305     clrf ANSELA
                      01306 ; paddle potentiometer input     
0016   140C           01307     bsf ANSELA,PADDLE
0017   0021           01308     banksel ADCON1
0018   3020           01309     movlw (2<<ADCS0)
0019   009E           01310     movwf ADCON1
                      01311 ; pin setup
001A   0024           01312     banksel WPUA
001B   018C           01313     clrf WPUA
001C   0021           01314     banksel TRISA
001D   110C           01315     bcf TRISA,SYNC_OUT
001E   0022           01316     banksel LATA
001F   160C           01317     bsf LATA, VIDEO_OUT
                      01318 ; PWM1 chroma signal on RA1
0020   003B           01319     banksel PWM1CON
0021   019F           01320     clrf PWM1LDCON
0022   0191           01321     clrf PWM1PHL
0023   0192           01322     clrf PWM1PHH
0024   0197           01323     clrf PWM1OFL
0025   0198           01324     clrf PWM1OFH
0026   0196           01325     clrf PWM1PRH
0027   3007           01326     movlw 7
0028   0095           01327     movwf PWM1PRL
0029   3004           01328     movlw 4
002A   0093           01329     movwf PWM1DCL
002B   0194           01330     clrf PWM1DCH
002C   179F           01331     bsf PWM1LDCON,7
002D   30C0           01332     movlw (1<<EN)|(1<<OE)
002E   009B           01333     movwf PWM1CON
                      01334 ; PWM3 set to horizontal period 15734 hertz, output on RA2
002F   003B           01335     banksel PWM3CON
0030   01BF           01336     clrf PWM3LDCON
0031   01B1           01337     clrf PWM3PHL
0032   01B2           01338     clrf PWM3PHH
0033   01B7           01339     clrf PWM3OFL
0034   01B8           01340     clrf PWM3OFH
0035   301B           01341     movlw low HPERIOD
0036   00B5           01342     movwf PWM3PRL
0037   3007           01343     movlw high HPERIOD
0038   00B6           01344     movwf PWM3PRH
0039   3086           01345     movlw HSYNC
003A   00B3           01346     movwf PWM3DCL
003B   01B4           01347     clrf PWM3DCH
003C   30D0           01348     movlw (1<<EN)|(1<<OE)|(1<<POL)
003D   00BB           01349     movwf PWM3CON
003E   17BF           01350     bsf PWM3LDCON,7
003F   143C           01351     bsf PWM3INTE,PRIE
                      01352 ; enbable interrupt    
0040   0020           01353     banksel PIR3
0041   1313           01354     bcf PIR3,PWM3IF
0042   0021           01355     banksel PIE3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   1713           01356     bsf PIE3,PWM3IE
0044   170B           01357     bsf INTCON,PEIE
0045   178B           01358     bsf INTCON,GIE
0046   01??           01359     clrf flags
0047   1500           01360     bsf flags, F_SYNC
                      01361 ; all processing done in ISR    
0048   2???           01362     goto $
                      01363 
                      01364 ; digits character table
0049                  01365 digits
0049   000B           01366     brw
004A   3440 34A0 34A0 01367     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
004F   3440 34C0 3440 01368     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0054   34E0 3420 34C0 01369     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0059   34E0 3420 34C0 01370     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
005E   34A0 34A0 34E0 01371     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0063   34E0 3480 34E0 01372     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0068   34C0 3480 34E0 01373     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
006D   34E0 3420 3420 01374     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0072   34E0 34A0 34E0 01375     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0077   34E0 34A0 34E0 01376     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
                      01377     
                      01378     
                      01379 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01380 max_score 
                      01381  
3FA7 1EFF             01382     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000015
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_TICKNESS                   00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_0096                         00000096
_ISR_009D                         0000009D
_ISR_00D1                         000000D1
_ISR_00D4                         000000D4
_ISR_00E3                         000000E3
_ISR_0192                         00000192
_ISR_0196                         00000196
_ISR_0197                         00000197
_ISR_019B                         0000019B
_ISR_01BA                         000001BA
_ISR_01BB                         000001BB
_ISR_01C3                         000001C3
_ISR_01C4                         000001C4
_ISR_01C9                         000001C9
_ISR_01E4                         000001E4
_ISR_01E7                         000001E7
_ISR_01ED                         000001ED
_ISR_01F4                         000001F4
_ISR_01F5                         000001F5
_ISR_01FB                         000001FB
_ISR_0208                         00000208
_ISR_0209                         00000209
_ISR_020D                         0000020D
_ISR_0211                         00000211
_ISR_0215                         00000215
_ISR_0216                         00000216
_ISR_021B                         0000021B
_ISR_021D                         0000021D
_ISR_021F                         0000021F
_ISR_0224                         00000224
_ISR_022A                         0000022A
_ISR_022F                         0000022F
_ISR_0233                         00000233
_ISR_0234                         00000234
_ISR_0239                         00000239
_ISR_023F                         0000023F
_ISR_0244                         00000244
_ISR_0249                         00000249
_ISR_024A                         0000024A
_ISR_024F                         0000024F
_ISR_026C                         0000026C
_ISR_027C                         0000027C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_0284                         00000284
_ISR_0296                         00000296
_ISR_02A6                         000002A6
_ISR_02AE                         000002AE
_ISR_02C0                         000002C0
_ISR_02D0                         000002D0
_ISR_02D8                         000002D8
_ISR_02EA                         000002EA
_ISR_02FA                         000002FA
_ISR_0302                         00000302
_ISR_0312                         00000312
_ISR_0313                         00000313
_ISR_0322                         00000322
_ISR_032A                         0000032A
_ISR_0339                         00000339
_ISR_033D                         0000033D
_ISR_033E                         0000033E
_ISR_034D                         0000034D
_ISR_0350                         00000350
_ISR_0352                         00000352
_ISR_0357                         00000357
_ISR_0358                         00000358
_ISR_03DE                         000003DE
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_0048                   00000048
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_PK3              1
ball_at_left                      00000228
ball_at_right                     0000023D
ball_dx                           00000009
ball_dy                           0000000A
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

ball_in_middle                    00000206
ball_lost                         000000E2
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000A8
bcd_add                           00000383
between                           00000155
between_exit                      0000015F
black                             
bottom_bound                      000000BC
bounce_y                          0000014F
case                              
check_paddle_bounce               000000EE
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         000000C5
collision_exit                    00000151
cyan                              
d1                                000000A5
d2                                000000A6
d3                                000000A7
dark_blue                         
digit_offset                      000003A0
digit_row                         000001AB
digit_version                     00000002
digits                            00000049
draw_border                       
draw_brick                        
draw_empty                        00000337
draw_paddle                       0000034B
draw_row1                         00000265
draw_row2                         0000028F
draw_row3                         000002B9
draw_row4                         000002E3
draw_row5                         0000030D
draw_score                        00000175
draw_top_wall                     000001BE
draw_void                         000001D6
draw_void_exit                    00000251
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        00000371
field_end                         0000037B
flags                             00000000
game_init                         000003C6
game_running                      00000081
green                             
hi_line                           0000036A
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

ibw                               000003AD
inc_score                         0000038E
init_brick_wall                   000003A6
isr                               00000004
isr_exit                          00000029
lcount                            00000001
leave                             
max_score                         00000780
move_ball                         000000A3
move_ball_exit                    000000C2
move_y                            000000B3
next_task                         
no_ball                           000001E5
no_ball_dly                       000001E2
no_wall_draw                      0000025B
paddle_pos                        00000006
pickn                             
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         0000002E
pushw                             
q                                 0000000A
r                                 00000002
read_button                       0000008C
read_paddle                       00000090
right_bound                       000000AD
row1                              000000A0
row1_coll                         000000FB
row2                              000000A1
row2_coll                         0000010C
row3                              000000A2
row3_coll                         0000011D
row3_exit                         000002D9
row4                              000000A3
row4_coll                         0000012E
row5                              000000A4
row5_coll                         0000013F
score                             0000000C
score_exit                        000001A1
set_ball_dx                       000003B1
set_ball_dx_exit                  000003C4
set_presync                       0000003B
set_vsync                         00000053
skip_2_tasks                      00000089
slice                             00000002
sound                             00000161
sound_timer                       000000A9
stack                             00000020
swap_var                          
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-9-2019  16:36:58         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

swapw                             
t0delay                           000003DA
task                              00000003
task_switch                       00000012
tdelay                            
temp                              00000004
ticks                             0000000F
top_wall_exit                     000001CC
user_input                        00000077
video_first                       0000016D
vsync                             00000046
vsync_end                         00000068
wait_field_end                    00000364
wait_trigger                      00000083
white                             
yellow                            
yes_ball                          000001FF

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   289 suppressed

