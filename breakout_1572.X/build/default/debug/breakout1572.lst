MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright Jacques Deschênes 2019 
                      00002 ; This file is part of breakout_1572.
                      00003 ;
                      00004 ;     breakout_1572 is free software: you can redistribute it and/or modify
                      00005 ;     it under the terms of the GNU General Public License as published by
                      00006 ;     the Free Software Foundation, either version 3 of the License, or
                      00007 ;     (at your option) any later version.
                      00008 ;
                      00009 ;     breakout_1572 is distributed in the hope that it will be useful,
                      00010 ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00011 ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00012 ;     GNU General Public License for more details.
                      00013 ;
                      00014 ;     You should have received a copy of the GNU General Public License
                      00015 ;     along with breakout_1572.  If not, see <http://www.gnu.org/licenses/>.
                      00016 
                      00017 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00018 ;                BREAKOUT game
                      00019 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00020 ;             IMPLEMENTATION NOTES
                      00021 ;  PWM3 is used to generate NTSC synchronization signal.
                      00022 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00023 ;  Inside this interrupt there is a round robin task scheduler.
                      00024 ;  All video display and game logic is done inside these tasks.
                      00025 ;  After MCU initialization the main() procedure is an empty loop.
                      00026 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00027 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00028 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00029 ;  short of 140 nanoseconds.
                      00030 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00031 ;  must execute in less than 454 Tcy.    
                      00032 ;  The overhead before entering a task in at most 58Tcy.
                      00033 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00034 ;  To play safe any task should execute in less than 379Tcy.
                      00035 ;  VISIBLE video lines:
                      00036 ;   For the visibles video lines tasks some delay is introduce
                      00037 ;   before any display attempt to ensure the game left side is
                      00038 ;   inside visible part of the scan line.
                      00039 ;   Each visible line must be terminate by returning video_output to black
                      00040 ;   otherwise the sync signal will be mangled. 
                      00041 ;    
                      00042 ;  SCHEDULER
                      00043 ;  scan lines  | slices  |   usage
                      00044 ;  =================================
                      00045 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00046 ;    4-6       |  6      | task 1, vertical sync
                      00047 ;    7-9       |  6      | task 2, vertical post-equalization
                      00048 ;    10        |  1      | task 3, synchronization end
                      00049 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00050 ;    12        |  1      | task 5, sound timer
                      00051 ;    13        |  1      | task 6, user input
                      00052 ;    14        |  1      | task 7, move ball
                      00053 ;    15        |  1      | task 8, collision control
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00055 ;    30-49     |  20     | task 10, display score and balls count
                      00056 ;    50-57     |  8      | task 11, draw top border
                      00057 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00058 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00059 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00060 ;    242-249   |  8      | task 15, draw paddle
                      00061 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00062 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00063  
                      00064     
                      00065     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00066     
8007   3FA7           00067     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   3EFF           00068     __config _CONFIG2, _PLLEN_OFF ;& _LVP_OFF
                      00069     
                      00070     radix dec
                      00071 
                      00072 ; constants
  00000800            00073 PROG_SIZE equ 2048  ; program words
  00000080            00074 EEPROM_SIZE equ 128 ; high endurance flash words
                      00075  
  01B4F360            00076 Fosc equ 28636000 ; external oscillator frequency
                      00077  
                      00078 ; NTSC signal 
  00003D76            00079 Fhorz equ 15734 ; horizontal frequency
  0000071B            00080 HPERIOD equ ((Fosc/Fhorz)-1)  ; PWM3PR count for horizontal period (63,55µS)
  00000086            00081 HSYNC  equ 134  ;  (4,7µS) PWM3DC count for horz. sync pulse
  00000041            00082 HEQUAL equ 65 ; PWM3DC count for 2,3µS equalization pulse
  00000308            00083 VSYNC_PULSE equ 776 ; PWM3PR count for 27,1µS vertical sync. pulse
  0000038D            00084 HALF_LINE equ ((Fosc/Fhorz/2)-1) ; PWM3PR count for vsync lines,  half HPERIOD
                      00085 ; boolean flags 
  00000000            00086 F_BIT8 equ 0    ; bit 8 of scan line counter
  00000001            00087 F_EVEN equ 1    ; even field
  00000002            00088 F_SYNC equ 2    ; set during vertical synchronization phase
  00000003            00089 F_SOUND equ 3   ; sound enabled 
  00000004            00090 F_START equ 4   ; game started 
  00000005            00091 F_PAUSE equ 5   ; game paused after a ball lost
  00000006            00092 F_COOL equ 6    ; player got maximum score
                      00093  
                      00094 ;pins assignment
  00000000            00095 AUDIO EQU RA0  ; PWM2 output for audio tones
  00000000            00096 PADDLE equ RA0 ;  analog input for potentiometer controlling paddle position
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00097 CHROMA equ RA1  ;   chroma signal output
  00000002            00098 SYNC_OUT equ RA2  ; NTSC signal synchronization
  00000003            00099 START_BTN equ RA3 ; start button input
  00000004            00100 VIDEO_OUT equ RA4 ; video luminance output
  00000005            00101 CLKIN equ RA5     ; external oscillateur input.
                      00102  
                      00103     ; constants used in video display
                      00104 ; values are in pixels for x dimension.
                      00105 ; values are in number of scan lines for y dimension.
                      00106 ; Tcy are delay counted in MCU cycles.    
  0000001E            00107 FIRST_VIDEO_LINE equ 30 ; first scan line displayed
  0000004A            00108 FIRST_BRICK_Y equ 74 ; top of first brick row scan line
  000000F9            00109 LAST_VIDEO_LINE  equ 249 ; last scan line displayed
  00000045            00110 LEFT_MARGIN equ 69  ; Tcy delay before any display
  00000030            00111 PLAY_WIDTH equ 48 ; pixels
  00000005            00112 PIXEL_WIDTH equ 5; pixel width in Tcy 
  00000008            00113 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00114 BRICK_WIDTH equ 4  ; pixels
  00000004            00115 BORDER_WIDTH equ 4  ; Tcy
  00000002            00116 BALL_WIDTH equ 2 ; pixels
  000000C0            00117 BALL_MASK equ 0xC0 ;  applied to vbuffer to display ball
  00000008            00118 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00119 BALL_LEFT_BOUND equ 0 ; pixels
  0000002E            00120 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00121 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00122 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE ;scan line
  00000008            00123 PADDLE_WIDTH equ 8 ; pixels
  00000004            00124 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00125 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00126 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; scan line 
  000000FF            00127 PADDLE_MASK equ 0xFF ; applied to vbuffer to display paddle
  00000006            00128 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00129 ROW1_Y equ 74 ; row first scan line
  00000052            00130 ROW2_Y equ 82
  0000005A            00131 ROW3_Y equ 90
  00000062            00132 ROW4_Y equ 98
  0000006A            00133 ROW5_Y equ 106
  00000072            00134 ROW6_Y equ 114 
                      00135 
                      00136 ;;;;;;;;;;;;;;;;;;;;;;
                      00137 ;; assembler macros ;;
                      00138 ;;;;;;;;;;;;;;;;;;;;;;
                      00139 
                      00140 ; leave task by exiting interrupt service routine. 
                      00141 leave macro
                      00142     goto isr_exit
                      00143     endm
                      00144     
                      00145 ; move to next task on slice limit
                      00146 ; parameters:
                      00147 ;   s  nomber of slices used by the task    
                      00148 next_task macro s    
                      00149     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     movlw s
                      00151     subwf slice,W
                      00152     skpz
                      00153     leave
                      00154     clrf slice
                      00155     incf task
                      00156     leave
                      00157     endm
                      00158     
                      00159     
                      00160 ; delay in machine cycle Tcy
                      00161 ; parameters:
                      00162 ;   mc   number of machine cycles (Tcy)   
                      00163 tdelay macro mc 
                      00164     if mc==0
                      00165     exitm
                      00166     endif
                      00167     if mc==1
                      00168     nop
                      00169     exitm
                      00170     endif
                      00171     if mc==2
                      00172     bra $+1
                      00173     exitm
                      00174     endif
                      00175     if mc==3
                      00176     nop
                      00177     bra $+1
                      00178     exitm
                      00179     endif
                      00180     if mc==4
                      00181     call _4tcy
                      00182     exitm
                      00183     endif
                      00184     if mc==5
                      00185     call _5tcy
                      00186     exitm
                      00187     endif
                      00188     if mc>5
                      00189     variable q=(mc-3)/3 
                      00190     variable r=mc-3-3*q
                      00191     movlw q
                      00192     call _3ntcy ; Tcy=3+3*q
                      00193     if (r==2)
                      00194     bra $+1
                      00195     exitm
                      00196     endif 
                      00197     if (r==1)
                      00198     nop
                      00199     exitm
                      00200     endif
                      00201     endif
                      00202     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 
                      00204 
                      00205 ;;;;;;;;;;;;;;;;;;;;;;
                      00206 ;   colors macros
                      00207 ;   TRISA configuration    
                      00208 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00209 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00210 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00211 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00212 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00213 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00214 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00215 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00216 
                      00217 ; for the colors macros TRISA bank must be pre-selected 
                      00218 ;set video output to black    
                      00219 black macro
                      00220     movlw BLACK
                      00221     movwf TRISA
                      00222     endm
                      00223     
                      00224 ; set video output to white    
                      00225 white macro    
                      00226     movlw WHITE
                      00227     movwf TRISA
                      00228     endm
                      00229 
                      00230 ; set video output to mauve    
                      00231 mauve macro
                      00232     movlw MAUVE
                      00233     movwf TRISA
                      00234     endm
                      00235 
                      00236 ; set video output to yellow   
                      00237 yellow macro
                      00238     movlw YELLOW
                      00239     movwf TRISA
                      00240     endm
                      00241     
                      00242 ; set video output to blue
                      00243 blue macro
                      00244     movlw BLUE
                      00245     movwf TRISA
                      00246     endm
                      00247     
                      00248 ; set video output to dark green    
                      00249 dark_green macro
                      00250     movlw DARK_GREEN
                      00251     movwf TRISA
                      00252     endm
                      00253 
                      00254 ; shift out 1 bit    
                      00255 display_bit macro n
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     lslf vbuffer+n
                      00257     movlw BLACK
                      00258     skpnc
                      00259     movfw fg_color
                      00260     movwf TRISA
                      00261     endm
                      00262     
                      00263 ; display a byte of pixels from vbuffer
                      00264 ; this macro expansion result in 8*5 -> 40 instructions    
                      00265 ; input:
                      00266 ;   n is byte number {0..5}    
                      00267 display_byte macro n
                      00268     display_bit n
                      00269     display_bit n
                      00270     display_bit n
                      00271     display_bit n
                      00272     display_bit n
                      00273     display_bit n
                      00274     display_bit n
                      00275     display_bit n
                      00276     endm
                      00277     
                      00278    
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ;  stack manipulation macros
                      00281 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000050            00282 STACK_SIZE equ 80 ; size of argument stack
                      00283 #define T INDF0 ; indirect access to top of argument stack
                      00284 #define SP FSR0 ; use FSR0 as stack pointer 
                      00285 ; push WREG on T
                      00286 pushw  macro
                      00287     movwi --SP
                      00288     endm
                      00289   
                      00290 ; pop WREG from T
                      00291 popw macro
                      00292     moviw SP++
                      00293     endm
                      00294 
                      00295 ; drop n elements from stack
                      00296 dropn macro n
                      00297     addfsr T,n
                      00298     endm
                      00299 
                      00300 ; copy nth element of stack to WREG
                      00301 ;  n {0..31}, 0 is T   
                      00302 pickn macro n
                      00303     moviw n[SP]
                      00304     endm
                      00305    
                      00306     
                      00307     
                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;;    variables
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00311  
                      00312     
                      00313     udata 0x20 ; bank 0 
0020                  00314 stack res STACK_SIZE ; arguments stack
                      00315  
                      00316 ; video display manipulate TRISA register
                      00317 ; to avoid banksel during video update
                      00318 ; place variables related to video in same bank as TRISA 
                      00319 v_array   udata 0xA0 ; bank 1
00A0                  00320 vbuffer res 6
00A6                  00321 temp3 res 1 ; to simplify mask application on last byte of vbuffer 
00A7                  00322 row1 res 6; brick wall row1
00AD                  00323 fill1 res 2 ; to simplify computation, faster to multiply and divide by 8 rather than 6.
00AF                  00324 row2 res 6
00B5                  00325 fill2 res 2 
00B7                  00326 row3 res 6
00BD                  00327 fill3 res 2 
00BF                  00328 row4 res 6
00C5                  00329 fill4 res 2 
00C7                  00330 row5 res 6
00CD                  00331 fill5 res 2
00CF                  00332 row6 res 6
00D5                  00333 fill6 res 2 
00D7                  00334 fg_color res 1
00D8                  00335 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00336 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00337 ball_byte res 1 ; ball byte offset in vbuffer
00DC                  00338 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00339 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00340 balls res 1 ; number of recking balls available
                      00341  
                      00342 ; common 16 bytes RAM accessible whatever the selected bank 
                      00343     udata_shr 
0000                  00344 flags  res 1 ; boolean variables
0001                  00345 lcount res 1 ; video field line counter
0002                  00346 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00347 task res 1 ; where in video phase 
0004                  00348 temp1 res 1 ; temporary storage
0005                  00349 temp2 res 1 ; 
0006                  00350 paddle_pos res 1 
0007                  00351 ball_x res 1
0008                  00352 ball_y res 1
0009                  00353 ball_dx res 1
000A                  00354 ball_dy res 1
000B                  00355 ball_speed res 1
000C                  00356 score res 2 ; score stored in Binary Coded Decimal
000E                  00357 ball_timer res 1 
000F                  00358 seed res 1 ; pseudo random number generator used by lfsr8
                      00359  
                      00360 ;; cpu reset entry point
                      00361 RES_VECT  CODE    0x0000            
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000   2???           00362     goto    initialize  ; go to beginning of program
                      00363     
                      00364 ; delay = 3+3*n  (including the call)    
                      00365 ; SEE tdelay macro
                      00366 ;input:
                      00367 ;   WREG <- n {1..255}
0001                  00368 _3ntcy
0001   0B89           00369     decfsz WREG
0002   3???           00370     bra $-1
0003                  00371 _4tcy
0003   0008           00372     return  
                      00373 
                      00374 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00375 ; interrupt service routine triggered by PWM3 period rollover
                      00376 ; after initialization all processing in done inside 
                      00377 ; this interrupt.
                      00378 ; It is designed as a round robin scheduler.    
                      00379 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00380 ISR CODE 0x0004
0004                  00381 isr
0004   0A??           00382     incf lcount
0005   1903           00383     skpnz
0006   1400           00384     bsf flags, F_BIT8
0007   1900           00385     btfsc flags, F_SYNC
0008   2???           00386     goto task_switch
                      00387 ; clear video buffer before each line display
0009   003B           00388     banksel PWM1CON
000A   121B           00389     bcf PWM1CON,POL
000B   0021           00390     banksel TRISA
000C   01??           00391     clrf vbuffer
000D   01??           00392     clrf vbuffer+1
000E   01??           00393     clrf vbuffer+2
000F   01??           00394     clrf vbuffer+3
0010   01??           00395     clrf vbuffer+4
0011   01??           00396     clrf vbuffer+5
                      00397 ; generate chroma synchronization
                      00398     tdelay 15
                          M     if 15==0
                          M     exitm
                          M     endif
                          M     if 15==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 15==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 15==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 15==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 15==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 15>5
  0004                    M     variable q=(15-3)/3 
  0000                    M     variable r=15-3-3*q
0012   3004               M     movlw q
0013   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0014   108C           00399     bcf TRISA,CHROMA
                      00400     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3 
  0001                    M     variable r=16-3-3*q
0015   3004               M     movlw q
0016   2???               M     call _3ntcy ; Tcy=3+3*q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0017   0000               M     nop
                          M     exitm
0018   148C           00401     bsf TRISA,CHROMA
0019                  00402 task_switch ; round robin task scheduler   
0019   08??           00403     movfw task
001A   000B           00404     brw
001B   2???           00405     goto pre_vsync ;task 0, vertical pre-equalization pulses
001C   2???           00406     goto vsync ;task 1, vertical sync pulses
001D   2???           00407     goto post_vsync ;task 2, vertical post-equalization pulses
001E   2???           00408     goto vsync_end ;task 3, return to normal video line
001F   2???           00409     goto read_paddle; task 4, read paddle potentiometer
0020   2???           00410     goto sound ;task 5, check sound timer expiration
0021   2???           00411     goto read_button ;task 6,  read button
0022   2???           00412     goto move_ball ;task 7, move recking ball.
0023   2???           00413     goto collision ; task 8, check for collision with bricks.
0024   2???           00414     goto video_first ; task 9, wait FIRST_VIDEO line.
0025   2???           00415     goto draw_score ;task 10,  draw score en ball count
0026   2???           00416     goto draw_top_wall ;task 11,  draw top wall
0027   2???           00417     goto draw_sides ;task 12, draw play space with sides walls
0028   2???           00418     goto draw_bricks  ;task 13, draw bricks rows
0029   2???           00419     goto draw_empty;task 14, draw empty space with sides walls down to bottom
002A   2???           00420     goto draw_paddle ;task 15, draw paddle
002B   2???           00421     goto wait_field_end ;task 16, idle to end of video field
002C   0001           00422     reset ; error trap, task out of range
002D                  00423 isr_exit
002D   0021           00424     banksel TRISA
002E   1980           00425     btfsc flags, F_SOUND
002F   100C           00426     bcf TRISA,PADDLE
0030   003B           00427     banksel PWM3INTF
0031   103D           00428     bcf PWM3INTF,PRIF
0032   0009           00429     retfie
                      00430 
                      00431 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00432 ;;  all tasks routine are here            ;;
                      00433 ;;  each must be terminate by leave macro ;;    
                      00434 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00435     
                      00436 ; task 0, vertical synchronization pre equalization
                      00437 ; 6 half horizontal scan lines    
0033                  00438 pre_vsync
0033   08??           00439     movfw slice
0034   1903           00440     skpnz
0035   2???           00441     goto set_presync
                      00442     next_task 6
0036   0A??               M     incf slice
0037   3006               M     movlw 6
0038   02??               M     subwf slice,W
0039   1D03               M     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
003A   2???               M     goto isr_exit
003B   01??               M     clrf slice
003C   0A??               M     incf task
                          M     leave
003D   2???               M     goto isr_exit
003E                  00443 set_presync    
003E   003B           00444     banksel PWM3DC
003F   3041           00445     movlw HEQUAL
0040   00B3           00446     movwf PWM3DCL
0041   3003           00447     movlw high HALF_LINE
0042   00B6           00448     movwf PWM3PRH
0043   308D           00449     movlw low HALF_LINE
0044   00B5           00450     movwf PWM3PRL
0045   17BF           00451     bsf PWM3LDCON,7
0046   0A??           00452     incf slice
                      00453     leave
0047   2???               M     goto isr_exit
                      00454     
                      00455 ; task 1, vertical synchronization pulses
                      00456 ; 6 half horizontal scan lines    
0048                  00457 vsync 
0048   08??           00458     movfw slice
0049   1903           00459     skpnz
004A   2???           00460     goto set_vsync
                      00461     next_task 6
004B   0A??               M     incf slice
004C   3006               M     movlw 6
004D   02??               M     subwf slice,W
004E   1D03               M     skpz
                          M     leave
004F   2???               M     goto isr_exit
0050   01??               M     clrf slice
0051   0A??               M     incf task
                          M     leave
0052   2???               M     goto isr_exit
0053                  00462 set_vsync
0053   003B           00463     banksel PWM3DC
0054   3008           00464     movlw low VSYNC_PULSE
0055   00B3           00465     movwf PWM3DCL
0056   3003           00466     movlw high VSYNC_PULSE
0057   00B4           00467     movwf PWM3DCH
0058   17BF           00468     bsf PWM3LDCON,7
0059   0A??           00469     incf slice
                      00470     leave
005A   2???               M     goto isr_exit
                      00471     
                      00472 ; task 2, vertical synchronisation post equalization pulses
                      00473 ; 6 half horizontal scan lines    
005B                  00474 post_vsync
005B   08??           00475     movfw slice
005C   1903           00476     skpnz
005D   2???           00477     goto set_presync
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005E   3006           00478     movlw 6
005F   02??           00479     subwf slice,W
0060   1903           00480     skpnz
0061   2???           00481     goto post_last
0062   0A??           00482     incf slice
                      00483     leave
0063   2???               M     goto isr_exit
0064                  00484 post_last    
0064   0A??           00485     incf task
0065   01??           00486     clrf slice
0066   1C80           00487     btfss flags, F_EVEN
                      00488     leave
0067   2???               M     goto isr_exit
                      00489     
                      00490 ; task 3, vertical synchronization completed, return to normal line
                      00491 ; rest horizonal line to its normal length.
                      00492 ; set lcount to 9.    
0068                  00493 vsync_end
0068   1100           00494     bcf flags, F_SYNC
0069   003B           00495     banksel PWM3DC
006A   3086           00496     movlw HSYNC
006B   00B3           00497     movwf PWM3DCL
006C   01B4           00498     clrf PWM3DCH
006D   3007           00499     movlw high HPERIOD
006E   00B6           00500     movwf PWM3PRH
006F   301B           00501     movlw low HPERIOD
0070   00B5           00502     movwf PWM3PRL
0071   17BF           00503     bsf PWM3LDCON,7
                      00504  ; divide lcount by 2 go get correct scan line count    
0072   36??           00505     lsrf lcount
0073   2???           00506     call lfsr8 ; update prng 60 times/sec.
0074   0A??           00507     incf task
                      00508     leave
0075   2???               M     goto isr_exit
                      00509 
                      00510 ; task 4, read paddle potentiometer
0076                  00511 read_paddle
0076   0A??           00512     incf task
0077   1980           00513     btfsc flags, F_SOUND
                      00514     leave
0078   2???               M     goto isr_exit
0079   140C           00515     bsf TRISA, PADDLE
007A   3003           00516     movlw 3
007B   009D           00517     movwf ADCON0
007C   189D           00518     btfsc ADCON0,NOT_DONE
007D   3???           00519     bra $-1
007E   361C           00520     lsrf ADRESH,W
007F   00??           00521     movwf paddle_pos
0080   3028           00522     movlw PADDLE_LIMIT
0081   02??           00523     subwf paddle_pos,W
0082   3028           00524     movlw PADDLE_LIMIT
0083   1803           00525     skpnc
0084   00??           00526     movwf paddle_pos
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085   3010           00527     movlw 4<<CHS0
0086   009D           00528     movwf ADCON0
                      00529 ; create paddle mask
                      00530 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00531 ; paddle_byte=paddle_pos/8
                      00532 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)   
0087   36??           00533     lsrf paddle_pos,W
0088   3689           00534     lsrf WREG
0089   3689           00535     lsrf WREG
008A   00??           00536     movwf paddle_byte
008B   30FF           00537     movlw PADDLE_MASK
008C   00??           00538     movwf paddle_mask
008D   01??           00539     clrf paddle_mask+1
008E   3007           00540     movlw 7
008F   05??           00541     andwf paddle_pos,W
0090   1903           00542     skpnz
0091   3???           00543     bra ball_track_pallet
0092   36??           00544     lsrf paddle_mask
0093   0C??           00545     rrf paddle_mask+1
0094   0B89           00546     decfsz WREG
0095   3???           00547     bra $-3
0096   3???           00548     bra ball_track_pallet
                      00549     
                      00550 ; task 5,  sound timer
                      00551 ; if sound active process it.    
0097                  00552 sound
0097   0A??           00553     incf task
0098   1D80           00554     btfss flags, F_SOUND
                      00555     leave
0099   2???               M     goto isr_exit
009A   1A80           00556     btfsc flags, F_PAUSE
009B   2???           00557     call sound_fx1
009C   002?           00558     banksel sound_timer
009D   0B??           00559     decfsz sound_timer
                      00560     leave
009E   2???               M     goto isr_exit
009F                  00561 sound_off    
009F   1180           00562     bcf flags, F_SOUND
00A0   003B           00563     banksel PWM2CON
00A1   132B           00564     bcf PWM2CON,OE
00A2   13AB           00565     bcf PWM2CON,EN
00A3   0021           00566     banksel TRISA
00A4   140C           00567     bsf TRISA,PADDLE
                      00568     leave
00A5   2???               M     goto isr_exit
                      00569 
                      00570 ; sound effect, low pitch to high-pitch    
00A6                  00571 sound_fx1
00A6   1C80           00572     btfss flags, F_EVEN
00A7   0008           00573     return
00A8   003B           00574     banksel PWM2CON
00A9   36A6           00575     lsrf PWM2PRH
00AA   0CA5           00576     rrf PWM2PRL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AB   36A4           00577     lsrf PWM2DCH
00AC   0CA3           00578     rrf PWM2DCL
00AD   17AF           00579     bsf PWM2LDCON,LDA
00AE   0008           00580     return
                      00581     
                      00582 ; initialize sound generation.
                      00583 ; input:
                      00584 ;   T = duration
                      00585 ;   WREG = index in frequency table    
                      00586 ; outpout:
                      00587 ;   none    
00AF                  00588 sound_init
                      00589     pushw  ; ( d i -- )
00AF   0019               M     movwi --SP
00B0   1580           00590     bsf flags, F_SOUND
00B1   003B           00591     banksel PWM2CON
00B2   0800           00592     movfw T
00B3   2???           00593     call frequency
00B4   00A6           00594     movwf PWM2PRH
00B5   0A00           00595     incf T,W
00B6   2???           00596     call frequency
00B7   00A5           00597     movwf PWM2PRL
00B8   3626           00598     lsrf PWM2PRH,W
00B9   00A4           00599     movwf PWM2DCH
00BA   0C25           00600     rrf PWM2PRL,W
00BB   00A3           00601     movwf PWM2DCL
00BC   17AF           00602     bsf PWM2LDCON,LDA
00BD   172B           00603     bsf PWM2CON,OE
00BE   17AB           00604     bsf PWM2CON,EN
00BF   002?           00605     banksel sound_timer
                      00606     pickn 1
00C0   3F01               M     moviw 1[SP]
00C1   00??           00607     movwf sound_timer
                      00608     dropn 2
00C2   3102               M     addfsr T,2
00C3   0021           00609     banksel TRISA
00C4   100C           00610     bcf TRISA,AUDIO
00C5   0008           00611     return
                      00612     
                      00613 ;task 6, read button and paddle position
00C6                  00614 read_button
00C6   0A??           00615     incf task
00C7   0020           00616     banksel PORTA
00C8   080C           00617     movfw PORTA
00C9   3908           00618     andlw 1<<START_BTN
00CA   1D03           00619     skpz
                      00620     leave
00CB   2???               M     goto isr_exit
00CC   3030           00621     movlw (1<<F_PAUSE)|(1<<F_START)
00CD   05??           00622     andwf flags,W
00CE   0E89           00623     swapf WREG
00CF   000B           00624     brw
00D0   3???           00625     bra game_start     ; 0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00626     leave              ; 1
00D1   2???               M     goto isr_exit
                      00627     leave              ; 2
00D2   2???               M     goto isr_exit
00D3   3???           00628     bra resume         ; 3
00D4                  00629 game_start
00D4   2???           00630     call game_init
00D5   1600           00631     bsf flags,F_START
00D6                  00632 resume
00D6   2???           00633     call set_ball_dx
00D7   30FC           00634     movlw -4
00D8   00??           00635     movwf ball_dy
00D9   1280           00636     bcf flags, F_PAUSE
                      00637     leave
00DA   2???               M     goto isr_exit
                      00638     
                      00639     
                      00640 
                      00641     
                      00642 ; task 7, move recking ball.   
                      00643 ; also check for ball bounce on paddle
                      00644 ; and ball lost at bottom    
00DB                  00645 move_ball
00DB   0A??           00646     incf task
00DC   0B??           00647     decfsz ball_timer
                      00648     leave
00DD   2???               M     goto isr_exit
00DE   08??           00649     movfw ball_speed
00DF   00??           00650     movwf ball_timer
00E0   08??           00651     movfw ball_dx
00E1   07??           00652     addwf ball_x
00E2   1F80           00653     btfss ball_dx,7
00E3   3???           00654     bra right_bound
00E4                  00655 left_bound
00E4   1F80           00656     btfss ball_x,7
00E5   3???           00657     bra move_y
00E6   01??           00658     clrf ball_x
00E7   3???           00659     bra toggle_dx
00E8                  00660 right_bound    
00E8   08??           00661     movfw ball_x
00E9   3C2E           00662     sublw BALL_RIGHT_BOUND
00EA   1803           00663     skpnc
00EB   3???           00664     bra move_y
00EC   03??           00665     decf ball_x
00ED                  00666 toggle_dx
00ED   09??           00667     comf ball_dx
00EE   0A??           00668     incf ball_dx
00EF                  00669 move_y
00EF   08??           00670     movfw ball_dy
00F0   07??           00671     addwf ball_y
00F1   1F80           00672     btfss ball_dy,7
00F2   3???           00673     bra bottom_bound
00F3                  00674 top_bound    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F3   303A           00675     movlw BALL_TOP_BOUND
00F4   02??           00676     subwf ball_y,W
00F5   1803           00677     skpnc
00F6   3???           00678     bra move_ball_exit
00F7   303A           00679     movlw BALL_TOP_BOUND
00F8   00??           00680     movwf ball_y
00F9   09??           00681     comf ball_dy
00FA   0A??           00682     incf ball_dy
00FB   3???           00683     bra move_ball_exit
00FC                  00684 bottom_bound
00FC   08??           00685     movfw ball_y
00FD   3CEF           00686     sublw PADDLE_Y-BALL_HEIGHT+1
00FE   1803           00687     skpnc
00FF   3???           00688     bra move_ball_exit
0100   2???           00689     call paddle_bounce
0101   1803           00690     skpnc
0102   3???           00691     bra move_ball_exit
0103                  00692 ball_lost
0103   1200           00693     bcf flags, F_START
0104   3030           00694     movlw (1<<F_PAUSE)|(1<<F_START)
                      00695 ;    banksel balls
0105   0B??           00696     decfsz balls
0106   04??           00697     iorwf flags
0107   3008           00698     movlw 8
                      00699     pushw
0108   0019               M     movwi --SP
0109   3002           00700     movlw 2
010A   2???           00701     call sound_init
010B                  00702 ball_track_pallet
010B   3003           00703     movlw 3
010C   07??           00704     addwf paddle_pos,W
010D   00??           00705     movwf ball_x
010E   30ED           00706     movlw PADDLE_Y-BALL_HEIGHT-1
010F   00??           00707     movwf ball_y
0110   01??           00708     clrf ball_dx
0111   01??           00709     clrf ball_dy
0112                  00710 move_ball_exit
0112   2???           00711     call compute_ball_mask
                      00712     leave
0113   2???               M     goto isr_exit
                      00713 
                      00714 ; check if ball is bouncing on paddle
                      00715 ; input:
                      00716 ;   none
                      00717 ; output:
                      00718 ;   C set if bounced    
0114                  00719 paddle_bounce
                      00720 ; if ball_x over paddle bounce ball
0114   08??           00721     movfw paddle_pos
                      00722     pushw
0115   0019               M     movwi --SP
0116   1903           00723     skpnz
0117   0380           00724     decf T
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0118   3E08           00725     addlw PADDLE_WIDTH
                      00726     pushw
0119   0019               M     movwi --SP
011A   08??           00727     movfw ball_x
011B   2???           00728     call between
011C   1803           00729     skpnc
011D   3???           00730     bra bouncing
011E   1003           00731     bcf STATUS,C
011F   0008           00732     return
0120                  00733 bouncing
0120   30ED           00734     movlw PADDLE_Y-BALL_HEIGHT-1
0121   00??           00735     movwf ball_y
0122   09??           00736     comf ball_dy
0123   0A??           00737     incf ball_dy
                      00738 ; bounce direction depend where paddle was hit.    
0124   08??           00739     movfw paddle_pos
0125   02??           00740     subwf ball_x,W
0126   1C03           00741     skpc
0127   3???           00742     bra bounce_left
0128   1903           00743     skpnz
0129   3???           00744     bra bounce_left
012A   3006           00745     movlw PADDLE_WIDTH-2
012B   07??           00746     addwf paddle_pos,W
012C   02??           00747     subwf ball_x,W
012D   3001           00748     movlw 1
012E   1803           00749     skpnc
012F   00??           00750     movwf ball_dx ; bounce right
0130   3???           00751     bra paddle_sound
0131                  00752 bounce_left
0131   30FF           00753     movlw -1
0132   00??           00754     movwf ball_dx
0133                  00755 paddle_sound    
0133   3002           00756     movlw 2
                      00757     pushw
0134   0019               M     movwi --SP
0135   2???           00758     call sound_init
                      00759 ; skip collision task
0136   0A??           00760     incf task
                      00761 ; report bounce    
0137   1403           00762     bsf STATUS,C
0138   0008           00763     return
                      00764     
                      00765     
                      00766 ; compute ball_mask and ball_byte
                      00767 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00768 ; ball_byte= ball_x/8     
0139                  00769 compute_ball_mask
0139   002?           00770     banksel vbuffer
013A   36??           00771     lsrf ball_x,W
013B   3689           00772     lsrf WREG
013C   3689           00773     lsrf WREG
013D   00??           00774     movwf ball_byte
013E   30C0           00775     movlw BALL_MASK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013F   00??           00776     movwf ball_mask
0140   01??           00777     clrf ball_mask+1
0141   3007           00778     movlw 7
0142   05??           00779     andwf ball_x,W
0143   1903           00780     skpnz
0144   0008           00781     return
0145   36??           00782     lsrf ball_mask
0146   0C??           00783     rrf ball_mask+1
0147   0B89           00784     decfsz WREG
0148   3???           00785     bra $-3
0149   0008           00786     return
                      00787     
                      00788 ; task 8, check collision with bricks
014A                  00789 collision
014A   304A           00790     movlw ROW1_Y
                      00791     pushw
014B   0019               M     movwi --SP
014C   307A           00792     movlw ROW6_Y+BRICK_HEIGHT
                      00793     pushw
014D   0019               M     movwi --SP
014E   08??           00794     movfw ball_y
014F   2???           00795     call between
0150   1C03           00796     skpc
0151   3???           00797     bra collision_exit
0152   002?           00798     banksel row1
0153   0187           00799     clrf FSR1H
0154   30??           00800     movlw low row1
0155   0086           00801     movwf FSR1L
0156   304A           00802     movlw ROW1_Y
0157   02??           00803     subwf ball_y,W
0158   39F8           00804     andlw 0xf8
                      00805     pushw
0159   0019               M     movwi --SP
015A   0786           00806     addwf FSR1L
015B   08??           00807     movfw ball_byte
015C   0786           00808     addwf FSR1L
015D   30F0           00809     movlw 0xf0
015E   1900           00810     btfsc ball_x,2
015F   0E89           00811     swapf WREG
0160   0501           00812     andwf INDF1,W
0161   1903           00813     skpnz
0162   3???           00814     bra collision_exit
0163   300F           00815     movlw 0x0f
0164   1900           00816     btfsc ball_x,2
0165   0E89           00817     swapf WREG
0166   0581           00818     andwf INDF1
0167   09??           00819     comf ball_dy
0168   0A??           00820     incf ball_dy
0169   08??           00821     movfw ball_dy
016A   07??           00822     addwf ball_y
                      00823     popw
016B   0012               M     moviw SP++
016C   3689           00824     lsrf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016D   3689           00825     lsrf WREG
016E   000B           00826     brw
016F   3009           00827     movlw 9
0170   3???           00828     bra add_score
0171   3009           00829     movlw 9
0172   3???           00830     bra add_score
0173   3007           00831     movlw 7
0174   3???           00832     bra add_score
0175   3005           00833     movlw 5
0176   3???           00834     bra add_score
0177   3003           00835     movlw 3
0178   3???           00836     bra add_score
0179   3001           00837     movlw 1
017A                  00838 add_score    
017A   2???           00839     call inc_score
017B                  00840 pong_sound
017B   3001           00841     movlw 1
                      00842     pushw
017C   0019               M     movwi --SP
017D   3000           00843     movlw 0
017E   2???           00844     call sound_init
017F                  00845 collision_exit
017F   0A??           00846     incf task
                      00847     leave
0180   2???               M     goto isr_exit
                      00848     
                      00849 ; check if  lb <= x < hb
                      00850 ; design to take same number of Tcy whatever the path.
                      00851 ; 13 tcy    
                      00852 ; input:
                      00853 ;    WREG  x
                      00854 ;    stack ( lb hb -- )     
                      00855 ; output:
                      00856 ;   Carry bit set if true    
0181                  00857 between
0181   00??           00858     movwf temp2
                      00859     pickn 1
0182   3F01               M     moviw 1[SP]
0183   02??           00860     subwf temp2,W
0184   1C03           00861     skpc
0185   3???           00862     bra between_exit2
0186   0800           00863     movfw T
0187   02??           00864     subwf temp2
0188   0803           00865     movfw STATUS
0189   3A01           00866     xorlw 1
018A   0083           00867     movwf STATUS
018B                  00868 between_exit    
                      00869     dropn 2
018B   3102               M     addfsr T,2
018C   0008           00870     return  ; 13 tcy
                      00871 ; add tcy to have constant tcy for this routine whatever the path    
018D                  00872 between_exit2
018D   3???           00873     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018E   3???           00874     bra between_exit
                      00875     
                      00876 ; task 9, wait for first video line
018F                  00877 video_first
018F   301D           00878     movlw FIRST_VIDEO_LINE-1
0190   02??           00879     subwf lcount,W
0191   1D03           00880     skpz
                      00881     leave
0192   2???               M     goto isr_exit
0193   01??           00882     clrf slice
0194   0A??           00883     incf task
                      00884     leave
0195   2???               M     goto isr_exit
                      00885    
                      00886 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00887 ; The following tasks are responsible to render video display.
                      00888 ; Each video line must be completed by setting color to black.
                      00889 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00890 
                      00891 ; check if ball is visible on this scan line    
                      00892 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT
                      00893 ; designed to use a constant number of Tcy    
                      00894 ;  22 tcy   
                      00895 ;  input:
                      00896 ;       none    
                      00897 ;  output:
                      00898 ;       C set if true   
0196                  00899 ball_visible
0196   08??           00900     movfw ball_y
                      00901     pushw
0197   0019               M     movwi --SP
0198   3E08           00902     addlw BALL_HEIGHT
                      00903     pushw
0199   0019               M     movwi --SP
019A   08??           00904     movfw lcount
019B   2???           00905     call between ; +13 tcy
019C   0008           00906     return
                      00907     
                      00908     
                      00909 ; display vbuffer
                      00910 ; the 6 macros display_byte unroll to 240 instructions    
019D                  00911 display_vbuffer
                      00912     display_byte 0
                          M     display_bit 0
019D   35??               M     lslf vbuffer+0
019E   301B               M     movlw BLACK
019F   1803               M     skpnc
01A0   08??               M     movfw fg_color
01A1   008C               M     movwf TRISA
                          M     display_bit 0
01A2   35??               M     lslf vbuffer+0
01A3   301B               M     movlw BLACK
01A4   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A5   08??               M     movfw fg_color
01A6   008C               M     movwf TRISA
                          M     display_bit 0
01A7   35??               M     lslf vbuffer+0
01A8   301B               M     movlw BLACK
01A9   1803               M     skpnc
01AA   08??               M     movfw fg_color
01AB   008C               M     movwf TRISA
                          M     display_bit 0
01AC   35??               M     lslf vbuffer+0
01AD   301B               M     movlw BLACK
01AE   1803               M     skpnc
01AF   08??               M     movfw fg_color
01B0   008C               M     movwf TRISA
                          M     display_bit 0
01B1   35??               M     lslf vbuffer+0
01B2   301B               M     movlw BLACK
01B3   1803               M     skpnc
01B4   08??               M     movfw fg_color
01B5   008C               M     movwf TRISA
                          M     display_bit 0
01B6   35??               M     lslf vbuffer+0
01B7   301B               M     movlw BLACK
01B8   1803               M     skpnc
01B9   08??               M     movfw fg_color
01BA   008C               M     movwf TRISA
                          M     display_bit 0
01BB   35??               M     lslf vbuffer+0
01BC   301B               M     movlw BLACK
01BD   1803               M     skpnc
01BE   08??               M     movfw fg_color
01BF   008C               M     movwf TRISA
                          M     display_bit 0
01C0   35??               M     lslf vbuffer+0
01C1   301B               M     movlw BLACK
01C2   1803               M     skpnc
01C3   08??               M     movfw fg_color
01C4   008C               M     movwf TRISA
                      00913     display_byte 1
                          M     display_bit 1
01C5   35??               M     lslf vbuffer+1
01C6   301B               M     movlw BLACK
01C7   1803               M     skpnc
01C8   08??               M     movfw fg_color
01C9   008C               M     movwf TRISA
                          M     display_bit 1
01CA   35??               M     lslf vbuffer+1
01CB   301B               M     movlw BLACK
01CC   1803               M     skpnc
01CD   08??               M     movfw fg_color
01CE   008C               M     movwf TRISA
                          M     display_bit 1
01CF   35??               M     lslf vbuffer+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D0   301B               M     movlw BLACK
01D1   1803               M     skpnc
01D2   08??               M     movfw fg_color
01D3   008C               M     movwf TRISA
                          M     display_bit 1
01D4   35??               M     lslf vbuffer+1
01D5   301B               M     movlw BLACK
01D6   1803               M     skpnc
01D7   08??               M     movfw fg_color
01D8   008C               M     movwf TRISA
                          M     display_bit 1
01D9   35??               M     lslf vbuffer+1
01DA   301B               M     movlw BLACK
01DB   1803               M     skpnc
01DC   08??               M     movfw fg_color
01DD   008C               M     movwf TRISA
                          M     display_bit 1
01DE   35??               M     lslf vbuffer+1
01DF   301B               M     movlw BLACK
01E0   1803               M     skpnc
01E1   08??               M     movfw fg_color
01E2   008C               M     movwf TRISA
                          M     display_bit 1
01E3   35??               M     lslf vbuffer+1
01E4   301B               M     movlw BLACK
01E5   1803               M     skpnc
01E6   08??               M     movfw fg_color
01E7   008C               M     movwf TRISA
                          M     display_bit 1
01E8   35??               M     lslf vbuffer+1
01E9   301B               M     movlw BLACK
01EA   1803               M     skpnc
01EB   08??               M     movfw fg_color
01EC   008C               M     movwf TRISA
                      00914     display_byte 2
                          M     display_bit 2
01ED   35??               M     lslf vbuffer+2
01EE   301B               M     movlw BLACK
01EF   1803               M     skpnc
01F0   08??               M     movfw fg_color
01F1   008C               M     movwf TRISA
                          M     display_bit 2
01F2   35??               M     lslf vbuffer+2
01F3   301B               M     movlw BLACK
01F4   1803               M     skpnc
01F5   08??               M     movfw fg_color
01F6   008C               M     movwf TRISA
                          M     display_bit 2
01F7   35??               M     lslf vbuffer+2
01F8   301B               M     movlw BLACK
01F9   1803               M     skpnc
01FA   08??               M     movfw fg_color
01FB   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 2
01FC   35??               M     lslf vbuffer+2
01FD   301B               M     movlw BLACK
01FE   1803               M     skpnc
01FF   08??               M     movfw fg_color
0200   008C               M     movwf TRISA
                          M     display_bit 2
0201   35??               M     lslf vbuffer+2
0202   301B               M     movlw BLACK
0203   1803               M     skpnc
0204   08??               M     movfw fg_color
0205   008C               M     movwf TRISA
                          M     display_bit 2
0206   35??               M     lslf vbuffer+2
0207   301B               M     movlw BLACK
0208   1803               M     skpnc
0209   08??               M     movfw fg_color
020A   008C               M     movwf TRISA
                          M     display_bit 2
020B   35??               M     lslf vbuffer+2
020C   301B               M     movlw BLACK
020D   1803               M     skpnc
020E   08??               M     movfw fg_color
020F   008C               M     movwf TRISA
                          M     display_bit 2
0210   35??               M     lslf vbuffer+2
0211   301B               M     movlw BLACK
0212   1803               M     skpnc
0213   08??               M     movfw fg_color
0214   008C               M     movwf TRISA
                      00915     display_byte 3
                          M     display_bit 3
0215   35??               M     lslf vbuffer+3
0216   301B               M     movlw BLACK
0217   1803               M     skpnc
0218   08??               M     movfw fg_color
0219   008C               M     movwf TRISA
                          M     display_bit 3
021A   35??               M     lslf vbuffer+3
021B   301B               M     movlw BLACK
021C   1803               M     skpnc
021D   08??               M     movfw fg_color
021E   008C               M     movwf TRISA
                          M     display_bit 3
021F   35??               M     lslf vbuffer+3
0220   301B               M     movlw BLACK
0221   1803               M     skpnc
0222   08??               M     movfw fg_color
0223   008C               M     movwf TRISA
                          M     display_bit 3
0224   35??               M     lslf vbuffer+3
0225   301B               M     movlw BLACK
0226   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0227   08??               M     movfw fg_color
0228   008C               M     movwf TRISA
                          M     display_bit 3
0229   35??               M     lslf vbuffer+3
022A   301B               M     movlw BLACK
022B   1803               M     skpnc
022C   08??               M     movfw fg_color
022D   008C               M     movwf TRISA
                          M     display_bit 3
022E   35??               M     lslf vbuffer+3
022F   301B               M     movlw BLACK
0230   1803               M     skpnc
0231   08??               M     movfw fg_color
0232   008C               M     movwf TRISA
                          M     display_bit 3
0233   35??               M     lslf vbuffer+3
0234   301B               M     movlw BLACK
0235   1803               M     skpnc
0236   08??               M     movfw fg_color
0237   008C               M     movwf TRISA
                          M     display_bit 3
0238   35??               M     lslf vbuffer+3
0239   301B               M     movlw BLACK
023A   1803               M     skpnc
023B   08??               M     movfw fg_color
023C   008C               M     movwf TRISA
                      00916     display_byte 4
                          M     display_bit 4
023D   35??               M     lslf vbuffer+4
023E   301B               M     movlw BLACK
023F   1803               M     skpnc
0240   08??               M     movfw fg_color
0241   008C               M     movwf TRISA
                          M     display_bit 4
0242   35??               M     lslf vbuffer+4
0243   301B               M     movlw BLACK
0244   1803               M     skpnc
0245   08??               M     movfw fg_color
0246   008C               M     movwf TRISA
                          M     display_bit 4
0247   35??               M     lslf vbuffer+4
0248   301B               M     movlw BLACK
0249   1803               M     skpnc
024A   08??               M     movfw fg_color
024B   008C               M     movwf TRISA
                          M     display_bit 4
024C   35??               M     lslf vbuffer+4
024D   301B               M     movlw BLACK
024E   1803               M     skpnc
024F   08??               M     movfw fg_color
0250   008C               M     movwf TRISA
                          M     display_bit 4
0251   35??               M     lslf vbuffer+4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0252   301B               M     movlw BLACK
0253   1803               M     skpnc
0254   08??               M     movfw fg_color
0255   008C               M     movwf TRISA
                          M     display_bit 4
0256   35??               M     lslf vbuffer+4
0257   301B               M     movlw BLACK
0258   1803               M     skpnc
0259   08??               M     movfw fg_color
025A   008C               M     movwf TRISA
                          M     display_bit 4
025B   35??               M     lslf vbuffer+4
025C   301B               M     movlw BLACK
025D   1803               M     skpnc
025E   08??               M     movfw fg_color
025F   008C               M     movwf TRISA
                          M     display_bit 4
0260   35??               M     lslf vbuffer+4
0261   301B               M     movlw BLACK
0262   1803               M     skpnc
0263   08??               M     movfw fg_color
0264   008C               M     movwf TRISA
                      00917     display_byte 5
                          M     display_bit 5
0265   35??               M     lslf vbuffer+5
0266   301B               M     movlw BLACK
0267   1803               M     skpnc
0268   08??               M     movfw fg_color
0269   008C               M     movwf TRISA
                          M     display_bit 5
026A   35??               M     lslf vbuffer+5
026B   301B               M     movlw BLACK
026C   1803               M     skpnc
026D   08??               M     movfw fg_color
026E   008C               M     movwf TRISA
                          M     display_bit 5
026F   35??               M     lslf vbuffer+5
0270   301B               M     movlw BLACK
0271   1803               M     skpnc
0272   08??               M     movfw fg_color
0273   008C               M     movwf TRISA
                          M     display_bit 5
0274   35??               M     lslf vbuffer+5
0275   301B               M     movlw BLACK
0276   1803               M     skpnc
0277   08??               M     movfw fg_color
0278   008C               M     movwf TRISA
                          M     display_bit 5
0279   35??               M     lslf vbuffer+5
027A   301B               M     movlw BLACK
027B   1803               M     skpnc
027C   08??               M     movfw fg_color
027D   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 5
027E   35??               M     lslf vbuffer+5
027F   301B               M     movlw BLACK
0280   1803               M     skpnc
0281   08??               M     movfw fg_color
0282   008C               M     movwf TRISA
                          M     display_bit 5
0283   35??               M     lslf vbuffer+5
0284   301B               M     movlw BLACK
0285   1803               M     skpnc
0286   08??               M     movfw fg_color
0287   008C               M     movwf TRISA
                          M     display_bit 5
0288   35??               M     lslf vbuffer+5
0289   301B               M     movlw BLACK
028A   1803               M     skpnc
028B   08??               M     movfw fg_color
028C   008C               M     movwf TRISA
028D   0008           00918     return
                      00919  
                      00920 ; task 10, draw score en ball count
                      00921 ;  lcount 30-49    
028E                  00922 draw_score 
                      00923 ;    banksel TRISA
028E   08??           00924     movfw slice
028F   3689           00925     lsrf WREG
0290   3689           00926     lsrf WREG
                      00927     pushw
0291   0019               M     movwi --SP
0292   08??           00928     movfw score
0293   2???           00929     call digits
0294   0E89           00930     swapf WREG
0295   04??           00931     iorwf vbuffer
0296   0E??           00932     swapf score+1,W
0297   2???           00933     call digits
0298   04??           00934     iorwf vbuffer
0299   08??           00935     movfw score+1
029A   2???           00936     call digits
029B   0E89           00937     swapf WREG
029C   04??           00938     iorwf vbuffer+1
029D   08??           00939     movfw balls
029E   2???           00940     call digits
029F   04??           00941     iorwf vbuffer+4
02A0   2???           00942     call display_vbuffer
                      00943     dropn 1
02A1   3101               M     addfsr T,1
02A2                  00944 score_exit
                      00945     next_task 5*4
02A2   0A??               M     incf slice
02A3   3014               M     movlw 5*4
02A4   02??               M     subwf slice,W
02A5   1D03               M     skpz
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A6   2???               M     goto isr_exit
02A7   01??               M     clrf slice
02A8   0A??               M     incf task
                          M     leave
02A9   2???               M     goto isr_exit
                      00946 
                      00947     
                      00948 ; task 11,  draw top wall, 8 screen lines 
                      00949 ; lcount 50-57    
02AA                  00950 draw_top_wall
                      00951 ;    banksel TRISA
02AA   09??           00952     comf vbuffer
02AB   09??           00953     comf vbuffer+1
02AC   09??           00954     comf vbuffer+2
02AD   09??           00955     comf vbuffer+3
02AE   09??           00956     comf vbuffer+4
02AF   09??           00957     comf vbuffer+5
02B0   300B           00958     movlw WHITE
02B1   00??           00959     movwf fg_color
                      00960     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02B2   3016               M     movlw q
02B3   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      00961     white
02B4   300B               M     movlw WHITE
02B5   008C               M     movwf TRISA
02B6   2???           00962     call display_vbuffer
                      00963     white
02B7   300B               M     movlw WHITE
02B8   008C               M     movwf TRISA
                      00964     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02B9   2???               M     call _4tcy
                          M     exitm
                      00965     black
02BA   301B               M     movlw BLACK
02BB   008C               M     movwf TRISA
                      00966     next_task BRICK_HEIGHT
02BC   0A??               M     incf slice
02BD   3008               M     movlw BRICK_HEIGHT
02BE   02??               M     subwf slice,W
02BF   1D03               M     skpz
                          M     leave
02C0   2???               M     goto isr_exit
02C1   01??               M     clrf slice
02C2   0A??               M     incf task
                          M     leave
02C3   2???               M     goto isr_exit
                      00967 
                      00968 ; put ball mask in video_buffer
                      00969 ; designed to take a constant number of Tcy    
                      00970 ; 38 Tcy    
02C4                  00971 put_ball_in_buffer
02C4   2???           00972     call ball_visible ; +22 Tcy
02C5   1C03           00973     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C6   3???           00974     bra kill_time
02C7   0187           00975     clrf FSR1H
02C8   30??           00976     movlw low vbuffer
02C9   0086           00977     movwf FSR1L
02CA   08??           00978     movfw ball_byte
02CB   0786           00979     addwf FSR1L
02CC   08??           00980     movfw ball_mask
02CD   001E           00981     movwi FSR1++
02CE   08??           00982     movfw ball_mask+1
02CF   3FC0           00983     movwi [FSR1]
02D0   0008           00984     return ; 37 tcy
02D1                  00985 kill_time 
                      00986     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3  
  0001                    M     variable r=7-3-3*q
02D1   3001               M     movlw q
02D2   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02D3   0000               M     nop
                          M     exitm
02D4   0008           00987     return ; 37 tcy
                      00988 
02D5                  00989 empty_common    
02D5   2???           00990     call put_ball_in_buffer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D6   300B           00991     movlw WHITE
02D7   00??           00992     movwf fg_color
                      00993     tdelay LEFT_MARGIN-37
                          M     if LEFT_MARGIN-37==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37>5
  0009                    M     variable q=(LEFT_MARGIN-37-3)/3 
  0002                    M     variable r=LEFT_MARGIN-37-3-3*q
02D8   3009               M     movlw q
02D9   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
02DA   3???               M     bra $+1
                          M     exitm
                      00994     white
02DB   300B               M     movlw WHITE
02DC   008C               M     movwf TRISA
02DD   2???           00995     call display_vbuffer
                      00996     white
02DE   300B               M     movlw WHITE
02DF   008C               M     movwf TRISA
                      00997     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02E0   2???               M     call _4tcy
                          M     exitm
                      00998     black
02E1   301B               M     movlw BLACK
02E2   008C               M     movwf TRISA
02E3   0008           00999     return
                      01000     
                      01001 ; task 12,  draw vertical sides over bricks.
                      01002 ; lcount 58-73    
02E4                  01003 draw_sides 
                      01004 ;    banksel TRISA
                      01005     tdelay 2
                          M     if 2==0
                          M     exitm
                          M     endif
                          M     if 2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 2==2
02E4   3???               M     bra $+1
                          M     exitm
02E5   2???           01006     call empty_common
                      01007     next_task 2*BRICK_HEIGHT
02E6   0A??               M     incf slice
02E7   3010               M     movlw 2*BRICK_HEIGHT
02E8   02??               M     subwf slice,W
02E9   1D03               M     skpz
                          M     leave
02EA   2???               M     goto isr_exit
02EB   01??               M     clrf slice
02EC   0A??               M     incf task
                          M     leave
02ED   2???               M     goto isr_exit
                      01008  
                      01009 ; copy a brick row in vbuffer
                      01010 ; FSR1 initialized to point row    
02EE                  01011 copy_row
02EE   0016           01012     moviw FSR1++
02EF   04??           01013     iorwf vbuffer
02F0   0016           01014     moviw FSR1++
02F1   04??           01015     iorwf vbuffer+1
02F2   0016           01016     moviw FSR1++
02F3   04??           01017     iorwf vbuffer+2
02F4   0016           01018     moviw FSR1++
02F5   04??           01019     iorwf vbuffer+3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F6   0016           01020     moviw FSR1++
02F7   04??           01021     iorwf vbuffer+4
02F8   0016           01022     moviw FSR1++
02F9   04??           01023     iorwf vbuffer+5
02FA   0008           01024     return    
                      01025 
                      01026 ;common code to all bricks row display    
02FB                  01027 rows_common
02FB   00??           01028     movwf fg_color
02FC   0187           01029     clrf FSR1H
02FD   2???           01030     call copy_row
                      01031     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
02FE   0000               M     nop
                          M     exitm
                      01032     white
02FF   300B               M     movlw WHITE
0300   008C               M     movwf TRISA
0301   2???           01033     call display_vbuffer
                      01034     white
0302   300B               M     movlw WHITE
0303   008C               M     movwf TRISA
                      01035     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0304   2???               M     call _4tcy
                          M     exitm
                      01036     black
0305   301B               M     movlw BLACK
0306   008C               M     movwf TRISA
                      01037     next_task BRICKS_ROWS*BRICK_HEIGHT
0307   0A??               M     incf slice
0308   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
0309   02??               M     subwf slice,W
030A   1D03               M     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
030B   2???               M     goto isr_exit
030C   01??               M     clrf slice
030D   0A??               M     incf task
                          M     leave
030E   2???               M     goto isr_exit
                      01038     
                      01039 ; task 13, draw brick rows
                      01040 ; lcount 74-121   
030F                  01041 draw_bricks
                      01042 ;    banksel vbuffer
030F   2???           01043     call put_ball_in_buffer
0310   30??           01044     movlw low row1
0311   0086           01045     movwf FSR1L
0312   30F8           01046     movlw 0xf8
0313   05??           01047     andwf slice,W
0314   0786           01048     addwf FSR1L
0315   003B           01049     banksel PWM1CON
                      01050     pushw
0316   0019               M     movwi --SP
0317   3010           01051     movlw 2<<3
0318   0200           01052     subwf T,W
0319   1803           01053     skpnc
031A   161B           01054     bsf PWM1CON,POL
                      01055     popw
031B   0012               M     moviw SP++
031C   0021           01056     banksel TRISA
031D   3689           01057     lsrf WREG
031E   3689           01058     lsrf WREG
                      01059     ; select color according to row index {0..5}
031F   000B           01060     brw
0320   3009           01061     movlw YELLOW
0321   3???           01062     bra rows_common
0322   3009           01063     movlw YELLOW
0323   3???           01064     bra rows_common
0324   3009           01065     movlw MAUVE
0325   3???           01066     bra rows_common
0326   3009           01067     movlw MAUVE
0327   3???           01068     bra rows_common
0328   3019           01069     movlw BLUE
0329   3???           01070     bra rows_common
032A   3019           01071     movlw BLUE
032B   3???           01072     bra rows_common
                      01073     
  00000028            01074 MSG_FIRST equ 40
  00000028            01075 MSG_HEIGHT equ 40
  00000010            01076 MSG_PIXELS_COUNT equ 16 
                      01077 ; task 14
                      01078 ; draw all rows below bricks down to paddle
                      01079 ; also display message when game over. 
                      01080 ; lcount 122-241 
032C                  01081 draw_empty
                      01082 ;    banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032C   1E00           01083     btfss flags, F_START
032D   3???           01084     bra print_msg
032E   2???           01085     call empty_common
032F   3???           01086     bra draw_empty_exit
0330                  01087 print_msg    
0330   3009           01088     movlw YELLOW ; message color
0331   00??           01089     movwf fg_color
0332   3028           01090     movlw MSG_FIRST
                      01091     pushw
0333   0019               M     movwi --SP
0334   3050           01092     movlw MSG_FIRST+MSG_HEIGHT
                      01093     pushw
0335   0019               M     movwi --SP
0336   08??           01094     movfw slice
0337   2???           01095     call between
0338   1C03           01096     skpc
0339   3???           01097     bra msg01
033A   30??           01098     movlw high end_msg
033B   0087           01099     movwf FSR1H
033C   30??           01100     movlw low end_msg
033D   0086           01101     movwf FSR1L
033E   1003           01102     clrc
033F   300A           01103     movlw 10
0340   1B00           01104     btfsc flags,F_COOL
0341   0786           01105     addwf FSR1L
0342   1803           01106     skpnc
0343   0A87           01107     incf FSR1H
                      01108 ; copy message bitmap in vbuffer
                      01109 ; message is  16 pixels wide
0344                  01110 copy_msg
0344   3028           01111     movlw MSG_FIRST
0345   02??           01112     subwf slice,W
0346   39F8           01113     andlw 0xf8
0347   3689           01114     lsrf WREG
0348   3689           01115     lsrf WREG
0349   0786           01116     addwf FSR1L
034A   1803           01117     skpnc
034B   0A87           01118     incf FSR1H
034C   0016           01119     moviw FSR1++
034D   00??           01120     movwf vbuffer+1
034E   0016           01121     moviw FSR1++
034F   00??           01122     movwf vbuffer+2
0350                  01123 msg01    
0350   2???           01124     call display_vbuffer
0351                  01125 draw_empty_exit
                      01126     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0351   0A??               M     incf slice
0352   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0353   02??               M     subwf slice,W
0354   1D03               M     skpz
                          M     leave
0355   2???               M     goto isr_exit
0356   01??               M     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0357   0A??               M     incf task
                          M     leave
0358   2???               M     goto isr_exit
                      01127 
                      01128     
                      01129 ; task 15, draw paddle at bottom screen  
                      01130 ; lcount 242-249    
0359                  01131 draw_paddle
                      01132 ;    banksel TRISA
0359   0187           01133     clrf FSR1H
035A   30??           01134     movlw low vbuffer
035B   0086           01135     movwf FSR1L
035C   08??           01136     movfw paddle_byte
035D   0786           01137     addwf FSR1L
035E   08??           01138     movfw paddle_mask
035F   001E           01139     movwi FSR1++
0360   08??           01140     movfw paddle_mask+1
0361   3FC0           01141     movwi  [FSR1]
0362   300B           01142     movlw WHITE
0363   00??           01143     movwf fg_color
                      01144     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
0364   3015               M     movlw q
0365   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01145     white
0366   300B               M     movlw WHITE
0367   008C               M     movwf TRISA
0368   2???           01146     call display_vbuffer
                      01147     white
0369   300B               M     movlw WHITE
036A   008C               M     movwf TRISA
                      01148     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
036B   2???               M     call _4tcy
                          M     exitm
                      01149     black
036C   301B               M     movlw BLACK
036D   008C               M     movwf TRISA
                      01150     next_task PADDLE_THICKNESS
036E   0A??               M     incf slice
036F   3004               M     movlw PADDLE_THICKNESS
0370   02??               M     subwf slice,W
0371   1D03               M     skpz
                          M     leave
0372   2???               M     goto isr_exit
0373   01??               M     clrf slice
0374   0A??               M     incf task
                          M     leave
0375   2???               M     goto isr_exit
                      01151 
                      01152 ; task 16,  wait end of this field, reset task to zero    
                      01153 ; lcount 251-262/3    
0376                  01154 wait_field_end
0376   1800           01155     btfsc flags, F_BIT8
0377   2???           01156     goto hi_line
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01157     leave
0378   2???               M     goto isr_exit
0379                  01158 hi_line
0379   1880           01159     btfsc flags,F_EVEN
037A   2???           01160     goto even_field
037B   3005           01161     movlw 5
037C   02??           01162     subwf lcount,W
037D   1D03           01163     skpz
                      01164     leave
037E   2???               M     goto isr_exit
037F   2???           01165     goto field_end
0380                  01166 even_field
0380   3006           01167     movlw 6
0381   02??           01168     subwf lcount,W
0382   1D03           01169     skpz
                      01170     leave
0383   2???               M     goto isr_exit
                      01171 ; even field last line is half_line    
                      01172 ; set PWM3 for line 263 half-line
0384   003B           01173     banksel PWM3DC
0385   3003           01174     movlw high HALF_LINE
0386   00B6           01175     movwf PWM3PRH
0387   308D           01176     movlw low HALF_LINE
0388   00B5           01177     movwf PWM3PRL
0389   17BF           01178     bsf PWM3LDCON,7
038A                  01179 field_end
038A   01??           01180     clrf task
038B   01??           01181     clrf slice
038C   01??           01182     clrf lcount
038D   1000           01183     bcf flags, F_BIT8
038E   1500           01184     bsf flags, F_SYNC
                      01185 ; toggle odd/even field flag    
038F   3002           01186     movlw 1<<F_EVEN
0390   06??           01187     xorwf flags
                      01188     leave
0391   2???               M     goto isr_exit
                      01189 
                      01190 ; helper functions
                      01191 
                      01192 
                      01193 ; increment user score
                      01194 ; This is a BCD addition where a single digit is added to score.   
                      01195 ; score is stored as big indian
                      01196 ; argument: 
                      01197 ;   WREG ->  bdc digit to add to score variable
0392                  01198 inc_score
0392   07??           01199     addwf score+1
0393   1883           01200     btfsc STATUS,DC
0394   3???           01201     bra $+6
0395   300F           01202     movlw 15
0396   05??           01203     andwf score+1,W
0397   3C09           01204     sublw 9
0398   1803           01205     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0399   3???           01206     bra $+3
039A   3006           01207     movlw 6
039B   07??           01208     addwf score+1
039C   0E??           01209     swapf score+1,W
039D   390F           01210     andlw 15
039E   3C09           01211     sublw 9
039F   1803           01212     skpnc
03A0   3???           01213     bra game_over_test
03A1   3060           01214     movlw 0x60
03A2   07??           01215     addwf score+1
03A3   0A??           01216     incf score
                      01217 ; double ball speed if score >=200
03A4   3002           01218     movlw 2
03A5   02??           01219     subwf score,W
03A6   1C03           01220     skpc
03A7   0008           01221     return
03A8   3001           01222     movlw 1
03A9   00??           01223     movwf ball_speed
03AA                  01224 game_over_test ; all bricks destroyed?
03AA   3004           01225     movlw 4
03AB   02??           01226     subwf score,W
03AC   1D03           01227     skpz
03AD   0008           01228     return
03AE   3008           01229     movlw 0x08
03AF   02??           01230     subwf score+1,W
03B0   1D03           01231     skpz
03B1   0008           01232     return
03B2   1200           01233     bcf flags,F_START ; game over
03B3   1700           01234     bsf flags,F_COOL ; with maximum score.
03B4   0008           01235     return
                      01236     
                      01237     
03B5                  01238 brick_wall_init
03B5   30??           01239     movlw high row1
03B6   0087           01240     movwf FSR1H
03B7   30??           01241     movlw low row1
03B8   0086           01242     movwf FSR1L
03B9   3030           01243     movlw BRICKS_ROWS*8
03BA   00??           01244     movwf temp1
03BB   30FF           01245     movlw 0xff
03BC                  01246 bw_init
03BC   001E           01247     movwi FSR1++
03BD   0B??           01248     decfsz temp1
03BE   3???           01249     bra bw_init
03BF   0008           01250     return
                      01251 
                      01252 ; pseudo random number generator    
                      01253 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs  
  000000B8            01254 POLY equ 0xb8 
03C0                  01255 lfsr8
03C0   36??           01256     lsrf seed
03C1   30B8           01257     movlw POLY
03C2   1803           01258     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C3   06??           01259     xorwf seed
                      01260 ; call here for 5 Tcy delay using a single instruction
                      01261 ; see tdelay macro 
03C4                  01262 _5tcy
03C4   08??           01263     movfw seed
03C5   0008           01264     return
                      01265     
                      01266 ; ball is sent at random direcction at serve.
03C6                  01267 set_ball_dx
03C6   2???           01268     call lfsr8 ;random
03C7   3907           01269     andlw 7
03C8   3589           01270     lslf WREG
03C9   000B           01271     brw
03CA   3001           01272     movlw 1
03CB   3???           01273     bra set_ball_dx_exit
03CC   30FF           01274     movlw -1
03CD   3???           01275     bra set_ball_dx_exit
03CE   3001           01276     movlw 1
03CF   3???           01277     bra set_ball_dx_exit
03D0   30FF           01278     movlw -1
03D1   3???           01279     bra set_ball_dx_exit
03D2   3001           01280     movlw 1
03D3   3???           01281     bra set_ball_dx_exit
03D4   30FF           01282     movlw -1
03D5   3???           01283     bra set_ball_dx_exit
03D6   3001           01284     movlw 1
03D7   3???           01285     bra set_ball_dx_exit
03D8   3000           01286     movlw 0
03D9                  01287 set_ball_dx_exit
03D9   00??           01288     movwf ball_dx
03DA   0008           01289     return
                      01290     
03DB                  01291 game_init
03DB   01??           01292     clrf score
03DC   01??           01293     clrf score+1
03DD   2???           01294     call brick_wall_init
03DE   002?           01295     banksel balls
03DF   3003           01296     movlw 3
03E0   00??           01297     movwf balls
03E1   3002           01298     movlw 2
03E2   00??           01299     movwf ball_timer
03E3   30ED           01300     movlw PADDLE_Y-BALL_HEIGHT-1
03E4   00??           01301     movwf ball_y
03E5   2???           01302     call set_ball_dx
03E6   30FC           01303     movlw -4
03E7   00??           01304     movwf ball_dy
03E8   3002           01305     movlw 2
03E9   00??           01306     movwf ball_speed
03EA   01??           01307     clrf flags
03EB   0008           01308     return
                      01309     
                      01310 MAIN_PROG CODE                      ; let linker place main program
                      01311 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000                  01312 initialize
                      01313 ; clear common RAM
0000   3070           01314     movlw 0x70
0001   0084           01315     movwf FSR0L
0002   0103           01316     clrw
0003   001A           01317     movwi FSR0++
0004   1F84           01318     btfss FSR0L,7
0005   3???           01319     bra $-2
                      01320 ; initialize LFSR seed
0006   1400           01321     bsf seed,0
                      01322 ; disable analog inputs, except AN0
0007   0023           01323     banksel ANSELA
0008   018C           01324     clrf ANSELA
                      01325 ; paddle potentiometer input     
0009   140C           01326     bsf ANSELA,PADDLE
                      01327 ;   setup arguments stack pointer
000A   30??           01328     movlw low (stack+STACK_SIZE)
000B   0084           01329     movwf FSR0L
                      01330 ; adc clock Fosc/32    
000C   0021           01331     banksel ADCON1
000D   3020           01332     movlw (2<<ADCS0)
000E   009E           01333     movwf ADCON1
                      01334 ; pin setup
                      01335 ; video luminance output always set to 1.    
000F   0022           01336     banksel LATA
0010   160C           01337     bsf LATA, VIDEO_OUT
                      01338 ; nstc sync output
0011   0021           01339     banksel TRISA
0012   110C           01340     bcf TRISA,SYNC_OUT
                      01341 ;  clear all PWM special fonction registers
                      01342 ;  to start configuration in a clean state.
0013   300D           01343     movlw high PWMEN
0014   0087           01344     movwf FSR1H
0015   308E           01345     movlw low PWMEN
0016   0086           01346     movwf FSR1L
0017                  01347 clr_pwm_sfr
0017   0181           01348     clrf INDF1
0018   0A86           01349     incf FSR1L
0019   30C1           01350     movlw 0xc1
001A   0206           01351     subwf FSR1L,W
001B   1D03           01352     skpz
001C   3???           01353     bra clr_pwm_sfr
                      01354 ; PWM1 chroma signal on RA1
001D   003B           01355     banksel PWM1CON
001E   30C0           01356     movlw (1<<EN)|(1<<OE)
001F   009B           01357     movwf PWM1CON
0020   3007           01358     movlw 7
0021   0095           01359     movwf PWM1PRL
0022   3004           01360     movlw 4
0023   0093           01361     movwf PWM1DCL
0024   179F           01362     bsf PWM1LDCON,7
                      01363 ; PWM2 sound, clock source Fosc/8
0025   3030           01364     movlw 3<<PWM2PS0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0026   00AE           01365     movwf PWM2CLKCON
                      01366 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0027   301B           01367     movlw low HPERIOD
0028   00B5           01368     movwf PWM3PRL
0029   3007           01369     movlw high HPERIOD
002A   00B6           01370     movwf PWM3PRH
002B   3086           01371     movlw HSYNC
002C   00B3           01372     movwf PWM3DCL
002D   30D0           01373     movlw (1<<EN)|(1<<OE)|(1<<POL)
002E   00BB           01374     movwf PWM3CON
002F   17BF           01375     bsf PWM3LDCON,7
0030   143C           01376     bsf PWM3INTE,PRIE
                      01377 ; enbable interrupt
                      01378 ; only interrupt used is PWM3PR rollover    
0031   0020           01379     banksel PIR3
0032   1313           01380     bcf PIR3,PWM3IF
0033   0021           01381     banksel PIE3
0034   1713           01382     bsf PIE3,PWM3IE
0035   170B           01383     bsf INTCON,PEIE
0036   178B           01384     bsf INTCON,GIE
0037   2???           01385     call game_init
                      01386 ; test code
                      01387 ; all processing done in ISR    
0038   2???           01388     goto $
                      01389 
                      01390 ;digits character table
                      01391 ; input:
                      01392 ;   T -> glyph row
                      01393 ;   WREG -> digit
                      01394 ; output:
                      01395 ;   WREG -> pixels
                      01396 ;   T -> glyph row  
                      01397 ; 2 digits packed in 5 bytes
                      01398 ; high nibble even digit, low nibble odd digit    
0039                  01399 digits
0039   00??           01400     movwf temp1
003A   390E           01401     andlw 0x0e
003B   00??           01402     movwf temp2
003C   35??           01403     lslf temp2
003D   35??           01404     lslf temp2
003E   07??           01405     addwf temp2
003F   36??           01406     lsrf temp2,W
0040   0700           01407     addwf T,W
0041   2???           01408     call digit_row
0042   1C00           01409     btfss temp1,0
0043   0E89           01410     swapf WREG
0044   390F           01411     andlw 0xf
0045   0008           01412     return
0046                  01413 digit_row    
0046   000B           01414     brw
0047   3444 34AC 34A4 01415     dt  H'44',H'AC',H'A4',H'A4',H'4E' ; 0, 1
       34A4 344E 
004C   34EE 3422 34CC 01416     dt  H'EE',H'22',H'CC',H'82',H'EE' ; 2, 3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3482 34EE 
0051   34AE 34A8 34EE 01417     dt  H'AE',H'A8',H'EE',H'22',H'2E' ; 4, 5
       3422 342E 
0056   34CE 3482 34E2 01418     dt  H'CE',H'82',H'E2',H'A2',H'E2' ; 6, 7
       34A2 34E2 
005B   34EE 34AA 34EE 01419     dt  H'EE',H'AA',H'EE',H'A2',H'E6' ; 8, 9
       34A2 34E6 
                      01420     
                      01421 ; PWM2PR count for sound frequencies    
0060                  01422 frequency
0060   000B           01423     brw
0061   348B 34D3      01424     dt high 35795, low 35795 ; 100 hertz
0063   340D 34FB      01425     dt high 3579, low 3579 ; 1000 hertz
                      01426   
                      01427 ; END! message bitmap
0065                  01428 end_msg
                      01429 ;    brw
0065   00F4 005C      01430     data 0xf4,0x5c
0067   0086 0052      01431     data 0x86,0x52
0069   00E5 0052      01432     data 0xe5,0x52
006B   0084 00D2      01433     data 0x84,0xd2
006D   00F4 005C      01434     data 0xf4,0x5c
                      01435   
                      01436 ; COOL message bitmap    
006F                  01437 cool_msg
                      01438 ;    brw
006F   00EE 00E8      01439     data 0xee,0xe8
0071   008A 00A8      01440     data 0x8a,0xa8
0073   008A 00A8      01441     data 0x8a,0xa8
0075   008A 00A8      01442     data 0x8a,0xa8
0077   00EE 00EF      01443     data 0xee,0xef
                      01444     
                      01445     
                      01446 eeprom org (PROG_SIZE-EEPROM_SIZE)
                      01447  
3FA7 3EFF             01448     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000006
F_EVEN                            00000001
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PMDATL                            00000193
POL                               00000004
POLY                              000000B8
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000050
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000009
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_007D                         0000007D
_ISR_0095                         00000095
_ISR_0148                         00000148
_ISR_018D                         0000018D
_ISR_02DA                         000002DA
_ISR_02E4                         000002E4
_ISR_0394                         00000394
_ISR_0399                         00000399
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0005                   00000005
_MAIN_PROG_0038                   00000038
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_RES_VECT_0002                    00000002
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_PK3              1
add_score                         0000017A
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000103
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_track_pallet                 0000010B
ball_visible                      00000196
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           00000181
between_exit                      0000018B
between_exit2                     0000018D
black                             
blue                              
bottom_bound                      000000FC
bounce_left                       00000131
bouncing                          00000120
brick_wall_init                   000003B5
bw_init                           000003BC
clr_pwm_sfr                       00000017
collision                         0000014A
collision_exit                    0000017F
compute_ball_mask                 00000139
cool_msg                          0000006F
copy_msg                          00000344
copy_row                          000002EE
dark_green                        
digit_row                         00000046
digits                            00000039
display_bit                       
display_byte                      
display_vbuffer                   0000019D
draw_bricks                       0000030F
draw_empty                        0000032C
draw_empty_exit                   00000351
draw_paddle                       00000359
draw_score                        0000028E
draw_sides                        000002E4
draw_top_wall                     000002AA
dropn                             
eeprom                            00000780
empty_common                      000002D5
end_msg                           00000065
even_field                        00000380
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

fg_color                          000000D7
field_end                         0000038A
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         00000060
game_init                         000003DB
game_over_test                    000003AA
game_start                        000000D4
hi_line                           00000379
inc_score                         00000392
initialize                        00000000
isr                               00000004
isr_exit                          0000002D
kill_time                         000002D1
lcount                            00000001
leave                             
left_bound                        000000E4
lfsr8                             000003C0
mauve                             
move_ball                         000000DB
move_ball_exit                    00000112
move_y                            000000EF
msg01                             00000350
next_task                         
paddle_bounce                     00000114
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000133
pickn                             
pong_sound                        0000017B
popw                              
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         00000033
print_msg                         00000330
pushw                             
put_ball_in_buffer                000002C4
q                                 00000015
r                                 00000000
read_button                       000000C6
read_paddle                       00000076
resume                            000000D6
right_bound                       000000E8
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  17:18:48         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

row5                              000000C7
row6                              000000CF
rows_common                       000002FB
score                             0000000C
score_exit                        000002A2
seed                              0000000F
set_ball_dx                       000003C6
set_ball_dx_exit                  000003D9
set_presync                       0000003E
set_vsync                         00000053
slice                             00000002
sound                             00000097
sound_fx1                         000000A6
sound_init                        000000AF
sound_off                         0000009F
sound_timer                       000000DE
stack                             00000020
task                              00000003
task_switch                       00000019
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
toggle_dx                         000000ED
top_bound                         000000F3
vbuffer                           000000A0
video_first                       0000018F
vsync                             00000048
vsync_end                         00000068
wait_field_end                    00000376
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   285 suppressed

