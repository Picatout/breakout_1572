MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, sound timer
                      00034 ;    12        |  1      | task 5, user input
                      00035 ;    13        |  1      | task 6, move ball
                      00036 ;    14        |  1      | task 7, collision control
                      00037 ;    15-30     |  26     | task 8, do nothing until first visible line    
                      00038 ;    31-50     |  20     | task 9, display score and balls count
                      00039 ;    51-58     |  8      | task 10, even field draw top wall, odd field do nothing
                      00040 ;    59-251    |  193    | task 11, even field draw sides line and ball skip to task 19, odd skip 16 lin
                            es
                      00041 ;    75-82     |  8      | task 12, odd field draw first bricks row, even field skipped
                      00042 ;    83-90     |  8      | task 13, odd field draw second bricks row, even field skipped
                      00043 ;    91-98     |  8      | task 14, odd field draw third bricks row, even field skipped
                      00044 ;    99-106    |  8      | task 15, odd field draw fourth bricks row, even field skipped
                      00045 ;    107-114   |  8      | task 16, odd field draw fifth bricks row, even field skipped
                      00046 ;    115-243   |  129    | task 17, odd field display game messages, even field skipped
                      00047 ;    244-251   |  8      | task 18, odd filed draw paddle, even field skipped
                      00048 ;    252-262/3 |  11/12  | task 19, wait end of field    
                      00049 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00050  
                      00051     
                      00052     include p12f1572.inc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00053     
8007   3FA7           00054     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00055     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00056     
                      00057     radix dec
                      00058 
                      00059 ; constants
  00000800            00060 PROG_SIZE equ 2048  ; program words
  00000080            00061 EEPROM_SIZE equ 128 ; high endurance flash words
                      00062  
  01B4F360            00063 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00064 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00065 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00066  
                      00067 ; NTSC signal 
  00003D76            00068 Fhorz equ 15734 ; horizontal frequency
  0000071B            00069 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00070 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00071 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00072 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00073 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00074 ; boolean flags 
  00000000            00075 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00076 F_EVEN equ 1    ; even field
  00000002            00077 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00078 F_SOUND equ 3   ; sound enabled 
  00000004            00079 F_START equ 4   ; game started 
  00000005            00080 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00081 F_OVER equ 6    ; game over
  00000007            00082 F_COOL equ 7    ; player got maximum score
                      00083  
                      00084 ;pins assignment
  00000000            00085 AUDIO EQU RA0
  00000000            00086 PADDLE equ RA0
  00000001            00087 CHROMA equ RA1
  00000002            00088 SYNC_OUT equ RA2
  00000003            00089 START_BTN equ RA3 
  00000004            00090 VIDEO_OUT equ RA4
  00000005            00091 CLKIN equ RA5
                      00092  
                      00093     ; constants used in video display
                      00094 ; values are in Tcy for x dimension.
                      00095 ; values are in scan lines for y dimension.    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            00096 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00097 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00098 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00099 COURT_WIDTH equ 248 ; Tcy
  00000008            00100 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00101 BRICK_WIDTH equ 16  ; Tcy
  00000004            00102 BORDER_WIDTH equ 4  ; Tcy
  00000020            00103 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00104 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00105 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00106 BALL_WIDTH equ 8 ; Tcy
  00000008            00107 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00108 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00109 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00110 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00111 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  00000005            00113 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00114 ROW1_Y equ 74
  00000052            00115 ROW2_Y equ 82
  0000005A            00116 ROW3_Y equ 90
  00000062            00117 ROW4_Y equ 98
  0000006A            00118 ROW5_Y equ 106
                      00119  
                      00120 
                      00121 ;;;;;;;;;;;;;;;;;;;;;;
                      00122 ;; assembler macros ;;
                      00123 ;;;;;;;;;;;;;;;;;;;;;;
                      00124 
                      00125 ; leave task 
                      00126 leave macro
                      00127     goto isr_exit
                      00128     endm
                      00129     
                      00130 ; move to next task on slice limit
                      00131 ; parameters:
                      00132 ;   s  nomber of slices used by the task    
                      00133 next_task macro s    
                      00134     incf slice
                      00135     movlw s
                      00136     subwf slice,W
                      00137     skpz
                      00138     leave
                      00139     clrf slice
                      00140     incf task
                      00141     leave
                      00142     endm
                      00143     
                      00144     
                      00145 ; swap variable with WREG    
                      00146 swap_var macro var
                      00147     xorwf var
                      00148     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149     xorwf var
                      00150     endm
                      00151     
                      00152 
                      00153 ; delay in machine cycle T
                      00154 ; parameters:
                      00155 ;   mc   number of machine cycles    
                      00156 tdelay macro mc 
                      00157     if mc==0
                      00158     exitm
                      00159     endif
                      00160     if mc==1
                      00161     nop
                      00162     exitm
                      00163     endif
                      00164     if mc==2
                      00165     bra $+1
                      00166     exitm
                      00167     endif
                      00168     if mc==3
                      00169     nop
                      00170     bra $+1
                      00171     exitm
                      00172     endif
                      00173     if mc==4
                      00174     call _4tcy
                      00175     exitm
                      00176     endif
                      00177     if mc==5
                      00178     call _5tcy
                      00179     exitm
                      00180     endif
                      00181     if mc==6
                      00182     call _6tcy
                      00183     exitm
                      00184     endif
                      00185     if mc==7
                      00186     call _7tcy
                      00187     exitm
                      00188     endif
                      00189     if mc>7
                      00190     variable q=(mc-5)/3
                      00191     variable r=(mc-5)%3
                      00192     movlw q
                      00193     call _3ntcy
                      00194     if (r==2)
                      00195     bra $+1
                      00196     exitm
                      00197     endif 
                      00198     if (r==1)
                      00199     nop
                      00200     exitm
                      00201     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00202     endif
                      00203     endm
                      00204 
                      00205 ; enable weak pull on VIDEO_OUT
                      00206 ; to create a porch
                      00207 porch_on macro
                      00208     banksel WPUA
                      00209     bsf WPUA,VIDEO_OUT
                      00210     endm
                      00211     
                      00212 ; disable weak pull on VIDEO_OUT
                      00213 ; to remove porch
                      00214 porch_off macro
                      00215     banksel WPUA
                      00216     bcf WPUA,VIDEO_OUT
                      00217     endm
                      00218     
                      00219 ; enable chroma output
                      00220 chroma_on macro
                      00221     banksel TRISA
                      00222     bcf TRISA, CHROMA
                      00223     endm
                      00224     
                      00225 ;disable chroma output    
                      00226 chroma_off macro
                      00227     banksel TRISA
                      00228     bsf TRISA,CHROMA
                      00229     endm
                      00230     
                      00231 ; output chroma reference    
                      00232 chroma_ref macro
                      00233     banksel PWM1CON
                      00234     bcf PWM1CON,POL
                      00235     endm
                      00236     
                      00237 ; set chroma phase to 180 degree
                      00238 chroma_invert macro
                      00239     banksel PWM1CON
                      00240     bsf PWM1CON,POL
                      00241     endm
                      00242 
                      00243 ;;;;;;;;;;;;;;;;;;;;;;
                      00244 ;   colors macros
                      00245 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00246 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00247 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00248 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00249 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00250 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00251 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00252 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00253  
                      00254 ;set video output to black    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00255 black macro
                      00256     movlw BLACK
                      00257     movwf TRISA
                      00258     endm
                      00259     
                      00260 ; set video output to white    
                      00261 white macro    
                      00262     movlw WHITE
                      00263     movwf TRISA
                      00264     endm
                      00265 
                      00266 #define gray white
                      00267     
                      00268 ; set video output to mauve    
                      00269 mauve macro
                      00270     movlw MAUVE
                      00271     movwf TRISA
                      00272     endm
                      00273 
                      00274 ; set video output to yellow   
                      00275 yellow macro
                      00276     movlw YELLOW
                      00277     movwf TRISA
                      00278     endm
                      00279     
                      00280 ; set video output to blue
                      00281 blue macro
                      00282     movlw BLUE
                      00283     movwf TRISA
                      00284     endm
                      00285     
                      00286 ; set video output to dark blue    
                      00287 dark_green macro
                      00288     movlw DARK_GREEN
                      00289     movwf TRISA
                      00290     endm
                      00291 
                      00292     
                      00293     
                      00294     
                      00295 ; draw left and right borders
                      00296 ; parameters:
                      00297 ;   width delay determine width
                      00298 draw_border macro width
                      00299     banksel TRISA
                      00300     bsf TRISA,CHROMA
                      00301     bcf TRISA,VIDEO_OUT
                      00302     tdelay width
                      00303     bsf TRISA,VIDEO_OUT
                      00304     endm
                      00305     
                      00306 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00307 ;  stack manipulation macros
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00309 STACK_SIZE equ 16 ; size of argument stack
                      00310 #define T INDF0 ; indirect access to top of argument stack
                      00311 #define SP FSR0 ; use FSR0 as stack pointer 
                      00312 ; push WREG on T
                      00313 pushw  macro
                      00314     movwi --SP
                      00315     endm
                      00316   
                      00317 ; pop WREG from T
                      00318 popw macro
                      00319     moviw SP++
                      00320     endm
                      00321     
                      00322 ; swap WREG with 
                      00323 swapw  macro
                      00324     xorwf T
                      00325     xorwf T,W
                      00326     xorwf T
                      00327     endm
                      00328 
                      00329 ; drop n elements from stack
                      00330 dropn macro n
                      00331     addfsr T,n
                      00332     endm
                      00333 
                      00334 ; copy nth element of stack to WREG
                      00335 ;  n {0..31}, 0 is T   
                      00336 pickn macro n
                      00337     moviw n[SP]
                      00338     endm
                      00339    
                      00340 ; copy WREG to nth element of stack
                      00341 ; n {0..31}, 0 is T
                      00342 pokew macro n
                      00343     movwi n[SP]
                      00344     endm
                      00345     
                      00346     
                      00347 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00348 ;;    variables
                      00349 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00350  
                      00351     
                      00352     udata 0x20 ; bank 0
0020                  00353 stack res 16 ; arguments stack
0030                  00354 seed res 2 ; prng seed used by lfsr16
                      00355  
                      00356 ; video display manipulate TRISA register
                      00357 ; to avoid banksel during video update
                      00358 ; place variables related to video in same bank as TRISA 
                      00359 v_array   udata 0xA0 ; bank 1
00A0                  00360 row1 res 2; brick wall row1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2                  00361 row2 res 2
00A4                  00362 row3 res 2
00A6                  00363 row4 res 2
00A8                  00364 row5 res 2
00AA                  00365 row6 res 2
00AC                  00366 mask res 1 
00AD                  00367 pixels res 4
                      00368 ;d1 res 1 ; score msd digit pixels
                      00369 ;d2 res 1 ; score 2nd digit pixels
                      00370 ;d3 res 1 ; score lsd digit pixels
00B1                  00371 balls res 1 ; number of recking balls available 
00B2                  00372 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
                      00373  
                      00374 ; common 16 bytes RAM accessible whatever the selected bank 
                      00375     udata_shr 
0000                  00376 flags  res 1 ; boolean variables
0001                  00377 lcount res 1 ; video field line counter
0002                  00378 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00379 task res 1 ; where in video phase 
0004                  00380 temp1 res 1 ; temporary storage
0005                  00381 temp2 res 1 ; 
0006                  00382 paddle_pos res 1 
0007                  00383 ball_x res 1
0008                  00384 ball_y res 1
0009                  00385 ball_dx res 1
000A                  00386 ball_dy res 1
000B                  00387 ball_speed res 1
000C                  00388 score res 2 ; score stored in Binary Coded Decimal
000E                  00389 ball_timer res 1 
000F                  00390 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00391  
                      00392 ;; cpu reset entry point
                      00393 RES_VECT  CODE    0x0000            
0000   2???           00394     goto    initialize  ; go to beginning of program
0001   0001           00395     reset   
0002   0001           00396     reset
0003   0001           00397     reset
                      00398 
                      00399 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00400 ; interrupt service routine triggered by PWM3 period rollover
                      00401 ; after initialization is done all processing in done inside 
                      00402 ; this interrupt.
                      00403 ; It is designed as a round robin scheduler.    
                      00404 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00405 ISR CODE 0x0004
0004                  00406 isr
0004   0A??           00407     incf lcount
0005   1903           00408     skpnz
0006   1400           00409     bsf flags, F_BIT8
0007   1900           00410     btfsc flags, F_SYNC
0008   2???           00411     goto task_switch
                      00412  ; generate chroma sync
                      00413     tdelay 25
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 25==0
                          M     exitm
                          M     endif
                          M     if 25==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 25==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 25==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 25==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 25==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 25==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 25==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 25>7
  0006                    M     variable q=(25-5)/3
  0002                    M     variable r=(25-5)%3
0009   3006               M     movlw q
000A   2???               M     call _3ntcy
                          M     if (r==2)
000B   3???               M     bra $+1
                          M     exitm
                      00414     chroma_ref
000C   003B               M     banksel PWM1CON
000D   121B               M     bcf PWM1CON,POL
000E   0021           00415     banksel TRISA
000F   108C           00416     bcf TRISA,CHROMA
                      00417     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 16==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 16>7
  0003                    M     variable q=(16-5)/3
  0002                    M     variable r=(16-5)%3
0010   3003               M     movlw q
0011   2???               M     call _3ntcy
                          M     if (r==2)
0012   3???               M     bra $+1
                          M     exitm
0013   148C           00418     bsf TRISA,CHROMA
                      00419     porch_on
0014   0024               M     banksel WPUA
0015   160C               M     bsf WPUA,VIDEO_OUT
0016                  00420 task_switch ; round robin task scheduler   
0016   08??           00421     movfw task
0017   000B           00422     brw
0018   2???           00423     goto pre_vsync ;task 0, vertical pre-equalization pulses
0019   2???           00424     goto vsync ;task 1, vertical sync pulses
001A   2???           00425     goto post_vsync ;task 2, vertical post-equalization pulses
001B   2???           00426     goto vsync_end ;task 3, return to normal video line
001C   2???           00427     goto sound ;task 4, check sound timer expiration
001D   2???           00428     goto user_input ;task 5,  read button and paddle
001E   2???           00429     goto move_ball ;task 6, move recking ball.
001F   2???           00430     goto collision ; task 7, check for collision with brick wall and paddle
0020   2???           00431     goto video_first ; task 8, wait FIRST_VIDEO line.
0021   2???           00432     goto draw_score ;task 9,  draw score en ball count
0022   2???           00433     goto draw_top_wall ;task 10,  draw top wall
0023   2???           00434     goto draw_void ;task 11, draw play space
0024   2???           00435     goto draw_row1 ;task 12, draw top bricks row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   2???           00436     goto draw_row2 ;task 13, draw second bricks row
0026   2???           00437     goto draw_row3 ;task 14,  draw third bricks row
0027   2???           00438     goto draw_row4 ;task 15,  draw fourth bricks row
0028   2???           00439     goto draw_row5 ;task 16, draw fifth bricks row
0029   2???           00440     goto draw_empty;task 17, draw empty space down to bottom
002A   2???           00441     goto draw_paddle ;task 18, draw paddle
002B   2???           00442     goto wait_field_end ;task 19, idle to end of video field
002C   0001           00443     reset ; error trap, task out of range
002D                  00444 isr_exit  
                      00445     porch_off
002D   0024               M     banksel WPUA
002E   120C               M     bcf WPUA,VIDEO_OUT
002F   003B           00446     banksel PWM3INTF
0030   103D           00447     bcf PWM3INTF,PRIF
0031   0009           00448     retfie
                      00449 
                      00450 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00451 ;;  all tasks routine are here            ;;
                      00452 ;;  each must be terminate by leave macro ;;    
                      00453 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00454     
                      00455 ; task 0, vertical synchronization pre equalization
                      00456 ; 6 half horizontal scan lines    
0032                  00457 pre_vsync
0032   08??           00458     movfw slice
0033   1903           00459     skpnz
0034   2???           00460     goto set_presync
                      00461     next_task 6
0035   0A??               M     incf slice
0036   3006               M     movlw 6
0037   02??               M     subwf slice,W
0038   1D03               M     skpz
                          M     leave
0039   2???               M     goto isr_exit
003A   01??               M     clrf slice
003B   0A??               M     incf task
                          M     leave
003C   2???               M     goto isr_exit
003D                  00462 set_presync    
003D   003B           00463     banksel PWM3DC
003E   3041           00464     movlw HEQUAL
003F   00B3           00465     movwf PWM3DCL
0040   01B4           00466     clrf PWM3DCH
0041   3003           00467     movlw high HALF_LINE
0042   00B6           00468     movwf PWM3PRH
0043   308D           00469     movlw low HALF_LINE
0044   00B5           00470     movwf PWM3PRL
0045   17BF           00471     bsf PWM3LDCON,7
0046   0A??           00472     incf slice
                      00473     leave
0047   2???               M     goto isr_exit
                      00474     
                      00475 ; task 1, vertical synchronization pulses
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00476 ; 6 half horizontal scan lines    
0048                  00477 vsync 
0048   08??           00478     movfw slice
0049   1903           00479     skpnz
004A   2???           00480     goto set_vsync
                      00481     next_task 6
004B   0A??               M     incf slice
004C   3006               M     movlw 6
004D   02??               M     subwf slice,W
004E   1D03               M     skpz
                          M     leave
004F   2???               M     goto isr_exit
0050   01??               M     clrf slice
0051   0A??               M     incf task
                          M     leave
0052   2???               M     goto isr_exit
0053                  00482 set_vsync
0053   003B           00483     banksel PWM3DC
0054   3008           00484     movlw low VSYNC_PULSE
0055   00B3           00485     movwf PWM3DCL
0056   3003           00486     movlw high VSYNC_PULSE
0057   00B4           00487     movwf PWM3DCH
0058   17BF           00488     bsf PWM3LDCON,7
0059   0A??           00489     incf slice
                      00490     leave
005A   2???               M     goto isr_exit
                      00491     
                      00492 ; task 2, vertical synchronisation post equalization pulses
                      00493 ; 6 half horizontal scan lines    
005B                  00494 post_vsync
005B   08??           00495     movfw slice
005C   1903           00496     skpnz
005D   2???           00497     goto set_presync
005E   3006           00498     movlw 6
005F   02??           00499     subwf slice,W
0060   1903           00500     skpnz
0061   2???           00501     goto post_last
0062   0A??           00502     incf slice
                      00503     leave
0063   2???               M     goto isr_exit
0064                  00504 post_last    
0064   0A??           00505     incf task
0065   01??           00506     clrf slice
0066   1C80           00507     btfss flags, F_EVEN
                      00508     leave
0067   2???               M     goto isr_exit
                      00509     
                      00510 ; task 3, vertical synchronization completed, return to normal line
                      00511 ; rest horizonal line to its normal length.
                      00512 ; set lcount to 9.    
0068                  00513 vsync_end
0068   1100           00514     bcf flags, F_SYNC
0069   003B           00515     banksel PWM3DC
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   3086           00516     movlw HSYNC
006B   00B3           00517     movwf PWM3DCL
006C   01B4           00518     clrf PWM3DCH
006D   3007           00519     movlw high HPERIOD
006E   00B6           00520     movwf PWM3PRH
006F   301B           00521     movlw low HPERIOD
0070   00B5           00522     movwf PWM3PRL
0071   17BF           00523     bsf PWM3LDCON,7
0072   0A??           00524     incf task
0073   36??           00525     lsrf lcount
                      00526     leave
0074   2???               M     goto isr_exit
                      00527 
                      00528 ; task 4,  sound timer
                      00529 ; if sound active process it.    
0075                  00530 sound
0075   0A??           00531     incf task
0076   1D80           00532     btfss flags, F_SOUND
                      00533     leave
0077   2???               M     goto isr_exit
0078   1A80           00534     btfsc flags, F_PAUSE
0079   2???           00535     call sound_fx1
007A   002?           00536     banksel sound_timer
007B   0B??           00537     decfsz sound_timer
                      00538     leave
007C   2???               M     goto isr_exit
007D   1180           00539     bcf flags, F_SOUND
007E   003B           00540     banksel PWM2CON
007F   132B           00541     bcf PWM2CON,OE
0080   13AB           00542     bcf PWM2CON,EN
                      00543     leave
0081   2???               M     goto isr_exit
                      00544 
                      00545 ; sound effect, low pitch to high-pitch    
0082                  00546 sound_fx1
0082   1D80           00547     btfss flags, F_SOUND
0083   0008           00548     return
0084   1C80           00549     btfss flags, F_EVEN
0085   0008           00550     return
0086   003B           00551     banksel PWM2CON
0087   36A6           00552     lsrf PWM2PRH
0088   0CA5           00553     rrf PWM2PRL
0089   36A4           00554     lsrf PWM2DCH
008A   0CA3           00555     rrf PWM2DCL
008B   17AF           00556     bsf PWM2LDCON,LDA
008C   0008           00557     return
                      00558     
                      00559 ; sound effect, high pitch to low-pitch    
008D                  00560 sound_fx2
008D   1D80           00561     btfss flags, F_SOUND
008E   0008           00562     return
008F   1C80           00563     btfss flags, F_EVEN
0090   0008           00564     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0091   003B           00565     banksel PWM2CON
0092   35A5           00566     lslf PWM2PRL
0093   0DA6           00567     rlf PWM2PRH
0094   35A3           00568     lslf PWM2DCL
0095   0DA4           00569     rlf PWM2DCH
0096   17AF           00570     bsf PWM2LDCON,LDA
0097   0008           00571     return
                      00572     
                      00573 ; initialize sound generation.
                      00574 ; input:
                      00575 ;   T = duration
                      00576 ;   WREG = index in frequency table    
                      00577 ; outpout:
                      00578 ;   none    
0098                  00579 sound_init
                      00580     pushw  ; ( d i -- )
0098   0019               M     movwi --SP
0099   1580           00581     bsf flags, F_SOUND
009A   003B           00582     banksel PWM2CON
009B   0800           00583     movfw T
009C   2???           00584     call frequency
009D   00A6           00585     movwf PWM2PRH
009E   0A00           00586     incf T,W
009F   2???           00587     call frequency
00A0   00A5           00588     movwf PWM2PRL
00A1   3626           00589     lsrf PWM2PRH,W
00A2   00A4           00590     movwf PWM2DCH
00A3   0C25           00591     rrf PWM2PRL,W
00A4   00A3           00592     movwf PWM2DCL
00A5   17AF           00593     bsf PWM2LDCON,LDA
00A6   172B           00594     bsf PWM2CON,OE
00A7   17AB           00595     bsf PWM2CON,EN
00A8   002?           00596     banksel sound_timer
                      00597     pickn 1
00A9   3F01               M     moviw 1[SP]
00AA   00??           00598     movwf sound_timer
                      00599     dropn 2
00AB   3102               M     addfsr T,2
00AC   0008           00600     return
                      00601     
                      00602 ;task 5, read button and paddle position
00AD                  00603 user_input
00AD   0A??           00604     incf task
00AE   2???           00605     call read_paddle
00AF   1B00           00606     btfsc flags, F_OVER
00B0   3???           00607     bra game_over
00B1   1A00           00608     btfsc flags,F_START
00B2   3???           00609     bra game_running
                      00610 ; game not running
00B3   2???           00611     call read_button
00B4   1D03           00612     skpz
00B5   3???           00613     bra skip_2_tasks
                      00614 ; start game    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   2???           00615     call game_init
                      00616     leave
00B7   2???               M     goto isr_exit
00B8                  00617 game_running
00B8   1E80           00618     btfss flags, F_PAUSE
                      00619     leave
00B9   2???               M     goto isr_exit
                      00620 ; game on pause    
00BA                  00621 wait_trigger
00BA   2???           00622     call read_button
00BB   1D03           00623     skpz
00BC   3???           00624     bra skip_2_tasks
00BD   1280           00625     bcf flags,F_PAUSE
00BE   2???           00626     call set_ball_dx
                      00627     leave
00BF   2???               M     goto isr_exit
                      00628 ; game over
00C0                  00629 game_over
00C0   2???           00630     call read_button
00C1   1D03           00631     skpz
00C2   3???           00632     bra skip_2_tasks
00C3   1300           00633     bcf flags,F_OVER
00C4   2???           00634     call game_init
00C5   0A??           00635     incf task
                      00636     leave
00C6   2???               M     goto isr_exit
                      00637 ; while game not running skip 'move_ball' and 'collision' tasks    
00C7                  00638 skip_2_tasks
00C7   08??           00639     movfw paddle_pos
00C8   3E04           00640     addlw 4
00C9   00??           00641     movwf ball_x
00CA   0A??           00642     incf task
00CB   0A??           00643     incf task
00CC   2???           00644     call lfsr16
                      00645     leave
00CD   2???               M     goto isr_exit
                      00646 
                      00647     
00CE                  00648 read_button
00CE   0020           00649     banksel PORTA
00CF   080C           00650     movfw PORTA
00D0   3908           00651     andlw 1<<START_BTN
00D1   0008           00652     return
                      00653     
00D2                  00654 read_paddle
00D2   003B           00655     banksel PWM2CON
00D3   13AB           00656     bcf PWM2CON,EN
00D4   0021           00657     banksel TRISA
00D5   140C           00658     bsf TRISA, PADDLE
00D6   0021           00659     banksel ADCON0
00D7   3003           00660     movlw 3
00D8   009D           00661     movwf ADCON0
00D9   189D           00662     btfsc ADCON0,NOT_DONE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DA   2???           00663     goto $-1
00DB   3010           00664     movlw 4<<CHS0
00DC   009D           00665     movwf ADCON0
00DD   081C           00666     movfw ADRESH
00DE   1D80           00667     btfss flags, F_SOUND
00DF   3???           00668     bra $+3
00E0   003B           00669     banksel PWM2CON
00E1   17AB           00670     bsf PWM2CON,EN
00E2   00??           00671     movwf paddle_pos
00E3   304A           00672     movlw PADDLE_LIMIT
00E4   02??           00673     subwf paddle_pos,W
00E5   1C03           00674     skpc
00E6   3???           00675     bra $+3
00E7   304A           00676     movlw PADDLE_LIMIT
00E8   00??           00677     movwf paddle_pos
00E9   0021           00678     banksel TRISA
00EA   100C           00679     bcf TRISA, AUDIO
00EB   0008           00680     return
                      00681     
                      00682    
                      00683 ; task 6, move recking ball.   
00EC                  00684 move_ball
00EC   0B??           00685     decfsz ball_timer
00ED   3???           00686     bra move_ball_exit
00EE   08??           00687     movfw ball_speed
00EF   00??           00688     movwf ball_timer
00F0   08??           00689     movfw ball_dx
00F1   07??           00690     addwf ball_x
00F2   1D03           00691     skpz
00F3   3???           00692     bra right_bound
00F4   0A??           00693     incf ball_x
00F5   09??           00694     comf ball_dx
00F6   0A??           00695     incf ball_dx
00F7   3???           00696     bra move_y
00F8                  00697 right_bound    
00F8   08??           00698     movfw ball_x
00F9   3C52           00699     sublw BALL_RIGHT_BOUND
00FA   1803           00700     skpnc
00FB   3???           00701     bra move_y
00FC   03??           00702     decf ball_x
00FD   09??           00703     comf ball_dx
00FE   0A??           00704     incf ball_dx
00FF                  00705 move_y
00FF   08??           00706     movfw ball_dy
0100   07??           00707     addwf ball_y
0101   303A           00708     movlw BALL_TOP_BOUND
0102   02??           00709     subwf ball_y,W
0103   1803           00710     skpnc
0104   3???           00711     bra bottom_bound
0105   09??           00712     comf ball_dy
0106   0A??           00713     incf ball_dy
0107   3???           00714     bra move_ball_exit
0108                  00715 bottom_bound
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0108   08??           00716     movfw ball_y
0109   3CFA           00717     sublw BALL_BOTTOM_BOUND
010A   1803           00718     skpnc
010B   3???           00719     bra move_ball_exit
010C   09??           00720     comf ball_dy
010D   0A??           00721     incf ball_dy
010E                  00722 move_ball_exit    
010E   0A??           00723     incf task
                      00724     leave
010F   2???               M     goto isr_exit
                      00725 
                      00726 ; task 7, collision detection
0110                  00727 collision
0110   30??           00728     movlw high row1
0111   0087           00729     movwf FSR1H
0112   30??           00730     movlw low row1
0113   0086           00731     movwf FSR1L
0114   002?           00732     banksel mask
                      00733 ; pre-compute ball column and compute brick mask
                      00734 ; column = 3*ball_x/16
0115   35??           00735     lslf ball_x,W
0116   07??           00736     addwf ball_x,W
0117   0E89           00737     swapf WREG
0118   390F           00738     andlw 15
0119   00??           00739     movwf temp1
011A   3008           00740     movlw 8
011B   02??           00741     subwf temp1,W
011C   1C03           00742     skpc
011D   3???           00743     bra $+3
011E   00??           00744     movwf temp1
011F   3141           00745     addfsr FSR1,1
                      00746 ; create mask    
0120   3080           00747     movlw 0x80
0121   00??           00748     movwf mask
0122   08??           00749     movfw temp1
0123   1903           00750     skpnz
0124   3???           00751     bra $+4
0125   36??           00752     lsrf mask
0126   0B??           00753     decfsz temp1
0127   3???           00754     bra $-2
0128   1B80           00755     btfsc ball_dy,7
0129   3???           00756     bra wall_test ; ball going up
012A                  00757 fallout_test
                      00758 ; if ball_y > LAST_VIDEO_LINE-BALL_HEIGTH/2 then ball lost
012A   30F6           00759     movlw LAST_VIDEO_LINE-BALL_HEIGHT/2
012B   02??           00760     subwf ball_y,W
012C   1C03           00761     skpc
012D   3???           00762     bra paddle_test
012E                  00763 ball_lost    
012E   1680           00764     bsf flags, F_PAUSE ; pause game
012F   0B??           00765     decfsz balls
0130   3???           00766     bra $+3
0131   1200           00767     bcf flags, F_START
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0132   1700           00768     bsf flags, F_OVER
0133   3004           00769     movlw 4
0134   07??           00770     addwf paddle_pos,W
0135   00??           00771     movwf ball_x
0136   30EB           00772     movlw PADDLE_Y-BRICK_HEIGHT
0137   00??           00773     movwf ball_y
0138   30FC           00774     movlw -4
0139   00??           00775     movwf ball_dy
013A   3008           00776     movlw 8
                      00777     pushw
013B   0019               M     movwi --SP
013C   3002           00778     movlw 2
013D   2???           00779     call sound_init
013E   3???           00780     bra collision_exit
013F                  00781 paddle_test    
                      00782 ; paddle bounce test
013F   30EC           00783     movlw PADDLE_Y-BALL_HEIGHT+1
0140   02??           00784     subwf ball_y,W
0141   1C03           00785     skpc
0142   3???           00786     bra wall_test
                      00787 ; if ball_x over paddle bounce ball
0143                  00788 check_paddle_bounce
0143   3002           00789     movlw BALL_WIDTH/3
0144   02??           00790     subwf paddle_pos,W
                      00791     pushw
0145   0019               M     movwi --SP
0146   300A           00792     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+(BALL_WIDTH/3)
0147   07??           00793     addwf paddle_pos,W
                      00794     pushw
0148   0019               M     movwi --SP
0149   08??           00795     movfw ball_x
014A   2???           00796     call between
014B   1C03           00797     skpc
014C   3???           00798     bra collision_exit
014D                  00799 paddle_bounce 
014D   08??           00800     movfw ball_dx
014E   00??           00801     movwf old_dx
014F   08??           00802     movfw paddle_pos
0150   02??           00803     subwf ball_x,W
0151   3789           00804     asrf WREG
0152   3789           00805     asrf WREG
0153   3789           00806     asrf WREG
0154   00??           00807     movwf ball_dx
0155   06??           00808     xorwf old_dx,W
0156   1903           00809     skpnz
0157   2???           00810     call set_ball_dx
0158   30FC           00811     movlw -4
0159   00??           00812     movwf ball_dy
015A   3002           00813     movlw 2
                      00814     pushw
015B   0019               M     movwi --SP
015C   2???           00815     call sound_init
015D   3???           00816     bra collision_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00817 ; brick wall collision test    
015E                  00818 wall_test
015E   304A           00819     movlw ROW1_Y
015F   00??           00820     movwf temp1
0160   3072           00821     movlw ROW5_Y+BRICK_HEIGHT
0161   00??           00822     movwf temp2
0162   3007           00823     movlw BALL_HEIGHT-1
0163   1F80           00824     btfss ball_dy,7
0164   3???           00825     bra going_down
0165   07??           00826     addwf temp1
0166   07??           00827     addwf temp2
0167   3???           00828     bra $+3
0168                  00829 going_down
0168   02??           00830     subwf temp1
0169   02??           00831     subwf temp2
016A   08??           00832     movfw temp1
                      00833     pushw
016B   0019               M     movwi --SP
016C   08??           00834     movfw temp2
                      00835     pushw
016D   0019               M     movwi --SP
016E   08??           00836     movfw ball_y
016F   2???           00837     call between
0170   1C03           00838     skpc
0171   3???           00839     bra collision_exit
0172   08??           00840     movfw temp1
0173   02??           00841     subwf ball_y,W
0174   3689           00842     lsrf WREG
0175   3689           00843     lsrf WREG
0176   3689           00844     lsrf WREG
0177   000B           00845     brw
0178   3???           00846     bra row1_test
0179   3???           00847     bra row2_test
017A   3???           00848     bra row3_test
017B   3???           00849     bra row4_test
017C   3???           00850     bra row5_test
017D   0001           00851     reset
017E                  00852 row1_test
017E   08??           00853     movfw mask
017F   0501           00854     andwf INDF1,W
0180   1903           00855     skpnz
0181   3???           00856     bra collision_exit
0182   09??           00857     comf mask,W
0183   0581           00858     andwf INDF1
0184   3009           00859     movlw 9
0185   2???           00860     call inc_score
0186   3???           00861     bra brick_bounce
0187                  00862 row2_test
0187   3142           00863     addfsr FSR1,2
0188   08??           00864     movfw mask
0189   0501           00865     andwf INDF1, W
018A   1903           00866     skpnz
018B   3???           00867     bra collision_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018C   09??           00868     comf mask,W
018D   0581           00869     andwf INDF1
018E   3006           00870     movlw 6
018F   2???           00871     call inc_score
0190   3???           00872     bra brick_bounce
0191                  00873 row3_test
0191   3144           00874     addfsr FSR1,4
0192   08??           00875     movfw mask
0193   0501           00876     andwf INDF1,W
0194   1903           00877     skpnz
0195   3???           00878     bra collision_exit
0196   09??           00879     comf mask,W
0197   0581           00880     andwf INDF1
0198   3003           00881     movlw 3
0199   2???           00882     call inc_score
019A   3???           00883     bra brick_bounce
019B                  00884 row4_test
019B   3146           00885     addfsr FSR1,6
019C   08??           00886     movfw mask
019D   0501           00887     andwf INDF1,W
019E   1903           00888     skpnz
019F   3???           00889     bra collision_exit
01A0   09??           00890     comf mask,W
01A1   0581           00891     andwf INDF1
01A2   3002           00892     movlw 2
01A3   2???           00893     call inc_score
01A4   3???           00894     bra brick_bounce
01A5                  00895 row5_test    
01A5   3148           00896     addfsr FSR1,8
01A6   08??           00897     movfw mask
01A7   0501           00898     andwf INDF1,W
01A8   1903           00899     skpnz
01A9   3???           00900     bra collision_exit
01AA   09??           00901     comf mask,W
01AB   0581           00902     andwf INDF1
01AC   3001           00903     movlw 1
01AD   2???           00904     call inc_score
01AE                  00905 brick_bounce
01AE   09??           00906     comf ball_dy
01AF   0A??           00907     incf ball_dy
                      00908     ;call set_ball_dx
01B0   3001           00909     movlw 1
                      00910     pushw
01B1   0019               M     movwi --SP
01B2   3000           00911     movlw 0
01B3   2???           00912     call sound_init
01B4                  00913 collision_exit
01B4   0A??           00914     incf task
                      00915     leave
01B5   2???               M     goto isr_exit
                      00916 
                      00917 ; check if  lb <= x < hb
                      00918 ; input:
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00919 ;    WREG  x
                      00920 ;    stack ( lb hb -- )     
                      00921 ; output:
                      00922 ;   Carry bit set if true    
01B6                  00923 between
01B6   00??           00924     movwf temp2
                      00925     pickn 1
01B7   3F01               M     moviw 1[SP]
01B8   02??           00926     subwf temp2,W
01B9   1C03           00927     skpc
01BA   3???           00928     bra between_exit
01BB   0800           00929     movfw T
01BC   02??           00930     subwf temp2
01BD   0803           00931     movfw STATUS
01BE   3A01           00932     xorlw 1
01BF   0083           00933     movwf STATUS
01C0                  00934 between_exit    
                      00935     dropn 2
01C0   3102               M     addfsr T,2
01C1   0008           00936     return
                      00937     
                      00938 ; task 8, wait for first video line
01C2                  00939 video_first
01C2   301E           00940     movlw FIRST_VIDEO_LINE
01C3   02??           00941     subwf lcount,W
01C4   1D03           00942     skpz
                      00943     leave
01C5   2???               M     goto isr_exit
01C6   01??           00944     clrf slice
01C7   0A??           00945     incf task
                      00946     leave
01C8   2???               M     goto isr_exit
                      00947    
                      00948 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00949 ; The following tasks are responsible to render video display.
                      00950 ; Each video line must be completed by setting color to black.
                      00951 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00952     
                      00953  
                      00954 ; task 9, draw score en ball count
01C9                  00955 draw_score 
01C9   0021           00956     banksel TRISA
01CA   08??           00957     movfw slice
01CB   3689           00958     lsrf WREG
01CC   3689           00959     lsrf WREG
                      00960     pushw
01CD   0019               M     movwi --SP
01CE   300F           00961     movlw 0xf
01CF   05??           00962     andwf score+1,W
01D0   2???           00963     call digit_offset
01D1   0700           00964     addwf T,W
01D2   2???           00965     call digits
01D3   00??           00966     movwf pixels+2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D4   0E??           00967     swapf score+1,W
01D5   390F           00968     andlw 0xf
01D6   2???           00969     call digit_offset
01D7   0700           00970     addwf T,W
01D8   2???           00971     call digits
01D9   00??           00972     movwf pixels+1
01DA   300F           00973     movlw 0xf
01DB   05??           00974     andwf score,W
01DC   2???           00975     call digit_offset
01DD   0700           00976     addwf T,W
01DE   2???           00977     call digits
01DF   2???           00978     call digit_row
01E0   08??           00979     movfw pixels+1
01E1   2???           00980     call digit_row
01E2   08??           00981     movfw pixels+2
01E3   2???           00982     call digit_row
                      00983     tdelay 60
                          M     if 60==0
                          M     exitm
                          M     endif
                          M     if 60==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 60==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 60==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 60==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 60==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 60>7
  0012                    M     variable q=(60-5)/3
  0001                    M     variable r=(60-5)%3
01E4   3012               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E5   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01E6   0000               M     nop
                          M     exitm
01E7   120C           00984     bcf TRISA,VIDEO_OUT
                      00985     tdelay 5
                          M     if 5==0
                          M     exitm
                          M     endif
                          M     if 5==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 5==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 5==5
01E8   2???               M     call _5tcy
                          M     exitm
01E9   160C           00986     bsf TRISA,VIDEO_OUT
                      00987     tdelay 30
                          M     if 30==0
                          M     exitm
                          M     endif
                          M     if 30==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 30==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==4
                          M     call _4tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 30==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 30==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 30==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 30>7
  0008                    M     variable q=(30-5)/3
  0001                    M     variable r=(30-5)%3
01EA   3008               M     movlw q
01EB   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01EC   0000               M     nop
                          M     exitm
01ED   08??           00988     movfw balls
01EE   2???           00989     call digit_offset
01EF   0700           00990     addwf T,W
01F0   2???           00991     call digits
01F1   2???           00992     call digit_row
01F2                  00993 score_exit
                      00994     next_task 5*4
01F2   0A??               M     incf slice
01F3   3014               M     movlw 5*4
01F4   02??               M     subwf slice,W
01F5   1D03               M     skpz
                          M     leave
01F6   2???               M     goto isr_exit
01F7   01??               M     clrf slice
01F8   0A??               M     incf task
                          M     leave
01F9   2???               M     goto isr_exit
                      00995 
                      00996 ; display digit row pixels   
01FA                  00997 digit_row
                      00998     pushw
01FA   0019               M     movwi --SP
01FB   0D80           00999     rlf T
01FC   301A           01000     movlw BLACK
01FD   1803           01001     skpnc
01FE   300A           01002     movlw WHITE
01FF   008C           01003     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0200   0D80           01004     rlf T
0201   301A           01005     movlw BLACK
0202   1803           01006     skpnc
0203   300A           01007     movlw WHITE
0204   008C           01008     movwf TRISA
0205   0D80           01009     rlf T
0206   301A           01010     movlw BLACK
0207   1803           01011     skpnc
0208   300A           01012     movlw WHITE
0209   008C           01013     movwf TRISA
                      01014     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
020A   0000               M     nop
020B   3???               M     bra $+1
                          M     exitm
                      01015     dropn 1
020C   3101               M     addfsr T,1
020D   160C           01016     bsf TRISA,VIDEO_OUT
020E   0008           01017     return
                      01018     
                      01019 ; task 10,  draw top wall, 8 screen lines    
020F                  01020 draw_top_wall 
020F   1C80           01021     btfss flags, F_EVEN
0210   3???           01022     bra top_wall_exit
0211   0021           01023     banksel TRISA
                      01024     tdelay LEFT_MARGIN -2
                          M     if LEFT_MARGIN -2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN -2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2>7
  000F                    M     variable q=(LEFT_MARGIN -2-5)/3
  0000                    M     variable r=(LEFT_MARGIN -2-5)%3
0212   300F               M     movlw q
0213   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01025     white
0214   300A               M     movlw WHITE
0215   008C               M     movwf TRISA
                      01026     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==4
                          M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1>7
  0055                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1-5)/3
  0001                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1-5)%3
0216   3055               M     movlw q
0217   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0218   0000               M     nop
                          M     exitm
                      01027     black
0219   301A               M     movlw BLACK
021A   008C               M     movwf TRISA
021B                  01028 top_wall_exit
                      01029     next_task BRICK_HEIGHT
021B   0A??               M     incf slice
021C   3008               M     movlw BRICK_HEIGHT
021D   02??               M     subwf slice,W
021E   1D03               M     skpz
                          M     leave
021F   2???               M     goto isr_exit
0220   01??               M     clrf slice
0221   0A??               M     incf task
                          M     leave
0222   2???               M     goto isr_exit
                      01030 
                      01031 ; task 11,  only on even field draw vertical side bands.    
0223                  01032 draw_void 
0223   1C80           01033     btfss flags, F_EVEN
0224   3???           01034     bra no_wall_draw
0225   08??           01035     movfw ball_y
0226   02??           01036     subwf lcount,W
0227   1C03           01037     skpc
0228   3???           01038     bra no_ball_dly
0229   3008           01039     movlw BALL_HEIGHT
022A   07??           01040     addwf ball_y,W
022B   02??           01041     subwf lcount,W
022C   1C03           01042     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D   3???           01043     bra yes_ball
022E   3???           01044     bra no_ball
022F                  01045 no_ball_dly
                      01046     tdelay 6
                          M     if 6==0
                          M     exitm
                          M     endif
                          M     if 6==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 6==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 6==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 6==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 6==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 6==6
022F   2???               M     call _6tcy
                          M     exitm
0230                  01047 no_ball    
                      01048     tdelay LEFT_MARGIN-13
                          M     if LEFT_MARGIN-13==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-13==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13>7
  000B                    M     variable q=(LEFT_MARGIN-13-5)/3
  0001                    M     variable r=(LEFT_MARGIN-13-5)%3
0230   300B               M     movlw q
0231   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0232   0000               M     nop
                          M     exitm
                      01049     draw_border BORDER_WIDTH
0233   0021               M     banksel TRISA
0234   148C               M     bsf TRISA,CHROMA
0235   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0236   2???               M     call _4tcy
                          M     exitm
0237   160C               M     bsf TRISA,VIDEO_OUT
                      01050     black
0238   301A               M     movlw BLACK
0239   008C               M     movwf TRISA
                      01051     tdelay COURT_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if COURT_WIDTH==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH>7
  0051                    M     variable q=(COURT_WIDTH-5)/3
  0000                    M     variable r=(COURT_WIDTH-5)%3
023A   3051               M     movlw q
023B   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01052     draw_border BORDER_WIDTH
023C   0021               M     banksel TRISA
023D   148C               M     bsf TRISA,CHROMA
023E   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
023F   2???               M     call _4tcy
                          M     exitm
0240   160C               M     bsf TRISA,VIDEO_OUT
0241   3???           01053     bra draw_void_exit
0242                  01054 yes_ball
0242   0021           01055     banksel TRISA
0243   08??           01056     movfw ball_x
0244   1903           01057     skpnz
0245   3???           01058     bra ball_at_left
0246   3C52           01059     sublw BALL_RIGHT_BOUND
0247   1903           01060     skpnz
0248   3???           01061     bra ball_at_right
0249                  01062 ball_in_middle    
0249   3001           01063     movlw 1
024A   02??           01064     subwf ball_x,W
024B   1903           01065     skpnz
024C   3E01           01066     addlw 1
024D   00??           01067     movwf temp1
                      01068     tdelay LEFT_MARGIN-22
                          M     if LEFT_MARGIN-22==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==4
                          M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-22==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22>7
  0008                    M     variable q=(LEFT_MARGIN-22-5)/3
  0001                    M     variable r=(LEFT_MARGIN-22-5)%3
024E   3008               M     movlw q
024F   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0250   0000               M     nop
                          M     exitm
0251   120C           01069     bcf TRISA,VIDEO_OUT
                      01070     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
0252   0000               M     nop
0253   3???               M     bra $+1
                          M     exitm
0254   08??           01071     movfw temp1
0255   160C           01072     bsf TRISA,VIDEO_OUT
0256   0B89           01073     decfsz WREG
0257   3???           01074     bra $-1
0258   120C           01075     bcf TRISA, VIDEO_OUT
                      01076     tdelay BALL_WIDTH-1
                          M     if BALL_WIDTH-1==0
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==7
0259   2???               M     call _7tcy
                          M     exitm
025A   08??           01077     movfw ball_x
025B   160C           01078     bsf TRISA,VIDEO_OUT
025C   3C52           01079     sublw BALL_RIGHT_BOUND
025D   0B89           01080     decfsz WREG
025E   3???           01081     bra $-1
025F   120C           01082     bcf TRISA,VIDEO_OUT
                      01083     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0260   2???               M     call _4tcy
                          M     exitm
0261   160C           01084     bsf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0262   3???           01085     bra draw_void_exit
0263                  01086 ball_at_left
                      01087     tdelay LEFT_MARGIN-15
                          M     if LEFT_MARGIN-15==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15>7
  000A                    M     variable q=(LEFT_MARGIN-15-5)/3
  0002                    M     variable r=(LEFT_MARGIN-15-5)%3
0263   300A               M     movlw q
0264   2???               M     call _3ntcy
                          M     if (r==2)
0265   3???               M     bra $+1
                          M     exitm
0266   120C           01088     bcf TRISA,VIDEO_OUT
                      01089     tdelay 12
                          M     if 12==0
                          M     exitm
                          M     endif
                          M     if 12==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 12==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 12==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 12==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 12==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 12==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 12==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 12>7
  0002                    M     variable q=(12-5)/3
  0001                    M     variable r=(12-5)%3
0267   3002               M     movlw q
0268   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0269   0000               M     nop
                          M     exitm
026A   160C           01090     bsf TRISA,VIDEO_OUT
                      01091     tdelay COURT_WIDTH-6
                          M     if COURT_WIDTH-6==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if COURT_WIDTH-6==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6>7
  004F                    M     variable q=(COURT_WIDTH-6-5)/3
  0000                    M     variable r=(COURT_WIDTH-6-5)%3
026B   304F               M     movlw q
026C   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
026D   0000           01092     nop
026E   120C           01093     bcf TRISA,VIDEO_OUT
                      01094     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
026F   2???               M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0270   160C           01095     bsf TRISA,VIDEO_OUT
0271   3???           01096     bra draw_void_exit
0272                  01097 ball_at_right
                      01098     tdelay LEFT_MARGIN-18
                          M     if LEFT_MARGIN-18==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18>7
  0009                    M     variable q=(LEFT_MARGIN-18-5)/3
  0002                    M     variable r=(LEFT_MARGIN-18-5)%3
0272   3009               M     movlw q
0273   2???               M     call _3ntcy
                          M     if (r==2)
0274   3???               M     bra $+1
                          M     exitm
0275   120C           01099     bcf TRISA,VIDEO_OUT
                      01100     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0276   2???               M     call _4tcy
                          M     exitm
0277   160C           01101     bsf TRISA,VIDEO_OUT
                      01102     tdelay COURT_WIDTH-2
                          M     if COURT_WIDTH-2==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2>7
  0050                    M     variable q=(COURT_WIDTH-2-5)/3
  0001                    M     variable r=(COURT_WIDTH-2-5)%3
0278   3050               M     movlw q
0279   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif 
                          M     if (r==1)
027A   0000               M     nop
                          M     exitm
027B   120C           01103     bcf TRISA,VIDEO_OUT
                      01104     tdelay 10
                          M     if 10==0
                          M     exitm
                          M     endif
                          M     if 10==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 10==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 10==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 10==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 10==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 10==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 10==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 10>7
  0001                    M     variable q=(10-5)/3
  0002                    M     variable r=(10-5)%3
027C   3001               M     movlw q
027D   2???               M     call _3ntcy
                          M     if (r==2)
027E   3???               M     bra $+1
                          M     exitm
027F   160C           01105     bsf TRISA,VIDEO_OUT
0280                  01106 draw_void_exit    
0280   0A??           01107     incf slice
0281   30FB           01108     movlw LAST_VIDEO_LINE+1
0282   02??           01109     subwf lcount,W
0283   1D03           01110     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01111     leave
0284   2???               M     goto isr_exit
0285   01??           01112     clrf slice
0286   3013           01113     movlw 19
0287   00??           01114     movwf task
                      01115     leave
0288   2???               M     goto isr_exit
0289                  01116 no_wall_draw
                      01117     next_task 2*BRICK_HEIGHT
0289   0A??               M     incf slice
028A   3010               M     movlw 2*BRICK_HEIGHT
028B   02??               M     subwf slice,W
028C   1D03               M     skpz
                          M     leave
028D   2???               M     goto isr_exit
028E   01??               M     clrf slice
028F   0A??               M     incf task
                          M     leave
0290   2???               M     goto isr_exit
                      01118 
                      01119 ; draw 16 bricks wall
                      01120 ; input:
                      01121 ;   row in temp1,temp2
                      01122 ;   color in WREG
                      01123 ; output:
                      01124 ;   none    
0291                  01125 draw_wall; macro color
                      01126 ;    local next_brick
                      01127     pushw
0291   0019               M     movwi --SP
0292   3010           01128     movlw 16
                      01129     pushw
0293   0019               M     movwi --SP
0294                  01130 next_brick
0294   35??           01131     lslf temp2
0295   0D??           01132     rlf temp1
0296   301A           01133     movlw BLACK
0297   1803           01134     skpnc
                      01135     pickn 1 ;movlw color
0298   3F01               M     moviw 1[SP]
0299   008C           01136     movwf TRISA
                      01137     tdelay BRICK_WIDTH-9
                          M     if BRICK_WIDTH-9==0
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BRICK_WIDTH-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==7
029A   2???               M     call _7tcy
                          M     exitm
029B   0B80           01138     decfsz T
029C   3???           01139     bra next_brick
                      01140     dropn 2
029D   3102               M     addfsr T,2
029E   0008           01141     return
                      01142     
                      01143 ; task 12, draw top brick row
029F                  01144 draw_row1
                      01145     chroma_ref
029F   003B               M     banksel PWM1CON
02A0   121B               M     bcf PWM1CON,POL
02A1   0021           01146     banksel TRISA
02A2   08??           01147     movfw row1
02A3   00??           01148     movwf temp1
02A4   08??           01149     movfw row1+1
02A5   00??           01150     movwf temp2
                      01151     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02A6   300C               M     movlw q
02A7   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02A8   3008           01152     movlw YELLOW
02A9   2???           01153     call draw_wall
                      01154     black
02AA   301A               M     movlw BLACK
02AB   008C               M     movwf TRISA
                      01155     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02AC   0000               M     nop
02AD   3???               M     bra $+1
                          M     exitm
                      01156     next_task BRICK_HEIGHT
02AE   0A??               M     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AF   3008               M     movlw BRICK_HEIGHT
02B0   02??               M     subwf slice,W
02B1   1D03               M     skpz
                          M     leave
02B2   2???               M     goto isr_exit
02B3   01??               M     clrf slice
02B4   0A??               M     incf task
                          M     leave
02B5   2???               M     goto isr_exit
                      01157     
                      01158 ; task 13, draw 2nd brick row    
02B6                  01159 draw_row2 
                      01160     chroma_invert
02B6   003B               M     banksel PWM1CON
02B7   161B               M     bsf PWM1CON,POL
02B8   0021           01161     banksel TRISA
02B9   08??           01162     movfw row2
02BA   00??           01163     movwf temp1
02BB   08??           01164     movfw row2+1
02BC   00??           01165     movwf temp2
                      01166     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02BD   300C               M     movlw q
02BE   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02BF   3008           01167     movlw MAUVE
02C0   2???           01168     call draw_wall
                      01169     black
02C1   301A               M     movlw BLACK
02C2   008C               M     movwf TRISA
                      01170     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02C3   0000               M     nop
02C4   3???               M     bra $+1
                          M     exitm
                      01171     next_task BRICK_HEIGHT
02C5   0A??               M     incf slice
02C6   3008               M     movlw BRICK_HEIGHT
02C7   02??               M     subwf slice,W
02C8   1D03               M     skpz
                          M     leave
02C9   2???               M     goto isr_exit
02CA   01??               M     clrf slice
02CB   0A??               M     incf task
                          M     leave
02CC   2???               M     goto isr_exit
                      01172 
                      01173 ; task 14, draw 3rd brick row    
02CD                  01174 draw_row3 
                      01175     chroma_invert
02CD   003B               M     banksel PWM1CON
02CE   161B               M     bsf PWM1CON,POL
02CF   0021           01176     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D0   08??           01177     movfw row3
02D1   00??           01178     movwf temp1
02D2   08??           01179     movfw row3+1
02D3   00??           01180     movwf temp2
                      01181     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02D4   300C               M     movlw q
02D5   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02D6   3018           01182     movlw BLUE
02D7   2???           01183     call draw_wall
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01184     black
02D8   301A               M     movlw BLACK
02D9   008C               M     movwf TRISA
                      01185     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02DA   0000               M     nop
02DB   3???               M     bra $+1
                          M     exitm
02DC                  01186 row3_exit
                      01187     next_task BRICK_HEIGHT
02DC   0A??               M     incf slice
02DD   3008               M     movlw BRICK_HEIGHT
02DE   02??               M     subwf slice,W
02DF   1D03               M     skpz
                          M     leave
02E0   2???               M     goto isr_exit
02E1   01??               M     clrf slice
02E2   0A??               M     incf task
                          M     leave
02E3   2???               M     goto isr_exit
                      01188     
                      01189 ; task 15, draw 4th brick row    
02E4                  01190 draw_row4 
                      01191     chroma_ref
02E4   003B               M     banksel PWM1CON
02E5   121B               M     bcf PWM1CON,POL
02E6   0021           01192     banksel TRISA
02E7   08??           01193     movfw row4
02E8   00??           01194     movwf temp1
02E9   08??           01195     movfw row4+1
02EA   00??           01196     movwf temp2
                      01197     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02EB   300C               M     movlw q
02EC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02ED   3008           01198     movlw YELLOW
02EE   2???           01199     call draw_wall
                      01200     black
02EF   301A               M     movlw BLACK
02F0   008C               M     movwf TRISA
                      01201     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 3==3
02F1   0000               M     nop
02F2   3???               M     bra $+1
                          M     exitm
                      01202     next_task BRICK_HEIGHT
02F3   0A??               M     incf slice
02F4   3008               M     movlw BRICK_HEIGHT
02F5   02??               M     subwf slice,W
02F6   1D03               M     skpz
                          M     leave
02F7   2???               M     goto isr_exit
02F8   01??               M     clrf slice
02F9   0A??               M     incf task
                          M     leave
02FA   2???               M     goto isr_exit
                      01203 
                      01204 ; task 16, draw 5th brick row    
02FB                  01205 draw_row5 
                      01206     chroma_invert
02FB   003B               M     banksel PWM1CON
02FC   161B               M     bsf PWM1CON,POL
02FD   0021           01207     banksel TRISA
02FE   08??           01208     movfw row5
02FF   00??           01209     movwf temp1
0300   08??           01210     movfw row5+1
0301   00??           01211     movwf temp2
                      01212     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
0302   300C               M     movlw q
0303   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0304   3008           01213     movlw MAUVE
0305   2???           01214     call draw_wall
                      01215     black
0306   301A               M     movlw BLACK
0307   008C               M     movwf TRISA
                      01216     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
0308   0000               M     nop
0309   3???               M     bra $+1
                          M     exitm
                      01217     black
030A   301A               M     movlw BLACK
030B   008C               M     movwf TRISA
                      01218     next_task BRICK_HEIGHT
030C   0A??               M     incf slice
030D   3008               M     movlw BRICK_HEIGHT
030E   02??               M     subwf slice,W
030F   1D03               M     skpz
                          M     leave
0310   2???               M     goto isr_exit
0311   01??               M     clrf slice
0312   0A??               M     incf task
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
0313   2???               M     goto isr_exit
                      01219 
  00000028            01220 MSG_FIRST equ 40
  00000028            01221 MSG_HEIGHT equ 40
  00000010            01222 MSG_PIXELS_COUNT equ 16 
                      01223 ; task 17
                      01224 ; draw all rows between paddle and lower brick row    
0314                  01225 draw_empty
0314   3028           01226     movlw MSG_FIRST
                      01227     pushw
0315   0019               M     movwi --SP
0316   3050           01228     movlw MSG_FIRST+MSG_HEIGHT
                      01229     pushw
0317   0019               M     movwi --SP
0318   08??           01230     movfw slice
0319   2???           01231     call between
031A   1C03           01232     skpc
031B   3???           01233     bra no_msg
031C   1F00           01234     btfss flags, F_OVER
031D   3???           01235     bra no_msg
031E   3008           01236     movlw YELLOW ; message color
                      01237     pushw
031F   0019               M     movwi --SP
0320   3010           01238     movlw MSG_PIXELS_COUNT
                      01239     pushw
0321   0019               M     movwi --SP
0322   1F80           01240     btfss flags, F_COOL
0323   3???           01241     bra display_end
                      01242 ; perfect score display 'COOL' message
0324   30??           01243     movlw high cool_msg
0325   0087           01244     movwf FSR1H
0326   30??           01245     movlw low cool_msg
0327   0086           01246     movwf FSR1L
0328   2???           01247     call display_msg
0329   3???           01248     bra no_msg
                      01249 ; display 'END!' message    
032A                  01250 display_end
032A   30??           01251     movlw high end_msg
032B   0087           01252     movwf FSR1H
032C   30??           01253     movlw low end_msg
032D   0086           01254     movwf FSR1L
032E   2???           01255     call display_msg
032F                  01256 no_msg    
032F   0A??           01257     incf slice
0330   30F3           01258     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0331   02??           01259     subwf lcount,W
0332   1D03           01260     skpz
                      01261     leave
0333   2???               M     goto isr_exit
0334   01??           01262     clrf slice
0335   0A??           01263     incf task
                      01264     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0336   2???               M     goto isr_exit
                      01265 
                      01266 ; display end message
                      01267 ; message as a maximum of 24 pixels    
0337                  01268 display_msg
                      01269 ;    tdelay 8
0337   0021           01270     banksel TRISA
0338   3028           01271     movlw MSG_FIRST
0339   02??           01272     subwf slice,W
033A   3689           01273     lsrf WREG
033B   3689           01274     lsrf WREG
033C   3689           01275     lsrf WREG
033D   00??           01276     movwf temp1
033E   3589           01277     lslf WREG
033F   07??           01278     addwf temp1,W
0340   0786           01279     addwf FSR1L
0341   1803           01280     skpnc
0342   0A87           01281     incf FSR1H
0343   0016           01282     moviw FSR1++
0344   00??           01283     movwf pixels
0345   0016           01284     moviw FSR1++
0346   00??           01285     movwf pixels+1
0347   0016           01286     moviw FSR1++
0348   00??           01287     movwf pixels+2
0349                  01288 next_pixel
0349   35??           01289     lslf pixels+2
034A   0D??           01290     rlf pixels+1
034B   0D??           01291     rlf pixels
034C   301A           01292     movlw BLACK
034D   1803           01293     skpnc
                      01294     pickn 1 ;movlw color
034E   3F01               M     moviw 1[SP]
034F   008C           01295     movwf TRISA
0350   0B80           01296     decfsz T
0351   3???           01297     bra next_pixel
                      01298     dropn 2
0352   3102               M     addfsr T,2
                      01299     black
0353   301A               M     movlw BLACK
0354   008C               M     movwf TRISA
0355   0008           01300     return
                      01301     
                      01302 ; task 18, draw paddle at bottom screen    
0356                  01303 draw_paddle
                      01304     tdelay LEFT_MARGIN+2
                          M     if LEFT_MARGIN+2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2>7
  0010                    M     variable q=(LEFT_MARGIN+2-5)/3
  0001                    M     variable r=(LEFT_MARGIN+2-5)%3
0356   3010               M     movlw q
0357   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0358   0000               M     nop
                          M     exitm
0359   08??           01305     movfw paddle_pos
035A   1903           01306     skpnz
035B   3???           01307     bra $+3
035C   0B89           01308     decfsz WREG
035D   3???           01309     bra $-1
035E   0021           01310     banksel TRISA
035F   120C           01311     bcf TRISA,VIDEO_OUT
                      01312     tdelay PADDLE_WIDTH
                          M     if PADDLE_WIDTH==0
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==2
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH>7
  0009                    M     variable q=(PADDLE_WIDTH-5)/3
  0000                    M     variable r=(PADDLE_WIDTH-5)%3
0360   3009               M     movlw q
0361   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0362   160C           01313     bsf TRISA,VIDEO_OUT
                      01314     next_task PADDLE_THICKNESS
0363   0A??               M     incf slice
0364   3008               M     movlw PADDLE_THICKNESS
0365   02??               M     subwf slice,W
0366   1D03               M     skpz
                          M     leave
0367   2???               M     goto isr_exit
0368   01??               M     clrf slice
0369   0A??               M     incf task
                          M     leave
036A   2???               M     goto isr_exit
                      01315 
                      01316 ; task 19,  wait end of this field, reset task to zero    
036B                  01317 wait_field_end
036B   1800           01318     btfsc flags, F_BIT8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036C   2???           01319     goto hi_line
                      01320     leave
036D   2???               M     goto isr_exit
036E                  01321 hi_line
036E   1880           01322     btfsc flags,F_EVEN
036F   2???           01323     goto even_field
0370   3005           01324     movlw 5
0371   02??           01325     subwf lcount,W
0372   1D03           01326     skpz
                      01327     leave
0373   2???               M     goto isr_exit
0374   2???           01328     goto field_end
0375                  01329 even_field
0375   3006           01330     movlw 6
0376   02??           01331     subwf lcount,W
0377   1D03           01332     skpz
                      01333     leave
0378   2???               M     goto isr_exit
                      01334 ; even field last line is half_line    
                      01335 ; set PWM3 for line 263 half-line
0379   003B           01336     banksel PWM3DC
037A   3003           01337     movlw high HALF_LINE
037B   00B6           01338     movwf PWM3PRH
037C   308D           01339     movlw low HALF_LINE
037D   00B5           01340     movwf PWM3PRL
037E   17BF           01341     bsf PWM3LDCON,7
037F                  01342 field_end
037F   01??           01343     clrf task
0380   01??           01344     clrf slice
0381   01??           01345     clrf lcount
0382   1000           01346     bcf flags, F_BIT8
0383   1500           01347     bsf flags, F_SYNC
                      01348 ; toggle odd/even field flag    
0384   3002           01349     movlw 1<<F_EVEN
0385   06??           01350     xorwf flags
                      01351     leave
0386   2???               M     goto isr_exit
                      01352 
                      01353 ; helper functions
                      01354 
                      01355 ; delay = (3*n+5)*tcy    
                      01356 ;input:
                      01357 ;   WREG <- n    
0387                  01358 _3ntcy
0387   0B89           01359     decfsz WREG
0388   3???           01360     bra $-1
0389   0008           01361     return
                      01362     
038A                  01363 _7tcy ; call here for 7*tcy delay using a single instruction
038A   0000           01364     nop
038B                  01365 _6tcy ; call here for 6*tcy delay using a single instruction
038B   0000           01366     nop
038C                  01367 _5tcy ; call here for 5*tcy delay using a single instruction
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038C   0000           01368     nop
038D                  01369 _4tcy ; call here for 4*Tcy delay using a single instruction    
038D   0008           01370     return
                      01371     
                      01372     
                      01373 ; increment user score
                      01374 ; This is a BCD addition where a single digit is added to score.   
                      01375 ; score is stored as big indian
                      01376 ; argument: 
                      01377 ;   WREG ->  bdc digit to add to score variable
038E                  01378 inc_score
038E   07??           01379     addwf score+1
038F   1883           01380     btfsc STATUS,DC
0390   3???           01381     bra $+6
0391   300F           01382     movlw 15
0392   05??           01383     andwf score+1,W
0393   3C09           01384     sublw 9
0394   1803           01385     skpnc
0395   3???           01386     bra $+3
0396   3006           01387     movlw 6
0397   07??           01388     addwf score+1
0398   0E??           01389     swapf score+1,W
0399   390F           01390     andlw 15
039A   3C09           01391     sublw 9
039B   1803           01392     skpnc
039C   3???           01393     bra game_over_test
039D   3060           01394     movlw 0x60
039E   07??           01395     addwf score+1
039F   0A??           01396     incf score
03A0   3001           01397     movlw 1
03A1   00??           01398     movwf ball_speed
03A2                  01399 game_over_test ; all bricks destroyed?
03A2   3003           01400     movlw 3
03A3   02??           01401     subwf score,W
03A4   1D03           01402     skpz
03A5   0008           01403     return
03A6   3036           01404     movlw 0x36
03A7   02??           01405     subwf score+1,W
03A8   1D03           01406     skpz
03A9   0008           01407     return
03AA   1700           01408     bsf flags,F_OVER ; game over
03AB   1780           01409     bsf flags,F_COOL ; with maximum score.
03AC   0008           01410     return
                      01411     
                      01412 ;***********************************
                      01413 ; digit_offset, compute digit position in 'digits' table
                      01414 ;   position = digit * 5
                      01415 ; 
                      01416 ; input: WREG -> digit value {0..9}
                      01417 ;         
                      01418 ; output: WREG -> displacement in table
                      01419 ;***********************************
03AD                  01420 digit_offset    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01421     pushw 
03AD   0019               M     movwi --SP
03AE   3589           01422     lslf WREG
03AF   3589           01423     lslf WREG
03B0   0780           01424     addwf T
                      01425     popw
03B1   0012               M     moviw SP++
03B2   0008           01426     return
                      01427     
03B3                  01428 brick_wall_init
03B3   30??           01429     movlw high row1
03B4   0087           01430     movwf FSR1H
03B5   30??           01431     movlw low row1
03B6   0086           01432     movwf FSR1L
03B7   300C           01433     movlw 12
03B8   00??           01434     movwf temp1
03B9   30FF           01435     movlw 0xff
03BA                  01436 bw_init
03BA   001E           01437     movwi FSR1++
03BB   0B??           01438     decfsz temp1
03BC   3???           01439     bra bw_init
03BD   0008           01440     return
                      01441 
                      01442 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
03BE                  01443 lfsr16
03BE   002?           01444     banksel seed
03BF   08??           01445     movfw seed+1
03C0   00??           01446     movwf temp1
03C1   3589           01447     lslf WREG
03C2   3589           01448     lslf WREG
03C3   00??           01449     movwf temp2
03C4   06??           01450     xorwf temp1
03C5   35??           01451     lslf temp2
03C6   08??           01452     movfw temp2
03C7   06??           01453     xorwf temp1
03C8   35??           01454     lslf temp2
03C9   35??           01455     lslf temp2,W
03CA   06??           01456     xorwf temp1
03CB   35??           01457     lslf temp1
03CC   0D??           01458     rlf seed
03CD   0D??           01459     rlf seed+1
03CE   08??           01460     movfw seed
03CF   0008           01461     return
                      01462     
                      01463 
03D0                  01464 set_ball_dx
03D0   2???           01465     call lfsr16 ;random
03D1   3007           01466     movlw 7
03D2   05??           01467     andwf seed,W
03D3   3589           01468     lslf WREG
03D4   000B           01469     brw
03D5   3000           01470     movlw 0
03D6   3???           01471     bra set_ball_dx_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D7   3001           01472     movlw 1
03D8   3???           01473     bra set_ball_dx_exit
03D9   30FF           01474     movlw -1
03DA   3???           01475     bra set_ball_dx_exit
03DB   3000           01476     movlw 0
03DC   3???           01477     bra set_ball_dx_exit
03DD   3001           01478     movlw 1
03DE   3???           01479     bra set_ball_dx_exit
03DF   30FF           01480     movlw -1
03E0   3???           01481     bra set_ball_dx_exit
03E1   30FF           01482     movlw -1
03E2   3???           01483     bra set_ball_dx_exit
03E3   3001           01484     movlw 1
03E4                  01485 set_ball_dx_exit
03E4   00??           01486     movwf ball_dx
03E5   0008           01487     return
                      01488     
03E6                  01489 game_init
03E6   01??           01490     clrf score
03E7   01??           01491     clrf score+1
03E8   2???           01492     call brick_wall_init
03E9   002?           01493     banksel balls
03EA   3003           01494     movlw 3
03EB   00??           01495     movwf balls
03EC   01??           01496     clrf ball_timer
03ED   0A??           01497     incf ball_timer
03EE   30EB           01498     movlw PADDLE_Y-BRICK_HEIGHT
03EF   00??           01499     movwf ball_y
03F0   2???           01500     call set_ball_dx
03F1   30FC           01501     movlw -4
03F2   00??           01502     movwf ball_dy
03F3   3002           01503     movlw 2
03F4   00??           01504     movwf ball_speed
03F5   01??           01505     clrf flags
03F6   1600           01506     bsf flags, F_START
03F7   0008           01507     return
                      01508     
                      01509 ; delay by TIMER0
                      01510 ; parameter
                      01511 ;   WREG -> 2*Tcy+7cy    
03F8                  01512 t0delay 
03F8   0989           01513     comf WREG
03F9   0095           01514     movwf TMR0
03FA   110B           01515     bcf INTCON,T0IF
03FB   1D0B           01516     btfss INTCON,T0IF
03FC   3???           01517     bra $-1
03FD   0008           01518     return
                      01519     
                      01520 MAIN_PROG CODE                      ; let linker place main program
                      01521 
0000                  01522 initialize
                      01523 ; clear common RAM
0000   0185           01524     clrf FSR0H
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   3070           01525     movlw 0x70
0002   0084           01526     movwf FSR0L
0003   0103           01527     clrw
0004   001A           01528     movwi FSR0++
0005   1F84           01529     btfss FSR0L,7
0006   3???           01530     bra $-2
                      01531 ; clear banked RAM
0007   0184           01532     clrf FSR0L
0008   3020           01533     movlw 0x20
0009   0085           01534     movwf FSR0H
000A   0103           01535     clrw 
000B   001A           01536     movwi FSR0++
000C   1C05           01537     btfss FSR0H,0
000D   3???           01538     bra $-2
                      01539 ; initialize LFSR seed
000E   002?           01540     banksel seed
000F   09??           01541     comf seed
0010   09??           01542     comf seed+1
0011   09??           01543     comf seed+2
0012   09??           01544     comf seed+3
                      01545 ;   setup arguments stack pointer
0013   30??           01546     movlw high (stack+STACK_SIZE)
0014   0085           01547     movwf FSR0H
0015   30??           01548     movlw low (stack+STACK_SIZE)
0016   0084           01549     movwf FSR0L
                      01550 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01551 ; TIMER0 prescale 1:2
0017   3050           01552     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01553     movwf OPTION_REG
                      01554 ; disable analog inputs, except AN0
0019   0023           01555     banksel ANSELA
001A   018C           01556     clrf ANSELA
                      01557 ; paddle potentiometer input     
001B   140C           01558     bsf ANSELA,PADDLE
001C   0021           01559     banksel ADCON1
001D   3020           01560     movlw (2<<ADCS0)
001E   009E           01561     movwf ADCON1
                      01562 ; pin setup
001F   0024           01563     banksel WPUA
0020   018C           01564     clrf WPUA
0021   0021           01565     banksel TRISA
0022   110C           01566     bcf TRISA,SYNC_OUT
0023   100C           01567     bcf TRISA,AUDIO
0024   0022           01568     banksel LATA
0025   160C           01569     bsf LATA, VIDEO_OUT
                      01570 ; PWM1 chroma signal on RA1
0026   003B           01571     banksel PWM1CON
0027   019F           01572     clrf PWM1LDCON
0028   0191           01573     clrf PWM1PHL
0029   0192           01574     clrf PWM1PHH
002A   0197           01575     clrf PWM1OFL
002B   0198           01576     clrf PWM1OFH
002C   0196           01577     clrf PWM1PRH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002D   3007           01578     movlw 7
002E   0095           01579     movwf PWM1PRL
002F   3004           01580     movlw 4
0030   0093           01581     movwf PWM1DCL
0031   0194           01582     clrf PWM1DCH
0032   179F           01583     bsf PWM1LDCON,7
0033   30C0           01584     movlw (1<<EN)|(1<<OE)
0034   009B           01585     movwf PWM1CON
                      01586 ; PWM2 sound
0035   003B           01587     banksel PWM2CON
0036   01A1           01588     clrf PWM2PHL
0037   01A2           01589     clrf PWM2PHH
0038   01A7           01590     clrf PWM2OFL
0039   01A8           01591     clrf PWM2OFH
003A   3030           01592     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01593     movwf PWM2CLKCON
003C   300D           01594     movlw high 3578;7
003D   00A6           01595     movwf PWM2PRH
003E   30FA           01596     movlw low 3578;7
003F   00A5           01597     movwf PWM2PRL
0040   3626           01598     lsrf PWM2PRH,W
0041   00A4           01599     movwf PWM2DCH
0042   0C25           01600     rrf PWM2PRL,W
0043   00A3           01601     movwf PWM2DCL
0044   17AF           01602     bsf PWM2LDCON,LDA
                      01603 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01604     banksel PWM3CON
0046   01BF           01605     clrf PWM3LDCON
0047   01B1           01606     clrf PWM3PHL
0048   01B2           01607     clrf PWM3PHH
0049   01B7           01608     clrf PWM3OFL
004A   01B8           01609     clrf PWM3OFH
004B   301B           01610     movlw low HPERIOD
004C   00B5           01611     movwf PWM3PRL
004D   3007           01612     movlw high HPERIOD
004E   00B6           01613     movwf PWM3PRH
004F   3086           01614     movlw HSYNC
0050   00B3           01615     movwf PWM3DCL
0051   01B4           01616     clrf PWM3DCH
0052   30D0           01617     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01618     movwf PWM3CON
0054   17BF           01619     bsf PWM3LDCON,7
0055   143C           01620     bsf PWM3INTE,PRIE
                      01621 ; enbable interrupt    
0056   0020           01622     banksel PIR3
0057   1313           01623     bcf PIR3,PWM3IF
0058   0021           01624     banksel PIE3
0059   1713           01625     bsf PIE3,PWM3IE
005A   170B           01626     bsf INTCON,PEIE
005B   178B           01627     bsf INTCON,GIE
005C   01??           01628     clrf flags
005D   1500           01629     bsf flags, F_SYNC
                      01630 ; test code
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01631     
                      01632 ; all processing done in ISR    
005E   2???           01633     goto $
                      01634 
                      01635 ; digits character table
005F                  01636 digits
005F   000B           01637     brw
0060   3440 34A0 34A0 01638     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01639     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01640     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01641     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01642     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01643     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01644     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01645     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01646     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01647     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01648     reset
                      01649     
0093                  01650 frequency
0093   000B           01651     brw
0094   348B 34D3      01652     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01653     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01654     reset
                      01655   
                      01656 ;display END! when game is over    
0099                  01657 end_msg
                      01658 ;    brw
0099   00E8 00C8 0000 01659     data 0xe8,0xc8,0
009C   008E 00A8 0000 01660     data 0x8e,0xa8,0
009F   00EA 00A8 0000 01661     data 0xea,0xa8,0
00A2   008A 00A0 0000 01662     data 0x8a,0xa0,0
00A5   00EA 00C8 0000 01663     data 0xea,0xc8,0
                      01664   
00A8                  01665 cool_msg
                      01666 ;    brw
00A8   00EE 00E8 0000 01667     data 0xee,0xe8,0
00AB   008A 00A8 0000 01668     data 0x8a,0xa8,0
00AE   008A 00A8 0000 01669     data 0x8a,0xa8,0
00B1   008A 00A8 0000 01670     data 0x8a,0xa8,0
00B4   00EE 00EE 0000 01671     data 0xee,0xee,0
                      01672     
                      01673 eeprom org (PROG_SIZE-EEPROM_SIZE)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0780                  01674 max_score 
                      01675  
3FA7 1EFF             01676     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_000B                         0000000B
_ISR_0012                         00000012
_ISR_00DA                         000000DA
_ISR_00DF                         000000DF
_ISR_00E6                         000000E6
_ISR_011D                         0000011D
_ISR_0124                         00000124
_ISR_0127                         00000127
_ISR_0130                         00000130
_ISR_0167                         00000167
_ISR_020B                         0000020B
_ISR_0253                         00000253
_ISR_0257                         00000257
_ISR_025E                         0000025E
_ISR_0265                         00000265
_ISR_0274                         00000274
_ISR_027E                         0000027E
_ISR_02AD                         000002AD
_ISR_02C4                         000002C4
_ISR_02DB                         000002DB
_ISR_02F2                         000002F2
_ISR_0309                         00000309
_ISR_035B                         0000035B
_ISR_035D                         0000035D
_ISR_0388                         00000388
_ISR_0390                         00000390
_ISR_0395                         00000395
_ISR_03FC                         000003FC
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
ball_at_left                      00000263
ball_at_right                     00000272
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    00000249
ball_lost                         0000012E
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B1
between                           000001B6
between_exit                      000001C0
black                             
blue                              
bottom_bound                      00000108
brick_bounce                      000001AE
brick_wall_init                   000003B3
bw_init                           000003BA
check_paddle_bounce               00000143
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000110
collision_exit                    000001B4
cool_msg                          000000A8
dark_green                        
digit_offset                      000003AD
digit_row                         000001FA
digits                            0000005F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

display_end                       0000032A
display_msg                       00000337
draw_border                       
draw_empty                        00000314
draw_paddle                       00000356
draw_row1                         0000029F
draw_row2                         000002B6
draw_row3                         000002CD
draw_row4                         000002E4
draw_row5                         000002FB
draw_score                        000001C9
draw_top_wall                     0000020F
draw_void                         00000223
draw_void_exit                    00000280
draw_wall                         00000291
dropn                             
eeprom                            00000780
end_msg                           00000099
even_field                        00000375
fallout_test                      0000012A
field_end                         0000037F
flags                             00000000
frequency                         00000093
game_init                         000003E6
game_over                         000000C0
game_over_test                    000003A2
game_running                      000000B8
going_down                        00000168
gray                              white
hi_line                           0000036E
inc_score                         0000038E
initialize                        00000000
isr                               00000004
isr_exit                          0000002D
lcount                            00000001
leave                             
lfsr16                            000003BE
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000EC
move_ball_exit                    0000010E
move_y                            000000FF
next_brick                        00000294
next_pixel                        00000349
next_task                         
no_ball                           00000230
no_ball_dly                       0000022F
no_msg                            0000032F
no_wall_draw                      00000289
old_dx                            0000000F
paddle_bounce                     0000014D
paddle_pos                        00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

paddle_test                       0000013F
pickn                             
pixels                            000000AD
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         00000032
pushw                             
q                                 00000009
r                                 00000000
read_button                       000000CE
read_paddle                       000000D2
right_bound                       000000F8
row1                              000000A0
row1_test                         0000017E
row2                              000000A2
row2_test                         00000187
row3                              000000A4
row3_exit                         000002DC
row3_test                         00000191
row4                              000000A6
row4_test                         0000019B
row5                              000000A8
row5_test                         000001A5
row6                              000000AA
score                             0000000C
score_exit                        000001F2
seed                              00000030
set_ball_dx                       000003D0
set_ball_dx_exit                  000003E4
set_presync                       0000003D
set_vsync                         00000053
skip_2_tasks                      000000C7
slice                             00000002
sound                             00000075
sound_fx1                         00000082
sound_fx2                         0000008D
sound_init                        00000098
sound_timer                       000000B2
stack                             00000020
swap_var                          
swapw                             
t0delay                           000003F8
task                              00000003
task_switch                       00000016
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     0000021B
user_input                        000000AD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  10:55:43         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

video_first                       000001C2
vsync                             00000048
vsync_end                         00000068
wait_field_end                    0000036B
wait_trigger                      000000BA
wall_test                         0000015E
white                             
yellow                            
yes_ball                          00000242

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   272 suppressed

