MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  VIDEO DISPLAY ZONES
                      00027 ;  scan lines     display
                      00028 ;  =======================    
                      00029 ;    30-49     |   score and balls count
                      00030 ;    50-57     |   top wall
                      00031 ;    58-250    |   play ground
                      00032 ;    58-73     |   empty zone
                      00033 ;    74-81     |   first bricks row
                      00034 ;    82-89     |   second bricks row
                      00035 ;    90-97     |   third bricks row
                      00036 ;    98-105    |   fourth bricks row
                      00037 ;    106-113   |   fifth bricks row
                      00038 ;    114-250   |   empty zone
                      00039 ;    243-250   |   paddle zone    
                      00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00041  
                      00042     
                      00043     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044     
8007   3FA7           00045     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00046     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00047     
                      00048     radix dec
                      00049 
                      00050 ; constants
  00000800            00051 PROG_SIZE equ 2048  ; program words
  00000080            00052 EEPROM_SIZE equ 128 ; high endurance flash words
                      00053  
  01B4F360            00054 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00055 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00056 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00057  
                      00058 ; NTSC signal 
  00003D76            00059 Fhorz equ 15734 ; horizontal frequency
  0000071B            00060 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00061 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00062 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00063 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00064 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00065 ; boolean flags 
  00000000            00066 F_HI_LINE equ 0 ; lcount > 255
  00000001            00067 F_EVEN equ 1    ; even field
  00000002            00068 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00069 F_SOUND equ 3   ; sound enabled 
  00000004            00070 F_START equ 4   ; game started 
  00000005            00071 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00072 F_OVER equ 6    ; game over
  00000007            00073 F_COOL equ 7    ; player got maximum score
                      00074  
                      00075 ;pins assignment
  00000000            00076 AUDIO EQU RA0
  00000000            00077 PADDLE equ RA0
  00000001            00078 CHROMA equ RA1
  00000002            00079 SYNC_OUT equ RA2
  00000003            00080 START_BTN equ RA3 
  00000004            00081 VIDEO_OUT equ RA4
  00000005            00082 CLKIN equ RA5
                      00083  
                      00084     ; constants used in video display
                      00085 ; values are in Tcy for x dimension.
                      00086 ; values are in scan lines for y dimension.    
  0000001E            00087 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00088 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00089 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00090 COURT_WIDTH equ 248 ; Tcy
  00000008            00091 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00092 BRICK_WIDTH equ 16  ; Tcy
  00000004            00093 BORDER_WIDTH equ 4  ; Tcy
  00000020            00094 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00095 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00096 PADDLE_LIMIT equ 74 ; Tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00097 BALL_WIDTH equ 8 ; Tcy
  00000008            00098 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00099 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00100 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00101 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00102 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00103 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  00000005            00104 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00105 ROW1_Y equ 74
  00000052            00106 ROW2_Y equ 82
  0000005A            00107 ROW3_Y equ 90
  00000062            00108 ROW4_Y equ 98
  0000006A            00109 ROW5_Y equ 106
                      00110  
                      00111 
                      00112 ;;;;;;;;;;;;;;;;;;;;;;
                      00113 ;; assembler macros ;;
                      00114 ;;;;;;;;;;;;;;;;;;;;;;
                      00115 
                      00116 ; leave task 
                      00117 leave macro
                      00118     goto isr_exit
                      00119     endm
                      00120     
                      00121 ; move to next task on slice limit
                      00122 ; parameters:
                      00123 ;   s  nomber of slices used by the task    
                      00124 next_task macro s    
                      00125     incf slice
                      00126     movlw s
                      00127     subwf slice,W
                      00128     skpz
                      00129     leave
                      00130     clrf slice
                      00131     incf task
                      00132     movlw s
                      00133     addwf lcount
                      00134     leave
                      00135     endm
                      00136     
                      00137     
                      00138 ; swap variable with WREG    
                      00139 swap_var macro var
                      00140     xorwf var
                      00141     xorwf var,W
                      00142     xorwf var
                      00143     endm
                      00144     
                      00145 
                      00146 ; delay in machine cycle T
                      00147 ; parameters:
                      00148 ;   T   number of machine cycles    
                      00149 tdelay macro T
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     variable q=(T)/3
                      00151     variable r=(T)%3
                      00152     if (q)
                      00153     movlw q
                      00154     decfsz WREG
                      00155     bra $-1
                      00156     endif
                      00157     if (r==2)
                      00158     bra $+1
                      00159     endif 
                      00160     if (r==1)
                      00161     nop
                      00162     endif
                      00163     endm
                      00164 
                      00165 ; enable weak pull on VIDEO_OUT
                      00166 ; to create a porch
                      00167 porch_on macro
                      00168     banksel WPUA
                      00169     bsf WPUA,VIDEO_OUT
                      00170     endm
                      00171     
                      00172 ; disable weak pull on VIDEO_OUT
                      00173 ; to remove porch
                      00174 porch_off macro
                      00175     banksel WPUA
                      00176     bcf WPUA,VIDEO_OUT
                      00177     endm
                      00178     
                      00179 ; enable chroma output
                      00180 chroma_on macro
                      00181     banksel TRISA
                      00182     bcf TRISA, CHROMA
                      00183     endm
                      00184     
                      00185 ;disable chroma output    
                      00186 chroma_off macro
                      00187     banksel TRISA
                      00188     bsf TRISA,CHROMA
                      00189     endm
                      00190     
                      00191 ; output chroma reference    
                      00192 chroma_ref macro
                      00193     banksel PWM1CON
                      00194     bcf PWM1CON,POL
                      00195     endm
                      00196     
                      00197 ; set chroma phase to 180 degree
                      00198 chroma_invert macro
                      00199     banksel PWM1CON
                      00200     bsf PWM1CON,POL
                      00201     endm
                      00202 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 ;;;;;;;;;;;;;;;;;;;;;;
                      00204 ;   colors macros
                      00205 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00206 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00207 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00208 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00209 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00210 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00211 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00212 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00213  
                      00214 ;set video output to black    
                      00215 black macro
                      00216     movlw BLACK
                      00217     movwf TRISA
                      00218     endm
                      00219     
                      00220 ; set video output to white    
                      00221 white macro    
                      00222     movlw WHITE
                      00223     movwf TRISA
                      00224     endm
                      00225 
                      00226 #define gray white
                      00227     
                      00228 ; set video output to mauve    
                      00229 mauve macro
                      00230     movlw MAUVE
                      00231     movwf TRISA
                      00232     endm
                      00233 
                      00234 ; set video output to yellow   
                      00235 yellow macro
                      00236     movlw YELLOW
                      00237     movwf TRISA
                      00238     endm
                      00239     
                      00240 ; set video output to blue
                      00241 blue macro
                      00242     movlw BLUE
                      00243     movwf TRISA
                      00244     endm
                      00245     
                      00246 ; set video output to dark blue    
                      00247 dark_green macro
                      00248     movlw DARK_GREEN
                      00249     movwf TRISA
                      00250     endm
                      00251 
                      00252     
                      00253     
                      00254     
                      00255 ; draw left and right borders
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ; parameters:
                      00257 ;   width delay determine width
                      00258 draw_border macro width
                      00259     banksel TRISA
                      00260     bsf TRISA,CHROMA
                      00261     bcf TRISA,VIDEO_OUT
                      00262     tdelay width
                      00263     bsf TRISA,VIDEO_OUT
                      00264     endm
                      00265     
                      00266 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00267 ;  stack manipulation macros
                      00268 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00269 STACK_SIZE equ 16 ; size of argument stack
                      00270 #define T INDF0 ; indirect access to top of argument stack
                      00271 #define SP FSR0 ; use FSR0 as stack pointer 
                      00272 ; push WREG on T
                      00273 pushw  macro
                      00274     movwi --SP
                      00275     endm
                      00276   
                      00277 ; pop WREG from T
                      00278 popw macro
                      00279     moviw SP++
                      00280     endm
                      00281     
                      00282 ; swap WREG with 
                      00283 swapw  macro
                      00284     xorwf T
                      00285     xorwf T,W
                      00286     xorwf T
                      00287     endm
                      00288 
                      00289 ; drop n elements from stack
                      00290 dropn macro n
                      00291     addfsr T,n
                      00292     endm
                      00293 
                      00294 ; copy nth element of stack to WREG
                      00295 ;  n {0..31}, 0 is T   
                      00296 pickn macro n
                      00297     moviw n[SP]
                      00298     endm
                      00299    
                      00300 ; copy WREG to nth element of stack
                      00301 ; n {0..31}, 0 is T
                      00302 pokew macro n
                      00303     movwi n[SP]
                      00304     endm
                      00305     
                      00306     
                      00307 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00308 ;;    variables
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00310  
                      00311     
                      00312     udata 0x20 ; bank 0
0020                  00313 stack res 16 ; arguments stack
0030                  00314 seed res 2 ; prng seed used by lfsr16
                      00315  
                      00316 ; video display manipulate TRISA register
                      00317 ; to avoid banksel during video update
                      00318 ; place variables related to video in same bank as TRISA 
                      00319 v_array   udata 0xA0 ; bank 1
00A0                  00320 row1 res 2; brick wall row1
00A2                  00321 row2 res 2
00A4                  00322 row3 res 2
00A6                  00323 row4 res 2
00A8                  00324 row5 res 2
00AA                  00325 row6 res 2
00AC                  00326 mask res 1 
00AD                  00327 pixels res 4
                      00328 ;d1 res 1 ; score msd digit pixels
                      00329 ;d2 res 1 ; score 2nd digit pixels
                      00330 ;d3 res 1 ; score lsd digit pixels
00B1                  00331 balls res 1 ; number of recking balls available 
00B2                  00332 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
                      00333  
                      00334 ; common 16 bytes RAM accessible whatever the selected bank 
                      00335     udata_shr 
0000                  00336 flags  res 1 ; boolean variables
0001                  00337 lcount res 1 ; video field line counter
0002                  00338 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00339 task res 1 ; where in video phase 
0004                  00340 temp1 res 1 ; temporary storage
0005                  00341 temp2 res 1 ; 
0006                  00342 paddle_pos res 1 
0007                  00343 ball_x res 1
0008                  00344 ball_y res 1
0009                  00345 ball_dx res 1
000A                  00346 ball_dy res 1
000B                  00347 ball_speed res 1
000C                  00348 score res 2 ; score stored in Binary Coded Decimal
000E                  00349 ball_timer res 1 
000F                  00350 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00351  
                      00352 ;; cpu reset entry point
                      00353 RES_VECT  CODE    0x0000            
0000   2???           00354     goto    initialize  ; go to beginning of program
0001   0001           00355     reset   
0002   0001           00356     reset
0003   0001           00357     reset
                      00358 
                      00359 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00360 ; interrupt service routine triggered by PWM3 period rollover
                      00361 ; after initialization is done all processing in done inside 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; this interrupt.
                      00363 ; It is designed as a round robin scheduler.    
                      00364 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00365 ISR CODE 0x0004
0004                  00366 isr
0004   1900           00367     btfsc flags, F_SYNC
0005   2???           00368     goto task_switch
                      00369  ; generate chroma sync
                      00370     tdelay 28
  0009                    M     variable q=(28)/3
  0001                    M     variable r=(28)%3
                          M     if (q)
0006   3009               M     movlw q
0007   0B89               M     decfsz WREG
0008   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
0009   0000               M     nop
                          M     endif
                      00371     chroma_ref
000A   003B               M     banksel PWM1CON
000B   121B               M     bcf PWM1CON,POL
000C   0021           00372     banksel TRISA
000D   108C           00373     bcf TRISA,CHROMA
                      00374     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000E   3005               M     movlw q
000F   0B89               M     decfsz WREG
0010   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
0011   0000               M     nop
                          M     endif
0012   148C           00375     bsf TRISA,CHROMA
                      00376     porch_on
0013   0024               M     banksel WPUA
0014   160C               M     bsf WPUA,VIDEO_OUT
0015                  00377 task_switch ; round robin task scheduler   
0015   08??           00378     movfw task
0016   000B           00379     brw
0017   2???           00380     goto pre_vsync ;task 0, vertical pre-equalization pulses
0018   2???           00381     goto vsync ;task 1, vertical sync pulses
0019   2???           00382     goto post_vsync ;task 2, vertical post-equalization pulses
001A   2???           00383     goto vsync_end ;task 3, return to normal video line
001B   2???           00384     goto sound ;task 4, check sound timer expiration
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C   2???           00385     goto user_input ;task 5,  read button and paddle
001D   2???           00386     goto move_ball ;task 6, move recking ball.
001E   2???           00387     goto collision ; task 7, check for collision with brick wall and paddle
001F   2???           00388     goto video_first ; task 8, wait FIRST_VIDEO line.
0020   2???           00389     goto draw_score ;task 9,  draw score en ball count
0021   2???           00390     goto draw_top_wall ;task 10,  draw top wall
0022   2???           00391     goto draw_void ;task 11, draw play space
0023   2???           00392     goto draw_row1 ;task 12, draw top bricks row
0024   2???           00393     goto draw_row2 ;task 13, draw second bricks row
0025   2???           00394     goto draw_row3 ;task 14,  draw third bricks row
0026   2???           00395     goto draw_row4 ;task 15,  draw fourth bricks row
0027   2???           00396     goto draw_row5 ;task 16, draw fifth bricks row
0028   2???           00397     goto draw_empty;task 17, draw empty space down to bottom
0029   2???           00398     goto draw_paddle ;task 18, draw paddle
002A   2???           00399     goto wait_field_end ;task 19, idle to end of video field
002B   0001           00400     reset ; error trap, task out of range
002C                  00401 isr_exit  
                      00402     porch_off
002C   0024               M     banksel WPUA
002D   120C               M     bcf WPUA,VIDEO_OUT
002E   003B           00403     banksel PWM3INTF
002F   103D           00404     bcf PWM3INTF,PRIF
0030   0009           00405     retfie
                      00406 
                      00407 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00408 ;;  all tasks routine are here            ;;
                      00409 ;;  each must be terminate by leave macro ;;    
                      00410 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00411     
                      00412 ; task 0, vertical synchronization pre equalization
                      00413 ; 6 half horizontal scan lines    
0031                  00414 pre_vsync
0031   08??           00415     movfw slice
0032   1903           00416     skpnz
0033   2???           00417     goto set_presync
                      00418     next_task 6
0034   0A??               M     incf slice
0035   3006               M     movlw 6
0036   02??               M     subwf slice,W
0037   1D03               M     skpz
                          M     leave
0038   2???               M     goto isr_exit
0039   01??               M     clrf slice
003A   0A??               M     incf task
003B   3006               M     movlw 6
003C   07??               M     addwf lcount
                          M     leave
003D   2???               M     goto isr_exit
003E                  00419 set_presync    
003E   003B           00420     banksel PWM3DC
003F   3041           00421     movlw HEQUAL
0040   00B3           00422     movwf PWM3DCL
0041   01B4           00423     clrf PWM3DCH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0042   3003           00424     movlw high HALF_LINE
0043   00B6           00425     movwf PWM3PRH
0044   308D           00426     movlw low HALF_LINE
0045   00B5           00427     movwf PWM3PRL
0046   17BF           00428     bsf PWM3LDCON,7
0047   0A??           00429     incf slice
                      00430     leave
0048   2???               M     goto isr_exit
                      00431     
                      00432 ; task 1, vertical synchronization pulses
                      00433 ; 6 half horizontal scan lines    
0049                  00434 vsync 
0049   08??           00435     movfw slice
004A   1903           00436     skpnz
004B   2???           00437     goto set_vsync
                      00438     next_task 6
004C   0A??               M     incf slice
004D   3006               M     movlw 6
004E   02??               M     subwf slice,W
004F   1D03               M     skpz
                          M     leave
0050   2???               M     goto isr_exit
0051   01??               M     clrf slice
0052   0A??               M     incf task
0053   3006               M     movlw 6
0054   07??               M     addwf lcount
                          M     leave
0055   2???               M     goto isr_exit
0056                  00439 set_vsync
0056   003B           00440     banksel PWM3DC
0057   3008           00441     movlw low VSYNC_PULSE
0058   00B3           00442     movwf PWM3DCL
0059   3003           00443     movlw high VSYNC_PULSE
005A   00B4           00444     movwf PWM3DCH
005B   17BF           00445     bsf PWM3LDCON,7
005C   0A??           00446     incf slice
                      00447     leave
005D   2???               M     goto isr_exit
                      00448     
                      00449 ; task 2, vertical synchronisation post equalization pulses
                      00450 ; 6 half horizontal scan lines    
005E                  00451 post_vsync
005E   08??           00452     movfw slice
005F   1903           00453     skpnz
0060   2???           00454     goto set_presync
0061   3006           00455     movlw 6
0062   02??           00456     subwf slice,W
0063   1903           00457     skpnz
0064   2???           00458     goto post_last
0065   0A??           00459     incf slice
                      00460     leave
0066   2???               M     goto isr_exit
0067                  00461 post_last    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0067   0A??           00462     incf task
0068   01??           00463     clrf slice
0069   1C80           00464     btfss flags, F_EVEN
                      00465     leave
006A   2???               M     goto isr_exit
                      00466     
                      00467 ; task 3, vertical synchronization completed, return to normal line
                      00468 ; rest horizonal line to its normal length.
                      00469 ; set lcount to 9.    
006B                  00470 vsync_end
006B   1100           00471     bcf flags, F_SYNC
006C   003B           00472     banksel PWM3DC
006D   3086           00473     movlw HSYNC
006E   00B3           00474     movwf PWM3DCL
006F   01B4           00475     clrf PWM3DCH
0070   3007           00476     movlw high HPERIOD
0071   00B6           00477     movwf PWM3PRH
0072   301B           00478     movlw low HPERIOD
0073   00B5           00479     movwf PWM3PRL
0074   17BF           00480     bsf PWM3LDCON,7
0075   0A??           00481     incf task
0076   3009           00482     movlw 9
0077   00??           00483     movwf lcount
                      00484     leave
0078   2???               M     goto isr_exit
                      00485 
                      00486 ; task 4,  sound timer
                      00487 ; if sound active process it.    
0079                  00488 sound
0079   0A??           00489     incf task
007A   0A??           00490     incf lcount
007B   1D80           00491     btfss flags, F_SOUND
                      00492     leave
007C   2???               M     goto isr_exit
007D   1A80           00493     btfsc flags, F_PAUSE
007E   2???           00494     call sound_fx1
007F   002?           00495     banksel sound_timer
0080   0B??           00496     decfsz sound_timer
                      00497     leave
0081   2???               M     goto isr_exit
0082   1180           00498     bcf flags, F_SOUND
0083   003B           00499     banksel PWM2CON
0084   132B           00500     bcf PWM2CON,OE
0085   13AB           00501     bcf PWM2CON,EN
                      00502     leave
0086   2???               M     goto isr_exit
                      00503 
                      00504 ; sound effect, low pitch to high-pitch    
0087                  00505 sound_fx1
0087   1D80           00506     btfss flags, F_SOUND
0088   0008           00507     return
0089   1C80           00508     btfss flags, F_EVEN
008A   0008           00509     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008B   003B           00510     banksel PWM2CON
008C   36A6           00511     lsrf PWM2PRH
008D   0CA5           00512     rrf PWM2PRL
008E   36A4           00513     lsrf PWM2DCH
008F   0CA3           00514     rrf PWM2DCL
0090   17AF           00515     bsf PWM2LDCON,LDA
0091   0008           00516     return
                      00517     
                      00518 ; sound effect, high pitch to low-pitch    
0092                  00519 sound_fx2
0092   1D80           00520     btfss flags, F_SOUND
0093   0008           00521     return
0094   1C80           00522     btfss flags, F_EVEN
0095   0008           00523     return
0096   003B           00524     banksel PWM2CON
0097   35A5           00525     lslf PWM2PRL
0098   0DA6           00526     rlf PWM2PRH
0099   35A3           00527     lslf PWM2DCL
009A   0DA4           00528     rlf PWM2DCH
009B   17AF           00529     bsf PWM2LDCON,LDA
009C   0008           00530     return
                      00531     
                      00532 ; initialize sound generation.
                      00533 ; input:
                      00534 ;   T = duration
                      00535 ;   WREG = index in frequency table    
                      00536 ; outpout:
                      00537 ;   none    
009D                  00538 sound_init
                      00539     pushw  ; ( d i -- )
009D   0019               M     movwi --SP
009E   1580           00540     bsf flags, F_SOUND
009F   003B           00541     banksel PWM2CON
00A0   0800           00542     movfw T
00A1   2???           00543     call frequency
00A2   00A6           00544     movwf PWM2PRH
00A3   0A00           00545     incf T,W
00A4   2???           00546     call frequency
00A5   00A5           00547     movwf PWM2PRL
00A6   3626           00548     lsrf PWM2PRH,W
00A7   00A4           00549     movwf PWM2DCH
00A8   0C25           00550     rrf PWM2PRL,W
00A9   00A3           00551     movwf PWM2DCL
00AA   17AF           00552     bsf PWM2LDCON,LDA
00AB   172B           00553     bsf PWM2CON,OE
00AC   17AB           00554     bsf PWM2CON,EN
00AD   002?           00555     banksel sound_timer
                      00556     pickn 1
00AE   3F01               M     moviw 1[SP]
00AF   00??           00557     movwf sound_timer
                      00558     dropn 2
00B0   3102               M     addfsr T,2
00B1   0008           00559     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00560     
                      00561 ;task 5, read button and paddle position
00B2                  00562 user_input
00B2   0A??           00563     incf task
00B3   0A??           00564     incf lcount
00B4   2???           00565     call read_paddle
00B5   1B00           00566     btfsc flags, F_OVER
00B6   3???           00567     bra game_over
00B7   1A00           00568     btfsc flags,F_START
00B8   3???           00569     bra game_running
                      00570 ; game not running
00B9   2???           00571     call read_button
00BA   1D03           00572     skpz
00BB   3???           00573     bra skip_2_tasks
                      00574 ; start game    
00BC   2???           00575     call game_init
                      00576     leave
00BD   2???               M     goto isr_exit
00BE                  00577 game_running
00BE   1E80           00578     btfss flags, F_PAUSE
                      00579     leave
00BF   2???               M     goto isr_exit
                      00580 ; game on pause    
00C0                  00581 wait_trigger
00C0   2???           00582     call read_button
00C1   1D03           00583     skpz
00C2   3???           00584     bra skip_2_tasks
00C3   1280           00585     bcf flags,F_PAUSE
00C4   2???           00586     call set_ball_dx
                      00587     leave
00C5   2???               M     goto isr_exit
                      00588 ; game over
00C6                  00589 game_over
00C6   2???           00590     call read_button
00C7   1D03           00591     skpz
00C8   3???           00592     bra skip_2_tasks
00C9   1300           00593     bcf flags,F_OVER
00CA   2???           00594     call game_init
00CB   0A??           00595     incf task
00CC   0A??           00596     incf lcount
                      00597     leave
00CD   2???               M     goto isr_exit
                      00598 ; while game not running skip 'move_ball' and 'collision' tasks    
00CE                  00599 skip_2_tasks
00CE   08??           00600     movfw paddle_pos
00CF   3E04           00601     addlw 4
00D0   00??           00602     movwf ball_x
00D1   0A??           00603     incf task
00D2   0A??           00604     incf task
00D3   2???           00605     call lfsr16
                      00606     leave
00D4   2???               M     goto isr_exit
                      00607 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00608     
00D5                  00609 read_button
00D5   0020           00610     banksel PORTA
00D6   080C           00611     movfw PORTA
00D7   3908           00612     andlw 1<<START_BTN
00D8   0008           00613     return
                      00614     
00D9                  00615 read_paddle
00D9   003B           00616     banksel PWM2CON
00DA   13AB           00617     bcf PWM2CON,EN
00DB   0021           00618     banksel TRISA
00DC   140C           00619     bsf TRISA, PADDLE
00DD   0021           00620     banksel ADCON0
00DE   3003           00621     movlw 3
00DF   009D           00622     movwf ADCON0
00E0   189D           00623     btfsc ADCON0,NOT_DONE
00E1   2???           00624     goto $-1
00E2   3010           00625     movlw 4<<CHS0
00E3   009D           00626     movwf ADCON0
00E4   081C           00627     movfw ADRESH
00E5   1D80           00628     btfss flags, F_SOUND
00E6   3???           00629     bra $+3
00E7   003B           00630     banksel PWM2CON
00E8   17AB           00631     bsf PWM2CON,EN
00E9   00??           00632     movwf paddle_pos
00EA   304A           00633     movlw PADDLE_LIMIT
00EB   02??           00634     subwf paddle_pos,W
00EC   1C03           00635     skpc
00ED   3???           00636     bra $+3
00EE   304A           00637     movlw PADDLE_LIMIT
00EF   00??           00638     movwf paddle_pos
00F0   0021           00639     banksel TRISA
00F1   100C           00640     bcf TRISA, AUDIO
00F2   0008           00641     return
                      00642     
                      00643    
                      00644 ; task 6, move recking ball.   
00F3                  00645 move_ball
00F3   0B??           00646     decfsz ball_timer
00F4   3???           00647     bra move_ball_exit
00F5   08??           00648     movfw ball_speed
00F6   00??           00649     movwf ball_timer
00F7   08??           00650     movfw ball_dx
00F8   07??           00651     addwf ball_x
00F9   1D03           00652     skpz
00FA   3???           00653     bra right_bound
00FB   0A??           00654     incf ball_x
00FC   09??           00655     comf ball_dx
00FD   0A??           00656     incf ball_dx
00FE   3???           00657     bra move_y
00FF                  00658 right_bound    
00FF   08??           00659     movfw ball_x
0100   3C52           00660     sublw BALL_RIGHT_BOUND
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0101   1803           00661     skpnc
0102   3???           00662     bra move_y
0103   03??           00663     decf ball_x
0104   09??           00664     comf ball_dx
0105   0A??           00665     incf ball_dx
0106                  00666 move_y
0106   08??           00667     movfw ball_dy
0107   07??           00668     addwf ball_y
0108   303A           00669     movlw BALL_TOP_BOUND
0109   02??           00670     subwf ball_y,W
010A   1803           00671     skpnc
010B   3???           00672     bra bottom_bound
010C   09??           00673     comf ball_dy
010D   0A??           00674     incf ball_dy
010E   3???           00675     bra move_ball_exit
010F                  00676 bottom_bound
010F   08??           00677     movfw ball_y
0110   3CFA           00678     sublw BALL_BOTTOM_BOUND
0111   1803           00679     skpnc
0112   3???           00680     bra move_ball_exit
0113   09??           00681     comf ball_dy
0114   0A??           00682     incf ball_dy
0115                  00683 move_ball_exit    
0115   0A??           00684     incf task
0116   0A??           00685     incf lcount
                      00686     leave
0117   2???               M     goto isr_exit
                      00687 
                      00688 ; task 7, collision detection
0118                  00689 collision
0118   30??           00690     movlw high row1
0119   0087           00691     movwf FSR1H
011A   30??           00692     movlw low row1
011B   0086           00693     movwf FSR1L
011C   002?           00694     banksel mask
                      00695 ; pre-compute ball column and compute brick mask
                      00696 ; column = 3*ball_x/16
011D   35??           00697     lslf ball_x,W
011E   07??           00698     addwf ball_x,W
011F   0E89           00699     swapf WREG
0120   390F           00700     andlw 15
0121   00??           00701     movwf temp1
0122   3008           00702     movlw 8
0123   02??           00703     subwf temp1,W
0124   1C03           00704     skpc
0125   3???           00705     bra $+3
0126   00??           00706     movwf temp1
0127   3141           00707     addfsr FSR1,1
                      00708 ; create mask    
0128   3080           00709     movlw 0x80
0129   00??           00710     movwf mask
012A   08??           00711     movfw temp1
012B   1903           00712     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012C   3???           00713     bra $+4
012D   36??           00714     lsrf mask
012E   0B??           00715     decfsz temp1
012F   3???           00716     bra $-2
0130   1B80           00717     btfsc ball_dy,7
0131   3???           00718     bra wall_test ; ball going up
0132                  00719 fallout_test
                      00720 ; if ball_y > LAST_VIDEO_LINE-BALL_HEIGTH/2 then ball lost
0132   30F6           00721     movlw LAST_VIDEO_LINE-BALL_HEIGHT/2
0133   02??           00722     subwf ball_y,W
0134   1C03           00723     skpc
0135   3???           00724     bra paddle_test
0136                  00725 ball_lost    
0136   1680           00726     bsf flags, F_PAUSE ; pause game
0137   0B??           00727     decfsz balls
0138   3???           00728     bra $+3
0139   1200           00729     bcf flags, F_START
013A   1700           00730     bsf flags, F_OVER
013B   3004           00731     movlw 4
013C   07??           00732     addwf paddle_pos,W
013D   00??           00733     movwf ball_x
013E   30EB           00734     movlw PADDLE_Y-BRICK_HEIGHT
013F   00??           00735     movwf ball_y
0140   30FC           00736     movlw -4
0141   00??           00737     movwf ball_dy
0142   3008           00738     movlw 8
                      00739     pushw
0143   0019               M     movwi --SP
0144   3002           00740     movlw 2
0145   2???           00741     call sound_init
0146   3???           00742     bra collision_exit
0147                  00743 paddle_test    
                      00744 ; paddle bounce test
0147   30EC           00745     movlw PADDLE_Y-BALL_HEIGHT+1
0148   02??           00746     subwf ball_y,W
0149   1C03           00747     skpc
014A   3???           00748     bra wall_test
                      00749 ; if ball_x over paddle bounce ball
014B                  00750 check_paddle_bounce
014B   3002           00751     movlw BALL_WIDTH/3
014C   02??           00752     subwf paddle_pos,W
                      00753     pushw
014D   0019               M     movwi --SP
014E   300A           00754     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+(BALL_WIDTH/3)
014F   07??           00755     addwf paddle_pos,W
                      00756     pushw
0150   0019               M     movwi --SP
0151   08??           00757     movfw ball_x
0152   2???           00758     call between
0153   1C03           00759     skpc
0154   3???           00760     bra collision_exit
0155                  00761 paddle_bounce 
0155   08??           00762     movfw ball_dx
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0156   00??           00763     movwf old_dx
0157   08??           00764     movfw paddle_pos
0158   02??           00765     subwf ball_x,W
0159   3789           00766     asrf WREG
015A   3789           00767     asrf WREG
015B   3789           00768     asrf WREG
015C   00??           00769     movwf ball_dx
015D   06??           00770     xorwf old_dx,W
015E   1903           00771     skpnz
015F   2???           00772     call set_ball_dx
0160   30FC           00773     movlw -4
0161   00??           00774     movwf ball_dy
0162   3002           00775     movlw 2
                      00776     pushw
0163   0019               M     movwi --SP
0164   2???           00777     call sound_init
0165   3???           00778     bra collision_exit
                      00779 ; brick wall collision test    
0166                  00780 wall_test
0166   304A           00781     movlw ROW1_Y
0167   00??           00782     movwf temp1
0168   3072           00783     movlw ROW5_Y+BRICK_HEIGHT
0169   00??           00784     movwf temp2
016A   3007           00785     movlw BALL_HEIGHT-1
016B   1F80           00786     btfss ball_dy,7
016C   3???           00787     bra going_down
016D   07??           00788     addwf temp1
016E   07??           00789     addwf temp2
016F   3???           00790     bra $+3
0170                  00791 going_down
0170   02??           00792     subwf temp1
0171   02??           00793     subwf temp2
0172   08??           00794     movfw temp1
                      00795     pushw
0173   0019               M     movwi --SP
0174   08??           00796     movfw temp2
                      00797     pushw
0175   0019               M     movwi --SP
0176   08??           00798     movfw ball_y
0177   2???           00799     call between
0178   1C03           00800     skpc
0179   3???           00801     bra collision_exit
017A   08??           00802     movfw temp1
017B   02??           00803     subwf ball_y,W
017C   3689           00804     lsrf WREG
017D   3689           00805     lsrf WREG
017E   3689           00806     lsrf WREG
017F   000B           00807     brw
0180   3???           00808     bra row1_test
0181   3???           00809     bra row2_test
0182   3???           00810     bra row3_test
0183   3???           00811     bra row4_test
0184   3???           00812     bra row5_test
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0185   0001           00813     reset
0186                  00814 row1_test
0186   08??           00815     movfw mask
0187   0501           00816     andwf INDF1,W
0188   1903           00817     skpnz
0189   3???           00818     bra collision_exit
018A   09??           00819     comf mask,W
018B   0581           00820     andwf INDF1
018C   3009           00821     movlw 9
018D   2???           00822     call inc_score
018E   3???           00823     bra brick_bounce
018F                  00824 row2_test
018F   3142           00825     addfsr FSR1,2
0190   08??           00826     movfw mask
0191   0501           00827     andwf INDF1, W
0192   1903           00828     skpnz
0193   3???           00829     bra collision_exit
0194   09??           00830     comf mask,W
0195   0581           00831     andwf INDF1
0196   3006           00832     movlw 6
0197   2???           00833     call inc_score
0198   3???           00834     bra brick_bounce
0199                  00835 row3_test
0199   3144           00836     addfsr FSR1,4
019A   08??           00837     movfw mask
019B   0501           00838     andwf INDF1,W
019C   1903           00839     skpnz
019D   3???           00840     bra collision_exit
019E   09??           00841     comf mask,W
019F   0581           00842     andwf INDF1
01A0   3003           00843     movlw 3
01A1   2???           00844     call inc_score
01A2   3???           00845     bra brick_bounce
01A3                  00846 row4_test
01A3   3146           00847     addfsr FSR1,6
01A4   08??           00848     movfw mask
01A5   0501           00849     andwf INDF1,W
01A6   1903           00850     skpnz
01A7   3???           00851     bra collision_exit
01A8   09??           00852     comf mask,W
01A9   0581           00853     andwf INDF1
01AA   3002           00854     movlw 2
01AB   2???           00855     call inc_score
01AC   3???           00856     bra brick_bounce
01AD                  00857 row5_test    
01AD   3148           00858     addfsr FSR1,8
01AE   08??           00859     movfw mask
01AF   0501           00860     andwf INDF1,W
01B0   1903           00861     skpnz
01B1   3???           00862     bra collision_exit
01B2   09??           00863     comf mask,W
01B3   0581           00864     andwf INDF1
01B4   3001           00865     movlw 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B5   2???           00866     call inc_score
01B6                  00867 brick_bounce
01B6   09??           00868     comf ball_dy
01B7   0A??           00869     incf ball_dy
                      00870     ;call set_ball_dx
01B8   3001           00871     movlw 1
                      00872     pushw
01B9   0019               M     movwi --SP
01BA   3000           00873     movlw 0
01BB   2???           00874     call sound_init
01BC                  00875 collision_exit
01BC   0A??           00876     incf task
01BD   0A??           00877     incf lcount
                      00878     leave
01BE   2???               M     goto isr_exit
                      00879 
                      00880 ; check if  lb <= x < hb
                      00881 ; input:
                      00882 ;    WREG  x
                      00883 ;    stack ( lb hb -- )     
                      00884 ; output:
                      00885 ;   Carry bit set if true    
01BF                  00886 between
01BF   00??           00887     movwf temp2
                      00888     pickn 1
01C0   3F01               M     moviw 1[SP]
01C1   02??           00889     subwf temp2,W
01C2   1C03           00890     skpc
01C3   3???           00891     bra between_exit
01C4   0800           00892     movfw T
01C5   02??           00893     subwf temp2
01C6   0803           00894     movfw STATUS
01C7   3A01           00895     xorlw 1
01C8   0083           00896     movwf STATUS
01C9                  00897 between_exit    
                      00898     dropn 2
01C9   3102               M     addfsr T,2
01CA   0008           00899     return
                      00900     
                      00901 ; task 8, wait for first video line
01CB                  00902 video_first
01CB   0A??           00903     incf lcount
01CC   301E           00904     movlw FIRST_VIDEO_LINE
01CD   02??           00905     subwf lcount,W
01CE   1D03           00906     skpz
                      00907     leave
01CF   2???               M     goto isr_exit
01D0   01??           00908     clrf slice
01D1   0A??           00909     incf task
                      00910     leave
01D2   2???               M     goto isr_exit
                      00911    
                      00912 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00913 ; The following tasks are responsible to render video display.
                      00914 ; Each video line must be completed by setting color to black.
                      00915 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00916     
                      00917  
                      00918 ; task 9, draw score en ball count
01D3                  00919 draw_score ; lcount enter at 30 leave at 50
01D3   0021           00920     banksel TRISA
01D4   08??           00921     movfw slice
01D5   3689           00922     lsrf WREG
01D6   3689           00923     lsrf WREG
                      00924     pushw
01D7   0019               M     movwi --SP
01D8   300F           00925     movlw 0xf
01D9   05??           00926     andwf score+1,W
01DA   2???           00927     call digit_offset
01DB   0700           00928     addwf T,W
01DC   2???           00929     call digits
01DD   00??           00930     movwf pixels+2
01DE   0E??           00931     swapf score+1,W
01DF   390F           00932     andlw 0xf
01E0   2???           00933     call digit_offset
01E1   0700           00934     addwf T,W
01E2   2???           00935     call digits
01E3   00??           00936     movwf pixels+1
01E4   300F           00937     movlw 0xf
01E5   05??           00938     andwf score,W
01E6   2???           00939     call digit_offset
01E7   0700           00940     addwf T,W
01E8   2???           00941     call digits
01E9   2???           00942     call digit_row
01EA   08??           00943     movfw pixels+1
01EB   2???           00944     call digit_row
01EC   08??           00945     movfw pixels+2
01ED   2???           00946     call digit_row
                      00947     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
01EE   3014               M     movlw q
01EF   0B89               M     decfsz WREG
01F0   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F1   120C           00948     bcf TRISA,VIDEO_OUT
                      00949     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
01F2   3001               M     movlw q
01F3   0B89               M     decfsz WREG
01F4   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
01F5   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F6   160C           00950     bsf TRISA,VIDEO_OUT
                      00951     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
01F7   300A               M     movlw q
01F8   0B89               M     decfsz WREG
01F9   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01FA   08??           00952     movfw balls
01FB   2???           00953     call digit_offset
01FC   0700           00954     addwf T,W
01FD   2???           00955     call digits
01FE   2???           00956     call digit_row
01FF                  00957 score_exit
                      00958     next_task 5*4
01FF   0A??               M     incf slice
0200   3014               M     movlw 5*4
0201   02??               M     subwf slice,W
0202   1D03               M     skpz
                          M     leave
0203   2???               M     goto isr_exit
0204   01??               M     clrf slice
0205   0A??               M     incf task
0206   3014               M     movlw 5*4
0207   07??               M     addwf lcount
                          M     leave
0208   2???               M     goto isr_exit
                      00959 
                      00960 ; display digit row pixels   
0209                  00961 digit_row
                      00962     pushw
0209   0019               M     movwi --SP
020A   0D80           00963     rlf T
020B   301A           00964     movlw BLACK
020C   1803           00965     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020D   300A           00966     movlw WHITE
020E   008C           00967     movwf TRISA
020F   0D80           00968     rlf T
0210   301A           00969     movlw BLACK
0211   1803           00970     skpnc
0212   300A           00971     movlw WHITE
0213   008C           00972     movwf TRISA
0214   0D80           00973     rlf T
0215   301A           00974     movlw BLACK
0216   1803           00975     skpnc
0217   300A           00976     movlw WHITE
0218   008C           00977     movwf TRISA
                      00978     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0219   3001               M     movlw q
021A   0B89               M     decfsz WREG
021B   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00979     dropn 1
021C   3101               M     addfsr T,1
021D   160C           00980     bsf TRISA,VIDEO_OUT
021E   0008           00981     return
                      00982     
                      00983 ; task 10,  draw top wall, 8 screen lines    
021F                  00984 draw_top_wall ;lcount enter at 50 leave at 58
021F   1C80           00985     btfss flags, F_EVEN
0220   3???           00986     bra top_wall_exit
0221   0021           00987     banksel TRISA
                      00988     tdelay LEFT_MARGIN -2
  0010                    M     variable q=(LEFT_MARGIN -2)/3
  0002                    M     variable r=(LEFT_MARGIN -2)%3
                          M     if (q)
0222   3010               M     movlw q
0223   0B89               M     decfsz WREG
0224   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0225   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00989     white
0226   300A               M     movlw WHITE
0227   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00990     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0228   3057               M     movlw q
0229   0B89               M     decfsz WREG
022A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00991     black
022B   301A               M     movlw BLACK
022C   008C               M     movwf TRISA
022D                  00992 top_wall_exit
                      00993     next_task BRICK_HEIGHT
022D   0A??               M     incf slice
022E   3008               M     movlw BRICK_HEIGHT
022F   02??               M     subwf slice,W
0230   1D03               M     skpz
                          M     leave
0231   2???               M     goto isr_exit
0232   01??               M     clrf slice
0233   0A??               M     incf task
0234   3008               M     movlw BRICK_HEIGHT
0235   07??               M     addwf lcount
                          M     leave
0236   2???               M     goto isr_exit
                      00994 
                      00995 ; task 11,  only on even field draw vertical side bands.    
0237                  00996 draw_void ;enter at 58 leave at 74| 250-58
0237   1C80           00997     btfss flags, F_EVEN
0238   3???           00998     bra no_wall_draw
0239   08??           00999     movfw ball_y
023A   02??           01000     subwf lcount,W
023B   1C03           01001     skpc
023C   3???           01002     bra no_ball_dly
023D   3008           01003     movlw BALL_HEIGHT
023E   07??           01004     addwf ball_y,W
023F   02??           01005     subwf lcount,W
0240   1C03           01006     skpc
0241   3???           01007     bra yes_ball
0242   3???           01008     bra no_ball
0243                  01009 no_ball_dly
                      01010     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0243   3002               M     movlw q
0244   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0245   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0246                  01011 no_ball    
                      01012     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
0246   300D               M     movlw q
0247   0B89               M     decfsz WREG
0248   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01013     draw_border BORDER_WIDTH
0249   0021               M     banksel TRISA
024A   148C               M     bsf TRISA,CHROMA
024B   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
024C   3001               M     movlw q
024D   0B89               M     decfsz WREG
024E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
024F   0000               M     nop
                          M     endif
0250   160C               M     bsf TRISA,VIDEO_OUT
                      01014     black
0251   301A               M     movlw BLACK
0252   008C               M     movwf TRISA
                      01015     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0253   3052               M     movlw q
0254   0B89               M     decfsz WREG
0255   3???               M     bra $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
0256   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01016     draw_border BORDER_WIDTH
0257   0021               M     banksel TRISA
0258   148C               M     bsf TRISA,CHROMA
0259   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
025A   3001               M     movlw q
025B   0B89               M     decfsz WREG
025C   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
025D   0000               M     nop
                          M     endif
025E   160C               M     bsf TRISA,VIDEO_OUT
025F   3???           01017     bra draw_void_exit
0260                  01018 yes_ball
0260   0021           01019     banksel TRISA
0261   08??           01020     movfw ball_x
0262   1903           01021     skpnz
0263   3???           01022     bra ball_at_left
0264   3C52           01023     sublw BALL_RIGHT_BOUND
0265   1903           01024     skpnz
0266   3???           01025     bra ball_at_right
0267                  01026 ball_in_middle    
0267   3001           01027     movlw 1
0268   02??           01028     subwf ball_x,W
0269   1903           01029     skpnz
026A   3E01           01030     addlw 1
026B   00??           01031     movwf temp1
                      01032     tdelay LEFT_MARGIN-22
  000A                    M     variable q=(LEFT_MARGIN-22)/3
  0000                    M     variable r=(LEFT_MARGIN-22)%3
                          M     if (q)
026C   300A               M     movlw q
026D   0B89               M     decfsz WREG
026E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
026F   120C           01033     bcf TRISA,VIDEO_OUT
                      01034     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0270   3001               M     movlw q
0271   0B89               M     decfsz WREG
0272   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0273   08??           01035     movfw temp1
0274   160C           01036     bsf TRISA,VIDEO_OUT
0275   0B89           01037     decfsz WREG
0276   3???           01038     bra $-1
0277   120C           01039     bcf TRISA, VIDEO_OUT
                      01040     tdelay BALL_WIDTH-1
  0002                    M     variable q=(BALL_WIDTH-1)/3
  0001                    M     variable r=(BALL_WIDTH-1)%3
                          M     if (q)
0278   3002               M     movlw q
0279   0B89               M     decfsz WREG
027A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
027B   0000               M     nop
                          M     endif
027C   08??           01041     movfw ball_x
027D   160C           01042     bsf TRISA,VIDEO_OUT
027E   3C52           01043     sublw BALL_RIGHT_BOUND
027F   0B89           01044     decfsz WREG
0280   3???           01045     bra $-1
0281   120C           01046     bcf TRISA,VIDEO_OUT
                      01047     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0282   3001               M     movlw q
0283   0B89               M     decfsz WREG
0284   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0285   0000               M     nop
                          M     endif
0286   160C           01048     bsf TRISA,VIDEO_OUT
0287   3???           01049     bra draw_void_exit
0288                  01050 ball_at_left
                      01051     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0288   300C               M     movlw q
0289   0B89               M     decfsz WREG
028A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
028B   0000               M     nop
                          M     endif
028C   120C           01052     bcf TRISA,VIDEO_OUT
                      01053     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
028D   3004               M     movlw q
028E   0B89               M     decfsz WREG
028F   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0290   160C           01054     bsf TRISA,VIDEO_OUT
                      01055     tdelay COURT_WIDTH-6
  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
0291   3050               M     movlw q
0292   0B89               M     decfsz WREG
0293   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0294   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0295   0000           01056     nop
0296   120C           01057     bcf TRISA,VIDEO_OUT
                      01058     tdelay 4
  0001                    M     variable q=(4)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0001                    M     variable r=(4)%3
                          M     if (q)
0297   3001               M     movlw q
0298   0B89               M     decfsz WREG
0299   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
029A   0000               M     nop
                          M     endif
029B   160C           01059     bsf TRISA,VIDEO_OUT
029C   3???           01060     bra draw_void_exit
029D                  01061 ball_at_right
                      01062     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
029D   300B               M     movlw q
029E   0B89               M     decfsz WREG
029F   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02A0   0000               M     nop
                          M     endif
02A1   120C           01063     bcf TRISA,VIDEO_OUT
                      01064     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
02A2   3001               M     movlw q
02A3   0B89               M     decfsz WREG
02A4   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02A5   0000               M     nop
                          M     endif
02A6   160C           01065     bsf TRISA,VIDEO_OUT
                      01066     tdelay COURT_WIDTH-2
  0052                    M     variable q=(COURT_WIDTH-2)/3
  0000                    M     variable r=(COURT_WIDTH-2)%3
                          M     if (q)
02A7   3052               M     movlw q
02A8   0B89               M     decfsz WREG
02A9   3???               M     bra $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02AA   120C           01067     bcf TRISA,VIDEO_OUT
                      01068     tdelay 10
  0003                    M     variable q=(10)/3
  0001                    M     variable r=(10)%3
                          M     if (q)
02AB   3003               M     movlw q
02AC   0B89               M     decfsz WREG
02AD   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02AE   0000               M     nop
                          M     endif
02AF   160C           01069     bsf TRISA,VIDEO_OUT
02B0                  01070 draw_void_exit    
02B0   0A??           01071     incf slice
02B1   0A??           01072     incf lcount
02B2   30FB           01073     movlw LAST_VIDEO_LINE+1
02B3   02??           01074     subwf lcount,W
02B4   1D03           01075     skpz
                      01076     leave
02B5   2???               M     goto isr_exit
02B6   01??           01077     clrf slice
02B7   3013           01078     movlw 19
02B8   00??           01079     movwf task
                      01080     leave
02B9   2???               M     goto isr_exit
02BA                  01081 no_wall_draw
                      01082     next_task 2*BRICK_HEIGHT
02BA   0A??               M     incf slice
02BB   3010               M     movlw 2*BRICK_HEIGHT
02BC   02??               M     subwf slice,W
02BD   1D03               M     skpz
                          M     leave
02BE   2???               M     goto isr_exit
02BF   01??               M     clrf slice
02C0   0A??               M     incf task
02C1   3010               M     movlw 2*BRICK_HEIGHT
02C2   07??               M     addwf lcount
                          M     leave
02C3   2???               M     goto isr_exit
                      01083 
                      01084 ; draw 16 bricks wall
                      01085 ; input:
                      01086 ;   row in temp1,temp2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01087 ;   color in WREG
                      01088 ; output:
                      01089 ;   none    
02C4                  01090 draw_wall; macro color
                      01091 ;    local next_brick
                      01092     pushw
02C4   0019               M     movwi --SP
02C5   3010           01093     movlw 16
                      01094     pushw
02C6   0019               M     movwi --SP
02C7                  01095 next_brick
02C7   35??           01096     lslf temp2
02C8   0D??           01097     rlf temp1
02C9   301A           01098     movlw BLACK
02CA   1803           01099     skpnc
                      01100     pickn 1 ;movlw color
02CB   3F01               M     moviw 1[SP]
02CC   008C           01101     movwf TRISA
                      01102     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02CD   3002               M     movlw q
02CE   0B89               M     decfsz WREG
02CF   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02D0   0000               M     nop
                          M     endif
02D1   0B80           01103     decfsz T
02D2   3???           01104     bra next_brick
                      01105     dropn 2
02D3   3102               M     addfsr T,2
02D4   0008           01106     return
                      01107     
                      01108 ; task 12, draw top brick row
02D5                  01109 draw_row1 ; lcount enter at 74 leave at 82
                      01110     chroma_ref
02D5   003B               M     banksel PWM1CON
02D6   121B               M     bcf PWM1CON,POL
02D7   0021           01111     banksel TRISA
02D8   08??           01112     movfw row1
02D9   00??           01113     movwf temp1
02DA   08??           01114     movfw row1+1
02DB   00??           01115     movwf temp2
                      01116     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
02DC   300D               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DD   0B89               M     decfsz WREG
02DE   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
02DF   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02E0   3008           01117     movlw YELLOW
02E1   2???           01118     call draw_wall
                      01119     black
02E2   301A               M     movlw BLACK
02E3   008C               M     movwf TRISA
                      01120     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02E4   3001               M     movlw q
02E5   0B89               M     decfsz WREG
02E6   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01121     next_task BRICK_HEIGHT
02E7   0A??               M     incf slice
02E8   3008               M     movlw BRICK_HEIGHT
02E9   02??               M     subwf slice,W
02EA   1D03               M     skpz
                          M     leave
02EB   2???               M     goto isr_exit
02EC   01??               M     clrf slice
02ED   0A??               M     incf task
02EE   3008               M     movlw BRICK_HEIGHT
02EF   07??               M     addwf lcount
                          M     leave
02F0   2???               M     goto isr_exit
                      01122     
                      01123 ; task 13, draw 2nd brick row    
02F1                  01124 draw_row2 ;lcount enter at 82 leave at 90
                      01125     chroma_invert
02F1   003B               M     banksel PWM1CON
02F2   161B               M     bsf PWM1CON,POL
02F3   0021           01126     banksel TRISA
02F4   08??           01127     movfw row2
02F5   00??           01128     movwf temp1
02F6   08??           01129     movfw row2+1
02F7   00??           01130     movwf temp2
                      01131     tdelay LEFT_MARGIN-11
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
02F8   300D               M     movlw q
02F9   0B89               M     decfsz WREG
02FA   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
02FB   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02FC   3008           01132     movlw MAUVE
02FD   2???           01133     call draw_wall
                      01134     black
02FE   301A               M     movlw BLACK
02FF   008C               M     movwf TRISA
                      01135     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0300   3001               M     movlw q
0301   0B89               M     decfsz WREG
0302   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01136     next_task BRICK_HEIGHT
0303   0A??               M     incf slice
0304   3008               M     movlw BRICK_HEIGHT
0305   02??               M     subwf slice,W
0306   1D03               M     skpz
                          M     leave
0307   2???               M     goto isr_exit
0308   01??               M     clrf slice
0309   0A??               M     incf task
030A   3008               M     movlw BRICK_HEIGHT
030B   07??               M     addwf lcount
                          M     leave
030C   2???               M     goto isr_exit
                      01137 
                      01138 ; task 14, draw 3rd brick row    
030D                  01139 draw_row3 ; lcount enter at 90 leave at 98
                      01140     chroma_invert
030D   003B               M     banksel PWM1CON
030E   161B               M     bsf PWM1CON,POL
030F   0021           01141     banksel TRISA
0310   08??           01142     movfw row3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0311   00??           01143     movwf temp1
0312   08??           01144     movfw row3+1
0313   00??           01145     movwf temp2
                      01146     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
0314   300D               M     movlw q
0315   0B89               M     decfsz WREG
0316   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0317   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0318   3018           01147     movlw BLUE
0319   2???           01148     call draw_wall
                      01149     black
031A   301A               M     movlw BLACK
031B   008C               M     movwf TRISA
                      01150     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
031C   3001               M     movlw q
031D   0B89               M     decfsz WREG
031E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
031F                  01151 row3_exit    
                      01152     next_task BRICK_HEIGHT
031F   0A??               M     incf slice
0320   3008               M     movlw BRICK_HEIGHT
0321   02??               M     subwf slice,W
0322   1D03               M     skpz
                          M     leave
0323   2???               M     goto isr_exit
0324   01??               M     clrf slice
0325   0A??               M     incf task
0326   3008               M     movlw BRICK_HEIGHT
0327   07??               M     addwf lcount
                          M     leave
0328   2???               M     goto isr_exit
                      01153     
                      01154 ; task 15, draw 4th brick row    
0329                  01155 draw_row4 ; lcount enter at 98 leave at 106
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01156     chroma_ref
0329   003B               M     banksel PWM1CON
032A   121B               M     bcf PWM1CON,POL
032B   0021           01157     banksel TRISA
032C   08??           01158     movfw row4
032D   00??           01159     movwf temp1
032E   08??           01160     movfw row4+1
032F   00??           01161     movwf temp2
                      01162     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
0330   300D               M     movlw q
0331   0B89               M     decfsz WREG
0332   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0333   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0334   3008           01163     movlw YELLOW
0335   2???           01164     call draw_wall
                      01165     black
0336   301A               M     movlw BLACK
0337   008C               M     movwf TRISA
                      01166     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0338   3001               M     movlw q
0339   0B89               M     decfsz WREG
033A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01167     next_task BRICK_HEIGHT
033B   0A??               M     incf slice
033C   3008               M     movlw BRICK_HEIGHT
033D   02??               M     subwf slice,W
033E   1D03               M     skpz
                          M     leave
033F   2???               M     goto isr_exit
0340   01??               M     clrf slice
0341   0A??               M     incf task
0342   3008               M     movlw BRICK_HEIGHT
0343   07??               M     addwf lcount
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0344   2???               M     goto isr_exit
                      01168 
                      01169 ; task 16, draw 5th brick row    
0345                  01170 draw_row5 ; lcount enter at 106 leave at 114
                      01171     chroma_invert
0345   003B               M     banksel PWM1CON
0346   161B               M     bsf PWM1CON,POL
0347   0021           01172     banksel TRISA
0348   08??           01173     movfw row5
0349   00??           01174     movwf temp1
034A   08??           01175     movfw row5+1
034B   00??           01176     movwf temp2
                      01177     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
034C   300D               M     movlw q
034D   0B89               M     decfsz WREG
034E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
034F   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0350   3008           01178     movlw MAUVE
0351   2???           01179     call draw_wall
                      01180     black
0352   301A               M     movlw BLACK
0353   008C               M     movwf TRISA
                      01181     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0354   3001               M     movlw q
0355   0B89               M     decfsz WREG
0356   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01182     black
0357   301A               M     movlw BLACK
0358   008C               M     movwf TRISA
                      01183     next_task BRICK_HEIGHT
0359   0A??               M     incf slice
035A   3008               M     movlw BRICK_HEIGHT
035B   02??               M     subwf slice,W
035C   1D03               M     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
035D   2???               M     goto isr_exit
035E   01??               M     clrf slice
035F   0A??               M     incf task
0360   3008               M     movlw BRICK_HEIGHT
0361   07??               M     addwf lcount
                          M     leave
0362   2???               M     goto isr_exit
                      01184 
  00000028            01185 MSG_FIRST equ 40
  00000028            01186 MSG_HEIGHT equ 40
  00000010            01187 MSG_PIXELS_COUNT equ 16 
                      01188 ; task 17
                      01189 ; draw all rows between paddle and lower brick row    
0363                  01190 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0363   3028           01191     movlw MSG_FIRST
                      01192     pushw
0364   0019               M     movwi --SP
0365   3050           01193     movlw MSG_FIRST+MSG_HEIGHT
                      01194     pushw
0366   0019               M     movwi --SP
0367   08??           01195     movfw slice
0368   2???           01196     call between
0369   1C03           01197     skpc
036A   3???           01198     bra no_msg
036B   1F00           01199     btfss flags, F_OVER
036C   3???           01200     bra no_msg
036D   3008           01201     movlw YELLOW ; message color
                      01202     pushw
036E   0019               M     movwi --SP
036F   3010           01203     movlw MSG_PIXELS_COUNT
                      01204     pushw
0370   0019               M     movwi --SP
0371   1B80           01205     btfsc flags, F_COOL
0372   3???           01206     bra display_end
                      01207 ; perfect score display 'COOL' message
0373   30??           01208     movlw high cool_msg
0374   0087           01209     movwf FSR1H
0375   30??           01210     movlw low cool_msg
0376   0086           01211     movwf FSR1L
0377   2???           01212     call display_msg
0378   3???           01213     bra no_msg
                      01214 ; display 'END!' message    
0379                  01215 display_end
0379   30??           01216     movlw high end_msg
037A   0087           01217     movwf FSR1H
037B   30??           01218     movlw low end_msg
037C   0086           01219     movwf FSR1L
037D   2???           01220     call display_msg
037E                  01221 no_msg    
037E   0A??           01222     incf slice
037F   0A??           01223     incf lcount
0380   30F3           01224     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0381   02??           01225     subwf lcount,W
0382   1D03           01226     skpz
                      01227     leave
0383   2???               M     goto isr_exit
0384   01??           01228     clrf slice
0385   0A??           01229     incf task
                      01230     leave
0386   2???               M     goto isr_exit
                      01231 
                      01232 ; display end message
                      01233 ; message as a maximum of 24 pixels    
0387                  01234 display_msg
                      01235 ;    tdelay 8
0387   0021           01236     banksel TRISA
0388   3028           01237     movlw MSG_FIRST
0389   02??           01238     subwf slice,W
038A   3689           01239     lsrf WREG
038B   3689           01240     lsrf WREG
038C   3689           01241     lsrf WREG
038D   00??           01242     movwf temp1
038E   3589           01243     lslf WREG
038F   07??           01244     addwf temp1,W
0390   0786           01245     addwf FSR1L
0391   1803           01246     skpnc
0392   0A87           01247     incf FSR1H
0393   0016           01248     moviw FSR1++
0394   00??           01249     movwf pixels
0395   0016           01250     moviw FSR1++
0396   00??           01251     movwf pixels+1
0397   0016           01252     moviw FSR1++
0398   00??           01253     movwf pixels+2
0399                  01254 next_pixel
0399   35??           01255     lslf pixels+2
039A   0D??           01256     rlf pixels+1
039B   0D??           01257     rlf pixels
039C   301A           01258     movlw BLACK
039D   1803           01259     skpnc
                      01260     pickn 1 ;movlw color
039E   3F01               M     moviw 1[SP]
039F   008C           01261     movwf TRISA
03A0   0B80           01262     decfsz T
03A1   3???           01263     bra next_pixel
                      01264     dropn 2
03A2   3102               M     addfsr T,2
                      01265     black
03A3   301A               M     movlw BLACK
03A4   008C               M     movwf TRISA
03A5   0008           01266     return
                      01267     
                      01268 ; task 18, draw paddle at bottom screen    
03A6                  01269 draw_paddle
                      01270     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
03A6   3012               M     movlw q
03A7   0B89               M     decfsz WREG
03A8   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
03A9   08??           01271     movfw paddle_pos
03AA   1903           01272     skpnz
03AB   3???           01273     bra $+3
03AC   0B89           01274     decfsz WREG
03AD   3???           01275     bra $-1
03AE   0021           01276     banksel TRISA
03AF   120C           01277     bcf TRISA,VIDEO_OUT
                      01278     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
03B0   300A               M     movlw q
03B1   0B89               M     decfsz WREG
03B2   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
03B3   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
03B4   160C           01279     bsf TRISA,VIDEO_OUT
                      01280     next_task PADDLE_THICKNESS
03B5   0A??               M     incf slice
03B6   3008               M     movlw PADDLE_THICKNESS
03B7   02??               M     subwf slice,W
03B8   1D03               M     skpz
                          M     leave
03B9   2???               M     goto isr_exit
03BA   01??               M     clrf slice
03BB   0A??               M     incf task
03BC   3008               M     movlw PADDLE_THICKNESS
03BD   07??               M     addwf lcount
                          M     leave
03BE   2???               M     goto isr_exit
                      01281 
                      01282 ; task 19,  wait end of this field, reset task to zero    
03BF                  01283 wait_field_end
03BF   0A??           01284     incf lcount
03C0   1903           01285     skpnz
03C1   1400           01286     bsf flags, F_HI_LINE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C2   1800           01287     btfsc flags, F_HI_LINE
03C3   2???           01288     goto hi_line
                      01289     leave
03C4   2???               M     goto isr_exit
03C5                  01290 hi_line
03C5   1880           01291     btfsc flags,F_EVEN
03C6   2???           01292     goto even_field
03C7   3005           01293     movlw 5
03C8   02??           01294     subwf lcount,W
03C9   1D03           01295     skpz
                      01296     leave
03CA   2???               M     goto isr_exit
03CB   2???           01297     goto field_end
03CC                  01298 even_field
03CC   3006           01299     movlw 6
03CD   02??           01300     subwf lcount,W
03CE   1D03           01301     skpz
                      01302     leave
03CF   2???               M     goto isr_exit
                      01303 ; even field last line is half_line    
                      01304 ; set PWM3 for line 263 half-line
03D0   003B           01305     banksel PWM3DC
03D1   3003           01306     movlw high HALF_LINE
03D2   00B6           01307     movwf PWM3PRH
03D3   308D           01308     movlw low HALF_LINE
03D4   00B5           01309     movwf PWM3PRL
03D5   17BF           01310     bsf PWM3LDCON,7
03D6                  01311 field_end
03D6   01??           01312     clrf task
03D7   01??           01313     clrf slice
03D8   01??           01314     clrf lcount
03D9   1000           01315     bcf flags, F_HI_LINE
03DA   1500           01316     bsf flags, F_SYNC
                      01317 ; toggle odd/even field flag    
03DB   3002           01318     movlw 1<<F_EVEN
03DC   06??           01319     xorwf flags
                      01320     leave
03DD   2???               M     goto isr_exit
                      01321 
                      01322 ; helper functions
                      01323 
                      01324     
                      01325 ; increment user score
                      01326 ; This is a BCD addition where a single digit is added to score.   
                      01327 ; score is stored as big indian
                      01328 ; argument: 
                      01329 ;   WREG ->  bdc digit to add to score variable
03DE                  01330 inc_score
03DE   07??           01331     addwf score+1
03DF   1883           01332     btfsc STATUS,DC
03E0   3???           01333     bra $+6
03E1   300F           01334     movlw 15
03E2   05??           01335     andwf score+1,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E3   3C09           01336     sublw 9
03E4   1803           01337     skpnc
03E5   3???           01338     bra $+3
03E6   3006           01339     movlw 6
03E7   07??           01340     addwf score+1
03E8   0E??           01341     swapf score+1,W
03E9   390F           01342     andlw 15
03EA   3C09           01343     sublw 9
03EB   1803           01344     skpnc
03EC   3???           01345     bra game_over_test
03ED   3060           01346     movlw 0x60
03EE   07??           01347     addwf score+1
03EF   0A??           01348     incf score
03F0   3001           01349     movlw 1
03F1   00??           01350     movwf ball_speed
03F2                  01351 game_over_test ; all bricks destroyed?
03F2   3003           01352     movlw 3
03F3   02??           01353     subwf score,W
03F4   1D03           01354     skpz
03F5   0008           01355     return
03F6   3036           01356     movlw 0x36
03F7   02??           01357     subwf score+1,W
03F8   1D03           01358     skpz
03F9   0008           01359     return
03FA   1700           01360     bsf flags,F_OVER ; game over
03FB   1780           01361     bsf flags,F_COOL ; with maximum score.
03FC   0008           01362     return
                      01363     
                      01364 ;***********************************
                      01365 ; digit_offset, compute digit position in 'digits' table
                      01366 ;   position = digit * 5
                      01367 ; 
                      01368 ; input: WREG -> digit value {0..9}
                      01369 ;         
                      01370 ; output: WREG -> displacement in table
                      01371 ;***********************************
03FD                  01372 digit_offset    
                      01373     pushw 
03FD   0019               M     movwi --SP
03FE   3589           01374     lslf WREG
03FF   3589           01375     lslf WREG
0400   0780           01376     addwf T
                      01377     popw
0401   0012               M     moviw SP++
0402   0008           01378     return
                      01379     
0403                  01380 brick_wall_init
0403   30??           01381     movlw high row1
0404   0087           01382     movwf FSR1H
0405   30??           01383     movlw low row1
0406   0086           01384     movwf FSR1L
0407   300C           01385     movlw 12
0408   00??           01386     movwf temp1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0409   30FF           01387     movlw 0xff
040A                  01388 bw_init
040A   001E           01389     movwi FSR1++
040B   0B??           01390     decfsz temp1
040C   3???           01391     bra bw_init
040D   0008           01392     return
                      01393 
                      01394 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
040E                  01395 lfsr16
040E   002?           01396     banksel seed
040F   08??           01397     movfw seed+1
0410   00??           01398     movwf temp1
0411   3589           01399     lslf WREG
0412   3589           01400     lslf WREG
0413   00??           01401     movwf temp2
0414   06??           01402     xorwf temp1
0415   35??           01403     lslf temp2
0416   08??           01404     movfw temp2
0417   06??           01405     xorwf temp1
0418   35??           01406     lslf temp2
0419   35??           01407     lslf temp2,W
041A   06??           01408     xorwf temp1
041B   35??           01409     lslf temp1
041C   0D??           01410     rlf seed
041D   0D??           01411     rlf seed+1
041E   08??           01412     movfw seed
041F   0008           01413     return
                      01414     
                      01415 
0420                  01416 set_ball_dx
0420   2???           01417     call lfsr16 ;random
0421   3007           01418     movlw 7
0422   05??           01419     andwf seed,W
0423   3589           01420     lslf WREG
0424   000B           01421     brw
0425   3000           01422     movlw 0
0426   3???           01423     bra set_ball_dx_exit
0427   3001           01424     movlw 1
0428   3???           01425     bra set_ball_dx_exit
0429   30FF           01426     movlw -1
042A   3???           01427     bra set_ball_dx_exit
042B   3000           01428     movlw 0
042C   3???           01429     bra set_ball_dx_exit
042D   3001           01430     movlw 1
042E   3???           01431     bra set_ball_dx_exit
042F   30FF           01432     movlw -1
0430   3???           01433     bra set_ball_dx_exit
0431   30FF           01434     movlw -1
0432   3???           01435     bra set_ball_dx_exit
0433   3001           01436     movlw 1
0434                  01437 set_ball_dx_exit
0434   00??           01438     movwf ball_dx
0435   0008           01439     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01440     
0436                  01441 game_init
0436   01??           01442     clrf score
0437   01??           01443     clrf score+1
0438   2???           01444     call brick_wall_init
0439   002?           01445     banksel balls
043A   3003           01446     movlw 3
043B   00??           01447     movwf balls
043C   01??           01448     clrf ball_timer
043D   0A??           01449     incf ball_timer
043E   30EB           01450     movlw PADDLE_Y-BRICK_HEIGHT
043F   00??           01451     movwf ball_y
0440   2???           01452     call set_ball_dx
0441   30FC           01453     movlw -4
0442   00??           01454     movwf ball_dy
0443   3002           01455     movlw 2
0444   00??           01456     movwf ball_speed
0445   1600           01457     bsf flags, F_START
0446   1280           01458     bcf flags, F_PAUSE
0447   1300           01459     bcf flags, F_OVER
0448   0008           01460     return
                      01461     
                      01462 ; delay by TIMER0
                      01463 ; parameter
                      01464 ;   WREG -> 2*Tcy+7cy    
0449                  01465 t0delay 
0449   0989           01466     comf WREG
044A   0095           01467     movwf TMR0
044B   110B           01468     bcf INTCON,T0IF
044C   1D0B           01469     btfss INTCON,T0IF
044D   3???           01470     bra $-1
044E   0008           01471     return
                      01472     
                      01473 MAIN_PROG CODE                      ; let linker place main program
                      01474 
0000                  01475 initialize
                      01476 ; clear common RAM
0000   0185           01477     clrf FSR0H
0001   3070           01478     movlw 0x70
0002   0084           01479     movwf FSR0L
0003   0103           01480     clrw
0004   001A           01481     movwi FSR0++
0005   1F84           01482     btfss FSR0L,7
0006   3???           01483     bra $-2
                      01484 ; clear banked RAM
0007   0184           01485     clrf FSR0L
0008   3020           01486     movlw 0x20
0009   0085           01487     movwf FSR0H
000A   0103           01488     clrw 
000B   001A           01489     movwi FSR0++
000C   1C05           01490     btfss FSR0H,0
000D   3???           01491     bra $-2
                      01492 ; initialize LFSR seed
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E   002?           01493     banksel seed
000F   09??           01494     comf seed
0010   09??           01495     comf seed+1
0011   09??           01496     comf seed+2
0012   09??           01497     comf seed+3
                      01498 ;   setup arguments stack pointer
0013   30??           01499     movlw high (stack+STACK_SIZE)
0014   0085           01500     movwf FSR0H
0015   30??           01501     movlw low (stack+STACK_SIZE)
0016   0084           01502     movwf FSR0L
                      01503 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01504 ; TIMER0 prescale 1:2
0017   3050           01505     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01506     movwf OPTION_REG
                      01507 ; disable analog inputs, except AN0
0019   0023           01508     banksel ANSELA
001A   018C           01509     clrf ANSELA
                      01510 ; paddle potentiometer input     
001B   140C           01511     bsf ANSELA,PADDLE
001C   0021           01512     banksel ADCON1
001D   3020           01513     movlw (2<<ADCS0)
001E   009E           01514     movwf ADCON1
                      01515 ; pin setup
001F   0024           01516     banksel WPUA
0020   018C           01517     clrf WPUA
0021   0021           01518     banksel TRISA
0022   110C           01519     bcf TRISA,SYNC_OUT
0023   100C           01520     bcf TRISA,AUDIO
0024   0022           01521     banksel LATA
0025   160C           01522     bsf LATA, VIDEO_OUT
                      01523 ; PWM1 chroma signal on RA1
0026   003B           01524     banksel PWM1CON
0027   019F           01525     clrf PWM1LDCON
0028   0191           01526     clrf PWM1PHL
0029   0192           01527     clrf PWM1PHH
002A   0197           01528     clrf PWM1OFL
002B   0198           01529     clrf PWM1OFH
002C   0196           01530     clrf PWM1PRH
002D   3007           01531     movlw 7
002E   0095           01532     movwf PWM1PRL
002F   3004           01533     movlw 4
0030   0093           01534     movwf PWM1DCL
0031   0194           01535     clrf PWM1DCH
0032   179F           01536     bsf PWM1LDCON,7
0033   30C0           01537     movlw (1<<EN)|(1<<OE)
0034   009B           01538     movwf PWM1CON
                      01539 ; PWM2 sound
0035   003B           01540     banksel PWM2CON
0036   01A1           01541     clrf PWM2PHL
0037   01A2           01542     clrf PWM2PHH
0038   01A7           01543     clrf PWM2OFL
0039   01A8           01544     clrf PWM2OFH
003A   3030           01545     movlw 3<<PWM2PS0 ; clock source FOSC/8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003B   00AE           01546     movwf PWM2CLKCON
003C   300D           01547     movlw high 3578;7
003D   00A6           01548     movwf PWM2PRH
003E   30FA           01549     movlw low 3578;7
003F   00A5           01550     movwf PWM2PRL
0040   3626           01551     lsrf PWM2PRH,W
0041   00A4           01552     movwf PWM2DCH
0042   0C25           01553     rrf PWM2PRL,W
0043   00A3           01554     movwf PWM2DCL
0044   17AF           01555     bsf PWM2LDCON,LDA
                      01556 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01557     banksel PWM3CON
0046   01BF           01558     clrf PWM3LDCON
0047   01B1           01559     clrf PWM3PHL
0048   01B2           01560     clrf PWM3PHH
0049   01B7           01561     clrf PWM3OFL
004A   01B8           01562     clrf PWM3OFH
004B   301B           01563     movlw low HPERIOD
004C   00B5           01564     movwf PWM3PRL
004D   3007           01565     movlw high HPERIOD
004E   00B6           01566     movwf PWM3PRH
004F   3086           01567     movlw HSYNC
0050   00B3           01568     movwf PWM3DCL
0051   01B4           01569     clrf PWM3DCH
0052   30D0           01570     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01571     movwf PWM3CON
0054   17BF           01572     bsf PWM3LDCON,7
0055   143C           01573     bsf PWM3INTE,PRIE
                      01574 ; enbable interrupt    
0056   0020           01575     banksel PIR3
0057   1313           01576     bcf PIR3,PWM3IF
0058   0021           01577     banksel PIE3
0059   1713           01578     bsf PIE3,PWM3IE
005A   170B           01579     bsf INTCON,PEIE
005B   178B           01580     bsf INTCON,GIE
005C   01??           01581     clrf flags
005D   1500           01582     bsf flags, F_SYNC
                      01583 ; test code
005E   3028           01584     movlw 40
005F   00??           01585     movwf slice
0060                  01586 test_loop
0060   3008           01587     movlw YELLOW ; message color
                      01588     pushw
0061   0019               M     movwi --SP
0062   3010           01589     movlw MSG_PIXELS_COUNT
                      01590     pushw
0063   0019               M     movwi --SP
0064   30??           01591     movlw high end_msg
0065   0087           01592     movwf FSR1H
0066   30??           01593     movlw low end_msg
0067   0086           01594     movwf FSR1L
0068   2???           01595     call display_msg
0069   0A??           01596     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   2???           01597     goto test_loop
                      01598     
                      01599 ; all processing done in ISR    
006B   2???           01600     goto $
                      01601 
                      01602 ; digits character table
006C                  01603 digits
006C   000B           01604     brw
006D   3440 34A0 34A0 01605     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0072   3440 34C0 3440 01606     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0077   34E0 3420 34C0 01607     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
007C   34E0 3420 34C0 01608     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0081   34A0 34A0 34E0 01609     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0086   34E0 3480 34E0 01610     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
008B   34C0 3480 34E0 01611     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0090   34E0 3420 3420 01612     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0095   34E0 34A0 34E0 01613     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
009A   34E0 34A0 34E0 01614     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
009F   0001           01615     reset
                      01616     
00A0                  01617 frequency
00A0   000B           01618     brw
00A1   348B 34D3      01619     dt high 35795, low 35795 ; 100 hertz
00A3   340D 34FB      01620     dt high 3579, low 3579 ; 1000 hertz
00A5   0001           01621     reset
                      01622   
                      01623 ;display END! when game is over    
00A6                  01624 end_msg
                      01625 ;    brw
00A6   00E8 00C8 0000 01626     data 0xe8,0xc8,0
00A9   008E 00A8 0000 01627     data 0x8e,0xa8,0
00AC   00EA 00A8 0000 01628     data 0xea,0xa8,0
00AF   008A 00A0 0000 01629     data 0x8a,0xa0,0
00B2   00EA 00C8 0000 01630     data 0xea,0xc8,0
                      01631   
00B5                  01632 cool_msg
                      01633 ;    brw
00B5   00EE 00E8 0000 01634     data 0xee,0xe8,0
00B8   008A 00A8 0000 01635     data 0x8a,0xa8,0
00BB   008A 00A8 0000 01636     data 0x8a,0xa8,0
00BE   008A 00A8 0000 01637     data 0x8a,0xa8,0
00C1   00EE 00EE 0000 01638     data 0xee,0xee,0
                      01639     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01640 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01641 max_score 
                      01642  
3FA7 1EFF             01643     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COOL                            00000007
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_0010                         00000010
_ISR_00E1                         000000E1
_ISR_00E6                         000000E6
_ISR_00ED                         000000ED
_ISR_0125                         00000125
_ISR_012C                         0000012C
_ISR_012F                         0000012F
_ISR_0138                         00000138
_ISR_016F                         0000016F
_ISR_01F0                         000001F0
_ISR_01F4                         000001F4
_ISR_01F5                         000001F5
_ISR_01F9                         000001F9
_ISR_021B                         0000021B
_ISR_0224                         00000224
_ISR_0225                         00000225
_ISR_022A                         0000022A
_ISR_0245                         00000245
_ISR_0248                         00000248
_ISR_024E                         0000024E
_ISR_0255                         00000255
_ISR_0256                         00000256
_ISR_025C                         0000025C
_ISR_026E                         0000026E
_ISR_0272                         00000272
_ISR_0276                         00000276
_ISR_027A                         0000027A
_ISR_0280                         00000280
_ISR_0284                         00000284
_ISR_028A                         0000028A
_ISR_028F                         0000028F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_0293                         00000293
_ISR_0294                         00000294
_ISR_0299                         00000299
_ISR_029F                         0000029F
_ISR_02A4                         000002A4
_ISR_02A9                         000002A9
_ISR_02AD                         000002AD
_ISR_02CF                         000002CF
_ISR_02DE                         000002DE
_ISR_02DF                         000002DF
_ISR_02E6                         000002E6
_ISR_02FA                         000002FA
_ISR_02FB                         000002FB
_ISR_0302                         00000302
_ISR_0316                         00000316
_ISR_0317                         00000317
_ISR_031E                         0000031E
_ISR_0332                         00000332
_ISR_0333                         00000333
_ISR_033A                         0000033A
_ISR_034E                         0000034E
_ISR_034F                         0000034F
_ISR_0356                         00000356
_ISR_03A8                         000003A8
_ISR_03AB                         000003AB
_ISR_03AD                         000003AD
_ISR_03B2                         000003B2
_ISR_03B3                         000003B3
_ISR_03E0                         000003E0
_ISR_03E5                         000003E5
_ISR_044D                         0000044D
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_006B                   0000006B
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_OFF                          00003FFF
__12F1572                         00000001
__DEBUG                           
__MPLAB_DEBUGGER_SIMULATOR        1
ball_at_left                      00000288
ball_at_right                     0000029D
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    00000267
ball_lost                         00000136
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B1
between                           000001BF
between_exit                      000001C9
black                             
blue                              
bottom_bound                      0000010F
brick_bounce                      000001B6
brick_wall_init                   00000403
bw_init                           0000040A
check_paddle_bounce               0000014B
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000118
collision_exit                    000001BC
cool_msg                          000000B5
dark_green                        
digit_offset                      000003FD
digit_row                         00000209
digits                            0000006C
display_end                       00000379
display_msg                       00000387
draw_border                       
draw_empty                        00000363
draw_paddle                       000003A6
draw_row1                         000002D5
draw_row2                         000002F1
draw_row3                         0000030D
draw_row4                         00000329
draw_row5                         00000345
draw_score                        000001D3
draw_top_wall                     0000021F
draw_void                         00000237
draw_void_exit                    000002B0
draw_wall                         000002C4
dropn                             
eeprom                            00000780
end_msg                           000000A6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

even_field                        000003CC
fallout_test                      00000132
field_end                         000003D6
flags                             00000000
frequency                         000000A0
game_init                         00000436
game_over                         000000C6
game_over_test                    000003F2
game_running                      000000BE
going_down                        00000170
gray                              white
hi_line                           000003C5
inc_score                         000003DE
initialize                        00000000
isr                               00000004
isr_exit                          0000002C
lcount                            00000001
leave                             
lfsr16                            0000040E
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000F3
move_ball_exit                    00000115
move_y                            00000106
next_brick                        000002C7
next_pixel                        00000399
next_task                         
no_ball                           00000246
no_ball_dly                       00000243
no_msg                            0000037E
no_wall_draw                      000002BA
old_dx                            0000000F
paddle_bounce                     00000155
paddle_pos                        00000006
paddle_test                       00000147
pickn                             
pixels                            000000AD
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000031
pushw                             
q                                 0000000A
r                                 00000002
read_button                       000000D5
read_paddle                       000000D9
right_bound                       000000FF
row1                              000000A0
row1_test                         00000186
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  16:26:10         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

row2                              000000A2
row2_test                         0000018F
row3                              000000A4
row3_exit                         0000031F
row3_test                         00000199
row4                              000000A6
row4_test                         000001A3
row5                              000000A8
row5_test                         000001AD
row6                              000000AA
score                             0000000C
score_exit                        000001FF
seed                              00000030
set_ball_dx                       00000420
set_ball_dx_exit                  00000434
set_presync                       0000003E
set_vsync                         00000056
skip_2_tasks                      000000CE
slice                             00000002
sound                             00000079
sound_fx1                         00000087
sound_fx2                         00000092
sound_init                        0000009D
sound_timer                       000000B2
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000449
task                              00000003
task_switch                       00000015
tdelay                            
temp1                             00000004
temp2                             00000005
test_loop                         00000060
top_wall_exit                     0000022D
user_input                        000000B2
video_first                       000001CB
vsync                             00000049
vsync_end                         0000006B
wait_field_end                    000003BF
wait_trigger                      000000C0
wall_test                         00000166
white                             
yellow                            
yes_ball                          00000260

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   328 suppressed

