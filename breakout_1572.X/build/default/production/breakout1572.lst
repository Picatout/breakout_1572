MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright Jacques Deschênes 2019 
                      00002 ; This file is part of breakout_1572.
                      00003 ;
                      00004 ;     breakout_1572 is free software: you can redistribute it and/or modify
                      00005 ;     it under the terms of the GNU General Public License as published by
                      00006 ;     the Free Software Foundation, either version 3 of the License, or
                      00007 ;     (at your option) any later version.
                      00008 ;
                      00009 ;     breakout_1572 is distributed in the hope that it will be useful,
                      00010 ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00011 ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00012 ;     GNU General Public License for more details.
                      00013 ;
                      00014 ;     You should have received a copy of the GNU General Public License
                      00015 ;     along with breakout_1572.  If not, see <http://www.gnu.org/licenses/>.
                      00016 
                      00017 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00018 ;                BREAKOUT game
                      00019 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00020 ;             IMPLEMENTATION NOTES
                      00021 ;  PWM3 is used to generate NTSC synchronization signal.
                      00022 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00023 ;  Inside this interrupt there is a round robin task scheduler.
                      00024 ;  All video display and game logic is done inside these tasks.
                      00025 ;  After MCU initialization the main() procedure is an empty loop.
                      00026 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00027 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00028 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00029 ;  short of 140 nanoseconds.
                      00030 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00031 ;  must execute in less than 454 Tcy.    
                      00032 ;  The overhead before entering a task in at most 58Tcy.
                      00033 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00034 ;  To play safe any task should execute in less than 379Tcy.
                      00035 ;  VISIBLE video lines:
                      00036 ;   For the visibles video lines tasks some delay is introduce
                      00037 ;   before any display attempt to ensure the game left side is
                      00038 ;   inside visible part of the scan line.
                      00039 ;   Each visible line must be terminate by returning video_output to black
                      00040 ;   otherwise the sync signal will be mangled. 
                      00041 ;    
                      00042 ;  SCHEDULER
                      00043 ;  scan lines  | slices  |   usage
                      00044 ;  =================================
                      00045 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00046 ;    4-6       |  6      | task 1, vertical sync
                      00047 ;    7-9       |  6      | task 2, vertical post-equalization
                      00048 ;    10        |  1      | task 3, synchronization end
                      00049 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00050 ;    12        |  1      | task 5, sound timer
                      00051 ;    13        |  1      | task 6, user input
                      00052 ;    14        |  1      | task 7, move ball
                      00053 ;    15        |  1      | task 8, collision control
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00055 ;    30-49     |  20     | task 10, display score and balls count
                      00056 ;    50-57     |  8      | task 11, draw top border
                      00057 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00058 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00059 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00060 ;    242-249   |  8      | task 15, draw paddle
                      00061 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00062 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00063  
                      00064     
                      00065     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00066     
8007   3FA7           00067     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00068     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00069     
                      00070     radix dec
                      00071 
                      00072 ; constants
  00000800            00073 PROG_SIZE equ 2048  ; program words
  00000080            00074 EEPROM_SIZE equ 128 ; high endurance flash words
                      00075  
  01B4F360            00076 Fosc equ 28636000 ; external oscillator frequency
                      00077  
                      00078 ; NTSC signal 
  00003D76            00079 Fhorz equ 15734 ; horizontal frequency
  0000071B            00080 HPERIOD equ ((Fosc/Fhorz)-1)  ; PWM3PR count for horizontal period (63,55µS)
  00000086            00081 HSYNC  equ 134  ;  (4,7µS) PWM3DC count for horz. sync pulse
  00000041            00082 HEQUAL equ 65 ; PWM3DC count for 2,3µS equalization pulse
  00000308            00083 VSYNC_PULSE equ 776 ; PWM3PR count for 27,1µS vertical sync. pulse
  0000038D            00084 HALF_LINE equ ((Fosc/Fhorz/2)-1) ; PWM3PR count for vsync lines,  half HPERIOD
                      00085 ; boolean flags 
  00000000            00086 F_BIT8 equ 0    ; bit 8 of scan line counter
  00000001            00087 F_EVEN equ 1    ; even field
  00000002            00088 F_SYNC equ 2    ; set during vertical synchronization phase
  00000003            00089 F_SOUND equ 3   ; sound enabled 
  00000004            00090 F_START equ 4   ; game started 
  00000005            00091 F_PAUSE equ 5   ; game paused after a ball lost
  00000006            00092 F_OVER equ 6    ; game over
  00000007            00093 F_COOL equ 7    ; player got maximum score
                      00094  
                      00095 ;pins assignment
  00000000            00096 AUDIO EQU RA0  ; PWM2 output for audio tones
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00097 PADDLE equ RA0 ;  analog input for potentiometer controlling paddle position
  00000001            00098 CHROMA equ RA1  ;   chroma signal output
  00000002            00099 SYNC_OUT equ RA2  ; NTSC signal synchronization
  00000003            00100 START_BTN equ RA3 ; start button input
  00000004            00101 VIDEO_OUT equ RA4 ; video luminance output
  00000005            00102 CLKIN equ RA5     ; external oscillateur input.
                      00103  
                      00104     ; constants used in video display
                      00105 ; values are in pixels for x dimension.
                      00106 ; values are in number of scan lines for y dimension.
                      00107 ; Tcy are delay counted in MCU cycles.    
  0000001E            00108 FIRST_VIDEO_LINE equ 30 ; first scan line displayed
  0000004A            00109 FIRST_BRICK_Y equ 74 ; top of first brick row scan line
  000000F9            00110 LAST_VIDEO_LINE  equ 249 ; last scan line displayed
  00000045            00111 LEFT_MARGIN equ 69  ; Tcy delay before any display
  00000030            00112 PLAY_WIDTH equ 48 ; pixels
  00000005            00113 PIXEL_WIDTH equ 5; pixel width in Tcy 
  00000008            00114 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00115 BRICK_WIDTH equ 4  ; pixels
  00000004            00116 BORDER_WIDTH equ 4  ; Tcy
  00000002            00117 BALL_WIDTH equ 2 ; pixels
  000000C0            00118 BALL_MASK equ 0xC0 ;  applied to vbuffer to display ball
  00000008            00119 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00120 BALL_LEFT_BOUND equ 0 ; pixels
  0000002E            00121 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00122 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00123 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE ;scan line
  00000008            00124 PADDLE_WIDTH equ 8 ; pixels
  00000004            00125 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00126 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00127 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; scan line 
  000000FF            00128 PADDLE_MASK equ 0xFF ; applied to vbuffer to display paddle
  00000006            00129 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00130 ROW1_Y equ 74 ; row first scan line
  00000052            00131 ROW2_Y equ 82
  0000005A            00132 ROW3_Y equ 90
  00000062            00133 ROW4_Y equ 98
  0000006A            00134 ROW5_Y equ 106
  00000072            00135 ROW6_Y equ 114 
                      00136 
                      00137 ;;;;;;;;;;;;;;;;;;;;;;
                      00138 ;; assembler macros ;;
                      00139 ;;;;;;;;;;;;;;;;;;;;;;
                      00140 
                      00141 ; leave task by exiting interrupt service routine. 
                      00142 leave macro
                      00143     goto isr_exit
                      00144     endm
                      00145     
                      00146 ; move to next task on slice limit
                      00147 ; parameters:
                      00148 ;   s  nomber of slices used by the task    
                      00149 next_task macro s    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     incf slice
                      00151     movlw s
                      00152     subwf slice,W
                      00153     skpz
                      00154     leave
                      00155     clrf slice
                      00156     incf task
                      00157     leave
                      00158     endm
                      00159     
                      00160     
                      00161 ; delay in machine cycle Tcy
                      00162 ; parameters:
                      00163 ;   mc   number of machine cycles (Tcy)   
                      00164 tdelay macro mc 
                      00165     if mc==0
                      00166     exitm
                      00167     endif
                      00168     if mc==1
                      00169     nop
                      00170     exitm
                      00171     endif
                      00172     if mc==2
                      00173     bra $+1
                      00174     exitm
                      00175     endif
                      00176     if mc==3
                      00177     nop
                      00178     bra $+1
                      00179     exitm
                      00180     endif
                      00181     if mc==4
                      00182     call _4tcy
                      00183     exitm
                      00184     endif
                      00185     if mc==5
                      00186     call _5tcy
                      00187     exitm
                      00188     endif
                      00189     if mc>5
                      00190     variable q=(mc-3)/3 
                      00191     variable r=mc-3-3*q
                      00192     movlw q
                      00193     call _3ntcy ; Tcy=3+3*q
                      00194     if (r==2)
                      00195     bra $+1
                      00196     exitm
                      00197     endif 
                      00198     if (r==1)
                      00199     nop
                      00200     exitm
                      00201     endif
                      00202     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204 
                      00205 ; output chroma reference    
                      00206 chroma_ref macro
                      00207     banksel PWM1CON
                      00208     bcf PWM1CON,POL
                      00209     endm
                      00210     
                      00211 ; set chroma phase to 180 degree from chroma_ref
                      00212 chroma_invert macro
                      00213     banksel PWM1CON
                      00214     bsf PWM1CON,POL
                      00215     endm
                      00216 
                      00217 ;;;;;;;;;;;;;;;;;;;;;;
                      00218 ;   colors macros
                      00219 ;   TRISA configuration    
                      00220 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00221 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00222 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00223 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00224 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00225 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00226 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00227 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00228 
                      00229 ; for the colors macros TRISA bank must be pre-selected 
                      00230 ;set video output to black    
                      00231 black macro
                      00232     movlw BLACK
                      00233     movwf TRISA
                      00234     endm
                      00235     
                      00236 ; set video output to white    
                      00237 white macro    
                      00238     movlw WHITE
                      00239     movwf TRISA
                      00240     endm
                      00241 
                      00242 ; set video output to mauve    
                      00243 mauve macro
                      00244     movlw MAUVE
                      00245     movwf TRISA
                      00246     endm
                      00247 
                      00248 ; set video output to yellow   
                      00249 yellow macro
                      00250     movlw YELLOW
                      00251     movwf TRISA
                      00252     endm
                      00253     
                      00254 ; set video output to blue
                      00255 blue macro
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     movlw BLUE
                      00257     movwf TRISA
                      00258     endm
                      00259     
                      00260 ; set video output to dark green    
                      00261 dark_green macro
                      00262     movlw DARK_GREEN
                      00263     movwf TRISA
                      00264     endm
                      00265 
                      00266 ; shift out 1 bit    
                      00267 display_bit macro n
                      00268     lslf vbuffer+n
                      00269     movlw BLACK
                      00270     skpnc
                      00271     movfw fg_color
                      00272     movwf TRISA
                      00273     endm
                      00274     
                      00275 ; display a byte of pixels from vbuffer
                      00276 ; this macro expansion result in 8*5 -> 40 instructions    
                      00277 ; input:
                      00278 ;   n is byte number {0..5}    
                      00279 display_byte macro n
                      00280     display_bit n
                      00281     display_bit n
                      00282     display_bit n
                      00283     display_bit n
                      00284     display_bit n
                      00285     display_bit n
                      00286     display_bit n
                      00287     display_bit n
                      00288     endm
                      00289     
                      00290    
                      00291 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00292 ;  stack manipulation macros
                      00293 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000008            00294 STACK_SIZE equ 8 ; size of argument stack
                      00295 #define T INDF0 ; indirect access to top of argument stack
                      00296 #define SP FSR0 ; use FSR0 as stack pointer 
                      00297 ; push WREG on T
                      00298 pushw  macro
                      00299     movwi --SP
                      00300     endm
                      00301   
                      00302 ; pop WREG from T
                      00303 popw macro
                      00304     moviw SP++
                      00305     endm
                      00306 
                      00307 ; drop n elements from stack
                      00308 dropn macro n
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     addfsr T,n
                      00310     endm
                      00311 
                      00312 ; copy nth element of stack to WREG
                      00313 ;  n {0..31}, 0 is T   
                      00314 pickn macro n
                      00315     moviw n[SP]
                      00316     endm
                      00317    
                      00318     
                      00319     
                      00320 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00321 ;;    variables
                      00322 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00323  
                      00324     
                      00325     udata 0x20 ; bank 0 
0020                  00326 stack res STACK_SIZE ; arguments stack
0028                  00327 seed res 2 ; pseudo random number generator used by lfsr16
                      00328  
                      00329 ; video display manipulate TRISA register
                      00330 ; to avoid banksel during video update
                      00331 ; place variables related to video in same bank as TRISA 
                      00332 v_array   udata 0xA0 ; bank 1
00A0                  00333 vbuffer res 6
00A6                  00334 temp3 res 1 ; to simplify mask application on last byte of vbuffer 
00A7                  00335 row1 res 6; brick wall row1
00AD                  00336 fill1 res 2 ; to simplify computation, faster to multiply and divide by 8 rather than 6.
00AF                  00337 row2 res 6
00B5                  00338 fill2 res 2 
00B7                  00339 row3 res 6
00BD                  00340 fill3 res 2 
00BF                  00341 row4 res 6
00C5                  00342 fill4 res 2 
00C7                  00343 row5 res 6
00CD                  00344 fill5 res 2
00CF                  00345 row6 res 6
00D5                  00346 fill6 res 2 
00D7                  00347 fg_color res 1
00D8                  00348 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00349 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00350 ball_byte res 1 ; ball byte offset in vbuffer
00DC                  00351 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00352 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00353 balls res 1 ; number of recking balls available
                      00354  
                      00355 ; common 16 bytes RAM accessible whatever the selected bank 
                      00356     udata_shr 
0000                  00357 flags  res 1 ; boolean variables
0001                  00358 lcount res 1 ; video field line counter
0002                  00359 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00360 task res 1 ; where in video phase 
0004                  00361 temp1 res 1 ; temporary storage
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005                  00362 temp2 res 1 ; 
0006                  00363 paddle_pos res 1 
0007                  00364 ball_x res 1
0008                  00365 ball_y res 1
0009                  00366 ball_dx res 1
000A                  00367 ball_dy res 1
000B                  00368 ball_speed res 1
000C                  00369 score res 2 ; score stored in Binary Coded Decimal
000E                  00370 ball_timer res 1 
                      00371  
                      00372 ;; cpu reset entry point
                      00373 RES_VECT  CODE    0x0000            
0000   2???           00374     goto    initialize  ; go to beginning of program
                      00375     
                      00376 ; delay = 3+3*n  (including the call)    
                      00377 ; SEE tdelay macro
                      00378 ;input:
                      00379 ;   WREG <- n {1..255}
0001                  00380 _3ntcy
0001   0B89           00381     decfsz WREG
0002   3???           00382     bra $-1
0003                  00383 _4tcy
0003   0008           00384     return  
                      00385 
                      00386 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00387 ; interrupt service routine triggered by PWM3 period rollover
                      00388 ; after initialization all processing in done inside 
                      00389 ; this interrupt.
                      00390 ; It is designed as a round robin scheduler.    
                      00391 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00392 ISR CODE 0x0004
0004                  00393 isr
0004   0A??           00394     incf lcount
0005   1903           00395     skpnz
0006   1400           00396     bsf flags, F_BIT8
0007   1900           00397     btfsc flags, F_SYNC
0008   2???           00398     goto task_switch
                      00399 ; clear video buffer before each line display
0009   002?           00400     banksel vbuffer
000A   01??           00401     clrf vbuffer
000B   01??           00402     clrf vbuffer+1
000C   01??           00403     clrf vbuffer+2
000D   01??           00404     clrf vbuffer+3
000E   01??           00405     clrf vbuffer+4
000F   01??           00406     clrf vbuffer+5
                      00407 ; generate chroma synchronization
                      00408     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18>5
  0005                    M     variable q=(18-3)/3 
  0000                    M     variable r=18-3-3*q
0010   3005               M     movlw q
0011   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      00409     chroma_ref
0012   003B               M     banksel PWM1CON
0013   121B               M     bcf PWM1CON,POL
0014   0021           00410     banksel TRISA
0015   108C           00411     bcf TRISA,CHROMA
                      00412     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3 
  0001                    M     variable r=16-3-3*q
0016   3004               M     movlw q
0017   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0018   0000               M     nop
                          M     exitm
0019   148C           00413     bsf TRISA,CHROMA
001A                  00414 task_switch ; round robin task scheduler   
001A   08??           00415     movfw task
001B   000B           00416     brw
001C   2???           00417     goto pre_vsync ;task 0, vertical pre-equalization pulses
001D   2???           00418     goto vsync ;task 1, vertical sync pulses
001E   2???           00419     goto post_vsync ;task 2, vertical post-equalization pulses
001F   2???           00420     goto vsync_end ;task 3, return to normal video line
0020   2???           00421     goto read_paddle; task 4, read paddle potentiometer
0021   2???           00422     goto sound ;task 5, check sound timer expiration
0022   2???           00423     goto read_button ;task 6,  read button
0023   2???           00424     goto move_ball ;task 7, move recking ball.
0024   2???           00425     goto collision ; task 8, check for collision with bricks.
0025   2???           00426     goto video_first ; task 9, wait FIRST_VIDEO line.
0026   2???           00427     goto draw_score ;task 10,  draw score en ball count
0027   2???           00428     goto draw_top_wall ;task 11,  draw top wall
0028   2???           00429     goto draw_sides ;task 12, draw play space with sides walls
0029   2???           00430     goto draw_bricks  ;task 13, draw bricks rows
002A   2???           00431     goto draw_empty;task 14, draw empty space with sides walls down to bottom
002B   2???           00432     goto draw_paddle ;task 15, draw paddle
002C   2???           00433     goto wait_field_end ;task 16, idle to end of video field
002D   0001           00434     reset ; error trap, task out of range
002E                  00435 isr_exit
002E   0021           00436     banksel TRISA
002F   1980           00437     btfsc flags, F_SOUND
0030   100C           00438     bcf TRISA,AUDIO
0031   003B           00439     banksel PWM3INTF
0032   103D           00440     bcf PWM3INTF,PRIF
0033   0009           00441     retfie
                      00442 
                      00443 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00444 ;;  all tasks routine are here            ;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00445 ;;  each must be terminate by leave macro ;;    
                      00446 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00447     
                      00448 ; task 0, vertical synchronization pre equalization
                      00449 ; 6 half horizontal scan lines    
0034                  00450 pre_vsync
0034   08??           00451     movfw slice
0035   1903           00452     skpnz
0036   2???           00453     goto set_presync
                      00454     next_task 6
0037   0A??               M     incf slice
0038   3006               M     movlw 6
0039   02??               M     subwf slice,W
003A   1D03               M     skpz
                          M     leave
003B   2???               M     goto isr_exit
003C   01??               M     clrf slice
003D   0A??               M     incf task
                          M     leave
003E   2???               M     goto isr_exit
003F                  00455 set_presync    
003F   003B           00456     banksel PWM3DC
0040   3041           00457     movlw HEQUAL
0041   00B3           00458     movwf PWM3DCL
0042   01B4           00459     clrf PWM3DCH
0043   3003           00460     movlw high HALF_LINE
0044   00B6           00461     movwf PWM3PRH
0045   308D           00462     movlw low HALF_LINE
0046   00B5           00463     movwf PWM3PRL
0047   17BF           00464     bsf PWM3LDCON,7
0048   0A??           00465     incf slice
                      00466     leave
0049   2???               M     goto isr_exit
                      00467     
                      00468 ; task 1, vertical synchronization pulses
                      00469 ; 6 half horizontal scan lines    
004A                  00470 vsync 
004A   08??           00471     movfw slice
004B   1903           00472     skpnz
004C   2???           00473     goto set_vsync
                      00474     next_task 6
004D   0A??               M     incf slice
004E   3006               M     movlw 6
004F   02??               M     subwf slice,W
0050   1D03               M     skpz
                          M     leave
0051   2???               M     goto isr_exit
0052   01??               M     clrf slice
0053   0A??               M     incf task
                          M     leave
0054   2???               M     goto isr_exit
0055                  00475 set_vsync
0055   003B           00476     banksel PWM3DC
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   3008           00477     movlw low VSYNC_PULSE
0057   00B3           00478     movwf PWM3DCL
0058   3003           00479     movlw high VSYNC_PULSE
0059   00B4           00480     movwf PWM3DCH
005A   17BF           00481     bsf PWM3LDCON,7
005B   0A??           00482     incf slice
                      00483     leave
005C   2???               M     goto isr_exit
                      00484     
                      00485 ; task 2, vertical synchronisation post equalization pulses
                      00486 ; 6 half horizontal scan lines    
005D                  00487 post_vsync
005D   08??           00488     movfw slice
005E   1903           00489     skpnz
005F   2???           00490     goto set_presync
0060   3006           00491     movlw 6
0061   02??           00492     subwf slice,W
0062   1903           00493     skpnz
0063   2???           00494     goto post_last
0064   0A??           00495     incf slice
                      00496     leave
0065   2???               M     goto isr_exit
0066                  00497 post_last    
0066   0A??           00498     incf task
0067   01??           00499     clrf slice
0068   1C80           00500     btfss flags, F_EVEN
                      00501     leave
0069   2???               M     goto isr_exit
                      00502     
                      00503 ; task 3, vertical synchronization completed, return to normal line
                      00504 ; rest horizonal line to its normal length.
                      00505 ; set lcount to 9.    
006A                  00506 vsync_end
006A   1100           00507     bcf flags, F_SYNC
006B   003B           00508     banksel PWM3DC
006C   3086           00509     movlw HSYNC
006D   00B3           00510     movwf PWM3DCL
006E   01B4           00511     clrf PWM3DCH
006F   3007           00512     movlw high HPERIOD
0070   00B6           00513     movwf PWM3PRH
0071   301B           00514     movlw low HPERIOD
0072   00B5           00515     movwf PWM3PRL
0073   17BF           00516     bsf PWM3LDCON,7
0074   0A??           00517     incf task
                      00518  ; divide lcount by 2 go get correct scan line count    
0075   36??           00519     lsrf lcount
                      00520     leave
0076   2???               M     goto isr_exit
                      00521 
                      00522 ; task 4, read paddle potentiometer
0077                  00523 read_paddle
0077   0A??           00524     incf task
0078   1980           00525     btfsc flags, F_SOUND
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00526     leave
0079   2???               M     goto isr_exit
007A   0021           00527     banksel TRISA
007B   140C           00528     bsf TRISA, PADDLE
007C   0021           00529     banksel ADCON0
007D   3003           00530     movlw 3
007E   009D           00531     movwf ADCON0
007F   189D           00532     btfsc ADCON0,NOT_DONE
0080   3???           00533     bra $-1
0081   361C           00534     lsrf ADRESH,W
0082   00??           00535     movwf paddle_pos
0083   3028           00536     movlw PADDLE_LIMIT
0084   02??           00537     subwf paddle_pos,W
0085   3028           00538     movlw PADDLE_LIMIT
0086   1803           00539     skpnc
0087   00??           00540     movwf paddle_pos
0088   3010           00541     movlw 4<<CHS0
0089   009D           00542     movwf ADCON0
                      00543 ; create paddle mask
008A   2???           00544     call compute_paddle_mask
008B   0021           00545     banksel TRISA
                      00546     leave
008C   2???               M     goto isr_exit
                      00547 
                      00548     
                      00549 ; task 5,  sound timer
                      00550 ; if sound active process it.    
008D                  00551 sound
008D   0A??           00552     incf task
008E   1D80           00553     btfss flags, F_SOUND
                      00554     leave
008F   2???               M     goto isr_exit
0090   1A80           00555     btfsc flags, F_PAUSE
0091   2???           00556     call sound_fx1
0092   002?           00557     banksel sound_timer
0093   0B??           00558     decfsz sound_timer
                      00559     leave
0094   2???               M     goto isr_exit
0095                  00560 sound_off    
0095   1180           00561     bcf flags, F_SOUND
0096   003B           00562     banksel PWM2CON
0097   132B           00563     bcf PWM2CON,OE
0098   13AB           00564     bcf PWM2CON,EN
0099   0021           00565     banksel TRISA
009A   140C           00566     bsf TRISA,PADDLE
                      00567     leave
009B   2???               M     goto isr_exit
                      00568 
                      00569 ; sound effect, low pitch to high-pitch    
009C                  00570 sound_fx1
009C   1C80           00571     btfss flags, F_EVEN
009D   0008           00572     return
009E   003B           00573     banksel PWM2CON
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009F   36A6           00574     lsrf PWM2PRH
00A0   0CA5           00575     rrf PWM2PRL
00A1   36A4           00576     lsrf PWM2DCH
00A2   0CA3           00577     rrf PWM2DCL
00A3   17AF           00578     bsf PWM2LDCON,LDA
00A4   0008           00579     return
                      00580     
                      00581 ; initialize sound generation.
                      00582 ; input:
                      00583 ;   T = duration
                      00584 ;   WREG = index in frequency table    
                      00585 ; outpout:
                      00586 ;   none    
00A5                  00587 sound_init
                      00588     pushw  ; ( d i -- )
00A5   0019               M     movwi --SP
00A6   1580           00589     bsf flags, F_SOUND
00A7   003B           00590     banksel PWM2CON
00A8   0800           00591     movfw T
00A9   2???           00592     call frequency
00AA   00A6           00593     movwf PWM2PRH
00AB   0A00           00594     incf T,W
00AC   2???           00595     call frequency
00AD   00A5           00596     movwf PWM2PRL
00AE   3626           00597     lsrf PWM2PRH,W
00AF   00A4           00598     movwf PWM2DCH
00B0   0C25           00599     rrf PWM2PRL,W
00B1   00A3           00600     movwf PWM2DCL
00B2   17AF           00601     bsf PWM2LDCON,LDA
00B3   172B           00602     bsf PWM2CON,OE
00B4   17AB           00603     bsf PWM2CON,EN
00B5   002?           00604     banksel sound_timer
                      00605     pickn 1
00B6   3F01               M     moviw 1[SP]
00B7   00??           00606     movwf sound_timer
                      00607     dropn 2
00B8   3102               M     addfsr T,2
00B9   0021           00608     banksel TRISA
00BA   100C           00609     bcf TRISA,AUDIO
00BB   0008           00610     return
                      00611     
                      00612 ;task 6, read button and paddle position
00BC                  00613 read_button
00BC   0A??           00614     incf task
00BD   0020           00615     banksel PORTA
00BE   080C           00616     movfw PORTA
00BF   3908           00617     andlw 1<<START_BTN
00C0   00??           00618     movwf temp1
00C1   1B00           00619     btfsc flags, F_OVER
00C2   3???           00620     bra game_over
00C3   1A00           00621     btfsc flags,F_START
00C4   3???           00622     bra game_running
                      00623 ; game not running
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C5   1D03           00624     skpz
00C6   3???           00625     bra skip_2_tasks
                      00626 ; start game    
00C7   2???           00627     call game_init
                      00628     leave
00C8   2???               M     goto isr_exit
00C9                  00629 game_running
00C9   1E80           00630     btfss flags, F_PAUSE
                      00631     leave
00CA   2???               M     goto isr_exit
                      00632 ; game on pause    
00CB                  00633 wait_trigger
00CB   1D03           00634     skpz
00CC   3???           00635     bra skip_2_tasks
00CD   1280           00636     bcf flags,F_PAUSE
00CE   2???           00637     call set_ball_dx
                      00638     leave
00CF   2???               M     goto isr_exit
                      00639 ; game over
00D0                  00640 game_over
00D0   1D03           00641     skpz
00D1   3???           00642     bra skip_2_tasks
00D2   2???           00643     call game_init
                      00644 ;    incf task
                      00645     leave
00D3   2???               M     goto isr_exit
                      00646 ; while game not running skip 'move_ball' and 'collision' tasks    
00D4                  00647 skip_2_tasks
00D4   08??           00648     movfw paddle_pos
00D5   3E02           00649     addlw 2
00D6   00??           00650     movwf ball_x
00D7   2???           00651     call compute_ball_mask
00D8   0A??           00652     incf task ; skip move_ball
00D9   0A??           00653     incf task ; skip collision
00DA   2???           00654     call lfsr16
                      00655     leave
00DB   2???               M     goto isr_exit
                      00656 
                      00657     
                      00658     
                      00659 
                      00660 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00661 ; paddle_byte=paddle_pos/8
                      00662 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00DC                  00663 compute_paddle_mask
00DC   36??           00664     lsrf paddle_pos,W
00DD   3689           00665     lsrf WREG
00DE   3689           00666     lsrf WREG
00DF   00??           00667     movwf paddle_byte
00E0   30FF           00668     movlw PADDLE_MASK
00E1   00??           00669     movwf paddle_mask
00E2   01??           00670     clrf paddle_mask+1
00E3   3007           00671     movlw 7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E4   05??           00672     andwf paddle_pos,W
00E5   1903           00673     skpnz
00E6   0008           00674     return
00E7   36??           00675     lsrf paddle_mask
00E8   0C??           00676     rrf paddle_mask+1
00E9   0B89           00677     decfsz WREG
00EA   3???           00678     bra $-3
00EB   0008           00679     return
                      00680     
                      00681 ; task 7, move recking ball.   
                      00682 ; also check for ball bounce on paddle
                      00683 ; and ball lost at bottom    
00EC                  00684 move_ball
00EC   0B??           00685     decfsz ball_timer
00ED   3???           00686     bra move_ball_exit
00EE   08??           00687     movfw ball_speed
00EF   00??           00688     movwf ball_timer
00F0   08??           00689     movfw ball_dx
00F1   07??           00690     addwf ball_x
00F2   1F80           00691     btfss ball_dx,7
00F3   3???           00692     bra right_bound
00F4                  00693 left_bound
00F4   1F80           00694     btfss ball_x,7
00F5   3???           00695     bra move_y
00F6   01??           00696     clrf ball_x
00F7   09??           00697     comf ball_dx
00F8   0A??           00698     incf ball_dx
00F9   3???           00699     bra move_y
00FA                  00700 right_bound    
00FA   08??           00701     movfw ball_x
00FB   3C2E           00702     sublw BALL_RIGHT_BOUND
00FC   1803           00703     skpnc
00FD   3???           00704     bra move_y
00FE   03??           00705     decf ball_x
00FF   09??           00706     comf ball_dx
0100   0A??           00707     incf ball_dx
0101                  00708 move_y
0101   08??           00709     movfw ball_dy
0102   07??           00710     addwf ball_y
0103   1F80           00711     btfss ball_dy,7
0104   3???           00712     bra bottom_bound
0105                  00713 top_bound    
0105   303A           00714     movlw BALL_TOP_BOUND
0106   02??           00715     subwf ball_y,W
0107   1803           00716     skpnc
0108   3???           00717     bra move_ball_exit
0109   303A           00718     movlw BALL_TOP_BOUND
010A   00??           00719     movwf ball_y
010B   09??           00720     comf ball_dy
010C   0A??           00721     incf ball_dy
010D   3???           00722     bra move_ball_exit
010E                  00723 bottom_bound
010E   08??           00724     movfw ball_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010F   3CED           00725     sublw PADDLE_Y-BALL_HEIGHT-1
0110   1803           00726     skpnc
0111   3???           00727     bra move_ball_exit
0112   2???           00728     call paddle_bounce
0113   1803           00729     skpnc
0114   3???           00730     bra move_ball_exit
0115                  00731 ball_lost
0115   1680           00732     bsf flags, F_PAUSE ; pause game
0116   002?           00733     banksel balls
0117   0B??           00734     decfsz balls
0118   3???           00735     bra $+3
0119   1200           00736     bcf flags, F_START
011A   1700           00737     bsf flags, F_OVER
011B   3002           00738     movlw 2
011C   07??           00739     addwf paddle_pos,W
011D   00??           00740     movwf ball_x
011E   30EF           00741     movlw PADDLE_Y-BALL_HEIGHT+1
011F   00??           00742     movwf ball_y
0120   30FC           00743     movlw -4
0121   00??           00744     movwf ball_dy
0122   3008           00745     movlw 8
                      00746     pushw
0123   0019               M     movwi --SP
0124   3002           00747     movlw 2
0125   2???           00748     call sound_init
0126   0A??           00749     incf task ; skip collision task
0127                  00750 move_ball_exit
0127   2???           00751     call compute_ball_mask
0128   0A??           00752     incf task
                      00753     leave
0129   2???               M     goto isr_exit
                      00754 
                      00755 ; check if ball is bouncing on paddle
                      00756 ; input:
                      00757 ;   none
                      00758 ; output:
                      00759 ;   C set if bounced    
012A                  00760 paddle_bounce
                      00761 ; if ball_x over paddle bounce ball
012A   08??           00762     movfw paddle_pos
                      00763     pushw
012B   0019               M     movwi --SP
012C   1903           00764     skpnz
012D   0380           00765     decf T
012E   3E08           00766     addlw PADDLE_WIDTH
                      00767     pushw
012F   0019               M     movwi --SP
0130   08??           00768     movfw ball_x
0131   2???           00769     call between
0132   1803           00770     skpnc
0133   3???           00771     bra bouncing
0134   1003           00772     bcf STATUS,C
0135   0008           00773     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0136                  00774 bouncing
0136   30EE           00775     movlw PADDLE_Y-BALL_HEIGHT
0137   00??           00776     movwf ball_y
0138   09??           00777     comf ball_dy
0139   0A??           00778     incf ball_dy
                      00779 ; bounce direction depend where paddle was hit.    
013A   08??           00780     movfw paddle_pos
013B   02??           00781     subwf ball_x,W
013C   1C03           00782     skpc
013D   3???           00783     bra bounce_left
013E   1903           00784     skpnz
013F   3???           00785     bra bounce_left
0140   3006           00786     movlw PADDLE_WIDTH-2
0141   07??           00787     addwf paddle_pos,W
0142   02??           00788     subwf ball_x,W
0143   3001           00789     movlw 1
0144   1803           00790     skpnc
0145   00??           00791     movwf ball_dx ; bounce right
0146   3???           00792     bra paddle_sound
0147                  00793 bounce_left
0147   30FF           00794     movlw -1
0148   00??           00795     movwf ball_dx
0149                  00796 paddle_sound    
0149   3002           00797     movlw 2
                      00798     pushw
014A   0019               M     movwi --SP
014B   2???           00799     call sound_init
                      00800 ; skip collision task
014C   0A??           00801     incf task
                      00802 ; report bounce    
014D   1403           00803     bsf STATUS,C
014E   0008           00804     return
                      00805     
                      00806     
                      00807 ; compute ball_mask and ball_byte
                      00808 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00809 ; ball_byte= ball_x/8     
014F                  00810 compute_ball_mask
014F   002?           00811     banksel vbuffer
0150   36??           00812     lsrf ball_x,W
0151   3689           00813     lsrf WREG
0152   3689           00814     lsrf WREG
0153   00??           00815     movwf ball_byte
0154   30C0           00816     movlw BALL_MASK
0155   00??           00817     movwf ball_mask
0156   01??           00818     clrf ball_mask+1
0157   3007           00819     movlw 7
0158   05??           00820     andwf ball_x,W
0159   1903           00821     skpnz
015A   0008           00822     return
015B   36??           00823     lsrf ball_mask
015C   0C??           00824     rrf ball_mask+1
015D   0B89           00825     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015E   3???           00826     bra $-3
015F   0008           00827     return
                      00828     
                      00829 ; task 8, check collision with bricks
0160                  00830 collision
0160   304A           00831     movlw ROW1_Y
                      00832     pushw
0161   0019               M     movwi --SP
0162   307A           00833     movlw ROW6_Y+BRICK_HEIGHT
                      00834     pushw
0163   0019               M     movwi --SP
0164   08??           00835     movfw ball_y
0165   2???           00836     call between
0166   1C03           00837     skpc
0167   3???           00838     bra collision_exit
0168   002?           00839     banksel row1
0169   0187           00840     clrf FSR1H
016A   30??           00841     movlw low row1
016B   0086           00842     movwf FSR1L
016C   304A           00843     movlw ROW1_Y
016D   02??           00844     subwf ball_y,W
016E   39F8           00845     andlw 0xf8
                      00846     pushw
016F   0019               M     movwi --SP
0170   0786           00847     addwf FSR1L
0171   08??           00848     movfw ball_byte
0172   0786           00849     addwf FSR1L
0173   30F0           00850     movlw 0xf0
0174   1900           00851     btfsc ball_x,2
0175   0E89           00852     swapf WREG
0176   0501           00853     andwf INDF1,W
0177   1903           00854     skpnz
0178   3???           00855     bra collision_exit
0179   300F           00856     movlw 0x0f
017A   1900           00857     btfsc ball_x,2
017B   0E89           00858     swapf WREG
017C   0581           00859     andwf INDF1
017D   09??           00860     comf ball_dy
017E   0A??           00861     incf ball_dy
017F   08??           00862     movfw ball_dy
0180   07??           00863     addwf ball_y
                      00864     popw
0181   0012               M     moviw SP++
0182   3689           00865     lsrf WREG
0183   3689           00866     lsrf WREG
0184   000B           00867     brw
0185   3009           00868     movlw 9
0186   3???           00869     bra add_score
0187   3009           00870     movlw 9
0188   3???           00871     bra add_score
0189   3007           00872     movlw 7
018A   3???           00873     bra add_score
018B   3005           00874     movlw 5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018C   3???           00875     bra add_score
018D   3003           00876     movlw 3
018E   3???           00877     bra add_score
018F   3001           00878     movlw 1
0190                  00879 add_score    
0190   2???           00880     call inc_score
0191                  00881 pong_sound
0191   3001           00882     movlw 1
                      00883     pushw
0192   0019               M     movwi --SP
0193   3000           00884     movlw 0
0194   2???           00885     call sound_init
0195                  00886 collision_exit
0195   0A??           00887     incf task
                      00888     leave
0196   2???               M     goto isr_exit
                      00889     
                      00890 ; check if  lb <= x < hb
                      00891 ; design to take same number of Tcy whatever the path.
                      00892 ; 13 tcy    
                      00893 ; input:
                      00894 ;    WREG  x
                      00895 ;    stack ( lb hb -- )     
                      00896 ; output:
                      00897 ;   Carry bit set if true    
0197                  00898 between
0197   00??           00899     movwf temp2
                      00900     pickn 1
0198   3F01               M     moviw 1[SP]
0199   02??           00901     subwf temp2,W
019A   1C03           00902     skpc
019B   3???           00903     bra between_exit2
019C   0800           00904     movfw T
019D   02??           00905     subwf temp2
019E   0803           00906     movfw STATUS
019F   3A01           00907     xorlw 1
01A0   0083           00908     movwf STATUS
01A1                  00909 between_exit    
                      00910     dropn 2
01A1   3102               M     addfsr T,2
01A2   0008           00911     return  ; 13 tcy
                      00912 ; add tcy to have constant tcy for this routine whatever the path    
01A3                  00913 between_exit2
01A3   3???           00914     bra $+1
01A4   3???           00915     bra between_exit
                      00916     
                      00917 ; task 9, wait for first video line
01A5                  00918 video_first
01A5   301D           00919     movlw FIRST_VIDEO_LINE-1
01A6   02??           00920     subwf lcount,W
01A7   1D03           00921     skpz
                      00922     leave
01A8   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A9   01??           00923     clrf slice
01AA   0A??           00924     incf task
                      00925     leave
01AB   2???               M     goto isr_exit
                      00926    
                      00927 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00928 ; The following tasks are responsible to render video display.
                      00929 ; Each video line must be completed by setting color to black.
                      00930 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00931 
                      00932 ; check if ball is visible on this scan line    
                      00933 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT
                      00934 ; designed to use a constant number of Tcy    
                      00935 ;  22 tcy   
                      00936 ;  input:
                      00937 ;       none    
                      00938 ;  output:
                      00939 ;       C set if true   
01AC                  00940 ball_visible
01AC   08??           00941     movfw ball_y
                      00942     pushw
01AD   0019               M     movwi --SP
01AE   3E08           00943     addlw BALL_HEIGHT
                      00944     pushw
01AF   0019               M     movwi --SP
01B0   08??           00945     movfw lcount
01B1   2???           00946     call between ; +13 tcy
01B2   0008           00947     return
                      00948     
                      00949     
                      00950 ; display vbuffer
                      00951 ; the 6 macros display_byte unroll to 240 instructions    
01B3                  00952 display_vbuffer
                      00953     display_byte 0
                          M     display_bit 0
01B3   35??               M     lslf vbuffer+0
01B4   301B               M     movlw BLACK
01B5   1803               M     skpnc
01B6   08??               M     movfw fg_color
01B7   008C               M     movwf TRISA
                          M     display_bit 0
01B8   35??               M     lslf vbuffer+0
01B9   301B               M     movlw BLACK
01BA   1803               M     skpnc
01BB   08??               M     movfw fg_color
01BC   008C               M     movwf TRISA
                          M     display_bit 0
01BD   35??               M     lslf vbuffer+0
01BE   301B               M     movlw BLACK
01BF   1803               M     skpnc
01C0   08??               M     movfw fg_color
01C1   008C               M     movwf TRISA
                          M     display_bit 0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C2   35??               M     lslf vbuffer+0
01C3   301B               M     movlw BLACK
01C4   1803               M     skpnc
01C5   08??               M     movfw fg_color
01C6   008C               M     movwf TRISA
                          M     display_bit 0
01C7   35??               M     lslf vbuffer+0
01C8   301B               M     movlw BLACK
01C9   1803               M     skpnc
01CA   08??               M     movfw fg_color
01CB   008C               M     movwf TRISA
                          M     display_bit 0
01CC   35??               M     lslf vbuffer+0
01CD   301B               M     movlw BLACK
01CE   1803               M     skpnc
01CF   08??               M     movfw fg_color
01D0   008C               M     movwf TRISA
                          M     display_bit 0
01D1   35??               M     lslf vbuffer+0
01D2   301B               M     movlw BLACK
01D3   1803               M     skpnc
01D4   08??               M     movfw fg_color
01D5   008C               M     movwf TRISA
                          M     display_bit 0
01D6   35??               M     lslf vbuffer+0
01D7   301B               M     movlw BLACK
01D8   1803               M     skpnc
01D9   08??               M     movfw fg_color
01DA   008C               M     movwf TRISA
                      00954     display_byte 1
                          M     display_bit 1
01DB   35??               M     lslf vbuffer+1
01DC   301B               M     movlw BLACK
01DD   1803               M     skpnc
01DE   08??               M     movfw fg_color
01DF   008C               M     movwf TRISA
                          M     display_bit 1
01E0   35??               M     lslf vbuffer+1
01E1   301B               M     movlw BLACK
01E2   1803               M     skpnc
01E3   08??               M     movfw fg_color
01E4   008C               M     movwf TRISA
                          M     display_bit 1
01E5   35??               M     lslf vbuffer+1
01E6   301B               M     movlw BLACK
01E7   1803               M     skpnc
01E8   08??               M     movfw fg_color
01E9   008C               M     movwf TRISA
                          M     display_bit 1
01EA   35??               M     lslf vbuffer+1
01EB   301B               M     movlw BLACK
01EC   1803               M     skpnc
01ED   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EE   008C               M     movwf TRISA
                          M     display_bit 1
01EF   35??               M     lslf vbuffer+1
01F0   301B               M     movlw BLACK
01F1   1803               M     skpnc
01F2   08??               M     movfw fg_color
01F3   008C               M     movwf TRISA
                          M     display_bit 1
01F4   35??               M     lslf vbuffer+1
01F5   301B               M     movlw BLACK
01F6   1803               M     skpnc
01F7   08??               M     movfw fg_color
01F8   008C               M     movwf TRISA
                          M     display_bit 1
01F9   35??               M     lslf vbuffer+1
01FA   301B               M     movlw BLACK
01FB   1803               M     skpnc
01FC   08??               M     movfw fg_color
01FD   008C               M     movwf TRISA
                          M     display_bit 1
01FE   35??               M     lslf vbuffer+1
01FF   301B               M     movlw BLACK
0200   1803               M     skpnc
0201   08??               M     movfw fg_color
0202   008C               M     movwf TRISA
                      00955     display_byte 2
                          M     display_bit 2
0203   35??               M     lslf vbuffer+2
0204   301B               M     movlw BLACK
0205   1803               M     skpnc
0206   08??               M     movfw fg_color
0207   008C               M     movwf TRISA
                          M     display_bit 2
0208   35??               M     lslf vbuffer+2
0209   301B               M     movlw BLACK
020A   1803               M     skpnc
020B   08??               M     movfw fg_color
020C   008C               M     movwf TRISA
                          M     display_bit 2
020D   35??               M     lslf vbuffer+2
020E   301B               M     movlw BLACK
020F   1803               M     skpnc
0210   08??               M     movfw fg_color
0211   008C               M     movwf TRISA
                          M     display_bit 2
0212   35??               M     lslf vbuffer+2
0213   301B               M     movlw BLACK
0214   1803               M     skpnc
0215   08??               M     movfw fg_color
0216   008C               M     movwf TRISA
                          M     display_bit 2
0217   35??               M     lslf vbuffer+2
0218   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0219   1803               M     skpnc
021A   08??               M     movfw fg_color
021B   008C               M     movwf TRISA
                          M     display_bit 2
021C   35??               M     lslf vbuffer+2
021D   301B               M     movlw BLACK
021E   1803               M     skpnc
021F   08??               M     movfw fg_color
0220   008C               M     movwf TRISA
                          M     display_bit 2
0221   35??               M     lslf vbuffer+2
0222   301B               M     movlw BLACK
0223   1803               M     skpnc
0224   08??               M     movfw fg_color
0225   008C               M     movwf TRISA
                          M     display_bit 2
0226   35??               M     lslf vbuffer+2
0227   301B               M     movlw BLACK
0228   1803               M     skpnc
0229   08??               M     movfw fg_color
022A   008C               M     movwf TRISA
                      00956     display_byte 3
                          M     display_bit 3
022B   35??               M     lslf vbuffer+3
022C   301B               M     movlw BLACK
022D   1803               M     skpnc
022E   08??               M     movfw fg_color
022F   008C               M     movwf TRISA
                          M     display_bit 3
0230   35??               M     lslf vbuffer+3
0231   301B               M     movlw BLACK
0232   1803               M     skpnc
0233   08??               M     movfw fg_color
0234   008C               M     movwf TRISA
                          M     display_bit 3
0235   35??               M     lslf vbuffer+3
0236   301B               M     movlw BLACK
0237   1803               M     skpnc
0238   08??               M     movfw fg_color
0239   008C               M     movwf TRISA
                          M     display_bit 3
023A   35??               M     lslf vbuffer+3
023B   301B               M     movlw BLACK
023C   1803               M     skpnc
023D   08??               M     movfw fg_color
023E   008C               M     movwf TRISA
                          M     display_bit 3
023F   35??               M     lslf vbuffer+3
0240   301B               M     movlw BLACK
0241   1803               M     skpnc
0242   08??               M     movfw fg_color
0243   008C               M     movwf TRISA
                          M     display_bit 3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0244   35??               M     lslf vbuffer+3
0245   301B               M     movlw BLACK
0246   1803               M     skpnc
0247   08??               M     movfw fg_color
0248   008C               M     movwf TRISA
                          M     display_bit 3
0249   35??               M     lslf vbuffer+3
024A   301B               M     movlw BLACK
024B   1803               M     skpnc
024C   08??               M     movfw fg_color
024D   008C               M     movwf TRISA
                          M     display_bit 3
024E   35??               M     lslf vbuffer+3
024F   301B               M     movlw BLACK
0250   1803               M     skpnc
0251   08??               M     movfw fg_color
0252   008C               M     movwf TRISA
                      00957     display_byte 4
                          M     display_bit 4
0253   35??               M     lslf vbuffer+4
0254   301B               M     movlw BLACK
0255   1803               M     skpnc
0256   08??               M     movfw fg_color
0257   008C               M     movwf TRISA
                          M     display_bit 4
0258   35??               M     lslf vbuffer+4
0259   301B               M     movlw BLACK
025A   1803               M     skpnc
025B   08??               M     movfw fg_color
025C   008C               M     movwf TRISA
                          M     display_bit 4
025D   35??               M     lslf vbuffer+4
025E   301B               M     movlw BLACK
025F   1803               M     skpnc
0260   08??               M     movfw fg_color
0261   008C               M     movwf TRISA
                          M     display_bit 4
0262   35??               M     lslf vbuffer+4
0263   301B               M     movlw BLACK
0264   1803               M     skpnc
0265   08??               M     movfw fg_color
0266   008C               M     movwf TRISA
                          M     display_bit 4
0267   35??               M     lslf vbuffer+4
0268   301B               M     movlw BLACK
0269   1803               M     skpnc
026A   08??               M     movfw fg_color
026B   008C               M     movwf TRISA
                          M     display_bit 4
026C   35??               M     lslf vbuffer+4
026D   301B               M     movlw BLACK
026E   1803               M     skpnc
026F   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0270   008C               M     movwf TRISA
                          M     display_bit 4
0271   35??               M     lslf vbuffer+4
0272   301B               M     movlw BLACK
0273   1803               M     skpnc
0274   08??               M     movfw fg_color
0275   008C               M     movwf TRISA
                          M     display_bit 4
0276   35??               M     lslf vbuffer+4
0277   301B               M     movlw BLACK
0278   1803               M     skpnc
0279   08??               M     movfw fg_color
027A   008C               M     movwf TRISA
                      00958     display_byte 5
                          M     display_bit 5
027B   35??               M     lslf vbuffer+5
027C   301B               M     movlw BLACK
027D   1803               M     skpnc
027E   08??               M     movfw fg_color
027F   008C               M     movwf TRISA
                          M     display_bit 5
0280   35??               M     lslf vbuffer+5
0281   301B               M     movlw BLACK
0282   1803               M     skpnc
0283   08??               M     movfw fg_color
0284   008C               M     movwf TRISA
                          M     display_bit 5
0285   35??               M     lslf vbuffer+5
0286   301B               M     movlw BLACK
0287   1803               M     skpnc
0288   08??               M     movfw fg_color
0289   008C               M     movwf TRISA
                          M     display_bit 5
028A   35??               M     lslf vbuffer+5
028B   301B               M     movlw BLACK
028C   1803               M     skpnc
028D   08??               M     movfw fg_color
028E   008C               M     movwf TRISA
                          M     display_bit 5
028F   35??               M     lslf vbuffer+5
0290   301B               M     movlw BLACK
0291   1803               M     skpnc
0292   08??               M     movfw fg_color
0293   008C               M     movwf TRISA
                          M     display_bit 5
0294   35??               M     lslf vbuffer+5
0295   301B               M     movlw BLACK
0296   1803               M     skpnc
0297   08??               M     movfw fg_color
0298   008C               M     movwf TRISA
                          M     display_bit 5
0299   35??               M     lslf vbuffer+5
029A   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029B   1803               M     skpnc
029C   08??               M     movfw fg_color
029D   008C               M     movwf TRISA
                          M     display_bit 5
029E   35??               M     lslf vbuffer+5
029F   301B               M     movlw BLACK
02A0   1803               M     skpnc
02A1   08??               M     movfw fg_color
02A2   008C               M     movwf TRISA
02A3   0008           00959     return
                      00960  
                      00961 ; task 10, draw score en ball count
                      00962 ;  lcount 30-49    
02A4                  00963 draw_score 
02A4   0021           00964     banksel TRISA
02A5   08??           00965     movfw slice
02A6   3689           00966     lsrf WREG
02A7   3689           00967     lsrf WREG
                      00968     pushw
02A8   0019               M     movwi --SP
02A9   08??           00969     movfw score
02AA   2???           00970     call digits
02AB   0E89           00971     swapf WREG
02AC   04??           00972     iorwf vbuffer
02AD   0E??           00973     swapf score+1,W
02AE   2???           00974     call digits
02AF   04??           00975     iorwf vbuffer
02B0   08??           00976     movfw score+1
02B1   2???           00977     call digits
02B2   0E89           00978     swapf WREG
02B3   04??           00979     iorwf vbuffer+1
02B4   08??           00980     movfw balls
02B5   2???           00981     call digits
02B6   04??           00982     iorwf vbuffer+4
02B7   2???           00983     call display_vbuffer
                      00984     dropn 1
02B8   3101               M     addfsr T,1
02B9                  00985 score_exit
                      00986     next_task 5*4
02B9   0A??               M     incf slice
02BA   3014               M     movlw 5*4
02BB   02??               M     subwf slice,W
02BC   1D03               M     skpz
                          M     leave
02BD   2???               M     goto isr_exit
02BE   01??               M     clrf slice
02BF   0A??               M     incf task
                          M     leave
02C0   2???               M     goto isr_exit
                      00987 
                      00988     
                      00989 ; task 11,  draw top wall, 8 screen lines 
                      00990 ; lcount 50-57    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C1                  00991 draw_top_wall
02C1   0021           00992     banksel TRISA
02C2   09??           00993     comf vbuffer
02C3   09??           00994     comf vbuffer+1
02C4   09??           00995     comf vbuffer+2
02C5   09??           00996     comf vbuffer+3
02C6   09??           00997     comf vbuffer+4
02C7   09??           00998     comf vbuffer+5
02C8   300B           00999     movlw WHITE
02C9   00??           01000     movwf fg_color
                      01001     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02CA   3016               M     movlw q
02CB   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01002     white
02CC   300B               M     movlw WHITE
02CD   008C               M     movwf TRISA
02CE   2???           01003     call display_vbuffer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01004     white
02CF   300B               M     movlw WHITE
02D0   008C               M     movwf TRISA
                      01005     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02D1   2???               M     call _4tcy
                          M     exitm
                      01006     black
02D2   301B               M     movlw BLACK
02D3   008C               M     movwf TRISA
                      01007     next_task BRICK_HEIGHT
02D4   0A??               M     incf slice
02D5   3008               M     movlw BRICK_HEIGHT
02D6   02??               M     subwf slice,W
02D7   1D03               M     skpz
                          M     leave
02D8   2???               M     goto isr_exit
02D9   01??               M     clrf slice
02DA   0A??               M     incf task
                          M     leave
02DB   2???               M     goto isr_exit
                      01008 
                      01009 ; put ball mask in video_buffer
                      01010 ; designed to take a constant number of Tcy    
                      01011 ; 38 Tcy    
02DC                  01012 put_ball_in_buffer
02DC   2???           01013     call ball_visible ; +22 Tcy
02DD   1C03           01014     skpc
02DE   3???           01015     bra kill_time
02DF   0187           01016     clrf FSR1H
02E0   30??           01017     movlw low vbuffer
02E1   0086           01018     movwf FSR1L
02E2   08??           01019     movfw ball_byte
02E3   0786           01020     addwf FSR1L
02E4   08??           01021     movfw ball_mask
02E5   001E           01022     movwi FSR1++
02E6   08??           01023     movfw ball_mask+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E7   3FC0           01024     movwi [FSR1]
02E8   0008           01025     return ; 37 tcy
02E9                  01026 kill_time 
                      01027     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3  
  0001                    M     variable r=7-3-3*q
02E9   3001               M     movlw q
02EA   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02EB   0000               M     nop
                          M     exitm
02EC   0008           01028     return ; 37 tcy
                      01029     
                      01030 ; task 12,  draw vertical sides over bricks.
                      01031 ; lcount 58-73    
02ED                  01032 draw_sides 
02ED   0021           01033     banksel TRISA
02EE   2???           01034     call put_ball_in_buffer
                      01035     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31>5
  000B                    M     variable q=(LEFT_MARGIN-31-3)/3 
  0002                    M     variable r=LEFT_MARGIN-31-3-3*q
02EF   300B               M     movlw q
02F0   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
02F1   3???               M     bra $+1
                          M     exitm
                      01036     white
02F2   300B               M     movlw WHITE
02F3   008C               M     movwf TRISA
02F4   2???           01037     call display_vbuffer
                      01038     white
02F5   300B               M     movlw WHITE
02F6   008C               M     movwf TRISA
                      01039     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02F7   2???               M     call _4tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                      01040     black
02F8   301B               M     movlw BLACK
02F9   008C               M     movwf TRISA
                      01041     next_task 2*BRICK_HEIGHT
02FA   0A??               M     incf slice
02FB   3010               M     movlw 2*BRICK_HEIGHT
02FC   02??               M     subwf slice,W
02FD   1D03               M     skpz
                          M     leave
02FE   2???               M     goto isr_exit
02FF   01??               M     clrf slice
0300   0A??               M     incf task
                          M     leave
0301   2???               M     goto isr_exit
                      01042  
                      01043 ; copy a brick row in vbuffer
                      01044 ; FSR1 initialized to point row    
0302                  01045 copy_row
0302   0016           01046     moviw FSR1++
0303   04??           01047     iorwf vbuffer
0304   0016           01048     moviw FSR1++
0305   04??           01049     iorwf vbuffer+1
0306   0016           01050     moviw FSR1++
0307   04??           01051     iorwf vbuffer+2
0308   0016           01052     moviw FSR1++
0309   04??           01053     iorwf vbuffer+3
030A   0016           01054     moviw FSR1++
030B   04??           01055     iorwf vbuffer+4
030C   0016           01056     moviw FSR1++
030D   04??           01057     iorwf vbuffer+5
030E   0008           01058     return    
                      01059 
                      01060 ;common code to all bricks row display    
030F                  01061 rows_common
030F   00??           01062     movwf fg_color
0310   0187           01063     clrf FSR1H
0311   2???           01064     call copy_row
                      01065     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
0312   0000               M     nop
                          M     exitm
                      01066     white
0313   300B               M     movlw WHITE
0314   008C               M     movwf TRISA
0315   2???           01067     call display_vbuffer
                      01068     white
0316   300B               M     movlw WHITE
0317   008C               M     movwf TRISA
                      01069     tdelay BORDER_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0318   2???               M     call _4tcy
                          M     exitm
                      01070     black
0319   301B               M     movlw BLACK
031A   008C               M     movwf TRISA
                      01071     next_task BRICKS_ROWS*BRICK_HEIGHT
031B   0A??               M     incf slice
031C   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
031D   02??               M     subwf slice,W
031E   1D03               M     skpz
                          M     leave
031F   2???               M     goto isr_exit
0320   01??               M     clrf slice
0321   0A??               M     incf task
                          M     leave
0322   2???               M     goto isr_exit
                      01072     
                      01073 ; task 13, draw brick rows
                      01074 ; lcount 74-121   
0323                  01075 draw_bricks
0323   002?           01076     banksel vbuffer
0324   2???           01077     call put_ball_in_buffer
0325   30??           01078     movlw low row1
0326   0086           01079     movwf FSR1L
0327   30F8           01080     movlw 0xf8
0328   05??           01081     andwf slice,W
0329   0786           01082     addwf FSR1L
032A   003B           01083     banksel PWM1CON
                      01084     pushw
032B   0019               M     movwi --SP
032C   3010           01085     movlw 2<<3
032D   0200           01086     subwf T,W
032E   1803           01087     skpnc
032F   161B           01088     bsf PWM1CON,POL
                      01089     popw
0330   0012               M     moviw SP++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0331   0021           01090     banksel TRISA
0332   3689           01091     lsrf WREG
0333   3689           01092     lsrf WREG
                      01093     ; select color according to row index {0..5}
0334   000B           01094     brw
0335   3009           01095     movlw YELLOW
0336   3???           01096     bra rows_common
0337   3009           01097     movlw YELLOW
0338   3???           01098     bra rows_common
0339   3009           01099     movlw MAUVE
033A   3???           01100     bra rows_common
033B   3009           01101     movlw MAUVE
033C   3???           01102     bra rows_common
033D   3019           01103     movlw BLUE
033E   3???           01104     bra rows_common
033F   3019           01105     movlw BLUE
0340   3???           01106     bra rows_common
                      01107     
  00000028            01108 MSG_FIRST equ 40
  00000028            01109 MSG_HEIGHT equ 40
  00000010            01110 MSG_PIXELS_COUNT equ 16 
                      01111 ; task 14
                      01112 ; draw all rows below bricks down to paddle
                      01113 ; also display message when game over. 
                      01114 ; lcount 122-241 
0341                  01115 draw_empty
0341   0021           01116     banksel TRISA
0342   1B00           01117     btfsc flags, F_OVER
0343   3???           01118     bra print_msg
0344   2???           01119     call put_ball_in_buffer
0345   300B           01120     movlw WHITE
0346   00??           01121     movwf fg_color
                      01122     tdelay LEFT_MARGIN-35
                          M     if LEFT_MARGIN-35==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-35==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35>5
  000A                    M     variable q=(LEFT_MARGIN-35-3)/3 
  0001                    M     variable r=LEFT_MARGIN-35-3-3*q
0347   300A               M     movlw q
0348   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0349   0000               M     nop
                          M     exitm
                      01123     white
034A   300B               M     movlw WHITE
034B   008C               M     movwf TRISA
034C   2???           01124     call display_vbuffer
                      01125     white
034D   300B               M     movlw WHITE
034E   008C               M     movwf TRISA
                      01126     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
034F   2???               M     call _4tcy
                          M     exitm
                      01127     black
0350   301B               M     movlw BLACK
0351   008C               M     movwf TRISA
0352   3???           01128     bra draw_empty_exit
0353                  01129 print_msg    
0353   3009           01130     movlw YELLOW ; message color
0354   00??           01131     movwf fg_color
0355   3028           01132     movlw MSG_FIRST
                      01133     pushw
0356   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0357   3050           01134     movlw MSG_FIRST+MSG_HEIGHT
                      01135     pushw
0358   0019               M     movwi --SP
0359   08??           01136     movfw slice
035A   2???           01137     call between
035B   1C03           01138     skpc
035C   3???           01139     bra msg
035D   1F80           01140     btfss flags, F_COOL
035E   3???           01141     bra display_end
                      01142 ; perfect score display 'COOL' message
035F   30??           01143     movlw high cool_msg
0360   0087           01144     movwf FSR1H
0361   30??           01145     movlw low cool_msg
0362   0086           01146     movwf FSR1L
0363   2???           01147     call copy_msg
0364   3???           01148     bra msg
                      01149 ; display 'END!' message    
0365                  01150 display_end
0365   30??           01151     movlw high end_msg
0366   0087           01152     movwf FSR1H
0367   30??           01153     movlw low end_msg
0368   0086           01154     movwf FSR1L
0369   2???           01155     call copy_msg
036A                  01156 msg
036A   2???           01157     call display_vbuffer
036B                  01158 draw_empty_exit
                      01159     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
036B   0A??               M     incf slice
036C   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
036D   02??               M     subwf slice,W
036E   1D03               M     skpz
                          M     leave
036F   2???               M     goto isr_exit
0370   01??               M     clrf slice
0371   0A??               M     incf task
                          M     leave
0372   2???               M     goto isr_exit
                      01160 
                      01161 ; copy message bitmap in vbuffer
                      01162 ; message is  16 pixels wide
0373                  01163 copy_msg
0373   3028           01164     movlw MSG_FIRST
0374   02??           01165     subwf slice,W
0375   3689           01166     lsrf WREG
0376   3689           01167     lsrf WREG
0377   3689           01168     lsrf WREG
0378   3589           01169     lslf WREG
0379   0786           01170     addwf FSR1L
037A   1803           01171     skpnc
037B   0A87           01172     incf FSR1H
037C   0016           01173     moviw FSR1++
037D   00??           01174     movwf vbuffer+1
037E   0016           01175     moviw FSR1++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037F   00??           01176     movwf vbuffer+2
0380   0008           01177     return
                      01178     
                      01179 ; task 15, draw paddle at bottom screen  
                      01180 ; lcount 242-249    
0381                  01181 draw_paddle
0381   0021           01182     banksel TRISA
0382   0187           01183     clrf FSR1H
0383   30??           01184     movlw low vbuffer
0384   0086           01185     movwf FSR1L
0385   08??           01186     movfw paddle_byte
0386   0786           01187     addwf FSR1L
0387   08??           01188     movfw paddle_mask
0388   001E           01189     movwi FSR1++
0389   08??           01190     movfw paddle_mask+1
038A   3FC0           01191     movwi  [FSR1]
038B   300B           01192     movlw WHITE
038C   00??           01193     movwf fg_color
                      01194     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
038D   3015               M     movlw q
038E   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01195     white
038F   300B               M     movlw WHITE
0390   008C               M     movwf TRISA
0391   2???           01196     call display_vbuffer
                      01197     white
0392   300B               M     movlw WHITE
0393   008C               M     movwf TRISA
                      01198     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0394   2???               M     call _4tcy
                          M     exitm
                      01199     black
0395   301B               M     movlw BLACK
0396   008C               M     movwf TRISA
                      01200     next_task PADDLE_THICKNESS
0397   0A??               M     incf slice
0398   3004               M     movlw PADDLE_THICKNESS
0399   02??               M     subwf slice,W
039A   1D03               M     skpz
                          M     leave
039B   2???               M     goto isr_exit
039C   01??               M     clrf slice
039D   0A??               M     incf task
                          M     leave
039E   2???               M     goto isr_exit
                      01201 
                      01202 ; task 16,  wait end of this field, reset task to zero    
                      01203 ; lcount 251-262/3    
039F                  01204 wait_field_end
039F   1800           01205     btfsc flags, F_BIT8
03A0   2???           01206     goto hi_line
                      01207     leave
03A1   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A2                  01208 hi_line
03A2   1880           01209     btfsc flags,F_EVEN
03A3   2???           01210     goto even_field
03A4   3005           01211     movlw 5
03A5   02??           01212     subwf lcount,W
03A6   1D03           01213     skpz
                      01214     leave
03A7   2???               M     goto isr_exit
03A8   2???           01215     goto field_end
03A9                  01216 even_field
03A9   3006           01217     movlw 6
03AA   02??           01218     subwf lcount,W
03AB   1D03           01219     skpz
                      01220     leave
03AC   2???               M     goto isr_exit
                      01221 ; even field last line is half_line    
                      01222 ; set PWM3 for line 263 half-line
03AD   003B           01223     banksel PWM3DC
03AE   3003           01224     movlw high HALF_LINE
03AF   00B6           01225     movwf PWM3PRH
03B0   308D           01226     movlw low HALF_LINE
03B1   00B5           01227     movwf PWM3PRL
03B2   17BF           01228     bsf PWM3LDCON,7
03B3                  01229 field_end
03B3   01??           01230     clrf task
03B4   01??           01231     clrf slice
03B5   01??           01232     clrf lcount
03B6   1000           01233     bcf flags, F_BIT8
03B7   1500           01234     bsf flags, F_SYNC
                      01235 ; toggle odd/even field flag    
03B8   3002           01236     movlw 1<<F_EVEN
03B9   06??           01237     xorwf flags
                      01238     leave
03BA   2???               M     goto isr_exit
                      01239 
                      01240 ; helper functions
                      01241 
                      01242 
                      01243 ; increment user score
                      01244 ; This is a BCD addition where a single digit is added to score.   
                      01245 ; score is stored as big indian
                      01246 ; argument: 
                      01247 ;   WREG ->  bdc digit to add to score variable
03BB                  01248 inc_score
03BB   07??           01249     addwf score+1
03BC   1883           01250     btfsc STATUS,DC
03BD   3???           01251     bra $+6
03BE   300F           01252     movlw 15
03BF   05??           01253     andwf score+1,W
03C0   3C09           01254     sublw 9
03C1   1803           01255     skpnc
03C2   3???           01256     bra $+3
03C3   3006           01257     movlw 6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C4   07??           01258     addwf score+1
03C5   0E??           01259     swapf score+1,W
03C6   390F           01260     andlw 15
03C7   3C09           01261     sublw 9
03C8   1803           01262     skpnc
03C9   3???           01263     bra game_over_test
03CA   3060           01264     movlw 0x60
03CB   07??           01265     addwf score+1
03CC   0A??           01266     incf score
                      01267 ; double ball speed if score >=200
03CD   3002           01268     movlw 2
03CE   02??           01269     subwf score,W
03CF   1C03           01270     skpc
03D0   0008           01271     return
03D1   3001           01272     movlw 1
03D2   00??           01273     movwf ball_speed
03D3                  01274 game_over_test ; all bricks destroyed?
03D3   3004           01275     movlw 4
03D4   02??           01276     subwf score,W
03D5   1D03           01277     skpz
03D6   0008           01278     return
03D7   3008           01279     movlw 0x08
03D8   02??           01280     subwf score+1,W
03D9   1D03           01281     skpz
03DA   0008           01282     return
03DB   1700           01283     bsf flags,F_OVER ; game over
03DC   1780           01284     bsf flags,F_COOL ; with maximum score.
03DD   0008           01285     return
                      01286     
                      01287     
03DE                  01288 brick_wall_init
03DE   30??           01289     movlw high row1
03DF   0087           01290     movwf FSR1H
03E0   30??           01291     movlw low row1
03E1   0086           01292     movwf FSR1L
03E2   3030           01293     movlw BRICKS_ROWS*8
03E3   00??           01294     movwf temp1
03E4   30FF           01295     movlw 0xff
03E5                  01296 bw_init
03E5   001E           01297     movwi FSR1++
03E6   0B??           01298     decfsz temp1
03E7   3???           01299     bra bw_init
03E8   0008           01300     return
                      01301 
                      01302 ; pseudo random number generator    
                      01303 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs  
  0000B400            01304 POLY equ 0xb400 
  0000ACE1            01305 SEED equ 0xace1 
03E9                  01306 lfsr16
03E9   002?           01307     banksel seed
03EA   36??           01308     lsrf seed
03EB   0C??           01309     rrf seed+1
03EC   30B4           01310     movlw high POLY
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03ED   1803           01311     skpnc
03EE   06??           01312     xorwf seed
                      01313 ; call here for 5 Tcy delay using a single instruction
                      01314 ; see tdelay macro 
03EF                  01315 _5tcy
03EF   08??           01316     movfw seed
03F0   0008           01317     return
                      01318     
                      01319 ; ball is sent at random direcction at serve.
03F1                  01320 set_ball_dx
03F1   2???           01321     call lfsr16 ;random
03F2   3007           01322     movlw 7
03F3   05??           01323     andwf seed,W
03F4   3589           01324     lslf WREG
03F5   000B           01325     brw
03F6   3000           01326     movlw 0
03F7   3???           01327     bra set_ball_dx_exit
03F8   3001           01328     movlw 1
03F9   3???           01329     bra set_ball_dx_exit
03FA   30FF           01330     movlw -1
03FB   3???           01331     bra set_ball_dx_exit
03FC   3000           01332     movlw 0
03FD   3???           01333     bra set_ball_dx_exit
03FE   3001           01334     movlw 1
03FF   3???           01335     bra set_ball_dx_exit
0400   30FF           01336     movlw -1
0401   3???           01337     bra set_ball_dx_exit
0402   30FF           01338     movlw -1
0403   3???           01339     bra set_ball_dx_exit
0404   3001           01340     movlw 1
0405                  01341 set_ball_dx_exit
0405   00??           01342     movwf ball_dx
0406   0008           01343     return
                      01344     
0407                  01345 game_init
0407   01??           01346     clrf score
0408   01??           01347     clrf score+1
0409   2???           01348     call brick_wall_init
040A   002?           01349     banksel balls
040B   3003           01350     movlw 3
040C   00??           01351     movwf balls
040D   01??           01352     clrf ball_timer
040E   0A??           01353     incf ball_timer
040F   30EF           01354     movlw PADDLE_Y-BALL_HEIGHT+1
0410   00??           01355     movwf ball_y
0411   2???           01356     call set_ball_dx
0412   30FC           01357     movlw -4
0413   00??           01358     movwf ball_dy
0414   3002           01359     movlw 2
0415   00??           01360     movwf ball_speed
0416   01??           01361     clrf flags
0417   1600           01362     bsf flags, F_START
0418   0008           01363     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01364     
                      01365 MAIN_PROG CODE                      ; let linker place main program
                      01366 
0000                  01367 initialize
                      01368 ; clear common RAM
0000   0185           01369     clrf FSR0H
0001   3070           01370     movlw 0x70
0002   0084           01371     movwf FSR0L
0003   0103           01372     clrw
0004   001A           01373     movwi FSR0++
0005   1F84           01374     btfss FSR0L,7
0006   3???           01375     bra $-2
                      01376 ; initialize LFSR seed
0007   002?           01377     banksel seed
0008   30AC           01378     movlw high SEED
0009   00??           01379     movwf seed
000A   30E1           01380     movlw low SEED
000B   00??           01381     movwf seed+1
                      01382 ;   setup arguments stack pointer
000C   30??           01383     movlw high (stack+STACK_SIZE)
000D   0085           01384     movwf FSR0H
000E   30??           01385     movlw low (stack+STACK_SIZE)
000F   0084           01386     movwf FSR0L
                      01387 ; disable analog inputs, except AN0
0010   0023           01388     banksel ANSELA
0011   018C           01389     clrf ANSELA
                      01390 ; paddle potentiometer input     
0012   140C           01391     bsf ANSELA,PADDLE
                      01392 ; adc clock Fosc/32    
0013   0021           01393     banksel ADCON1
0014   3020           01394     movlw (2<<ADCS0)
0015   009E           01395     movwf ADCON1
                      01396 ; pin setup
0016   0021           01397     banksel TRISA
                      01398 ; nstc sync output    
0017   110C           01399     bcf TRISA,SYNC_OUT
                      01400 ; video luminance output always set to 1.    
0018   0022           01401     banksel LATA
0019   160C           01402     bsf LATA, VIDEO_OUT
                      01403 ;  clear all PWM special fonction registers
                      01404 ;  to start configuration in a clean state.    
001A   300D           01405     movlw high PWMEN
001B   0087           01406     movwf FSR1H
001C   308E           01407     movlw low PWMEN
001D   0086           01408     movwf FSR1L
001E                  01409 clr_pwm_sfr
001E   0181           01410     clrf INDF1
001F   0A86           01411     incf FSR1L
0020   30C1           01412     movlw 0xc1
0021   0206           01413     subwf FSR1L,W
0022   1D03           01414     skpz
0023   3???           01415     bra clr_pwm_sfr
                      01416 ; PWM1 chroma signal on RA1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0024   003B           01417     banksel PWM1CON
0025   30C0           01418     movlw (1<<EN)|(1<<OE)
0026   009B           01419     movwf PWM1CON
0027   3007           01420     movlw 7
0028   0095           01421     movwf PWM1PRL
0029   3004           01422     movlw 4
002A   0093           01423     movwf PWM1DCL
002B   179F           01424     bsf PWM1LDCON,7
                      01425 ; PWM2 sound, clock source Fosc/8
002C   003B           01426     banksel PWM2CON
002D   3030           01427     movlw 3<<PWM2PS0
002E   00AE           01428     movwf PWM2CLKCON
                      01429 ; PWM3 set to horizontal period 15734 hertz, output on RA2
002F   003B           01430     banksel PWM3CON
0030   301B           01431     movlw low HPERIOD
0031   00B5           01432     movwf PWM3PRL
0032   3007           01433     movlw high HPERIOD
0033   00B6           01434     movwf PWM3PRH
0034   3086           01435     movlw HSYNC
0035   00B3           01436     movwf PWM3DCL
0036   30D0           01437     movlw (1<<EN)|(1<<OE)|(1<<POL)
0037   00BB           01438     movwf PWM3CON
0038   17BF           01439     bsf PWM3LDCON,7
0039   143C           01440     bsf PWM3INTE,PRIE
                      01441 ; enbable interrupt
                      01442 ; only interrupt used is PWM3PR rollover    
003A   0020           01443     banksel PIR3
003B   1313           01444     bcf PIR3,PWM3IF
003C   0021           01445     banksel PIE3
003D   1713           01446     bsf PIE3,PWM3IE
003E   170B           01447     bsf INTCON,PEIE
003F   178B           01448     bsf INTCON,GIE
0040   2???           01449     call game_init
                      01450 ; test code
                      01451 ; all processing done in ISR    
0041   2???           01452     goto $
                      01453 
                      01454 ;digits character table
                      01455 ; input:
                      01456 ;   T -> glyph row
                      01457 ;   WREG -> digit
                      01458 ; output:
                      01459 ;   WREG -> pixels
                      01460 ;   T -> glyph row  
                      01461 ; numérique, 2 digits compressés dans
                      01462 ; 5 octets
0042                  01463 digits
0042   00??           01464     movwf temp1
0043   390E           01465     andlw 0x0e
0044   00??           01466     movwf temp2
0045   35??           01467     lslf temp2
0046   35??           01468     lslf temp2
0047   07??           01469     addwf temp2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0048   36??           01470     lsrf temp2,W
0049   0700           01471     addwf T,W
004A   2???           01472     call digit_row
004B   1C00           01473     btfss temp1,0
004C   0E89           01474     swapf WREG
004D   390F           01475     andlw 0xf
004E   0008           01476     return
004F                  01477 digit_row    
004F   000B           01478     brw ; high nibble even digit, low nibble odd digit
0050   3444 34AC 34A4 01479     dt  H'44',H'AC',H'A4',H'A4',H'4E' ; 0, 1
       34A4 344E 
0055   34EE 3422 34CC 01480     dt  H'EE',H'22',H'CC',H'82',H'EE' ; 2, 3
       3482 34EE 
005A   34AE 34A8 34EE 01481     dt  H'AE',H'A8',H'EE',H'22',H'2E' ; 4, 5
       3422 342E 
005F   34CE 3482 34E2 01482     dt  H'CE',H'82',H'E2',H'A2',H'E2' ; 6, 7
       34A2 34E2 
0064   34EE 34AA 34EE 01483     dt  H'EE',H'AA',H'EE',H'A2',H'E6' ; 8, 9
       34A2 34E6 
                      01484     
                      01485 ; PWM2PR count for sound frequencies    
0069                  01486 frequency
0069   000B           01487     brw
006A   348B 34D3      01488     dt high 35795, low 35795 ; 100 hertz
006C   340D 34FB      01489     dt high 3579, low 3579 ; 1000 hertz
                      01490   
                      01491 ; END! message bitmap
006E                  01492 end_msg
                      01493 ;    brw
006E   00F4 005C      01494     data 0xf4,0x5c
0070   0086 0052      01495     data 0x86,0x52
0072   00E5 0052      01496     data 0xe5,0x52
0074   0084 00D2      01497     data 0x84,0xd2
0076   00F4 005C      01498     data 0xf4,0x5c
                      01499   
                      01500 ; COOL message bitmap    
0078                  01501 cool_msg
                      01502 ;    brw
0078   00EE 00E8      01503     data 0xee,0xe8
007A   008A 00A8      01504     data 0x8a,0xa8
007C   008A 00A8      01505     data 0x8a,0xa8
007E   008A 00A8      01506     data 0x8a,0xa8
0080   00EE 00EF      01507     data 0xee,0xef
                      01508     
                      01509     
                      01510 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01511 max_score 
                      01512  
3FA7 1EFF             01513     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
POLY                              0000B400
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SEED                              0000ACE1
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000008
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
YELLOW                            00000009
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0080                         00000080
_ISR_00EA                         000000EA
_ISR_0118                         00000118
_ISR_015E                         0000015E
_ISR_01A3                         000001A3
_ISR_02F1                         000002F1
_ISR_03BD                         000003BD
_ISR_03C2                         000003C2
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_0041                   00000041
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_RES_VECT_0002                    00000002
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000190
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000115
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001AC
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           00000197
between_exit                      000001A1
between_exit2                     000001A3
black                             
blue                              
bottom_bound                      0000010E
bounce_left                       00000147
bouncing                          00000136
brick_wall_init                   000003DE
bw_init                           000003E5
chroma_invert                     
chroma_ref                        
clr_pwm_sfr                       0000001E
collision                         00000160
collision_exit                    00000195
compute_ball_mask                 0000014F
compute_paddle_mask               000000DC
cool_msg                          00000078
copy_msg                          00000373
copy_row                          00000302
dark_green                        
digit_row                         0000004F
digits                            00000042
display_bit                       
display_byte                      
display_end                       00000365
display_vbuffer                   000001B3
draw_bricks                       00000323
draw_empty                        00000341
draw_empty_exit                   0000036B
draw_paddle                       00000381
draw_score                        000002A4
draw_sides                        000002ED
draw_top_wall                     000002C1
dropn                             
eeprom                            00000780
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

end_msg                           0000006E
even_field                        000003A9
fg_color                          000000D7
field_end                         000003B3
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         00000069
game_init                         00000407
game_over                         000000D0
game_over_test                    000003D3
game_running                      000000C9
hi_line                           000003A2
inc_score                         000003BB
initialize                        00000000
isr                               00000004
isr_exit                          0000002E
kill_time                         000002E9
lcount                            00000001
leave                             
left_bound                        000000F4
lfsr16                            000003E9
mauve                             
max_score                         00000780
move_ball                         000000EC
move_ball_exit                    00000127
move_y                            00000101
msg                               0000036A
next_task                         
paddle_bounce                     0000012A
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000149
pickn                             
pong_sound                        00000191
popw                              
post_last                         00000066
post_vsync                        0000005D
pre_vsync                         00000034
print_msg                         00000353
pushw                             
put_ball_in_buffer                000002DC
q                                 00000015
r                                 00000000
read_button                       000000BC
read_paddle                       00000077
right_bound                       000000FA
row1                              000000A7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-24-2019  16:06:37         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       0000030F
score                             0000000C
score_exit                        000002B9
seed                              00000028
set_ball_dx                       000003F1
set_ball_dx_exit                  00000405
set_presync                       0000003F
set_vsync                         00000055
skip_2_tasks                      000000D4
slice                             00000002
sound                             0000008D
sound_fx1                         0000009C
sound_init                        000000A5
sound_off                         00000095
sound_timer                       000000DE
stack                             00000020
task                              00000003
task_switch                       0000001A
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         00000105
vbuffer                           000000A0
video_first                       000001A5
vsync                             0000004A
vsync_end                         0000006A
wait_field_end                    0000039F
wait_trigger                      000000CB
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   294 suppressed

