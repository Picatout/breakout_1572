MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled.    
                      00025 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00026     
                      00027     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00028     
8007   3FA7           00029     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   3EFF           00030     __config _CONFIG2, _PLLEN_OFF
                      00031     
                      00032     radix dec
                      00033 
                      00034 ; constants
  00000800            00035 PROG_SIZE equ 2048  ; program words
  00000080            00036 EEPROM_SIZE equ 128 ; high endurance flash words
                      00037  
  01B4F360            00038 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00039 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00040 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00041  
                      00042 ; NTSC signal 
  00003D76            00043 Fhorz equ 15734 ; horizontal frequency
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000071B            00044 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00045 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00046 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00047 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00048 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00049 ; boolean flags 
  00000000            00050 F_HI_LINE equ 0 ; lcount > 255
  00000001            00051 F_EVEN equ 1    ; even field
  00000002            00052 F_START equ 2   ; game started 
  00000003            00053 F_OVER equ 3    ; game over
  00000004            00054 F_SOUND equ 4   ; sound enabled 
  00000005            00055 F_SYNC equ 5    ; vertical synchronization phase
                      00056  
                      00057 ;pins assignment
  00000000            00058 AUDIO EQU RA0
  00000000            00059 PADDLE equ RA0
  00000001            00060 CHROMA equ RA1
  00000002            00061 SYNC_OUT equ RA2
  00000003            00062 START_BTN equ RA3 
  00000004            00063 VIDEO_OUT equ RA4
  00000005            00064 CLKIN equ RA5
                      00065  
                      00066 
                      00067 ;;;;;;;;;;;;;;;;;;;;;;
                      00068 ;; assembler macros ;;
                      00069 ;;;;;;;;;;;;;;;;;;;;;;
                      00070 
                      00071 ; leave task 
                      00072 leave macro
                      00073     goto isr_exit
                      00074     endm
                      00075     
                      00076 ; move to next task on slice limit
                      00077 ; parameters:
                      00078 ;   s  nomber of slices used by the task    
                      00079 next_task macro s    
                      00080     incf slice
                      00081     movlw s
                      00082     subwf slice,W
                      00083     skpz
                      00084     leave
                      00085     clrf slice
                      00086     incf task
                      00087     movlw s
                      00088     addwf lcount
                      00089     leave
                      00090     endm
                      00091     
                      00092     
                      00093 ; case switch
                      00094 ; parameters:
                      00095 ;   var is control variable
                      00096 ;   n  is constant to compare to var
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;   adr  is goto address if var==n 
                      00098 case macro var, n, adr
                      00099     movlw n
                      00100     subwf var,W
                      00101     skpnz
                      00102     goto adr
                      00103     endm
                      00104 
                      00105 ; swap variable with WREG    
                      00106 swap_var macro var
                      00107     xorwf var
                      00108     xorwf var,W
                      00109     xorwf var
                      00110     endm
                      00111     
                      00112     
                      00113 ; delay in machine cycle T
                      00114 ; parameters:
                      00115 ;   T   number of machine cycles    
                      00116 tdelay macro T
                      00117     variable q=(T)/3
                      00118     variable r=(T)%3
                      00119     if (q)
                      00120     movlw q
                      00121     decfsz WREG
                      00122     goto $-1
                      00123     endif
                      00124     if (r==2)
                      00125     goto $+1
                      00126     endif 
                      00127     if (r==1)
                      00128     nop
                      00129     endif
                      00130     endm
                      00131 
                      00132 ; enable weak pull on VIDEO_OUT
                      00133 ; to create a porch
                      00134 porch_on macro
                      00135     banksel WPUA
                      00136     bsf WPUA,VIDEO_OUT
                      00137     endm
                      00138     
                      00139 ; disable weak pull on VIDEO_OUT
                      00140 ; to remove porch
                      00141 porch_off macro
                      00142     banksel WPUA
                      00143     bcf WPUA,VIDEO_OUT
                      00144     endm
                      00145     
                      00146 ; enable chroma output
                      00147 chroma_on macro
                      00148     banksel TRISA
                      00149     bcf TRISA, CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     endm
                      00151     
                      00152 ;disable chroma output    
                      00153 chroma_off macro
                      00154     banksel TRISA
                      00155     bsf TRISA,CHROMA
                      00156     endm
                      00157     
                      00158 ; output chroma reference    
                      00159 chroma_ref macro
                      00160     banksel PWM1CON
                      00161     bcf PWM1CON,POL
                      00162     endm
                      00163     
                      00164 ; set chroma phase to 180 degree
                      00165 chroma_invert macro
                      00166     banksel PWM1CON
                      00167     bsf PWM1CON,POL
                      00168     endm
                      00169 
                      00170 ;;;;;;;;;;;;;;;;;;;;;;
                      00171 ;   colors macros
                      00172 ; each one take 5 T 
                      00173 ;;;;;;;;;;;;;;;;;;;;;;
                      00174     
                      00175 ;set video output to black    
                      00176 black macro
                      00177 ;    banksel TRISA
                      00178     bsf TRISA,CHROMA
                      00179     bsf TRISA,VIDEO_OUT
                      00180 ;    goto $+1
                      00181     endm
                      00182     
                      00183 ; set video output to white    
                      00184 white macro    
                      00185 ;    banksel TRISA
                      00186     bsf TRISA,CHROMA
                      00187     bcf TRISA,VIDEO_OUT
                      00188 ;    goto $+1
                      00189     endm
                      00190 
                      00191 ; set video output to yellow    
                      00192 yellow macro
                      00193 ;    chroma_ref
                      00194 ;    banksel TRISA
                      00195     bcf TRISA,VIDEO_OUT
                      00196     bcf TRISA,CHROMA
                      00197     endm
                      00198 
                      00199 ; set video output to cyan   
                      00200 cyan macro
                      00201 ;    chroma_invert
                      00202 ;    banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     bcf TRISA,VIDEO_OUT
                      00204     bcf TRISA,CHROMA
                      00205     endm
                      00206     
                      00207 ; set video output to green
                      00208 green macro
                      00209 ;    chroma_ref
                      00210 ;    banksel TRISA
                      00211     bsf TRISA, VIDEO_OUT
                      00212     bcf TRISA,CHROMA
                      00213     endm
                      00214     
                      00215 ; set video output to dark blue    
                      00216 dark_blue macro
                      00217 ;    chroma_invert
                      00218 ;    banksel TRISA
                      00219     bsf TRISA, VIDEO_OUT
                      00220     bcf TRISA,CHROMA
                      00221     endm
                      00222 
                      00223     
                      00224 ; draw a brick
                      00225 ; use 6T+BRICK_WIDTH
                      00226 ; if carry is 1 draw in color else draw black    
  0000001D            00227 BRICK_WIDTH equ 29   
                      00228 draw_brick macro color
                      00229     local no_brick
                      00230     local brick_delay
                      00231     skpc
                      00232     bra no_brick
                      00233     color
                      00234     bra brick_delay
                      00235 no_brick
                      00236     nop
                      00237     black
                      00238     bra brick_delay 
                      00239 brick_delay    
                      00240     tdelay BRICK_WIDTH
                      00241     endm
                      00242 
                      00243 ; draw 8 bricks wall
                      00244 ; parameter in temp
                      00245 draw_wall macro color
                      00246     local next_brick
                      00247     movlw 8
                      00248     pushw
                      00249 next_brick    
                      00250     lslf temp
                      00251     draw_brick color
                      00252     decfsz T
                      00253     bra next_brick
                      00254     dropn 1
                      00255     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     
                      00257     
                      00258 ; draw left and right borders
                      00259 ; parameters:
                      00260 ;   width delay determine width
                      00261 ;   width 5T+nT    
                      00262 draw_border macro width
                      00263     banksel TRISA
                      00264     bsf TRISA,CHROMA
                      00265     bcf TRISA,VIDEO_OUT
                      00266     tdelay width
                      00267     bsf TRISA,VIDEO_OUT
                      00268     endm
                      00269     
                      00270 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00271 ;  stack manipulation macros
                      00272 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00273 STACK_SIZE equ 16 ; size of argument stack
                      00274 #define T INDF0 ; top of argument stack
                      00275 #define SP FSR0 ; use FSR0 as stack pointer 
                      00276 ; push WREG on T
                      00277 pushw  macro
                      00278     movwi --SP
                      00279     endm
                      00280   
                      00281 ; pop WREG from T
                      00282 popw macro
                      00283     moviw SP++
                      00284     endm
                      00285     
                      00286 ; swap WREG with 
                      00287 swapw  macro
                      00288     xorwf T
                      00289     xorwf T,W
                      00290     xorwf T
                      00291     endm
                      00292 
                      00293 ; drop n elements from stack
                      00294 dropn macro n
                      00295     addfsr T,n
                      00296     endm
                      00297 
                      00298 ; copy nth element of stack to WREG
                      00299 ;  n {0..31}    
                      00300 pickn macro n
                      00301     moviw n[SP]
                      00302     endm
                      00303    
                      00304 ; copy WREG to nth element of stack
                      00305 ; n {0..31}
                      00306 pokew macro n
                      00307     movwi n[SP]
                      00308     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     
                      00310     
                      00311 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00312 ;;    variables
                      00313 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00314     
                      00315     udata 0x20
0020                  00316 stack res 16 ; arguments stack
                      00317 
                      00318 v_array   udata 0xA0
00A0                  00319 row1 res 1; brick wall row1
00A1                  00320 row2 res 1
00A2                  00321 row3 res 1
00A3                  00322 row4 res 1
00A4                  00323 row5 res 1
00A5                  00324 d1 res 1 ; score msd digit pixels
00A6                  00325 d2 res 1 ; score 2nd digit pixels
00A7                  00326 d3 res 1 ; score lsd digit pixels
00A8                  00327 balls res 1 ; number of recking balls available 
00A9                  00328 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00329   
                      00330     udata_shr
0000                  00331 flags  res 1 ; boolean variables
0001                  00332 lcount res 1 ; video field line counter
0002                  00333 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00334 task res 1 ; where in video phase 
0004                  00335 temp res 2 ; temporary storage
0006                  00336 paddle_pos res 1 
0007                  00337 ball_x res 1
0008                  00338 ball_y res 1
0009                  00339 ball_dx res 1
000A                  00340 ball_dy res 1
000B                  00341 ball_speed res 1
000C                  00342 score res 2 ; score stored in Binary Coded Decimal
000E                  00343 ball_timer res 1 
                      00344  
                      00345 ;; code 
                      00346 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00347     GOTO    START                   ; go to beginning of program
0001   0001           00348     reset
0002   0001           00349     reset
0003   0001           00350     reset
                      00351 
                      00352 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00353 ; interrupt service routine triggered by PWM3 period rollover
                      00354 ISR CODE 0x0004
0004                  00355 isr
0004   1A80           00356     btfsc flags, F_SYNC
0005   2???           00357     goto task_switch
                      00358  ; chroma sync
                      00359     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00360     banksel TRISA
000A   108C           00361     bcf TRISA,CHROMA
                      00362     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00363     bsf TRISA,CHROMA
                      00364     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00365 task_switch ; horizontal scan line used as round robin task scheduler   
0012   018A           00366     clrf PCLATH
0013   08??           00367     movfw task
0014   0782           00368     addwf PCL
0015   2???           00369     goto pre_vsync ;task 0, vertical pre-equalization pulses
0016   2???           00370     goto vsync ;task 1, vertical sync pulses
0017   2???           00371     goto post_vsync ;task 2, vertical post-equalization pulses
0018   2???           00372     goto vsync_end ;task 3, return to normal video line
0019   2???           00373     goto user_input ;task 4,  read button and paddle
001A   2???           00374     goto sound ;task 5, check sound timer expiration
001B   2???           00375     goto move_ball ;task 6, move recking ball.
001C   2???           00376     goto collision ; task 7, check for collision with brick wall and paddle
001D   2???           00377     goto video_first ; task 8, wait FIRST_VIDEO line.
001E   2???           00378     goto draw_score ;task 9,  draw score en ball count
001F   2???           00379     goto draw_top_wall ;task 10,  draw top wall
0020   2???           00380     goto draw_void ;task 11, draw play space
0021   2???           00381     goto draw_row1 ;task 12, draw top bricks row
0022   2???           00382     goto draw_row2 ;task 13, draw second bricks row
0023   2???           00383     goto draw_row3 ;task 14,  draw third bricks row
0024   2???           00384     goto draw_row4 ;task 15,  draw fourth bricks row
0025   2???           00385     goto draw_row5 ;task 16, draw fifth bricks row
0026   2???           00386     goto draw_empty;task 17, draw empty space down to bottom
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0027   2???           00387     goto draw_paddle ;task 18, draw paddle
0028   2???           00388     goto wait_field_end ;task 19, idle to end of video field
0029   0001           00389     reset ; error trap, task out of range
002A                  00390 isr_exit  
                      00391     porch_off
002A   0024               M     banksel WPUA
002B   120C               M     bcf WPUA,VIDEO_OUT
002C   003B           00392     banksel PWM3INTF
002D   103D           00393     bcf PWM3INTF,PRIF
002E   0009           00394     retfie
                      00395 
                      00396 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00397 ;;  all tasks routine are here            ;;
                      00398 ;;  each must be terminate by leave macro ;;    
                      00399 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00400     
                      00401 ; task 0, vertical synchronization pre equalization
002F                  00402 pre_vsync
002F   08??           00403     movfw slice
0030   1903           00404     skpnz
0031   2???           00405     goto set_presync
                      00406     next_task 6
0032   0A??               M     incf slice
0033   3006               M     movlw 6
0034   02??               M     subwf slice,W
0035   1D03               M     skpz
                          M     leave
0036   2???               M     goto isr_exit
0037   01??               M     clrf slice
0038   0A??               M     incf task
0039   3006               M     movlw 6
003A   07??               M     addwf lcount
                          M     leave
003B   2???               M     goto isr_exit
003C                  00407 set_presync    
003C   003B           00408     banksel PWM3DC
003D   3041           00409     movlw HEQUAL
003E   00B3           00410     movwf PWM3DCL
003F   01B4           00411     clrf PWM3DCH
0040   3003           00412     movlw high HALF_LINE
0041   00B6           00413     movwf PWM3PRH
0042   308D           00414     movlw low HALF_LINE
0043   00B5           00415     movwf PWM3PRL
0044   17BF           00416     bsf PWM3LDCON,7
0045   0A??           00417     incf slice
                      00418     leave
0046   2???               M     goto isr_exit
                      00419     
                      00420 ; task 1, vertical synchronization pulses
0047                  00421 vsync 
0047   08??           00422     movfw slice
0048   1903           00423     skpnz
0049   2???           00424     goto set_vsync
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00425     next_task 6
004A   0A??               M     incf slice
004B   3006               M     movlw 6
004C   02??               M     subwf slice,W
004D   1D03               M     skpz
                          M     leave
004E   2???               M     goto isr_exit
004F   01??               M     clrf slice
0050   0A??               M     incf task
0051   3006               M     movlw 6
0052   07??               M     addwf lcount
                          M     leave
0053   2???               M     goto isr_exit
0054                  00426 set_vsync
0054   003B           00427     banksel PWM3DC
0055   3008           00428     movlw low VSYNC_PULSE
0056   00B3           00429     movwf PWM3DCL
0057   3003           00430     movlw high VSYNC_PULSE
0058   00B4           00431     movwf PWM3DCH
0059   17BF           00432     bsf PWM3LDCON,7
005A   0A??           00433     incf slice
                      00434     leave
005B   2???               M     goto isr_exit
                      00435     
                      00436 ; task 2, vertical synchronisation post equalization pulses
005C                  00437 post_vsync
005C   08??           00438     movfw slice
005D   1903           00439     skpnz
005E   2???           00440     goto set_presync
005F   3006           00441     movlw 6
0060   02??           00442     subwf slice,W
0061   1903           00443     skpnz
0062   2???           00444     goto post_last
0063   0A??           00445     incf slice
                      00446     leave
0064   2???               M     goto isr_exit
0065                  00447 post_last    
0065   0A??           00448     incf task
0066   01??           00449     clrf slice
0067   1C80           00450     btfss flags, F_EVEN
                      00451     leave
0068   2???               M     goto isr_exit
                      00452     
                      00453 ; task 3, vertical synchronization completed, return to normal line
0069                  00454 vsync_end
0069   1280           00455     bcf flags, F_SYNC
006A   003B           00456     banksel PWM3DC
006B   3086           00457     movlw HSYNC
006C   00B3           00458     movwf PWM3DCL
006D   01B4           00459     clrf PWM3DCH
006E   3007           00460     movlw high HPERIOD
006F   00B6           00461     movwf PWM3PRH
0070   301B           00462     movlw low HPERIOD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0071   00B5           00463     movwf PWM3PRL
0072   17BF           00464     bsf PWM3LDCON,7
0073   0A??           00465     incf task
0074   3009           00466     movlw 9
0075   00??           00467     movwf lcount
                      00468     leave
0076   2???               M     goto isr_exit
                      00469 
                      00470 ; constants used in video display
                      00471 ; values are in Tcy for x dimension.
                      00472 ; values are in scan lines for y dimension.    
  0000001E            00473 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00474 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000018            00475 LEFT_MARGIN equ 24  ;  delay Tcy before any display
  00000130            00476 COURT_WIDTH equ 304 
  00000008            00477 BRICK_HEIGHT equ 8  
  00000004            00478 BORDER_WIDTH equ 4
  00000020            00479 PADDLE_WIDTH equ 32
  0000005D            00480 PADDLE_LIMIT equ 93
  00000000            00481 BALL_LEFT_BOUND equ 0 ; delay from left border
  00000064            00482 BALL_RIGHT_BOUND equ 100 ; delay inside borders
  0000003A            00483 BALL_TOP_BOUND equ 58 
  000000E6            00484 BALL_BOTTOM_BOUND equ 230 ;(BALL_TOP_BOUND+7*BRICK_HEIGHT+118)
                      00485  
                      00486  
                      00487 ;task 4, read button and paddle position
0077                  00488 user_input
0077   0A??           00489     incf task
0078   0A??           00490     incf lcount
0079   1900           00491     btfsc flags, F_START
007A   2???           00492     goto read_paddle
                      00493 ; read start button
007B   0022           00494     banksel LATA
007C   1D8C           00495     btfss LATA,START_BTN
007D   1500           00496     bsf flags, F_START
                      00497     leave
007E   2???               M     goto isr_exit
007F                  00498 read_paddle
007F   0021           00499     banksel TRISA
0080   140C           00500     bsf TRISA, PADDLE
0081   0021           00501     banksel ADCON0
0082   3003           00502     movlw 3
0083   009D           00503     movwf ADCON0
0084   189D           00504     btfsc ADCON0,NOT_DONE
0085   2???           00505     goto $-1
0086   101D           00506     bcf ADCON0,ADON
0087   081C           00507     movfw ADRESH
0088   00??           00508     movwf paddle_pos
0089   305D           00509     movlw PADDLE_LIMIT
008A   02??           00510     subwf paddle_pos,W
008B   1C03           00511     skpc
008C   3???           00512     bra $+3
008D   305D           00513     movlw PADDLE_LIMIT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008E   00??           00514     movwf paddle_pos
008F   0021           00515     banksel TRISA
0090   100C           00516     bcf TRISA, AUDIO
                      00517     leave
0091   2???               M     goto isr_exit
                      00518 
                      00519 ; task 5,  sound timer
0092                  00520 sound
0092   0A??           00521     incf task
0093   0A??           00522     incf lcount
0094   1E00           00523     btfss flags, F_SOUND
                      00524     leave
0095   2???               M     goto isr_exit
0096   002?           00525     banksel sound_timer
0097   0B??           00526     decfsz sound_timer
                      00527     leave
0098   2???               M     goto isr_exit
0099   1200           00528     bcf flags, F_SOUND
009A   003B           00529     banksel PWM2CON
009B   132B           00530     bcf PWM2CON,OE
009C   13AB           00531     bcf PWM2CON,EN
                      00532     leave
009D   2???               M     goto isr_exit
                      00533 
                      00534    
                      00535 ; task 6, move recking ball.   
009E                  00536 move_ball
009E   0B??           00537     decfsz ball_timer
009F   3???           00538     bra move_ball_exit
00A0   08??           00539     movfw ball_speed
00A1   00??           00540     movwf ball_timer
00A2   08??           00541     movfw ball_dx
00A3   07??           00542     addwf ball_x
00A4   1D03           00543     skpz
00A5   3???           00544     bra right_bound
00A6   09??           00545     comf ball_dx
00A7   3???           00546     bra move_y
00A8                  00547 right_bound    
00A8   08??           00548     movfw ball_x
00A9   3C64           00549     sublw BALL_RIGHT_BOUND
00AA   1803           00550     skpnc
00AB   3???           00551     bra move_y
00AC   03??           00552     decf ball_x
00AD   09??           00553     comf ball_dx
00AE                  00554 move_y
00AE   08??           00555     movfw ball_dy
00AF   07??           00556     addwf ball_y
00B0   303A           00557     movlw BALL_TOP_BOUND
00B1   02??           00558     subwf ball_y,W
00B2   1803           00559     skpnc
00B3   3???           00560     bra bottom_bound
00B4   09??           00561     comf ball_dy
00B5   0A??           00562     incf ball_dy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   3???           00563     bra move_ball_exit
00B7                  00564 bottom_bound
00B7   08??           00565     movfw ball_y
00B8   3CE6           00566     sublw BALL_BOTTOM_BOUND
00B9   1803           00567     skpnc
00BA   3???           00568     bra move_ball_exit
00BB   09??           00569     comf ball_dy
00BC   0A??           00570     incf ball_dy
00BD                  00571 move_ball_exit    
00BD   0A??           00572     incf task
00BE   0A??           00573     incf lcount
                      00574     leave
00BF   2???               M     goto isr_exit
                      00575 
00C0                  00576 collision
                      00577     
                      00578     
00C0                  00579 collision_exit
00C0   0A??           00580     incf task
00C1   0A??           00581     incf lcount
                      00582     leave
00C2   2???               M     goto isr_exit
                      00583    
                      00584 ; task 7, wait for first video line
00C3                  00585 video_first
00C3   0A??           00586     incf lcount
00C4   301E           00587     movlw FIRST_VIDEO_LINE
00C5   02??           00588     subwf lcount,W
00C6   1D03           00589     skpz
                      00590     leave
00C7   2???               M     goto isr_exit
00C8   01??           00591     clrf slice
00C9   0A??           00592     incf task
                      00593     leave
00CA   2???               M     goto isr_exit
                      00594    
                      00595 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00596 ; The following tasks are responsible to render video display.
                      00597 ; Each video line must be completed by setting color to black.
                      00598 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00599     
                      00600  
                      00601 ; task 8, draw score en ball count
00CB                  00602 draw_score ; lcount enter at 30 leave at 50
00CB   0021           00603     banksel TRISA
00CC   08??           00604     movfw slice
00CD   3689           00605     lsrf WREG
00CE   3689           00606     lsrf WREG
                      00607     pushw
00CF   0019               M     movwi --SP
00D0   300F           00608     movlw 0xf
00D1   05??           00609     andwf score+1,W
00D2   2???           00610     call digit_offset
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D3   0700           00611     addwf T,W
00D4   2???           00612     call digits
00D5   00??           00613     movwf d3
00D6   0E??           00614     swapf score+1,W
00D7   390F           00615     andlw 0xf
00D8   2???           00616     call digit_offset
00D9   0700           00617     addwf T,W
00DA   2???           00618     call digits
00DB   00??           00619     movwf d2
00DC   300F           00620     movlw 0xf
00DD   05??           00621     andwf score,W
00DE   2???           00622     call digit_offset
00DF   0700           00623     addwf T,W
00E0   2???           00624     call digits
00E1   2???           00625     call digit_row
00E2   08??           00626     movfw d2
00E3   2???           00627     call digit_row
00E4   08??           00628     movfw d3
00E5   2???           00629     call digit_row
                      00630     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
00E6   3014               M     movlw q
00E7   0B89               M     decfsz WREG
00E8   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00E9   120C           00631     bcf TRISA,VIDEO_OUT
                      00632     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
00EA   3001               M     movlw q
00EB   0B89               M     decfsz WREG
00EC   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
00ED   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00EE   160C           00633     bsf TRISA,VIDEO_OUT
                      00634     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EF   300A               M     movlw q
00F0   0B89               M     decfsz WREG
00F1   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00F2   08??           00635     movfw balls
00F3   2???           00636     call digit_offset
00F4   0700           00637     addwf T,W
00F5   2???           00638     call digits
00F6   2???           00639     call digit_row
00F7                  00640 score_exit
                      00641     next_task 5*4
00F7   0A??               M     incf slice
00F8   3014               M     movlw 5*4
00F9   02??               M     subwf slice,W
00FA   1D03               M     skpz
                          M     leave
00FB   2???               M     goto isr_exit
00FC   01??               M     clrf slice
00FD   0A??               M     incf task
00FE   3014               M     movlw 5*4
00FF   07??               M     addwf lcount
                          M     leave
0100   2???               M     goto isr_exit
                      00642 
  00000002            00643 digit_version equ 2
                      00644 ; display digit row    
0101                  00645 digit_row
                      00646  if digit_version==1
                      00647     rlf WREG
                      00648     skpnc
                      00649     bcf TRISA,VIDEO_OUT
                      00650     rlf WREG
                      00651     bra $+1
                      00652     bsf TRISA,VIDEO_OUT
                      00653     skpnc
                      00654     bcf TRISA,VIDEO_OUT
                      00655     rlf WREG
                      00656     bra $+1
                      00657     bsf TRISA,VIDEO_OUT
                      00658     skpnc
                      00659     bcf TRISA,VIDEO_OUT
                      00660     nop
                      00661     bra $+1
                      00662     bsf TRISA,VIDEO_OUT
                      00663  else
0101   0D89           00664     rlf WREG
0102   1803           00665     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0103   120C           00666     bcf TRISA,VIDEO_OUT
0104   1C03           00667     skpc
0105   160C           00668     bsf TRISA,VIDEO_OUT
0106   0D89           00669     rlf WREG
0107   1803           00670     skpnc
0108   120C           00671     bcf TRISA,VIDEO_OUT
0109   1C03           00672     skpc
010A   160C           00673     bsf TRISA,VIDEO_OUT
010B   0D89           00674     rlf WREG
010C   1803           00675     skpnc
010D   120C           00676     bcf TRISA,VIDEO_OUT
010E   1C03           00677     skpc
010F   160C           00678     bsf TRISA,VIDEO_OUT
0110   3???           00679     bra $+1
0111   3???           00680     bra $+1
0112   160C           00681     bsf TRISA,VIDEO_OUT
                      00682  endif
0113   0008           00683     return
                      00684     
                      00685 ; task 9,  draw top wall, 8 screen lines    
0114                  00686 draw_top_wall ;lcount enter at 50 leave at 58
0114   1C80           00687     btfss flags, F_EVEN
0115   3???           00688     bra top_wall_exit
0116   0021           00689     banksel TRISA
                      00690     tdelay LEFT_MARGIN-2
  0007                    M     variable q=(LEFT_MARGIN-2)/3
  0001                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
0117   3007               M     movlw q
0118   0B89               M     decfsz WREG
0119   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
011A   0000               M     nop
                          M     endif
                      00691     white
                          M ;    banksel TRISA
011B   148C               M     bsf TRISA,CHROMA
011C   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00692     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0069                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0002                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
011D   3069               M     movlw q
011E   0B89               M     decfsz WREG
011F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0120   2???               M     goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00693     black
                          M ;    banksel TRISA
0121   148C               M     bsf TRISA,CHROMA
0122   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0123                  00694 top_wall_exit
                      00695     next_task BRICK_HEIGHT
0123   0A??               M     incf slice
0124   3008               M     movlw BRICK_HEIGHT
0125   02??               M     subwf slice,W
0126   1D03               M     skpz
                          M     leave
0127   2???               M     goto isr_exit
0128   01??               M     clrf slice
0129   0A??               M     incf task
012A   3008               M     movlw BRICK_HEIGHT
012B   07??               M     addwf lcount
                          M     leave
012C   2???               M     goto isr_exit
                      00696 
                      00697 ; task 10,  only on even field draw vertical side bands.    
012D                  00698 draw_void ;enter at 58 leave at 74| 255-58
012D   1C80           00699     btfss flags, F_EVEN
012E   3???           00700     bra no_wall_draw
012F   08??           00701     movfw ball_y
0130   02??           00702     subwf lcount,W
0131   1C03           00703     skpc
0132   3???           00704     bra no_ball_dly
0133   3008           00705     movlw 8
0134   07??           00706     addwf ball_y,W
0135   02??           00707     subwf lcount,W
0136   1C03           00708     skpc
0137   3???           00709     bra yes_ball
0138   3???           00710     bra no_ball
0139                  00711 no_ball_dly
                      00712     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0139   3002               M     movlw q
013A   0B89               M     decfsz WREG
013B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013C                  00713 no_ball    
                      00714     tdelay LEFT_MARGIN-13
  0003                    M     variable q=(LEFT_MARGIN-13)/3
  0002                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
013C   3003               M     movlw q
013D   0B89               M     decfsz WREG
013E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
013F   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00715     draw_border BORDER_WIDTH
0140   0021               M     banksel TRISA
0141   148C               M     bsf TRISA,CHROMA
0142   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
0143   3001               M     movlw q
0144   0B89               M     decfsz WREG
0145   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0146   0000               M     nop
                          M     endif
0147   160C               M     bsf TRISA,VIDEO_OUT
                      00716     black
                          M ;    banksel TRISA
0148   148C               M     bsf TRISA,CHROMA
0149   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00717     tdelay COURT_WIDTH
  0065                    M     variable q=(COURT_WIDTH)/3
  0001                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
014A   3065               M     movlw q
014B   0B89               M     decfsz WREG
014C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
014D   0000               M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00718     draw_border BORDER_WIDTH
014E   0021               M     banksel TRISA
014F   148C               M     bsf TRISA,CHROMA
0150   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
0151   3001               M     movlw q
0152   0B89               M     decfsz WREG
0153   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0154   0000               M     nop
                          M     endif
0155   160C               M     bsf TRISA,VIDEO_OUT
0156   3???           00719     bra draw_void_exit
0157                  00720 yes_ball
0157   0021           00721     banksel TRISA
0158   08??           00722     movfw ball_x
0159   1903           00723     skpnz
015A   3???           00724     bra ball_at_left
015B   3C64           00725     sublw BALL_RIGHT_BOUND
015C   1903           00726     skpnz
015D   3???           00727     bra ball_at_right
015E                  00728 ball_in_middle    
                      00729     tdelay LEFT_MARGIN-17
  0002                    M     variable q=(LEFT_MARGIN-17)/3
  0001                    M     variable r=(LEFT_MARGIN-17)%3
                          M     if (q)
015E   3002               M     movlw q
015F   0B89               M     decfsz WREG
0160   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0161   0000               M     nop
                          M     endif
0162   120C           00730     bcf TRISA,VIDEO_OUT
                      00731     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0163   3001               M     movlw q
0164   0B89               M     decfsz WREG
0165   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0166   08??           00732     movfw ball_x
0167   160C           00733     bsf TRISA,VIDEO_OUT
0168   0B89           00734     decfsz WREG
0169   3???           00735     bra $-1
016A   120C           00736     bcf TRISA, VIDEO_OUT
                      00737     tdelay 8
  0002                    M     variable q=(8)/3
  0002                    M     variable r=(8)%3
                          M     if (q)
016B   3002               M     movlw q
016C   0B89               M     decfsz WREG
016D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
016E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
016F   160C           00738     bsf TRISA,VIDEO_OUT
0170   08??           00739     movfw ball_x
0171   3C64           00740     sublw BALL_RIGHT_BOUND
0172   0B89           00741     decfsz WREG
0173   3???           00742     bra $-1
                      00743 ;    nop
                      00744 ;    nop
0174   120C           00745     bcf TRISA,VIDEO_OUT
                      00746     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0175   3001               M     movlw q
0176   0B89               M     decfsz WREG
0177   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0178   0000               M     nop
                          M     endif
0179   160C           00747     bsf TRISA,VIDEO_OUT
017A   3???           00748     bra draw_void_exit
017B                  00749 ball_at_left
                      00750     tdelay LEFT_MARGIN-15
  0003                    M     variable q=(LEFT_MARGIN-15)/3
  0000                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017B   3003               M     movlw q
017C   0B89               M     decfsz WREG
017D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
017E   120C           00751     bcf TRISA,VIDEO_OUT
                      00752     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
017F   3004               M     movlw q
0180   0B89               M     decfsz WREG
0181   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0182   160C           00753     bsf TRISA,VIDEO_OUT
                      00754     tdelay 300
  0064                    M     variable q=(300)/3
  0000                    M     variable r=(300)%3
                          M     if (q)
0183   3064               M     movlw q
0184   0B89               M     decfsz WREG
0185   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0186   0000           00755     nop
0187   120C           00756     bcf TRISA,VIDEO_OUT
                      00757     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0188   3001               M     movlw q
0189   0B89               M     decfsz WREG
018A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
018B   0000               M     nop
                          M     endif
018C   160C           00758     bsf TRISA,VIDEO_OUT
018D   3???           00759     bra draw_void_exit
018E                  00760 ball_at_right
                      00761     tdelay LEFT_MARGIN-18
  0002                    M     variable q=(LEFT_MARGIN-18)/3
  0000                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
018E   3002               M     movlw q
018F   0B89               M     decfsz WREG
0190   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0191   120C           00762     bcf TRISA,VIDEO_OUT
                      00763     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0192   3001               M     movlw q
0193   0B89               M     decfsz WREG
0194   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0195   0000               M     nop
                          M     endif
0196   160C           00764     bsf TRISA,VIDEO_OUT
                      00765     tdelay 300
  0064                    M     variable q=(300)/3
  0000                    M     variable r=(300)%3
                          M     if (q)
0197   3064               M     movlw q
0198   0B89               M     decfsz WREG
0199   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
019A   0000           00766     nop
019B   120C           00767     bcf TRISA,VIDEO_OUT
                      00768     tdelay 12
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
019C   3004               M     movlw q
019D   0B89               M     decfsz WREG
019E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
019F   160C           00769     bsf TRISA,VIDEO_OUT
01A0                  00770 draw_void_exit    
01A0   0A??           00771     incf slice
01A1   0A??           00772     incf lcount
01A2   30FB           00773     movlw LAST_VIDEO_LINE+1
01A3   02??           00774     subwf lcount,W
01A4   1D03           00775     skpz
                      00776     leave
01A5   2???               M     goto isr_exit
01A6   01??           00777     clrf slice
01A7   3013           00778     movlw 19
01A8   00??           00779     movwf task
                      00780     leave
01A9   2???               M     goto isr_exit
                      00781     ;    next_task 125*BRICK_HEIGHT
01AA                  00782 no_wall_draw
                      00783     next_task 2*BRICK_HEIGHT
01AA   0A??               M     incf slice
01AB   3010               M     movlw 2*BRICK_HEIGHT
01AC   02??               M     subwf slice,W
01AD   1D03               M     skpz
                          M     leave
01AE   2???               M     goto isr_exit
01AF   01??               M     clrf slice
01B0   0A??               M     incf task
01B1   3010               M     movlw 2*BRICK_HEIGHT
01B2   07??               M     addwf lcount
                          M     leave
01B3   2???               M     goto isr_exit
                      00784     
                      00785 ; task 11, draw top brick row
01B4                  00786 draw_row1 ; lcount enter at 74 leave at 82
                      00787     chroma_ref
01B4   003B               M     banksel PWM1CON
01B5   121B               M     bcf PWM1CON,POL
01B6   0021           00788     banksel TRISA
01B7   08??           00789     movfw row1
01B8   00??           00790     movwf temp
                      00791     tdelay LEFT_MARGIN-3
  0007                    M     variable q=(LEFT_MARGIN-3)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
01B9   3007               M     movlw q
01BA   0B89               M     decfsz WREG
01BB   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00792 ;    draw_border BORDER_WIDTH
                      00793     draw_wall yellow
  0000                    M     local next_brick
01BC   3008               M     movlw 8
                          M     pushw
01BD   0019               M     movwi --SP
01BE                      M next_brick    
01BE   35??               M     lslf temp
                          M     draw_brick yellow
  0000                    M     local no_brick
  0000                    M     local brick_delay
01BF   1C03               M     skpc
01C0   3???               M     bra no_brick
                          M     yellow
                          M ;    chroma_ref
                          M ;    banksel TRISA
01C1   120C               M     bcf TRISA,VIDEO_OUT
01C2   108C               M     bcf TRISA,CHROMA
01C3   3???               M     bra brick_delay
01C4                      M no_brick
01C4   0000               M     nop
                          M     black
                          M ;    banksel TRISA
01C5   148C               M     bsf TRISA,CHROMA
01C6   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
01C7   3???               M     bra brick_delay 
01C8                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0002                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
01C8   3009               M     movlw q
01C9   0B89               M     decfsz WREG
01CA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01CB   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
01CC   0B80               M     decfsz T
01CD   3???               M     bra next_brick
                          M     dropn 1
01CE   3101               M     addfsr T,1
                      00794     black
                          M ;    banksel TRISA
01CF   148C               M     bsf TRISA,CHROMA
01D0   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00795     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
01D1   3001               M     movlw q
01D2   0B89               M     decfsz WREG
01D3   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00796 ;    draw_border BORDER_WIDTH
                      00797     next_task BRICK_HEIGHT
01D4   0A??               M     incf slice
01D5   3008               M     movlw BRICK_HEIGHT
01D6   02??               M     subwf slice,W
01D7   1D03               M     skpz
                          M     leave
01D8   2???               M     goto isr_exit
01D9   01??               M     clrf slice
01DA   0A??               M     incf task
01DB   3008               M     movlw BRICK_HEIGHT
01DC   07??               M     addwf lcount
                          M     leave
01DD   2???               M     goto isr_exit
                      00798     
                      00799 ; task 12, draw 2nd brick row    
01DE                  00800 draw_row2 ;lcount enter at 82 leave at 90
                      00801     chroma_invert
01DE   003B               M     banksel PWM1CON
01DF   161B               M     bsf PWM1CON,POL
01E0   002?           00802     banksel row2
01E1   08??           00803     movfw row2
01E2   00??           00804     movwf temp
                      00805     tdelay LEFT_MARGIN-3
  0007                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
01E3   3007               M     movlw q
01E4   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E5   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00806 ;    draw_border BORDER_WIDTH
                      00807     draw_wall cyan
  0000                    M     local next_brick
01E6   3008               M     movlw 8
                          M     pushw
01E7   0019               M     movwi --SP
01E8                      M next_brick    
01E8   35??               M     lslf temp
                          M     draw_brick cyan
  0000                    M     local no_brick
  0000                    M     local brick_delay
01E9   1C03               M     skpc
01EA   3???               M     bra no_brick
                          M     cyan
                          M ;    chroma_invert
                          M ;    banksel TRISA
01EB   120C               M     bcf TRISA,VIDEO_OUT
01EC   108C               M     bcf TRISA,CHROMA
01ED   3???               M     bra brick_delay
01EE                      M no_brick
01EE   0000               M     nop
                          M     black
                          M ;    banksel TRISA
01EF   148C               M     bsf TRISA,CHROMA
01F0   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
01F1   3???               M     bra brick_delay 
01F2                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0002                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
01F2   3009               M     movlw q
01F3   0B89               M     decfsz WREG
01F4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01F5   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F6   0B80               M     decfsz T
01F7   3???               M     bra next_brick
                          M     dropn 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F8   3101               M     addfsr T,1
                      00808     black
                          M ;    banksel TRISA
01F9   148C               M     bsf TRISA,CHROMA
01FA   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00809     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
01FB   3001               M     movlw q
01FC   0B89               M     decfsz WREG
01FD   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00810 ;    draw_border BORDER_WIDTH
                      00811     next_task BRICK_HEIGHT
01FE   0A??               M     incf slice
01FF   3008               M     movlw BRICK_HEIGHT
0200   02??               M     subwf slice,W
0201   1D03               M     skpz
                          M     leave
0202   2???               M     goto isr_exit
0203   01??               M     clrf slice
0204   0A??               M     incf task
0205   3008               M     movlw BRICK_HEIGHT
0206   07??               M     addwf lcount
                          M     leave
0207   2???               M     goto isr_exit
                      00812 
                      00813 ; task 13, draw 3rd brick row    
0208                  00814 draw_row3 ; lcount enter at 90 leave at 98
                      00815 ;    btfss flags, F_EVEN
                      00816 ;    bra row3_exit
                      00817     chroma_ref
0208   003B               M     banksel PWM1CON
0209   121B               M     bcf PWM1CON,POL
020A   002?           00818     banksel row3
020B   08??           00819     movfw row3
020C   00??           00820     movwf temp
                      00821     tdelay LEFT_MARGIN-3
  0007                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
020D   3007               M     movlw q
020E   0B89               M     decfsz WREG
020F   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00822 ;    draw_border BORDER_WIDTH
                      00823     draw_wall green
  0000                    M     local next_brick
0210   3008               M     movlw 8
                          M     pushw
0211   0019               M     movwi --SP
0212                      M next_brick    
0212   35??               M     lslf temp
                          M     draw_brick green
  0000                    M     local no_brick
  0000                    M     local brick_delay
0213   1C03               M     skpc
0214   3???               M     bra no_brick
                          M     green
                          M ;    chroma_ref
                          M ;    banksel TRISA
0215   160C               M     bsf TRISA, VIDEO_OUT
0216   108C               M     bcf TRISA,CHROMA
0217   3???               M     bra brick_delay
0218                      M no_brick
0218   0000               M     nop
                          M     black
                          M ;    banksel TRISA
0219   148C               M     bsf TRISA,CHROMA
021A   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
021B   3???               M     bra brick_delay 
021C                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0002                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
021C   3009               M     movlw q
021D   0B89               M     decfsz WREG
021E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
021F   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0220   0B80               M     decfsz T
0221   3???               M     bra next_brick
                          M     dropn 1
0222   3101               M     addfsr T,1
                      00824     black
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;    banksel TRISA
0223   148C               M     bsf TRISA,CHROMA
0224   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00825     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0225   3001               M     movlw q
0226   0B89               M     decfsz WREG
0227   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00826 ;    draw_border BORDER_WIDTH
0228                  00827 row3_exit    
                      00828     next_task BRICK_HEIGHT
0228   0A??               M     incf slice
0229   3008               M     movlw BRICK_HEIGHT
022A   02??               M     subwf slice,W
022B   1D03               M     skpz
                          M     leave
022C   2???               M     goto isr_exit
022D   01??               M     clrf slice
022E   0A??               M     incf task
022F   3008               M     movlw BRICK_HEIGHT
0230   07??               M     addwf lcount
                          M     leave
0231   2???               M     goto isr_exit
                      00829     
                      00830 ; task 14, draw 4th brick row    
0232                  00831 draw_row4 ; lcount enter at 98 leave at 106
                      00832     chroma_invert
0232   003B               M     banksel PWM1CON
0233   161B               M     bsf PWM1CON,POL
0234   002?           00833     banksel row4
0235   08??           00834     movfw row4
0236   00??           00835     movwf temp
                      00836     tdelay LEFT_MARGIN-3
  0007                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
0237   3007               M     movlw q
0238   0B89               M     decfsz WREG
0239   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
                      00837 ;    draw_border BORDER_WIDTH
                      00838     draw_wall dark_blue
  0000                    M     local next_brick
023A   3008               M     movlw 8
                          M     pushw
023B   0019               M     movwi --SP
023C                      M next_brick    
023C   35??               M     lslf temp
                          M     draw_brick dark_blue
  0000                    M     local no_brick
  0000                    M     local brick_delay
023D   1C03               M     skpc
023E   3???               M     bra no_brick
                          M     dark_blue
                          M ;    chroma_invert
                          M ;    banksel TRISA
023F   160C               M     bsf TRISA, VIDEO_OUT
0240   108C               M     bcf TRISA,CHROMA
0241   3???               M     bra brick_delay
0242                      M no_brick
0242   0000               M     nop
                          M     black
                          M ;    banksel TRISA
0243   148C               M     bsf TRISA,CHROMA
0244   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0245   3???               M     bra brick_delay 
0246                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0002                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0246   3009               M     movlw q
0247   0B89               M     decfsz WREG
0248   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0249   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
024A   0B80               M     decfsz T
024B   3???               M     bra next_brick
                          M     dropn 1
024C   3101               M     addfsr T,1
                      00839     black
                          M ;    banksel TRISA
024D   148C               M     bsf TRISA,CHROMA
024E   160C               M     bsf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;    goto $+1
                      00840     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
024F   3001               M     movlw q
0250   0B89               M     decfsz WREG
0251   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00841 ;    draw_border BORDER_WIDTH
                      00842     next_task BRICK_HEIGHT
0252   0A??               M     incf slice
0253   3008               M     movlw BRICK_HEIGHT
0254   02??               M     subwf slice,W
0255   1D03               M     skpz
                          M     leave
0256   2???               M     goto isr_exit
0257   01??               M     clrf slice
0258   0A??               M     incf task
0259   3008               M     movlw BRICK_HEIGHT
025A   07??               M     addwf lcount
                          M     leave
025B   2???               M     goto isr_exit
                      00843 
                      00844 ; task 15, draw 5th brick row    
025C                  00845 draw_row5 ; lcount enter at 106 leave at 114
025C   002?           00846     banksel row5
025D   08??           00847     movfw row5
025E   00??           00848     movwf temp
                      00849     tdelay LEFT_MARGIN-2
  0007                    M     variable q=(LEFT_MARGIN-2)/3
  0001                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
025F   3007               M     movlw q
0260   0B89               M     decfsz WREG
0261   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0262   0000               M     nop
                          M     endif
                      00850 ;    draw_border BORDER_WIDTH
                      00851     draw_wall white
  0000                    M     local next_brick
0263   3008               M     movlw 8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     pushw
0264   0019               M     movwi --SP
0265                      M next_brick    
0265   35??               M     lslf temp
                          M     draw_brick white
  0000                    M     local no_brick
  0000                    M     local brick_delay
0266   1C03               M     skpc
0267   3???               M     bra no_brick
                          M     white
                          M ;    banksel TRISA
0268   148C               M     bsf TRISA,CHROMA
0269   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
026A   3???               M     bra brick_delay
026B                      M no_brick
026B   0000               M     nop
                          M     black
                          M ;    banksel TRISA
026C   148C               M     bsf TRISA,CHROMA
026D   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
026E   3???               M     bra brick_delay 
026F                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0002                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
026F   3009               M     movlw q
0270   0B89               M     decfsz WREG
0271   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0272   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0273   0B80               M     decfsz T
0274   3???               M     bra next_brick
                          M     dropn 1
0275   3101               M     addfsr T,1
                      00852     black
                          M ;    banksel TRISA
0276   148C               M     bsf TRISA,CHROMA
0277   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00853     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0278   3001               M     movlw q
0279   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00854 ;    draw_border BORDER_WIDTH
                      00855     black
                          M ;    banksel TRISA
027B   148C               M     bsf TRISA,CHROMA
027C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00856     next_task BRICK_HEIGHT
027D   0A??               M     incf slice
027E   3008               M     movlw BRICK_HEIGHT
027F   02??               M     subwf slice,W
0280   1D03               M     skpz
                          M     leave
0281   2???               M     goto isr_exit
0282   01??               M     clrf slice
0283   0A??               M     incf task
0284   3008               M     movlw BRICK_HEIGHT
0285   07??               M     addwf lcount
                          M     leave
0286   2???               M     goto isr_exit
                      00857 
                      00858 ; task 16,draw all rows between paddle and lower brick row    
0287                  00859 draw_empty ; lcount enter at 114 leave at LAST_VIDEO-112-BRICK_HEIGHT 
                      00860     tdelay LEFT_MARGIN
  0008                    M     variable q=(LEFT_MARGIN)/3
  0000                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0287   3008               M     movlw q
0288   0B89               M     decfsz WREG
0289   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00861 ;    draw_border BORDER_WIDTH
                      00862     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
028A   306A               M     movlw q
028B   0B89               M     decfsz WREG
028C   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
028D   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00863 ;    draw_border BORDER_WIDTH
                      00864     black
                          M ;    banksel TRISA
028E   148C               M     bsf TRISA,CHROMA
028F   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00865     next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
0290   0A??               M     incf slice
0291   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
0292   02??               M     subwf slice,W
0293   1D03               M     skpz
                          M     leave
0294   2???               M     goto isr_exit
0295   01??               M     clrf slice
0296   0A??               M     incf task
0297   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
0298   07??               M     addwf lcount
                          M     leave
0299   2???               M     goto isr_exit
                      00866 
                      00867     
                      00868 ; task 18, draw paddle at bottom screen    
029A                  00869 draw_paddle
                      00870     tdelay LEFT_MARGIN+2
  0008                    M     variable q=(LEFT_MARGIN+2)/3
  0002                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
029A   3008               M     movlw q
029B   0B89               M     decfsz WREG
029C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
029D   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
029E   08??           00871     movfw paddle_pos
029F   1903           00872     skpnz
02A0   3???           00873     bra $+3
02A1   0B89           00874     decfsz WREG
02A2   3???           00875     bra $-1
02A3   0021           00876     banksel TRISA
02A4   120C           00877     bcf TRISA,VIDEO_OUT
                      00878     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
02A5   300A               M     movlw q
02A6   0B89               M     decfsz WREG
02A7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
02A8   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02A9   160C           00879     bsf TRISA,VIDEO_OUT
                      00880 ;    draw_border BORDER_WIDTH
                      00881 ;    movfw paddle_pos
                      00882 ;    skpnz
                      00883 ;    bcf TRISA,VIDEO_OUT
                      00884 ;    skpnz
                      00885 ;    bra at_left+2
                      00886 ;    decfsz WREG
                      00887 ;    bra $-1
                      00888 ;at_left
                      00889 ;    nop
                      00890 ;    bcf TRISA,VIDEO_OUT
                      00891 ;    tdelay PADDLE_WIDTH
                      00892 ;    movfw paddle_pos
                      00893 ;    sublw PADDLE_LIMIT
                      00894 ;    nop
                      00895 ;    skpnz
                      00896 ;    bra $+5
                      00897 ;    nop
                      00898 ;    bsf TRISA,VIDEO_OUT
                      00899 ;    decfsz WREG
                      00900 ;    bra $-1
                      00901 ;    draw_border BORDER_WIDTH
                      00902     next_task BRICK_HEIGHT
02AA   0A??               M     incf slice
02AB   3008               M     movlw BRICK_HEIGHT
02AC   02??               M     subwf slice,W
02AD   1D03               M     skpz
                          M     leave
02AE   2???               M     goto isr_exit
02AF   01??               M     clrf slice
02B0   0A??               M     incf task
02B1   3008               M     movlw BRICK_HEIGHT
02B2   07??               M     addwf lcount
                          M     leave
02B3   2???               M     goto isr_exit
                      00903 
                      00904 ; task 19,  wait end of this field, reset task to zero    
02B4                  00905 wait_field_end
02B4   0A??           00906     incf lcount
02B5   1903           00907     skpnz
02B6   1400           00908     bsf flags, F_HI_LINE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B7   1800           00909     btfsc flags, F_HI_LINE
02B8   2???           00910     goto hi_line
                      00911     leave
02B9   2???               M     goto isr_exit
02BA                  00912 hi_line
02BA   1880           00913     btfsc flags,F_EVEN
02BB   2???           00914     goto even_field
02BC   3005           00915     movlw 5
02BD   02??           00916     subwf lcount,W
02BE   1D03           00917     skpz
                      00918     leave
02BF   2???               M     goto isr_exit
02C0   2???           00919     goto field_end
02C1                  00920 even_field
02C1   3006           00921     movlw 6
02C2   02??           00922     subwf lcount,W
02C3   1D03           00923     skpz
                      00924     leave
02C4   2???               M     goto isr_exit
                      00925 ; even field last line is half_line    
                      00926 ; set PWM3 for line 263 half-line
02C5   003B           00927     banksel PWM3DC
02C6   3003           00928     movlw high HALF_LINE
02C7   00B6           00929     movwf PWM3PRH
02C8   308D           00930     movlw low HALF_LINE
02C9   00B5           00931     movwf PWM3PRL
02CA   17BF           00932     bsf PWM3LDCON,7
02CB                  00933 field_end
02CB   01??           00934     clrf task
02CC   01??           00935     clrf slice
02CD   01??           00936     clrf lcount
02CE   1000           00937     bcf flags, F_HI_LINE
02CF   1680           00938     bsf flags, F_SYNC
                      00939 ; toggle odd/even field flag    
02D0   3002           00940     movlw 1<<F_EVEN
02D1   06??           00941     xorwf flags
                      00942     leave
02D2   2???               M     goto isr_exit
                      00943 
                      00944 ; helper functions
                      00945 
                      00946 ; add 2 BCD digits
                      00947 ; parameters:
                      00948 ;   WREG -> first digit
                      00949 ;   T -> second digit
                      00950 ;   C -> carry from previous digits add    
                      00951 ; output:
                      00952 ;   T -> sum
                      00953 ;   C -> overflow
02D3                  00954 bcd_add
02D3   3D80           00955     addwfc T
02D4   300A           00956     movlw 10
02D5   0200           00957     subwf T,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D6   1C03           00958     skpc
02D7   0008           00959     return
02D8   3006           00960     movlw 6
02D9   0780           00961     addwf T
02DA   300F           00962     movlw 15
02DB   0580           00963     andwf T
02DC   1403           00964     bsf STATUS,C
02DD   0008           00965     return
                      00966     
                      00967 ; increment user score
                      00968 ; This is a BCD addition where a single digit is added to score.   
                      00969 ; score is stored as big indian
                      00970 ; argument: ( n -- )
                      00971 ;   WREG ->  bdc digit to add to score variable
02DE                  00972 inc_score
                      00973     pushw
02DE   0019               M     movwi --SP
02DF   1003           00974     clrc
02E0   300F           00975     movlw 15
02E1   05??           00976     andwf score+1,W
02E2   2???           00977     call bcd_add
02E3   0103           00978     clrw 
                      00979     pushw
02E4   0019               M     movwi --SP
02E5   0E??           00980     swapf score+1,W
02E6   390F           00981     andlw 15
02E7   2???           00982     call bcd_add
02E8   1803           00983     skpnc
02E9   0A??           00984     incf score
                      00985     popw
02EA   0012               M     moviw SP++
02EB   0E89           00986     swapf WREG
02EC   0400           00987     iorwf T,W
02ED   00??           00988     movwf score+1
                      00989     dropn 1
02EE   3101               M     addfsr T,1
02EF   0008           00990     return
                      00991     
                      00992 ;***********************************
                      00993 ; digit_offset, compute digit position in 'digits' table
                      00994 ;   position = digit * 5
                      00995 ; 
                      00996 ; input: WREG -> digit value {0..9}
                      00997 ;         
                      00998 ; output: WREG -> displacement in table
                      00999 ;***********************************
02F0                  01000 digit_offset    
                      01001     pushw 
02F0   0019               M     movwi --SP
02F1   3589           01002     lslf WREG
02F2   3589           01003     lslf WREG
02F3   0780           01004     addwf T
                      01005     popw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F4   0012               M     moviw SP++
02F5   0008           01006     return
                      01007     
02F6                  01008 init_brick_wall
02F6   30??           01009     movlw high row1
02F7   0087           01010     movwf FSR1H
02F8   30??           01011     movlw low row1
02F9   0086           01012     movwf FSR1L
02FA   3005           01013     movlw 5
02FB   00??           01014     movwf temp
02FC   30FF           01015     movlw 0xff
02FD                  01016 ibw    
02FD   001E           01017     movwi FSR1++
02FE   0B??           01018     decfsz temp
02FF   3???           01019     bra ibw
0300   0008           01020     return
                      01021 
                      01022 ; delay by TIMER0
                      01023 ; parameter
                      01024 ;   WREG -> 2*Tcy+7cy    
0301                  01025 t0delay 
0301   0989           01026     comf WREG
0302   0095           01027     movwf TMR0
0303   110B           01028     bcf INTCON,T0IF
0304   1D0B           01029     btfss INTCON,T0IF
0305   3???           01030     bra $-1
0306   0008           01031     return
                      01032     
                      01033 MAIN_PROG CODE                      ; let linker place main program
                      01034 
0000                  01035 START
                      01036 ; clear common RAM
0000   0185           01037     clrf FSR0H
0001   3070           01038     movlw 0x70
0002   0084           01039     movwf FSR0L
0003   0103           01040     clrw
0004   001A           01041     movwi FSR0++
0005   1F84           01042     btfss FSR0L,7
0006   3???           01043     bra $-2
                      01044 ; clear banked RAM
0007   0184           01045     clrf FSR0L
0008   3020           01046     movlw 0x20
0009   0085           01047     movwf FSR0H
000A   0103           01048     clrw 
000B   001A           01049     movwi FSR0++
000C   1C05           01050     btfss FSR0H,0
000D   3???           01051     bra $-2
000E   2???           01052     call init_brick_wall
                      01053 ;   setup arguments stack pointer
000F   30??           01054     movlw high (stack+STACK_SIZE)
0010   0085           01055     movwf FSR0H
0011   30??           01056     movlw low (stack+STACK_SIZE)
0012   0084           01057     movwf FSR0L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01058 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01059 ; TIMER0 prescale 1:2
0013   3050           01060     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0014   0095           01061     movwf OPTION_REG
                      01062 ; disable analog inputs, except AN0
0015   0023           01063     banksel ANSELA
0016   018C           01064     clrf ANSELA
                      01065 ; paddle potentiometer input     
0017   140C           01066     bsf ANSELA,PADDLE
0018   0021           01067     banksel ADCON1
0019   3020           01068     movlw (2<<ADCS0)
001A   009E           01069     movwf ADCON1
                      01070 ; pin setup
001B   0024           01071     banksel WPUA
001C   018C           01072     clrf WPUA
001D   158C           01073     bsf WPUA,START_BTN
001E   0021           01074     banksel TRISA
001F   110C           01075     bcf TRISA,SYNC_OUT
0020   0022           01076     banksel LATA
0021   160C           01077     bsf LATA, VIDEO_OUT
                      01078 ; PWM1 chroma signal on RA1
0022   003B           01079     banksel PWM1CON
0023   019F           01080     clrf PWM1LDCON
0024   0191           01081     clrf PWM1PHL
0025   0192           01082     clrf PWM1PHH
0026   0197           01083     clrf PWM1OFL
0027   0198           01084     clrf PWM1OFH
0028   0196           01085     clrf PWM1PRH
0029   3007           01086     movlw 7
002A   0095           01087     movwf PWM1PRL
002B   3004           01088     movlw 4
002C   0093           01089     movwf PWM1DCL
002D   0194           01090     clrf PWM1DCH
002E   179F           01091     bsf PWM1LDCON,7
002F   30C0           01092     movlw (1<<EN)|(1<<OE)
0030   009B           01093     movwf PWM1CON
                      01094 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0031   003B           01095     banksel PWM3CON
0032   01BF           01096     clrf PWM3LDCON
0033   01B1           01097     clrf PWM3PHL
0034   01B2           01098     clrf PWM3PHH
0035   01B7           01099     clrf PWM3OFL
0036   01B8           01100     clrf PWM3OFH
0037   301B           01101     movlw low HPERIOD
0038   00B5           01102     movwf PWM3PRL
0039   3007           01103     movlw high HPERIOD
003A   00B6           01104     movwf PWM3PRH
003B   3086           01105     movlw HSYNC
003C   00B3           01106     movwf PWM3DCL
003D   01B4           01107     clrf PWM3DCH
003E   30D0           01108     movlw (1<<EN)|(1<<OE)|(1<<POL)
003F   00BB           01109     movwf PWM3CON
0040   17BF           01110     bsf PWM3LDCON,7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0041   143C           01111     bsf PWM3INTE,PRIE
0042   0020           01112     banksel PIR3
0043   1313           01113     bcf PIR3,PWM3IF
0044   0021           01114     banksel PIE3
0045   1713           01115     bsf PIE3,PWM3IE
0046   170B           01116     bsf INTCON,PEIE
0047   178B           01117     bsf INTCON,GIE
0048   1480           01118     bsf flags, F_EVEN
0049   1680           01119     bsf flags, F_SYNC
                      01120 ; test code
004A   002?           01121     banksel balls
004B   3003           01122     movlw 3
004C   00??           01123     movwf balls
004D   3064           01124     movlw BALL_RIGHT_BOUND
004E   00??           01125     movwf ball_x
                      01126 ;    clrf ball_x
004F   03??           01127     decf ball_x
0050   30BE           01128     movlw BALL_BOTTOM_BOUND-40
0051   00??           01129     movwf ball_y
0052   0A??           01130     incf ball_dx
0053   3004           01131     movlw 4
0054   00??           01132     movwf ball_dy
0055   3002           01133     movlw 2
0056   00??           01134     movwf ball_speed
0057                  01135 test_loop
0057   303C           01136     movlw 60
0058   002?           01137     banksel sound_timer
0059   00??           01138     movwf sound_timer
005A   1600           01139     bsf flags, F_SOUND
005B   1A00           01140     btfsc flags, F_SOUND
005C   3???           01141     bra $-1
005D   3001           01142     movlw 1
005E   2???           01143     call inc_score
005F   1C80           01144     btfss score,1
0060   3???           01145     bra test_loop
0061   01??           01146     clrf score
0062   01??           01147     clrf score+1
0063   3???           01148     bra test_loop
                      01149 ; end test code    
                      01150  ; all processing done in ISR    
0064   2???           01151     goto $
                      01152 
                      01153 ; digits character table
0065                  01154 digits
0065   000B           01155     brw
0066   3440 34A0 34A0 01156     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006B   3440 34C0 3440 01157     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0070   34E0 3420 34C0 01158     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0075   34E0 3420 34C0 01159     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007A   34A0 34A0 34E0 01160     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
007F   34E0 3480 34E0 01161     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0084   34C0 3480 34E0 01162     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0089   34E0 3420 3420 01163     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
008E   34E0 34A0 34E0 01164     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0093   34E0 34A0 34E0 01165     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
                      01166     
                      01167     
                      01168 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01169 max_score 
                      01170  
3FA7 3EFF             01171     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000E6
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000064
BALL_TOP_BOUND                    0000003A
BAUDCON                           0000019F
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       0000001D
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       00000130
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000003
F_SOUND                           00000004
F_START                           00000002
F_SYNC                            00000005
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000018
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000005D
PADDLE_WIDTH                      00000020
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

RCSTA                             0000019D
RD                                00000000
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_0085                         00000085
_ISR_008C                         0000008C
_ISR_00E8                         000000E8
_ISR_00EC                         000000EC
_ISR_00ED                         000000ED
_ISR_00F1                         000000F1
_ISR_0110                         00000110
_ISR_0111                         00000111
_ISR_0119                         00000119
_ISR_011F                         0000011F
_ISR_0120                         00000120
_ISR_013B                         0000013B
_ISR_013E                         0000013E
_ISR_013F                         0000013F
_ISR_0145                         00000145
_ISR_014C                         0000014C
_ISR_0153                         00000153
_ISR_0160                         00000160
_ISR_0165                         00000165
_ISR_0169                         00000169
_ISR_016D                         0000016D
_ISR_016E                         0000016E
_ISR_0173                         00000173
_ISR_0177                         00000177
_ISR_017D                         0000017D
_ISR_0181                         00000181
_ISR_0185                         00000185
_ISR_018A                         0000018A
_ISR_0190                         00000190
_ISR_0194                         00000194
_ISR_0199                         00000199
_ISR_019E                         0000019E
_ISR_01BB                         000001BB
_ISR_01CA                         000001CA
_ISR_01CB                         000001CB
_ISR_01D3                         000001D3
_ISR_01E5                         000001E5
_ISR_01F4                         000001F4
_ISR_01F5                         000001F5
_ISR_01FD                         000001FD
_ISR_020F                         0000020F
_ISR_021E                         0000021E
_ISR_021F                         0000021F
_ISR_0227                         00000227
_ISR_0239                         00000239
_ISR_0248                         00000248
_ISR_0249                         00000249
_ISR_0251                         00000251
_ISR_0261                         00000261
_ISR_0271                         00000271
_ISR_0272                         00000272
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_027A                         0000027A
_ISR_0289                         00000289
_ISR_028C                         0000028C
_ISR_028D                         0000028D
_ISR_029C                         0000029C
_ISR_029D                         0000029D
_ISR_02A0                         000002A0
_ISR_02A2                         000002A2
_ISR_02A7                         000002A7
_ISR_02A8                         000002A8
_ISR_0305                         00000305
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005C                   0000005C
_MAIN_PROG_0064                   00000064
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      0000017B
ball_at_right                     0000018E
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    0000015E
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000A8
bcd_add                           000002D3
black                             
bottom_bound                      000000B7
case                              
chroma_invert                     
chroma_off                        
chroma_on                         
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

chroma_ref                        
collision                         000000C0
collision_exit                    000000C0
cyan                              
d1                                000000A5
d2                                000000A6
d3                                000000A7
dark_blue                         
digit_offset                      000002F0
digit_row                         00000101
digit_version                     00000002
digits                            00000065
draw_border                       
draw_brick                        
draw_empty                        00000287
draw_paddle                       0000029A
draw_row1                         000001B4
draw_row2                         000001DE
draw_row3                         00000208
draw_row4                         00000232
draw_row5                         0000025C
draw_score                        000000CB
draw_top_wall                     00000114
draw_void                         0000012D
draw_void_exit                    000001A0
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        000002C1
field_end                         000002CB
flags                             00000000
green                             
hi_line                           000002BA
ibw                               000002FD
inc_score                         000002DE
init_brick_wall                   000002F6
isr                               00000004
isr_exit                          0000002A
lcount                            00000001
leave                             
max_score                         00000780
move_ball                         0000009E
move_ball_exit                    000000BD
move_y                            000000AE
next_task                         
no_ball                           0000013C
no_ball_dly                       00000139
no_wall_draw                      000001AA
paddle_pos                        00000006
pickn                             
pokew                             
popw                              
porch_off                         
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-7-2019  12:20:36         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

porch_on                          
post_last                         00000065
post_vsync                        0000005C
pre_vsync                         0000002F
pushw                             
q                                 0000000A
r                                 00000002
read_paddle                       0000007F
right_bound                       000000A8
row1                              000000A0
row2                              000000A1
row3                              000000A2
row3_exit                         00000228
row4                              000000A3
row5                              000000A4
score                             0000000C
score_exit                        000000F7
set_presync                       0000003C
set_vsync                         00000054
slice                             00000002
sound                             00000092
sound_timer                       000000A9
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000301
task                              00000003
task_switch                       00000012
tdelay                            
temp                              00000004
test_loop                         00000057
top_wall_exit                     00000123
user_input                        00000077
video_first                       000000C3
vsync                             00000047
vsync_end                         00000069
wait_field_end                    000002B4
white                             
yellow                            
yes_ball                          00000157

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   277 suppressed

