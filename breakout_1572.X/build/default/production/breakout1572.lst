MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright Jacques Deschênes 2019 
                      00002 ; This file is part of breakout_1572.
                      00003 ;
                      00004 ;     breakout_1572 is free software: you can redistribute it and/or modify
                      00005 ;     it under the terms of the GNU General Public License as published by
                      00006 ;     the Free Software Foundation, either version 3 of the License, or
                      00007 ;     (at your option) any later version.
                      00008 ;
                      00009 ;     breakout_1572 is distributed in the hope that it will be useful,
                      00010 ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00011 ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00012 ;     GNU General Public License for more details.
                      00013 ;
                      00014 ;     You should have received a copy of the GNU General Public License
                      00015 ;     along with breakout_1572.  If not, see <http://www.gnu.org/licenses/>.
                      00016 
                      00017 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00018 ;                BREAKOUT game
                      00019 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00020 ;             IMPLEMENTATION NOTES
                      00021 ;  PWM3 is used to generate NTSC synchronization signal.
                      00022 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00023 ;  Inside this interrupt there is a round robin task scheduler.
                      00024 ;  All video display and game logic is done inside these tasks.
                      00025 ;  After MCU initialization the main() procedure is an empty loop.
                      00026 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00027 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00028 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00029 ;  short of 140 nanoseconds.
                      00030 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00031 ;  must execute in less than 454 Tcy.    
                      00032 ;  The overhead before entering a task in at most 58Tcy.
                      00033 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00034 ;  To play safe any task should execute in less than 379Tcy.
                      00035 ;  VISIBLE video lines:
                      00036 ;   For the visibles video lines tasks some delay is introduce
                      00037 ;   before any display attempt to ensure the game left side is
                      00038 ;   inside visible part of the scan line.
                      00039 ;   Each visible line must be terminate by returning video_output to black
                      00040 ;   otherwise the sync signal will be mangled. 
                      00041 ;    
                      00042 ;  SCHEDULER
                      00043 ;  scan lines  | slices  |   usage
                      00044 ;  =================================
                      00045 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00046 ;    4-6       |  6      | task 1, vertical sync
                      00047 ;    7-9       |  6      | task 2, vertical post-equalization
                      00048 ;    10        |  1      | task 3, synchronization end
                      00049 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00050 ;    12        |  1      | task 5, sound timer
                      00051 ;    13        |  1      | task 6, user input
                      00052 ;    14        |  1      | task 7, move ball
                      00053 ;    15        |  1      | task 8, collision control
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00055 ;    30-49     |  20     | task 10, display score and balls count
                      00056 ;    50-57     |  8      | task 11, draw top border
                      00057 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00058 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00059 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00060 ;    242-249   |  8      | task 15, draw paddle
                      00061 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00062 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00063  
                      00064     
                      00065     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00066     
8007   3FA7           00067     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00068     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00069     
                      00070     radix dec
                      00071 
                      00072 ; constants
  00000800            00073 PROG_SIZE equ 2048  ; program words
  00000080            00074 EEPROM_SIZE equ 128 ; high endurance flash words
                      00075  
  01B4F360            00076 Fosc equ 28636000 ; external oscillator frequency
                      00077  
                      00078 ; NTSC signal 
  00003D76            00079 Fhorz equ 15734 ; horizontal frequency
  0000071B            00080 HPERIOD equ ((Fosc/Fhorz)-1)  ; PWM3PR count for horizontal period (63,55µS)
  00000086            00081 HSYNC  equ 134  ;  (4,7µS) PWM3DC count for horz. sync pulse
  00000041            00082 HEQUAL equ 65 ; PWM3DC count for 2,3µS equalization pulse
  00000308            00083 VSYNC_PULSE equ 776 ; PWM3PR count for 27,1µS vertical sync. pulse
  0000038D            00084 HALF_LINE equ ((Fosc/Fhorz/2)-1) ; PWM3PR count for vsync lines,  half HPERIOD
                      00085 ; boolean flags 
  00000000            00086 F_BIT8 equ 0    ; bit 8 of scan line counter
  00000001            00087 F_EVEN equ 1    ; even field
  00000002            00088 F_SYNC equ 2    ; set during vertical synchronization phase
  00000003            00089 F_SOUND equ 3   ; sound enabled 
  00000004            00090 F_START equ 4   ; game started 
  00000005            00091 F_PAUSE equ 5   ; game paused after a ball lost
  00000006            00092 F_COOL equ 6    ; player got maximum score
                      00093  
                      00094 ;pins assignment
  00000000            00095 AUDIO EQU RA0  ; PWM2 output for audio tones
  00000000            00096 PADDLE equ RA0 ;  analog input for potentiometer controlling paddle position
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00097 CHROMA equ RA1  ;   chroma signal output
  00000002            00098 SYNC_OUT equ RA2  ; NTSC signal synchronization
  00000003            00099 START_BTN equ RA3 ; start button input
  00000004            00100 VIDEO_OUT equ RA4 ; video luminance output
  00000005            00101 CLKIN equ RA5     ; external oscillateur input.
                      00102  
                      00103     ; constants used in video display
                      00104 ; values are in pixels for x dimension.
                      00105 ; values are in number of scan lines for y dimension.
                      00106 ; Tcy are delay counted in MCU cycles.    
  0000001E            00107 FIRST_VIDEO_LINE equ 30 ; first scan line displayed
  0000004A            00108 FIRST_BRICK_Y equ 74 ; top of first brick row scan line
  000000F9            00109 LAST_VIDEO_LINE  equ 249 ; last scan line displayed
  00000045            00110 LEFT_MARGIN equ 69  ; Tcy delay before any display
  00000030            00111 PLAY_WIDTH equ 48 ; pixels
  00000005            00112 PIXEL_WIDTH equ 5; pixel width in Tcy 
  00000008            00113 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00114 BRICK_WIDTH equ 4  ; pixels
  00000004            00115 BORDER_WIDTH equ 4  ; Tcy
  00000002            00116 BALL_WIDTH equ 2 ; pixels
  000000C0            00117 BALL_MASK equ 0xC0 ;  applied to vbuffer to display ball
  00000008            00118 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00119 BALL_LEFT_BOUND equ 0 ; pixels
  0000002E            00120 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00121 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00122 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE ;scan line
  00000008            00123 PADDLE_WIDTH equ 8 ; pixels
  00000004            00124 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00125 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00126 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; scan line 
  000000FF            00127 PADDLE_MASK equ 0xFF ; applied to vbuffer to display paddle
  00000006            00128 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00129 ROW1_Y equ 74 ; row first scan line
  00000052            00130 ROW2_Y equ 82
  0000005A            00131 ROW3_Y equ 90
  00000062            00132 ROW4_Y equ 98
  0000006A            00133 ROW5_Y equ 106
  00000072            00134 ROW6_Y equ 114 
                      00135 
                      00136 ;;;;;;;;;;;;;;;;;;;;;;
                      00137 ;; assembler macros ;;
                      00138 ;;;;;;;;;;;;;;;;;;;;;;
                      00139 
                      00140 ; leave task by exiting interrupt service routine. 
                      00141 leave macro
                      00142     goto isr_exit
                      00143     endm
                      00144     
                      00145 ; move to next task on slice limit
                      00146 ; parameters:
                      00147 ;   s  nomber of slices used by the task    
                      00148 next_task macro s    
                      00149     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     movlw s
                      00151     subwf slice,W
                      00152     skpz
                      00153     leave
                      00154     clrf slice
                      00155     incf task
                      00156     leave
                      00157     endm
                      00158     
                      00159     
                      00160 ; delay in machine cycle Tcy
                      00161 ; parameters:
                      00162 ;   mc   number of machine cycles (Tcy)   
                      00163 tdelay macro mc 
                      00164     if mc==0
                      00165     exitm
                      00166     endif
                      00167     if mc==1
                      00168     nop
                      00169     exitm
                      00170     endif
                      00171     if mc==2
                      00172     bra $+1
                      00173     exitm
                      00174     endif
                      00175     if mc==3
                      00176     nop
                      00177     bra $+1
                      00178     exitm
                      00179     endif
                      00180     if mc==4
                      00181     call _4tcy
                      00182     exitm
                      00183     endif
                      00184     if mc==5
                      00185     call _5tcy
                      00186     exitm
                      00187     endif
                      00188     if mc>5
                      00189     variable q=(mc-3)/3 
                      00190     variable r=mc-3-3*q
                      00191     movlw q
                      00192     call _3ntcy ; Tcy=3+3*q
                      00193     if (r==2)
                      00194     bra $+1
                      00195     exitm
                      00196     endif 
                      00197     if (r==1)
                      00198     nop
                      00199     exitm
                      00200     endif
                      00201     endif
                      00202     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 
                      00204 
                      00205 ;;;;;;;;;;;;;;;;;;;;;;
                      00206 ;   colors macros
                      00207 ;   TRISA configuration    
                      00208 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00209 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00210 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00211 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00212 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00213 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00214 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00215 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00216 
                      00217 ; for the colors macros TRISA bank must be pre-selected 
                      00218 ;set video output to black    
                      00219 black macro
                      00220     movlw BLACK
                      00221     movwf TRISA
                      00222     endm
                      00223     
                      00224 ; set video output to white    
                      00225 white macro    
                      00226     movlw WHITE
                      00227     movwf TRISA
                      00228     endm
                      00229 
                      00230 ; set video output to mauve    
                      00231 mauve macro
                      00232     movlw MAUVE
                      00233     movwf TRISA
                      00234     endm
                      00235 
                      00236 ; set video output to yellow   
                      00237 yellow macro
                      00238     movlw YELLOW
                      00239     movwf TRISA
                      00240     endm
                      00241     
                      00242 ; set video output to blue
                      00243 blue macro
                      00244     movlw BLUE
                      00245     movwf TRISA
                      00246     endm
                      00247     
                      00248 ; set video output to dark green    
                      00249 dark_green macro
                      00250     movlw DARK_GREEN
                      00251     movwf TRISA
                      00252     endm
                      00253 
                      00254 ; shift out 1 bit    
                      00255 display_bit macro n
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     lslf vbuffer+n
                      00257     movlw BLACK
                      00258     skpnc
                      00259     movfw fg_color
                      00260     movwf TRISA
                      00261     endm
                      00262     
                      00263 ; display a byte of pixels from vbuffer
                      00264 ; this macro expansion result in 8*5 -> 40 instructions    
                      00265 ; input:
                      00266 ;   n is byte number {0..5}    
                      00267 display_byte macro n
                      00268     display_bit n
                      00269     display_bit n
                      00270     display_bit n
                      00271     display_bit n
                      00272     display_bit n
                      00273     display_bit n
                      00274     display_bit n
                      00275     display_bit n
                      00276     endm
                      00277     
                      00278    
                      00279 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00280 ;  stack manipulation macros
                      00281 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000050            00282 STACK_SIZE equ 80 ; size of argument stack
                      00283 #define T INDF0 ; indirect access to top of argument stack
                      00284 #define SP FSR0 ; use FSR0 as stack pointer 
                      00285 ; push WREG on T
                      00286 pushw  macro
                      00287     movwi --SP
                      00288     endm
                      00289   
                      00290 ; pop WREG from T
                      00291 popw macro
                      00292     moviw SP++
                      00293     endm
                      00294 
                      00295 ; drop n elements from stack
                      00296 dropn macro n
                      00297     addfsr T,n
                      00298     endm
                      00299 
                      00300 ; copy nth element of stack to WREG
                      00301 ;  n {0..31}, 0 is T   
                      00302 pickn macro n
                      00303     moviw n[SP]
                      00304     endm
                      00305    
                      00306     
                      00307     
                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;;    variables
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00311  
                      00312     
                      00313     udata 0x20 ; bank 0 
0020                  00314 stack res STACK_SIZE ; arguments stack
                      00315  
                      00316 ; video display manipulate TRISA register
                      00317 ; to avoid banksel during video update
                      00318 ; place variables related to video in same bank as TRISA 
                      00319 v_array   udata 0xA0 ; bank 1
00A0                  00320 vbuffer res 6
00A6                  00321 temp3 res 1 ; to simplify mask application on last byte of vbuffer 
00A7                  00322 row1 res 6; brick wall row1
00AD                  00323 fill1 res 2 ; to simplify computation, faster to multiply and divide by 8 rather than 6.
00AF                  00324 row2 res 6
00B5                  00325 fill2 res 2 
00B7                  00326 row3 res 6
00BD                  00327 fill3 res 2 
00BF                  00328 row4 res 6
00C5                  00329 fill4 res 2 
00C7                  00330 row5 res 6
00CD                  00331 fill5 res 2
00CF                  00332 row6 res 6
00D5                  00333 fill6 res 2 
00D7                  00334 fg_color res 1
00D8                  00335 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00336 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00337 ball_byte res 1 ; ball byte offset in vbuffer
00DC                  00338 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00339 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00340 balls res 1 ; number of recking balls available
                      00341  
                      00342 ; common 16 bytes RAM accessible whatever the selected bank 
                      00343     udata_shr 
0000                  00344 flags  res 1 ; boolean variables
0001                  00345 lcount res 1 ; video field line counter
0002                  00346 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00347 task res 1 ; where in video phase 
0004                  00348 temp1 res 1 ; temporary storage
0005                  00349 temp2 res 1 ; 
0006                  00350 paddle_pos res 1 
0007                  00351 ball_x res 1
0008                  00352 ball_y res 1
0009                  00353 ball_dx res 1
000A                  00354 ball_dy res 1
000B                  00355 ball_speed res 1
000C                  00356 score res 2 ; score stored in Binary Coded Decimal
000E                  00357 ball_timer res 1 
000F                  00358 seed res 1 ; pseudo random number generator used by lfsr8
                      00359  
                      00360 ;; cpu reset entry point
                      00361 RES_VECT  CODE    0x0000            
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000   2???           00362     goto    initialize  ; go to beginning of program
                      00363     
                      00364 ; delay = 3+3*n  (including the call)    
                      00365 ; SEE tdelay macro
                      00366 ;input:
                      00367 ;   WREG <- n {1..255}
0001                  00368 _3ntcy
0001   0B89           00369     decfsz WREG
0002   3???           00370     bra $-1
0003                  00371 _4tcy
0003   0008           00372     return  
                      00373 
                      00374 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00375 ; interrupt service routine triggered by PWM3 period rollover
                      00376 ; after initialization all processing in done inside 
                      00377 ; this interrupt.
                      00378 ; It is designed as a round robin scheduler.    
                      00379 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00380 ISR CODE 0x0004
0004                  00381 isr
0004   0A??           00382     incf lcount
0005   1903           00383     skpnz
0006   1400           00384     bsf flags, F_BIT8
0007   1900           00385     btfsc flags, F_SYNC
0008   2???           00386     goto task_switch
                      00387 ; clear video buffer before each line display
0009   003B           00388     banksel PWM1CON
000A   121B           00389     bcf PWM1CON,POL
000B   0021           00390     banksel TRISA
000C   01??           00391     clrf vbuffer
000D   01??           00392     clrf vbuffer+1
000E   01??           00393     clrf vbuffer+2
000F   01??           00394     clrf vbuffer+3
0010   01??           00395     clrf vbuffer+4
0011   01??           00396     clrf vbuffer+5
                      00397 ; generate chroma synchronization
                      00398     tdelay 15
                          M     if 15==0
                          M     exitm
                          M     endif
                          M     if 15==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 15==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 15==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 15==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 15==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 15>5
  0004                    M     variable q=(15-3)/3 
  0000                    M     variable r=15-3-3*q
0012   3004               M     movlw q
0013   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0014   108C           00399     bcf TRISA,CHROMA
                      00400     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3 
  0001                    M     variable r=16-3-3*q
0015   3004               M     movlw q
0016   2???               M     call _3ntcy ; Tcy=3+3*q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0017   0000               M     nop
                          M     exitm
0018   148C           00401     bsf TRISA,CHROMA
0019                  00402 task_switch ; round robin task scheduler   
0019   08??           00403     movfw task
001A   000B           00404     brw
001B   2???           00405     goto pre_vsync ;task 0, vertical pre-equalization pulses
001C   2???           00406     goto vsync ;task 1, vertical sync pulses
001D   2???           00407     goto post_vsync ;task 2, vertical post-equalization pulses
001E   2???           00408     goto vsync_end ;task 3, return to normal video line
001F   2???           00409     goto read_paddle; task 4, read paddle potentiometer
0020   2???           00410     goto sound ;task 5, check sound timer expiration
0021   2???           00411     goto read_button ;task 6,  read button
0022   2???           00412     goto move_ball ;task 7, move recking ball.
0023   2???           00413     goto collision ; task 8, check for collision with bricks.
0024   2???           00414     goto video_first ; task 9, wait FIRST_VIDEO line.
0025   2???           00415     goto draw_score ;task 10,  draw score en ball count
0026   2???           00416     goto draw_top_wall ;task 11,  draw top wall
0027   2???           00417     goto draw_sides ;task 12, draw play space with sides walls
0028   2???           00418     goto draw_bricks  ;task 13, draw bricks rows
0029   2???           00419     goto draw_empty;task 14, draw empty space with sides walls down to bottom
002A   2???           00420     goto draw_paddle ;task 15, draw paddle
002B   2???           00421     goto wait_field_end ;task 16, idle to end of video field
002C   0001           00422     reset ; error trap, task out of range
002D                  00423 isr_exit
002D   0021           00424     banksel TRISA
002E   1980           00425     btfsc flags, F_SOUND
002F   100C           00426     bcf TRISA,PADDLE
0030   003B           00427     banksel PWM3INTF
0031   103D           00428     bcf PWM3INTF,PRIF
0032   0009           00429     retfie
                      00430 
                      00431 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00432 ;;  all tasks routine are here            ;;
                      00433 ;;  each must be terminate by leave macro ;;    
                      00434 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00435     
                      00436 ; task 0, vertical synchronization pre equalization
                      00437 ; 6 half horizontal scan lines    
0033                  00438 pre_vsync
0033   08??           00439     movfw slice
0034   1903           00440     skpnz
0035   2???           00441     goto set_presync
                      00442     next_task 6
0036   0A??               M     incf slice
0037   3006               M     movlw 6
0038   02??               M     subwf slice,W
0039   1D03               M     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
003A   2???               M     goto isr_exit
003B   01??               M     clrf slice
003C   0A??               M     incf task
                          M     leave
003D   2???               M     goto isr_exit
003E                  00443 set_presync    
003E   003B           00444     banksel PWM3DC
003F   3041           00445     movlw HEQUAL
0040   00B3           00446     movwf PWM3DCL
0041   3003           00447     movlw high HALF_LINE
0042   00B6           00448     movwf PWM3PRH
0043   308D           00449     movlw low HALF_LINE
0044   00B5           00450     movwf PWM3PRL
0045   17BF           00451     bsf PWM3LDCON,7
0046   0A??           00452     incf slice
                      00453     leave
0047   2???               M     goto isr_exit
                      00454     
                      00455 ; task 1, vertical synchronization pulses
                      00456 ; 6 half horizontal scan lines    
0048                  00457 vsync 
0048   08??           00458     movfw slice
0049   1903           00459     skpnz
004A   2???           00460     goto set_vsync
                      00461     next_task 6
004B   0A??               M     incf slice
004C   3006               M     movlw 6
004D   02??               M     subwf slice,W
004E   1D03               M     skpz
                          M     leave
004F   2???               M     goto isr_exit
0050   01??               M     clrf slice
0051   0A??               M     incf task
                          M     leave
0052   2???               M     goto isr_exit
0053                  00462 set_vsync
0053   003B           00463     banksel PWM3DC
0054   3008           00464     movlw low VSYNC_PULSE
0055   00B3           00465     movwf PWM3DCL
0056   3003           00466     movlw high VSYNC_PULSE
0057   00B4           00467     movwf PWM3DCH
0058   17BF           00468     bsf PWM3LDCON,7
0059   0A??           00469     incf slice
                      00470     leave
005A   2???               M     goto isr_exit
                      00471     
                      00472 ; task 2, vertical synchronisation post equalization pulses
                      00473 ; 6 half horizontal scan lines    
005B                  00474 post_vsync
005B   08??           00475     movfw slice
005C   1903           00476     skpnz
005D   2???           00477     goto set_presync
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005E   3006           00478     movlw 6
005F   02??           00479     subwf slice,W
0060   1903           00480     skpnz
0061   2???           00481     goto post_last
0062   0A??           00482     incf slice
                      00483     leave
0063   2???               M     goto isr_exit
0064                  00484 post_last    
0064   0A??           00485     incf task
0065   01??           00486     clrf slice
0066   1C80           00487     btfss flags, F_EVEN
                      00488     leave
0067   2???               M     goto isr_exit
                      00489     
                      00490 ; task 3, vertical synchronization completed, return to normal line
                      00491 ; rest horizonal line to its normal length.
                      00492 ; set lcount to 9.    
0068                  00493 vsync_end
0068   1100           00494     bcf flags, F_SYNC
0069   003B           00495     banksel PWM3DC
006A   3086           00496     movlw HSYNC
006B   00B3           00497     movwf PWM3DCL
006C   01B4           00498     clrf PWM3DCH
006D   3007           00499     movlw high HPERIOD
006E   00B6           00500     movwf PWM3PRH
006F   301B           00501     movlw low HPERIOD
0070   00B5           00502     movwf PWM3PRL
0071   17BF           00503     bsf PWM3LDCON,7
                      00504  ; divide lcount by 2 go get correct scan line count    
0072   36??           00505     lsrf lcount
0073   2???           00506     call lfsr8 ; update prng 60 times/sec.
0074   0A??           00507     incf task
                      00508     leave
0075   2???               M     goto isr_exit
                      00509 
                      00510 ; task 4, read paddle potentiometer
0076                  00511 read_paddle
0076   0A??           00512     incf task
0077   1980           00513     btfsc flags, F_SOUND
                      00514     leave
0078   2???               M     goto isr_exit
0079   140C           00515     bsf TRISA, PADDLE
007A   3003           00516     movlw 3
007B   009D           00517     movwf ADCON0
007C   189D           00518     btfsc ADCON0,NOT_DONE
007D   3???           00519     bra $-1
007E   361C           00520     lsrf ADRESH,W
007F   00??           00521     movwf paddle_pos
0080   3028           00522     movlw PADDLE_LIMIT
0081   02??           00523     subwf paddle_pos,W
0082   3028           00524     movlw PADDLE_LIMIT
0083   1803           00525     skpnc
0084   00??           00526     movwf paddle_pos
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0085   3010           00527     movlw 4<<CHS0
0086   009D           00528     movwf ADCON0
                      00529 ; create paddle mask
                      00530 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00531 ; paddle_byte=paddle_pos/8
                      00532 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)   
0087   36??           00533     lsrf paddle_pos,W
0088   3689           00534     lsrf WREG
0089   3689           00535     lsrf WREG
008A   00??           00536     movwf paddle_byte
008B   30FF           00537     movlw PADDLE_MASK
008C   00??           00538     movwf paddle_mask
008D   01??           00539     clrf paddle_mask+1
008E   3007           00540     movlw 7
008F   05??           00541     andwf paddle_pos,W
0090   1903           00542     skpnz
0091   3???           00543     bra read_paddle_exit
0092   36??           00544     lsrf paddle_mask
0093   0C??           00545     rrf paddle_mask+1
0094   0B89           00546     decfsz WREG
0095   3???           00547     bra $-3
0096                  00548 read_paddle_exit    
0096   1A80           00549     btfsc flags, F_PAUSE
0097   2???           00550     call track_paddle
                      00551     leave
0098   2???               M     goto isr_exit
                      00552     
                      00553 ; task 5,  sound timer
                      00554 ; if sound active process it.    
0099                  00555 sound
0099   0A??           00556     incf task
009A   1D80           00557     btfss flags, F_SOUND
                      00558     leave
009B   2???               M     goto isr_exit
009C   1A80           00559     btfsc flags, F_PAUSE
009D   2???           00560     call sound_fx1
009E   002?           00561     banksel sound_timer
009F   0B??           00562     decfsz sound_timer
                      00563     leave
00A0   2???               M     goto isr_exit
00A1                  00564 sound_off    
00A1   1180           00565     bcf flags, F_SOUND
00A2   003B           00566     banksel PWM2CON
00A3   132B           00567     bcf PWM2CON,OE
00A4   13AB           00568     bcf PWM2CON,EN
00A5   0021           00569     banksel TRISA
00A6   140C           00570     bsf TRISA,PADDLE
                      00571     leave
00A7   2???               M     goto isr_exit
                      00572 
                      00573 ; sound effect, low pitch to high-pitch    
00A8                  00574 sound_fx1
00A8   1C80           00575     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A9   0008           00576     return
00AA   003B           00577     banksel PWM2CON
00AB   36A6           00578     lsrf PWM2PRH
00AC   0CA5           00579     rrf PWM2PRL
00AD   36A4           00580     lsrf PWM2DCH
00AE   0CA3           00581     rrf PWM2DCL
00AF   17AF           00582     bsf PWM2LDCON,LDA
00B0   0008           00583     return
                      00584     
                      00585 ; initialize sound generation.
                      00586 ; input:
                      00587 ;   T = duration
                      00588 ;   WREG = index in frequency table    
                      00589 ; outpout:
                      00590 ;   none    
00B1                  00591 sound_init
                      00592     pushw  ; ( d i -- )
00B1   0019               M     movwi --SP
00B2   1580           00593     bsf flags, F_SOUND
00B3   003B           00594     banksel PWM2CON
00B4   0800           00595     movfw T
00B5   2???           00596     call frequency
00B6   00A6           00597     movwf PWM2PRH
00B7   0A00           00598     incf T,W
00B8   2???           00599     call frequency
00B9   00A5           00600     movwf PWM2PRL
00BA   3626           00601     lsrf PWM2PRH,W
00BB   00A4           00602     movwf PWM2DCH
00BC   0C25           00603     rrf PWM2PRL,W
00BD   00A3           00604     movwf PWM2DCL
00BE   17AF           00605     bsf PWM2LDCON,LDA
00BF   172B           00606     bsf PWM2CON,OE
00C0   17AB           00607     bsf PWM2CON,EN
00C1   002?           00608     banksel sound_timer
                      00609     pickn 1
00C2   3F01               M     moviw 1[SP]
00C3   00??           00610     movwf sound_timer
                      00611     dropn 2
00C4   3102               M     addfsr T,2
00C5   0021           00612     banksel TRISA
00C6   100C           00613     bcf TRISA,AUDIO
00C7   0008           00614     return
                      00615     
                      00616 ;task 6, read button and paddle position
00C8                  00617 read_button
00C8   0A??           00618     incf task
00C9   0020           00619     banksel PORTA
00CA   080C           00620     movfw PORTA
00CB   3908           00621     andlw 1<<START_BTN
00CC   0021           00622     banksel TRISA
00CD   1D03           00623     skpz
                      00624     leave
00CE   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CF   1A00           00625     btfsc flags, F_START
00D0   3???           00626     bra resume_game
00D1   2???           00627     call game_init
                      00628     leave
00D2   2???               M     goto isr_exit
00D3                  00629 resume_game
00D3   1E80           00630     btfss flags, F_PAUSE
                      00631     leave
00D4   2???               M     goto isr_exit
00D5   2???           00632     call resume
                      00633     leave
00D6   2???               M     goto isr_exit
                      00634     
                      00635     
                      00636 
                      00637     
                      00638 ; task 7, move recking ball.   
                      00639 ; also check for ball bounce on paddle
                      00640 ; and ball lost at bottom    
00D7                  00641 move_ball
00D7   0A??           00642     incf task
00D8   0B??           00643     decfsz ball_timer
                      00644     leave
00D9   2???               M     goto isr_exit
00DA   08??           00645     movfw ball_speed
00DB   00??           00646     movwf ball_timer
00DC   08??           00647     movfw ball_dx
00DD   07??           00648     addwf ball_x
00DE   1F80           00649     btfss ball_dx,7
00DF   3???           00650     bra right_bound
00E0                  00651 left_bound
00E0   1F80           00652     btfss ball_x,7
00E1   3???           00653     bra move_y
00E2   01??           00654     clrf ball_x
00E3   3???           00655     bra toggle_dx
00E4                  00656 right_bound    
00E4   08??           00657     movfw ball_x
00E5   3C2E           00658     sublw BALL_RIGHT_BOUND
00E6   1803           00659     skpnc
00E7   3???           00660     bra move_y
00E8   03??           00661     decf ball_x
00E9                  00662 toggle_dx
00E9   09??           00663     comf ball_dx
00EA   0A??           00664     incf ball_dx
00EB                  00665 move_y
00EB   08??           00666     movfw ball_dy
00EC   07??           00667     addwf ball_y
00ED   1F80           00668     btfss ball_dy,7
00EE   3???           00669     bra bottom_bound
00EF                  00670 top_bound    
00EF   303A           00671     movlw BALL_TOP_BOUND
00F0   02??           00672     subwf ball_y,W
00F1   1803           00673     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F2   3???           00674     bra move_ball_exit
00F3   303A           00675     movlw BALL_TOP_BOUND
00F4   00??           00676     movwf ball_y
00F5   09??           00677     comf ball_dy
00F6   0A??           00678     incf ball_dy
00F7   3???           00679     bra move_ball_exit
00F8                  00680 bottom_bound
00F8   08??           00681     movfw ball_y
00F9   3CEF           00682     sublw PADDLE_Y-BALL_HEIGHT+1
00FA   1803           00683     skpnc
00FB   3???           00684     bra move_ball_exit
00FC   2???           00685     call paddle_bounce
00FD   1803           00686     skpnc
00FE   3???           00687     bra move_ball_exit
00FF                  00688 ball_lost
                      00689 ;    banksel balls
00FF   0B??           00690     decfsz balls
0100   3???           00691     bra pause_game
0101   1200           00692     bcf flags, F_START
0102   3???           00693     bra freeze_ball
0103                  00694 pause_game
0103   1680           00695     bsf flags, F_PAUSE
0104   3008           00696     movlw 8
                      00697     pushw
0105   0019               M     movwi --SP
0106   3002           00698     movlw 2
0107   2???           00699     call sound_init
0108                  00700 freeze_ball
0108   01??           00701     clrf ball_dx
0109   01??           00702     clrf ball_dy
010A   3003           00703     movlw 3
010B   07??           00704     addwf paddle_pos,W
010C   00??           00705     movwf ball_x
010D   30ED           00706     movlw PADDLE_Y-BALL_HEIGHT-1
010E   00??           00707     movwf ball_y
010F                  00708 move_ball_exit
010F   2???           00709     call create_ball_mask
                      00710     leave
0110   2???               M     goto isr_exit
                      00711 
                      00712 ; check if ball is bouncing on paddle
                      00713 ; input:
                      00714 ;   none
                      00715 ; output:
                      00716 ;   C set if bounced    
0111                  00717 paddle_bounce
                      00718 ; if ball_x over paddle bounce ball
0111   08??           00719     movfw paddle_pos
                      00720     pushw
0112   0019               M     movwi --SP
0113   1903           00721     skpnz
0114   0380           00722     decf T
0115   3E08           00723     addlw PADDLE_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00724     pushw
0116   0019               M     movwi --SP
0117   08??           00725     movfw ball_x
0118   2???           00726     call between
0119   1803           00727     skpnc
011A   3???           00728     bra bouncing
011B   1003           00729     bcf STATUS,C
011C   0008           00730     return
011D                  00731 bouncing
011D   30ED           00732     movlw PADDLE_Y-BALL_HEIGHT-1
011E   00??           00733     movwf ball_y
011F   09??           00734     comf ball_dy
0120   0A??           00735     incf ball_dy
                      00736 ; bounce direction depend where paddle was hit.    
0121   08??           00737     movfw paddle_pos
0122   02??           00738     subwf ball_x,W
0123   1C03           00739     skpc
0124   3???           00740     bra bounce_left
0125   1903           00741     skpnz
0126   3???           00742     bra bounce_left
0127   3006           00743     movlw PADDLE_WIDTH-2
0128   07??           00744     addwf paddle_pos,W
0129   02??           00745     subwf ball_x,W
012A   3001           00746     movlw 1
012B   1803           00747     skpnc
012C   00??           00748     movwf ball_dx ; bounce right
012D   3???           00749     bra paddle_sound
012E                  00750 bounce_left
012E   30FF           00751     movlw -1
012F   00??           00752     movwf ball_dx
0130                  00753 paddle_sound    
0130   3002           00754     movlw 2
                      00755     pushw
0131   0019               M     movwi --SP
0132   2???           00756     call sound_init
                      00757 ; skip collision task
0133   0A??           00758     incf task
                      00759 ; report bounce    
0134   1403           00760     bsf STATUS,C
0135   0008           00761     return
                      00762     
                      00763     
                      00764     
                      00765 ; task 8, check collision with bricks
0136                  00766 collision
0136   304A           00767     movlw ROW1_Y
                      00768     pushw
0137   0019               M     movwi --SP
0138   307A           00769     movlw ROW6_Y+BRICK_HEIGHT
                      00770     pushw
0139   0019               M     movwi --SP
013A   08??           00771     movfw ball_y
013B   2???           00772     call between
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013C   1C03           00773     skpc
013D   3???           00774     bra collision_exit
013E   002?           00775     banksel row1
013F   0187           00776     clrf FSR1H
0140   30??           00777     movlw low row1
0141   0086           00778     movwf FSR1L
0142   304A           00779     movlw ROW1_Y
0143   02??           00780     subwf ball_y,W
0144   39F8           00781     andlw 0xf8
                      00782     pushw
0145   0019               M     movwi --SP
0146   0786           00783     addwf FSR1L
0147   08??           00784     movfw ball_byte
0148   0786           00785     addwf FSR1L
0149   30F0           00786     movlw 0xf0
014A   1900           00787     btfsc ball_x,2
014B   0E89           00788     swapf WREG
014C   0501           00789     andwf INDF1,W
014D   1903           00790     skpnz
014E   3???           00791     bra collision_exit
014F   300F           00792     movlw 0x0f
0150   1900           00793     btfsc ball_x,2
0151   0E89           00794     swapf WREG
0152   0581           00795     andwf INDF1
0153   09??           00796     comf ball_dy
0154   0A??           00797     incf ball_dy
0155   08??           00798     movfw ball_dy
0156   07??           00799     addwf ball_y
                      00800     popw
0157   0012               M     moviw SP++
0158   3689           00801     lsrf WREG
0159   3689           00802     lsrf WREG
015A   000B           00803     brw
015B   3009           00804     movlw 9
015C   3???           00805     bra add_score
015D   3009           00806     movlw 9
015E   3???           00807     bra add_score
015F   3007           00808     movlw 7
0160   3???           00809     bra add_score
0161   3005           00810     movlw 5
0162   3???           00811     bra add_score
0163   3003           00812     movlw 3
0164   3???           00813     bra add_score
0165   3001           00814     movlw 1
0166                  00815 add_score    
0166   2???           00816     call inc_score
0167                  00817 pong_sound
0167   3001           00818     movlw 1
                      00819     pushw
0168   0019               M     movwi --SP
0169   3000           00820     movlw 0
016A   2???           00821     call sound_init
016B                  00822 collision_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

016B   0A??           00823     incf task
                      00824     leave
016C   2???               M     goto isr_exit
                      00825     
                      00826 ; check if  lb <= x < hb
                      00827 ; design to take same number of Tcy whatever the path.
                      00828 ; 13 tcy    
                      00829 ; input:
                      00830 ;    WREG  x
                      00831 ;    stack ( lb hb -- )     
                      00832 ; output:
                      00833 ;   Carry bit set if true    
016D                  00834 between
016D   00??           00835     movwf temp2
                      00836     pickn 1
016E   3F01               M     moviw 1[SP]
016F   02??           00837     subwf temp2,W
0170   1C03           00838     skpc
0171   3???           00839     bra between_exit2
0172   0800           00840     movfw T
0173   02??           00841     subwf temp2
0174   0803           00842     movfw STATUS
0175   3A01           00843     xorlw 1
0176   0083           00844     movwf STATUS
0177                  00845 between_exit    
                      00846     dropn 2
0177   3102               M     addfsr T,2
0178   0008           00847     return  ; 13 tcy
                      00848 ; add tcy to have constant tcy for this routine whatever the path    
0179                  00849 between_exit2
0179   3???           00850     bra $+1
017A   3???           00851     bra between_exit
                      00852     
                      00853 ; task 9, wait for first video line
017B                  00854 video_first
017B   301D           00855     movlw FIRST_VIDEO_LINE-1
017C   02??           00856     subwf lcount,W
017D   1D03           00857     skpz
                      00858     leave
017E   2???               M     goto isr_exit
017F   01??           00859     clrf slice
0180   0A??           00860     incf task
                      00861     leave
0181   2???               M     goto isr_exit
                      00862    
                      00863 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00864 ; The following tasks are responsible to render video display.
                      00865 ; Each video line must be completed by setting color to black.
                      00866 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00867 
                      00868 ; check if ball is visible on this scan line    
                      00869 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT
                      00870 ; designed to use a constant number of Tcy    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00871 ;  22 tcy   
                      00872 ;  input:
                      00873 ;       none    
                      00874 ;  output:
                      00875 ;       C set if true   
0182                  00876 ball_visible
0182   08??           00877     movfw ball_y
                      00878     pushw
0183   0019               M     movwi --SP
0184   3E08           00879     addlw BALL_HEIGHT
                      00880     pushw
0185   0019               M     movwi --SP
0186   08??           00881     movfw lcount
0187   2???           00882     call between ; +13 tcy
0188   0008           00883     return
                      00884     
                      00885     
                      00886 ; display vbuffer
                      00887 ; the 6 macros display_byte unroll to 240 instructions    
0189                  00888 display_vbuffer
                      00889     white 
0189   300B               M     movlw WHITE
018A   008C               M     movwf TRISA
                      00890     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
018B   2???               M     call _4tcy
                          M     exitm
018C                  00891 display_vbuffer_2    
                      00892     display_byte 0
                          M     display_bit 0
018C   35??               M     lslf vbuffer+0
018D   301B               M     movlw BLACK
018E   1803               M     skpnc
018F   08??               M     movfw fg_color
0190   008C               M     movwf TRISA
                          M     display_bit 0
0191   35??               M     lslf vbuffer+0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0192   301B               M     movlw BLACK
0193   1803               M     skpnc
0194   08??               M     movfw fg_color
0195   008C               M     movwf TRISA
                          M     display_bit 0
0196   35??               M     lslf vbuffer+0
0197   301B               M     movlw BLACK
0198   1803               M     skpnc
0199   08??               M     movfw fg_color
019A   008C               M     movwf TRISA
                          M     display_bit 0
019B   35??               M     lslf vbuffer+0
019C   301B               M     movlw BLACK
019D   1803               M     skpnc
019E   08??               M     movfw fg_color
019F   008C               M     movwf TRISA
                          M     display_bit 0
01A0   35??               M     lslf vbuffer+0
01A1   301B               M     movlw BLACK
01A2   1803               M     skpnc
01A3   08??               M     movfw fg_color
01A4   008C               M     movwf TRISA
                          M     display_bit 0
01A5   35??               M     lslf vbuffer+0
01A6   301B               M     movlw BLACK
01A7   1803               M     skpnc
01A8   08??               M     movfw fg_color
01A9   008C               M     movwf TRISA
                          M     display_bit 0
01AA   35??               M     lslf vbuffer+0
01AB   301B               M     movlw BLACK
01AC   1803               M     skpnc
01AD   08??               M     movfw fg_color
01AE   008C               M     movwf TRISA
                          M     display_bit 0
01AF   35??               M     lslf vbuffer+0
01B0   301B               M     movlw BLACK
01B1   1803               M     skpnc
01B2   08??               M     movfw fg_color
01B3   008C               M     movwf TRISA
                      00893     display_byte 1
                          M     display_bit 1
01B4   35??               M     lslf vbuffer+1
01B5   301B               M     movlw BLACK
01B6   1803               M     skpnc
01B7   08??               M     movfw fg_color
01B8   008C               M     movwf TRISA
                          M     display_bit 1
01B9   35??               M     lslf vbuffer+1
01BA   301B               M     movlw BLACK
01BB   1803               M     skpnc
01BC   08??               M     movfw fg_color
01BD   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 1
01BE   35??               M     lslf vbuffer+1
01BF   301B               M     movlw BLACK
01C0   1803               M     skpnc
01C1   08??               M     movfw fg_color
01C2   008C               M     movwf TRISA
                          M     display_bit 1
01C3   35??               M     lslf vbuffer+1
01C4   301B               M     movlw BLACK
01C5   1803               M     skpnc
01C6   08??               M     movfw fg_color
01C7   008C               M     movwf TRISA
                          M     display_bit 1
01C8   35??               M     lslf vbuffer+1
01C9   301B               M     movlw BLACK
01CA   1803               M     skpnc
01CB   08??               M     movfw fg_color
01CC   008C               M     movwf TRISA
                          M     display_bit 1
01CD   35??               M     lslf vbuffer+1
01CE   301B               M     movlw BLACK
01CF   1803               M     skpnc
01D0   08??               M     movfw fg_color
01D1   008C               M     movwf TRISA
                          M     display_bit 1
01D2   35??               M     lslf vbuffer+1
01D3   301B               M     movlw BLACK
01D4   1803               M     skpnc
01D5   08??               M     movfw fg_color
01D6   008C               M     movwf TRISA
                          M     display_bit 1
01D7   35??               M     lslf vbuffer+1
01D8   301B               M     movlw BLACK
01D9   1803               M     skpnc
01DA   08??               M     movfw fg_color
01DB   008C               M     movwf TRISA
                      00894     display_byte 2
                          M     display_bit 2
01DC   35??               M     lslf vbuffer+2
01DD   301B               M     movlw BLACK
01DE   1803               M     skpnc
01DF   08??               M     movfw fg_color
01E0   008C               M     movwf TRISA
                          M     display_bit 2
01E1   35??               M     lslf vbuffer+2
01E2   301B               M     movlw BLACK
01E3   1803               M     skpnc
01E4   08??               M     movfw fg_color
01E5   008C               M     movwf TRISA
                          M     display_bit 2
01E6   35??               M     lslf vbuffer+2
01E7   301B               M     movlw BLACK
01E8   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E9   08??               M     movfw fg_color
01EA   008C               M     movwf TRISA
                          M     display_bit 2
01EB   35??               M     lslf vbuffer+2
01EC   301B               M     movlw BLACK
01ED   1803               M     skpnc
01EE   08??               M     movfw fg_color
01EF   008C               M     movwf TRISA
                          M     display_bit 2
01F0   35??               M     lslf vbuffer+2
01F1   301B               M     movlw BLACK
01F2   1803               M     skpnc
01F3   08??               M     movfw fg_color
01F4   008C               M     movwf TRISA
                          M     display_bit 2
01F5   35??               M     lslf vbuffer+2
01F6   301B               M     movlw BLACK
01F7   1803               M     skpnc
01F8   08??               M     movfw fg_color
01F9   008C               M     movwf TRISA
                          M     display_bit 2
01FA   35??               M     lslf vbuffer+2
01FB   301B               M     movlw BLACK
01FC   1803               M     skpnc
01FD   08??               M     movfw fg_color
01FE   008C               M     movwf TRISA
                          M     display_bit 2
01FF   35??               M     lslf vbuffer+2
0200   301B               M     movlw BLACK
0201   1803               M     skpnc
0202   08??               M     movfw fg_color
0203   008C               M     movwf TRISA
                      00895     display_byte 3
                          M     display_bit 3
0204   35??               M     lslf vbuffer+3
0205   301B               M     movlw BLACK
0206   1803               M     skpnc
0207   08??               M     movfw fg_color
0208   008C               M     movwf TRISA
                          M     display_bit 3
0209   35??               M     lslf vbuffer+3
020A   301B               M     movlw BLACK
020B   1803               M     skpnc
020C   08??               M     movfw fg_color
020D   008C               M     movwf TRISA
                          M     display_bit 3
020E   35??               M     lslf vbuffer+3
020F   301B               M     movlw BLACK
0210   1803               M     skpnc
0211   08??               M     movfw fg_color
0212   008C               M     movwf TRISA
                          M     display_bit 3
0213   35??               M     lslf vbuffer+3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0214   301B               M     movlw BLACK
0215   1803               M     skpnc
0216   08??               M     movfw fg_color
0217   008C               M     movwf TRISA
                          M     display_bit 3
0218   35??               M     lslf vbuffer+3
0219   301B               M     movlw BLACK
021A   1803               M     skpnc
021B   08??               M     movfw fg_color
021C   008C               M     movwf TRISA
                          M     display_bit 3
021D   35??               M     lslf vbuffer+3
021E   301B               M     movlw BLACK
021F   1803               M     skpnc
0220   08??               M     movfw fg_color
0221   008C               M     movwf TRISA
                          M     display_bit 3
0222   35??               M     lslf vbuffer+3
0223   301B               M     movlw BLACK
0224   1803               M     skpnc
0225   08??               M     movfw fg_color
0226   008C               M     movwf TRISA
                          M     display_bit 3
0227   35??               M     lslf vbuffer+3
0228   301B               M     movlw BLACK
0229   1803               M     skpnc
022A   08??               M     movfw fg_color
022B   008C               M     movwf TRISA
                      00896     display_byte 4
                          M     display_bit 4
022C   35??               M     lslf vbuffer+4
022D   301B               M     movlw BLACK
022E   1803               M     skpnc
022F   08??               M     movfw fg_color
0230   008C               M     movwf TRISA
                          M     display_bit 4
0231   35??               M     lslf vbuffer+4
0232   301B               M     movlw BLACK
0233   1803               M     skpnc
0234   08??               M     movfw fg_color
0235   008C               M     movwf TRISA
                          M     display_bit 4
0236   35??               M     lslf vbuffer+4
0237   301B               M     movlw BLACK
0238   1803               M     skpnc
0239   08??               M     movfw fg_color
023A   008C               M     movwf TRISA
                          M     display_bit 4
023B   35??               M     lslf vbuffer+4
023C   301B               M     movlw BLACK
023D   1803               M     skpnc
023E   08??               M     movfw fg_color
023F   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 4
0240   35??               M     lslf vbuffer+4
0241   301B               M     movlw BLACK
0242   1803               M     skpnc
0243   08??               M     movfw fg_color
0244   008C               M     movwf TRISA
                          M     display_bit 4
0245   35??               M     lslf vbuffer+4
0246   301B               M     movlw BLACK
0247   1803               M     skpnc
0248   08??               M     movfw fg_color
0249   008C               M     movwf TRISA
                          M     display_bit 4
024A   35??               M     lslf vbuffer+4
024B   301B               M     movlw BLACK
024C   1803               M     skpnc
024D   08??               M     movfw fg_color
024E   008C               M     movwf TRISA
                          M     display_bit 4
024F   35??               M     lslf vbuffer+4
0250   301B               M     movlw BLACK
0251   1803               M     skpnc
0252   08??               M     movfw fg_color
0253   008C               M     movwf TRISA
                      00897     display_byte 5
                          M     display_bit 5
0254   35??               M     lslf vbuffer+5
0255   301B               M     movlw BLACK
0256   1803               M     skpnc
0257   08??               M     movfw fg_color
0258   008C               M     movwf TRISA
                          M     display_bit 5
0259   35??               M     lslf vbuffer+5
025A   301B               M     movlw BLACK
025B   1803               M     skpnc
025C   08??               M     movfw fg_color
025D   008C               M     movwf TRISA
                          M     display_bit 5
025E   35??               M     lslf vbuffer+5
025F   301B               M     movlw BLACK
0260   1803               M     skpnc
0261   08??               M     movfw fg_color
0262   008C               M     movwf TRISA
                          M     display_bit 5
0263   35??               M     lslf vbuffer+5
0264   301B               M     movlw BLACK
0265   1803               M     skpnc
0266   08??               M     movfw fg_color
0267   008C               M     movwf TRISA
                          M     display_bit 5
0268   35??               M     lslf vbuffer+5
0269   301B               M     movlw BLACK
026A   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026B   08??               M     movfw fg_color
026C   008C               M     movwf TRISA
                          M     display_bit 5
026D   35??               M     lslf vbuffer+5
026E   301B               M     movlw BLACK
026F   1803               M     skpnc
0270   08??               M     movfw fg_color
0271   008C               M     movwf TRISA
                          M     display_bit 5
0272   35??               M     lslf vbuffer+5
0273   301B               M     movlw BLACK
0274   1803               M     skpnc
0275   08??               M     movfw fg_color
0276   008C               M     movwf TRISA
                          M     display_bit 5
0277   35??               M     lslf vbuffer+5
0278   301B               M     movlw BLACK
0279   1803               M     skpnc
027A   08??               M     movfw fg_color
027B   008C               M     movwf TRISA
                      00898     white
027C   300B               M     movlw WHITE
027D   008C               M     movwf TRISA
                      00899     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
027E   2???               M     call _4tcy
                          M     exitm
                      00900     black
027F   301B               M     movlw BLACK
0280   008C               M     movwf TRISA
0281   0008           00901     return
                      00902  
                      00903 ; task 10, draw score en ball count
                      00904 ;  lcount 30-49    
0282                  00905 draw_score 
                      00906 ;    banksel TRISA
0282   08??           00907     movfw slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0283   3689           00908     lsrf WREG
0284   3689           00909     lsrf WREG
                      00910     pushw
0285   0019               M     movwi --SP
0286   08??           00911     movfw score
0287   2???           00912     call digits
0288   0E89           00913     swapf WREG
0289   04??           00914     iorwf vbuffer
028A   0E??           00915     swapf score+1,W
028B   2???           00916     call digits
028C   04??           00917     iorwf vbuffer
028D   08??           00918     movfw score+1
028E   2???           00919     call digits
028F   0E89           00920     swapf WREG
0290   04??           00921     iorwf vbuffer+1
0291   08??           00922     movfw balls
0292   2???           00923     call digits
0293   04??           00924     iorwf vbuffer+4
0294   2???           00925     call display_vbuffer_2
                      00926     dropn 1
0295   3101               M     addfsr T,1
0296                  00927 score_exit
                      00928     next_task 5*4
0296   0A??               M     incf slice
0297   3014               M     movlw 5*4
0298   02??               M     subwf slice,W
0299   1D03               M     skpz
                          M     leave
029A   2???               M     goto isr_exit
029B   01??               M     clrf slice
029C   0A??               M     incf task
                          M     leave
029D   2???               M     goto isr_exit
                      00929 
                      00930     
                      00931 ; task 11,  draw top wall, 8 screen lines 
                      00932 ; lcount 50-57    
029E                  00933 draw_top_wall
                      00934 ;    banksel TRISA
029E   09??           00935     comf vbuffer
029F   09??           00936     comf vbuffer+1
02A0   09??           00937     comf vbuffer+2
02A1   09??           00938     comf vbuffer+3
02A2   09??           00939     comf vbuffer+4
02A3   09??           00940     comf vbuffer+5
02A4   300B           00941     movlw WHITE
02A5   00??           00942     movwf fg_color
                      00943     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02A6   3016               M     movlw q
02A7   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      00944 ;    white
02A8   2???           00945     call display_vbuffer
                      00946 ;    white
                      00947 ;    tdelay BORDER_WIDTH
                      00948 ;    black
                      00949     next_task BRICK_HEIGHT
02A9   0A??               M     incf slice
02AA   3008               M     movlw BRICK_HEIGHT
02AB   02??               M     subwf slice,W
02AC   1D03               M     skpz
                          M     leave
02AD   2???               M     goto isr_exit
02AE   01??               M     clrf slice
02AF   0A??               M     incf task
                          M     leave
02B0   2???               M     goto isr_exit
                      00950 
                      00951 ; put ball mask in video_buffer
                      00952 ; designed to take a constant number of Tcy    
                      00953 ; 38 Tcy    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B1                  00954 put_ball_in_buffer
02B1   2???           00955     call ball_visible ; +22 Tcy
02B2   1C03           00956     skpc
02B3   3???           00957     bra kill_time
02B4   0187           00958     clrf FSR1H
02B5   30??           00959     movlw low vbuffer
02B6   0086           00960     movwf FSR1L
02B7   08??           00961     movfw ball_byte
02B8   0786           00962     addwf FSR1L
02B9   08??           00963     movfw ball_mask
02BA   001E           00964     movwi FSR1++
02BB   08??           00965     movfw ball_mask+1
02BC   3FC0           00966     movwi [FSR1]
02BD   0008           00967     return ; 37 tcy
02BE                  00968 kill_time 
                      00969     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3  
  0001                    M     variable r=7-3-3*q
02BE   3001               M     movlw q
02BF   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02C0   0000               M     nop
                          M     exitm
02C1   0008           00970     return ; 37 tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00971 
02C2                  00972 empty_common    
02C2   2???           00973     call put_ball_in_buffer
02C3   300B           00974     movlw WHITE
02C4   00??           00975     movwf fg_color
                      00976     tdelay LEFT_MARGIN-37
                          M     if LEFT_MARGIN-37==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37>5
  0009                    M     variable q=(LEFT_MARGIN-37-3)/3 
  0002                    M     variable r=LEFT_MARGIN-37-3-3*q
02C5   3009               M     movlw q
02C6   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
02C7   3???               M     bra $+1
                          M     exitm
                      00977 ;    white
02C8   2???           00978     call display_vbuffer
                      00979 ;    white
                      00980 ;    tdelay BORDER_WIDTH
                      00981 ;    black
02C9   0008           00982     return
                      00983     
                      00984 ; task 12,  draw vertical sides over bricks.
                      00985 ; lcount 58-73    
02CA                  00986 draw_sides 
                      00987 ;    banksel TRISA
                      00988     tdelay 2
                          M     if 2==0
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 2==2
02CA   3???               M     bra $+1
                          M     exitm
02CB   2???           00989     call empty_common
                      00990     next_task 2*BRICK_HEIGHT
02CC   0A??               M     incf slice
02CD   3010               M     movlw 2*BRICK_HEIGHT
02CE   02??               M     subwf slice,W
02CF   1D03               M     skpz
                          M     leave
02D0   2???               M     goto isr_exit
02D1   01??               M     clrf slice
02D2   0A??               M     incf task
                          M     leave
02D3   2???               M     goto isr_exit
                      00991  
                      00992 ; copy a brick row in vbuffer
                      00993 ; FSR1 initialized to point row    
02D4                  00994 copy_row
02D4   0016           00995     moviw FSR1++
02D5   04??           00996     iorwf vbuffer
02D6   0016           00997     moviw FSR1++
02D7   04??           00998     iorwf vbuffer+1
02D8   0016           00999     moviw FSR1++
02D9   04??           01000     iorwf vbuffer+2
02DA   0016           01001     moviw FSR1++
02DB   04??           01002     iorwf vbuffer+3
02DC   0016           01003     moviw FSR1++
02DD   04??           01004     iorwf vbuffer+4
02DE   0016           01005     moviw FSR1++
02DF   04??           01006     iorwf vbuffer+5
02E0   0008           01007     return    
                      01008 
                      01009 ;common code to all bricks row display    
02E1                  01010 rows_common
02E1   00??           01011     movwf fg_color
02E2   0187           01012     clrf FSR1H
02E3   2???           01013     call copy_row
                      01014     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
02E4   0000               M     nop
                          M     exitm
                      01015 ;    white
02E5   2???           01016     call display_vbuffer
                      01017 ;    white
                      01018 ;    tdelay BORDER_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01019 ;    black
                      01020     next_task BRICKS_ROWS*BRICK_HEIGHT
02E6   0A??               M     incf slice
02E7   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
02E8   02??               M     subwf slice,W
02E9   1D03               M     skpz
                          M     leave
02EA   2???               M     goto isr_exit
02EB   01??               M     clrf slice
02EC   0A??               M     incf task
                          M     leave
02ED   2???               M     goto isr_exit
                      01021     
                      01022 ; task 13, draw brick rows
                      01023 ; lcount 74-121   
02EE                  01024 draw_bricks
                      01025 ;    banksel vbuffer
02EE   2???           01026     call put_ball_in_buffer
02EF   30??           01027     movlw low row1
02F0   0086           01028     movwf FSR1L
02F1   30F8           01029     movlw 0xf8
02F2   05??           01030     andwf slice,W
02F3   0786           01031     addwf FSR1L
02F4   003B           01032     banksel PWM1CON
                      01033     pushw
02F5   0019               M     movwi --SP
02F6   3010           01034     movlw 2<<3
02F7   0200           01035     subwf T,W
02F8   1803           01036     skpnc
02F9   161B           01037     bsf PWM1CON,POL
                      01038     popw
02FA   0012               M     moviw SP++
02FB   0021           01039     banksel TRISA
02FC   3689           01040     lsrf WREG
02FD   3689           01041     lsrf WREG
                      01042     ; select color according to row index {0..5}
02FE   000B           01043     brw
02FF   3009           01044     movlw YELLOW
0300   3???           01045     bra rows_common
0301   3009           01046     movlw YELLOW
0302   3???           01047     bra rows_common
0303   3009           01048     movlw MAUVE
0304   3???           01049     bra rows_common
0305   3009           01050     movlw MAUVE
0306   3???           01051     bra rows_common
0307   3019           01052     movlw BLUE
0308   3???           01053     bra rows_common
0309   3019           01054     movlw BLUE
030A   3???           01055     bra rows_common
                      01056     
  00000028            01057 MSG_FIRST equ 40
  00000028            01058 MSG_HEIGHT equ 40
  00000010            01059 MSG_PIXELS_COUNT equ 16 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01060 ; task 14
                      01061 ; draw all rows below bricks down to paddle
                      01062 ; also display message when game over. 
                      01063 ; lcount 122-241 
030B                  01064 draw_empty
                      01065 ;    banksel TRISA
030B   1E00           01066     btfss flags, F_START
030C   3???           01067     bra print_msg
030D   2???           01068     call empty_common
030E   3???           01069     bra draw_empty_exit
030F                  01070 print_msg    
030F   3009           01071     movlw YELLOW ; message color
0310   00??           01072     movwf fg_color
0311   3028           01073     movlw MSG_FIRST
                      01074     pushw
0312   0019               M     movwi --SP
0313   3050           01075     movlw MSG_FIRST+MSG_HEIGHT
                      01076     pushw
0314   0019               M     movwi --SP
0315   08??           01077     movfw slice
0316   2???           01078     call between
0317   1C03           01079     skpc
0318   3???           01080     bra msg01
0319   30??           01081     movlw high end_msg
031A   0087           01082     movwf FSR1H
031B   30??           01083     movlw low end_msg
031C   0086           01084     movwf FSR1L
031D   1003           01085     clrc
031E   300A           01086     movlw 10
031F   1B00           01087     btfsc flags,F_COOL
0320   0786           01088     addwf FSR1L
0321   1803           01089     skpnc
0322   0A87           01090     incf FSR1H
                      01091 ; copy message bitmap in vbuffer
                      01092 ; message is  16 pixels wide
0323                  01093 copy_msg
0323   3028           01094     movlw MSG_FIRST
0324   02??           01095     subwf slice,W
0325   39F8           01096     andlw 0xf8
0326   3689           01097     lsrf WREG
0327   3689           01098     lsrf WREG
0328   0786           01099     addwf FSR1L
0329   1803           01100     skpnc
032A   0A87           01101     incf FSR1H
032B   0016           01102     moviw FSR1++
032C   00??           01103     movwf vbuffer+1
032D   0016           01104     moviw FSR1++
032E   00??           01105     movwf vbuffer+2
032F   3???           01106     bra msg02
0330                  01107 msg01
                      01108     tdelay 24
                          M     if 24==0
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 24==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 24==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 24==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 24==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 24==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 24>5
  0007                    M     variable q=(24-3)/3 
  0000                    M     variable r=24-3-3*q
0330   3007               M     movlw q
0331   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0332                  01109 msg02
                      01110     tdelay LEFT_MARGIN-45
                          M     if LEFT_MARGIN-45==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-45==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45>5
  0007                    M     variable q=(LEFT_MARGIN-45-3)/3 
  0000                    M     variable r=LEFT_MARGIN-45-3-3*q
0332   3007               M     movlw q
0333   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0334   2???           01111     call display_vbuffer
0335                  01112 draw_empty_exit
                      01113     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0335   0A??               M     incf slice
0336   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0337   02??               M     subwf slice,W
0338   1D03               M     skpz
                          M     leave
0339   2???               M     goto isr_exit
033A   01??               M     clrf slice
033B   0A??               M     incf task
                          M     leave
033C   2???               M     goto isr_exit
                      01114 
                      01115     
                      01116 ; task 15, draw paddle at bottom screen  
                      01117 ; lcount 242-249    
033D                  01118 draw_paddle
                      01119 ;    banksel TRISA
033D   0187           01120     clrf FSR1H
033E   30??           01121     movlw low vbuffer
033F   0086           01122     movwf FSR1L
0340   08??           01123     movfw paddle_byte
0341   0786           01124     addwf FSR1L
0342   08??           01125     movfw paddle_mask
0343   001E           01126     movwi FSR1++
0344   08??           01127     movfw paddle_mask+1
0345   3FC0           01128     movwi  [FSR1]
0346   300B           01129     movlw WHITE
0347   00??           01130     movwf fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01131     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
0348   3015               M     movlw q
0349   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01132  ;   white
034A   2???           01133     call display_vbuffer
                      01134 ;    white
                      01135 ;    tdelay BORDER_WIDTH
                      01136 ;    black
                      01137     next_task PADDLE_THICKNESS
034B   0A??               M     incf slice
034C   3004               M     movlw PADDLE_THICKNESS
034D   02??               M     subwf slice,W
034E   1D03               M     skpz
                          M     leave
034F   2???               M     goto isr_exit
0350   01??               M     clrf slice
0351   0A??               M     incf task
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
0352   2???               M     goto isr_exit
                      01138 
                      01139 ; task 16,  wait end of this field, reset task to zero    
                      01140 ; lcount 251-262/3    
0353                  01141 wait_field_end
0353   1800           01142     btfsc flags, F_BIT8
0354   2???           01143     goto hi_line
                      01144     leave
0355   2???               M     goto isr_exit
0356                  01145 hi_line
0356   1880           01146     btfsc flags,F_EVEN
0357   2???           01147     goto even_field
0358   3005           01148     movlw 5
0359   02??           01149     subwf lcount,W
035A   1D03           01150     skpz
                      01151     leave
035B   2???               M     goto isr_exit
035C   2???           01152     goto field_end
035D                  01153 even_field
035D   3006           01154     movlw 6
035E   02??           01155     subwf lcount,W
035F   1D03           01156     skpz
                      01157     leave
0360   2???               M     goto isr_exit
                      01158 ; even field last line is half_line    
                      01159 ; set PWM3 for line 263 half-line
0361   003B           01160     banksel PWM3DC
0362   3003           01161     movlw high HALF_LINE
0363   00B6           01162     movwf PWM3PRH
0364   308D           01163     movlw low HALF_LINE
0365   00B5           01164     movwf PWM3PRL
0366   17BF           01165     bsf PWM3LDCON,7
0367                  01166 field_end
0367   01??           01167     clrf task
0368   01??           01168     clrf slice
0369   01??           01169     clrf lcount
036A   1000           01170     bcf flags, F_BIT8
036B   1500           01171     bsf flags, F_SYNC
                      01172 ; toggle odd/even field flag    
036C   3002           01173     movlw 1<<F_EVEN
036D   06??           01174     xorwf flags
                      01175     leave
036E   2???               M     goto isr_exit
                      01176 
                      01177 ; helper functions
                      01178 
                      01179 
                      01180 ; increment user score
                      01181 ; This is a BCD addition where a single digit is added to score.   
                      01182 ; score is stored as big indian
                      01183 ; argument: 
                      01184 ;   WREG ->  bdc digit to add to score variable
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036F                  01185 inc_score
036F   07??           01186     addwf score+1
0370   1883           01187     btfsc STATUS,DC
0371   3???           01188     bra $+6
0372   300F           01189     movlw 15
0373   05??           01190     andwf score+1,W
0374   3C09           01191     sublw 9
0375   1803           01192     skpnc
0376   3???           01193     bra $+3
0377   3006           01194     movlw 6
0378   07??           01195     addwf score+1
0379   0E??           01196     swapf score+1,W
037A   390F           01197     andlw 15
037B   3C09           01198     sublw 9
037C   1803           01199     skpnc
037D   3???           01200     bra game_over_test
037E   3060           01201     movlw 0x60
037F   07??           01202     addwf score+1
0380   0A??           01203     incf score
                      01204 ; double ball speed if score >=200
0381   3002           01205     movlw 2
0382   02??           01206     subwf score,W
0383   1C03           01207     skpc
0384   0008           01208     return
0385   3001           01209     movlw 1
0386   00??           01210     movwf ball_speed
0387                  01211 game_over_test ; all bricks destroyed?
0387   3004           01212     movlw 4
0388   02??           01213     subwf score,W
0389   1D03           01214     skpz
038A   0008           01215     return
038B   3008           01216     movlw 0x08
038C   02??           01217     subwf score+1,W
038D   1D03           01218     skpz
038E   0008           01219     return
038F   1200           01220     bcf flags,F_START ; game over
0390   1700           01221     bsf flags,F_COOL ; with maximum score.
0391   0008           01222     return
                      01223     
                      01224     
0392                  01225 brick_wall_init
0392   30??           01226     movlw high row1
0393   0087           01227     movwf FSR1H
0394   30??           01228     movlw low row1
0395   0086           01229     movwf FSR1L
0396   3030           01230     movlw BRICKS_ROWS*8
0397   00??           01231     movwf temp1
0398   30FF           01232     movlw 0xff
0399                  01233 bw_init
0399   001E           01234     movwi FSR1++
039A   0B??           01235     decfsz temp1
039B   3???           01236     bra bw_init
039C   0008           01237     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01238 
                      01239 ; pseudo random number generator    
                      01240 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs  
  000000B8            01241 POLY equ 0xb8 
039D                  01242 lfsr8
039D   36??           01243     lsrf seed
039E   30B8           01244     movlw POLY
039F   1803           01245     skpnc
03A0   06??           01246     xorwf seed
                      01247 ; call here for 5 Tcy delay using a single instruction
                      01248 ; see tdelay macro 
03A1                  01249 _5tcy
03A1   08??           01250     movfw seed
03A2   0008           01251     return
                      01252     
                      01253 ; ball is sent at random direcction at serve.
03A3                  01254 set_ball_dx
03A3   2???           01255     call lfsr8 ;random
03A4   3907           01256     andlw 7
03A5   3589           01257     lslf WREG
03A6   000B           01258     brw
03A7   3001           01259     movlw 1
03A8   3???           01260     bra set_ball_dx_exit
03A9   30FF           01261     movlw -1
03AA   3???           01262     bra set_ball_dx_exit
03AB   3001           01263     movlw 1
03AC   3???           01264     bra set_ball_dx_exit
03AD   30FF           01265     movlw -1
03AE   3???           01266     bra set_ball_dx_exit
03AF   3001           01267     movlw 1
03B0   3???           01268     bra set_ball_dx_exit
03B1   30FF           01269     movlw -1
03B2   3???           01270     bra set_ball_dx_exit
03B3   3001           01271     movlw 1
03B4   3???           01272     bra set_ball_dx_exit
03B5   3000           01273     movlw 0
03B6                  01274 set_ball_dx_exit
03B6   00??           01275     movwf ball_dx
03B7   0008           01276     return
                      01277 
                      01278 ; compute ball_mask and ball_byte
                      01279 ; ball_mask= BALL_MASK>>(ball_x%8)
                      01280 ; ball_byte= ball_x/8     
03B8                  01281 create_ball_mask
03B8   002?           01282     banksel vbuffer
03B9   36??           01283     lsrf ball_x,W
03BA   3689           01284     lsrf WREG
03BB   3689           01285     lsrf WREG
03BC   00??           01286     movwf ball_byte
03BD   30C0           01287     movlw BALL_MASK
03BE   00??           01288     movwf ball_mask
03BF   01??           01289     clrf ball_mask+1
03C0   3007           01290     movlw 7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C1   05??           01291     andwf ball_x,W
03C2   1903           01292     skpnz
03C3   0008           01293     return
03C4   36??           01294     lsrf ball_mask
03C5   0C??           01295     rrf ball_mask+1
03C6   0B89           01296     decfsz WREG
03C7   3???           01297     bra $-3
03C8   0008           01298     return
                      01299     
03C9                  01300 game_init
03C9   01??           01301     clrf score
03CA   01??           01302     clrf score+1
03CB   2???           01303     call brick_wall_init
03CC   002?           01304     banksel balls
03CD   3002           01305     movlw 2
03CE   00??           01306     movwf ball_timer
03CF   3002           01307     movlw 2
03D0   00??           01308     movwf ball_speed
03D1   3003           01309     movlw 3
03D2   00??           01310     movwf balls
03D3   1600           01311     bsf flags,F_START
03D4                  01312 resume
03D4   1280           01313     bcf flags, F_PAUSE
03D5   2???           01314     call set_ball_dx
03D6   30FC           01315     movlw -4
03D7   00??           01316     movwf ball_dy
03D8                  01317 track_paddle
03D8   30ED           01318     movlw PADDLE_Y-BALL_HEIGHT-1
03D9   00??           01319     movwf ball_y
03DA   3003           01320     movlw 3
03DB   07??           01321     addwf paddle_pos,W
03DC   00??           01322     movwf ball_x
03DD   2???           01323     call create_ball_mask
03DE   0008           01324     return
                      01325     
                      01326 MAIN_PROG CODE                      ; let linker place main program
                      01327 
0000                  01328 initialize
                      01329 ; clear common RAM
0000   3070           01330     movlw 0x70
0001   0084           01331     movwf FSR0L
0002   0103           01332     clrw
0003   001A           01333     movwi FSR0++
0004   1F84           01334     btfss FSR0L,7
0005   3???           01335     bra $-2
                      01336 ; initialize LFSR seed
0006   1400           01337     bsf seed,0
                      01338 ; disable analog inputs, except AN0
0007   0023           01339     banksel ANSELA
0008   018C           01340     clrf ANSELA
                      01341 ; paddle potentiometer input     
0009   140C           01342     bsf ANSELA,PADDLE
                      01343 ;   setup arguments stack pointer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   30??           01344     movlw low (stack+STACK_SIZE)
000B   0084           01345     movwf FSR0L
                      01346 ; adc clock Fosc/32    
000C   0021           01347     banksel ADCON1
000D   3020           01348     movlw (2<<ADCS0)
000E   009E           01349     movwf ADCON1
                      01350 ; pin setup
                      01351 ; video luminance output always set to 1.    
000F   0022           01352     banksel LATA
0010   160C           01353     bsf LATA, VIDEO_OUT
                      01354 ; nstc sync output
0011   0021           01355     banksel TRISA
0012   110C           01356     bcf TRISA,SYNC_OUT
                      01357 ;  clear all PWM special fonction registers
                      01358 ;  to start configuration in a clean state.
0013   300D           01359     movlw high PWMEN
0014   0087           01360     movwf FSR1H
0015   308E           01361     movlw low PWMEN
0016   0086           01362     movwf FSR1L
0017                  01363 clr_pwm_sfr
0017   0181           01364     clrf INDF1
0018   0A86           01365     incf FSR1L
0019   30C1           01366     movlw 0xc1
001A   0206           01367     subwf FSR1L,W
001B   1D03           01368     skpz
001C   3???           01369     bra clr_pwm_sfr
                      01370 ; PWM1 chroma signal on RA1
001D   003B           01371     banksel PWM1CON
001E   30C0           01372     movlw (1<<EN)|(1<<OE)
001F   009B           01373     movwf PWM1CON
0020   3007           01374     movlw 7
0021   0095           01375     movwf PWM1PRL
0022   3004           01376     movlw 4
0023   0093           01377     movwf PWM1DCL
0024   179F           01378     bsf PWM1LDCON,7
                      01379 ; PWM2 sound, clock source Fosc/8
0025   3030           01380     movlw 3<<PWM2PS0
0026   00AE           01381     movwf PWM2CLKCON
                      01382 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0027   301B           01383     movlw low HPERIOD
0028   00B5           01384     movwf PWM3PRL
0029   3007           01385     movlw high HPERIOD
002A   00B6           01386     movwf PWM3PRH
002B   3086           01387     movlw HSYNC
002C   00B3           01388     movwf PWM3DCL
002D   30D0           01389     movlw (1<<EN)|(1<<OE)|(1<<POL)
002E   00BB           01390     movwf PWM3CON
002F   17BF           01391     bsf PWM3LDCON,7
0030   143C           01392     bsf PWM3INTE,PRIE
                      01393 ; enbable interrupt
                      01394 ; only interrupt used is PWM3PR rollover    
0031   0020           01395     banksel PIR3
0032   1313           01396     bcf PIR3,PWM3IF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   0021           01397     banksel PIE3
0034   1713           01398     bsf PIE3,PWM3IE
0035   170B           01399     bsf INTCON,PEIE
0036   178B           01400     bsf INTCON,GIE
                      01401 ; test code
                      01402 ; all processing done in ISR    
0037   2???           01403     goto $
                      01404 
                      01405 ;digits character table
                      01406 ; input:
                      01407 ;   T -> glyph row
                      01408 ;   WREG -> digit
                      01409 ; output:
                      01410 ;   WREG -> pixels
                      01411 ;   T -> glyph row  
                      01412 ; 2 digits packed in 5 bytes
                      01413 ; high nibble even digit, low nibble odd digit    
0038                  01414 digits
0038   00??           01415     movwf temp1
0039   390E           01416     andlw 0x0e
003A   00??           01417     movwf temp2
003B   35??           01418     lslf temp2
003C   35??           01419     lslf temp2
003D   07??           01420     addwf temp2
003E   36??           01421     lsrf temp2,W
003F   0700           01422     addwf T,W
0040   2???           01423     call digit_row
0041   1C00           01424     btfss temp1,0
0042   0E89           01425     swapf WREG
0043   390F           01426     andlw 0xf
0044   0008           01427     return
0045                  01428 digit_row    
0045   000B           01429     brw
0046   3444 34AC 34A4 01430     dt  H'44',H'AC',H'A4',H'A4',H'4E' ; 0, 1
       34A4 344E 
004B   34EE 3422 34CC 01431     dt  H'EE',H'22',H'CC',H'82',H'EE' ; 2, 3
       3482 34EE 
0050   34AE 34A8 34EE 01432     dt  H'AE',H'A8',H'EE',H'22',H'2E' ; 4, 5
       3422 342E 
0055   34CE 3482 34E2 01433     dt  H'CE',H'82',H'E2',H'A2',H'E2' ; 6, 7
       34A2 34E2 
005A   34EE 34AA 34EE 01434     dt  H'EE',H'AA',H'EE',H'A2',H'E6' ; 8, 9
       34A2 34E6 
                      01435     
                      01436 ; PWM2PR count for sound frequencies    
005F                  01437 frequency
005F   000B           01438     brw
0060   348B 34D3      01439     dt high 35795, low 35795 ; 100 hertz
0062   340D 34FB      01440     dt high 3579, low 3579 ; 1000 hertz
                      01441   
                      01442 ; END! message bitmap
0064                  01443 end_msg
                      01444 ;    brw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0064   00F4 005C      01445     data 0xf4,0x5c
0066   0086 0052      01446     data 0x86,0x52
0068   00E5 0052      01447     data 0xe5,0x52
006A   0084 00D2      01448     data 0x84,0xd2
006C   00F4 005C      01449     data 0xf4,0x5c
                      01450   
                      01451 ; COOL message bitmap    
006E                  01452 cool_msg
                      01453 ;    brw
006E   00EE 00E8      01454     data 0xee,0xe8
0070   008A 00A8      01455     data 0x8a,0xa8
0072   008A 00A8      01456     data 0x8a,0xa8
0074   008A 00A8      01457     data 0x8a,0xa8
0076   00EE 00EF      01458     data 0xee,0xef
                      01459     
                      01460     
                      01461 eeprom org (PROG_SIZE-EEPROM_SIZE)
                      01462  
3FA7 1EFF             01463     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000006
F_EVEN                            00000001
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PMDATL                            00000193
POL                               00000004
POLY                              000000B8
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000050
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000009
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_007D                         0000007D
_ISR_0095                         00000095
_ISR_0179                         00000179
_ISR_02C7                         000002C7
_ISR_02CA                         000002CA
_ISR_0371                         00000371
_ISR_0376                         00000376
_ISR_03C7                         000003C7
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0005                   00000005
_MAIN_PROG_0037                   00000037
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_RES_VECT_0002                    00000002
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000166
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         000000FF
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      00000182
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           0000016D
between_exit                      00000177
between_exit2                     00000179
black                             
blue                              
bottom_bound                      000000F8
bounce_left                       0000012E
bouncing                          0000011D
brick_wall_init                   00000392
bw_init                           00000399
clr_pwm_sfr                       00000017
collision                         00000136
collision_exit                    0000016B
cool_msg                          0000006E
copy_msg                          00000323
copy_row                          000002D4
create_ball_mask                  000003B8
dark_green                        
digit_row                         00000045
digits                            00000038
display_bit                       
display_byte                      
display_vbuffer                   00000189
display_vbuffer_2                 0000018C
draw_bricks                       000002EE
draw_empty                        0000030B
draw_empty_exit                   00000335
draw_paddle                       0000033D
draw_score                        00000282
draw_sides                        000002CA
draw_top_wall                     0000029E
dropn                             
eeprom                            00000780
empty_common                      000002C2
end_msg                           00000064
even_field                        0000035D
fg_color                          000000D7
field_end                         00000367
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
freeze_ball                       00000108
frequency                         0000005F
game_init                         000003C9
game_over_test                    00000387
hi_line                           00000356
inc_score                         0000036F
initialize                        00000000
isr                               00000004
isr_exit                          0000002D
kill_time                         000002BE
lcount                            00000001
leave                             
left_bound                        000000E0
lfsr8                             0000039D
mauve                             
move_ball                         000000D7
move_ball_exit                    0000010F
move_y                            000000EB
msg01                             00000330
msg02                             00000332
next_task                         
paddle_bounce                     00000111
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000130
pause_game                        00000103
pickn                             
pong_sound                        00000167
popw                              
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         00000033
print_msg                         0000030F
pushw                             
put_ball_in_buffer                000002B1
q                                 00000015
r                                 00000000
read_button                       000000C8
read_paddle                       00000076
read_paddle_exit                  00000096
resume                            000003D4
resume_game                       000000D3
right_bound                       000000E4
row1                              000000A7
row2                              000000AF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-26-2019  21:55:11         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       000002E1
score                             0000000C
score_exit                        00000296
seed                              0000000F
set_ball_dx                       000003A3
set_ball_dx_exit                  000003B6
set_presync                       0000003E
set_vsync                         00000053
slice                             00000002
sound                             00000099
sound_fx1                         000000A8
sound_init                        000000B1
sound_off                         000000A1
sound_timer                       000000DE
stack                             00000020
task                              00000003
task_switch                       00000019
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
toggle_dx                         000000E9
top_bound                         000000EF
track_paddle                      000003D8
vbuffer                           000000A0
video_first                       0000017B
vsync                             00000048
vsync_end                         00000068
wait_field_end                    00000353
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   274 suppressed

