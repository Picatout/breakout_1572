MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright Jacques Deschênes 2019 
                      00002 ; This file is part of breakout_1572.
                      00003 ;
                      00004 ;     breakout_1572 is free software: you can redistribute it and/or modify
                      00005 ;     it under the terms of the GNU General Public License as published by
                      00006 ;     the Free Software Foundation, either version 3 of the License, or
                      00007 ;     (at your option) any later version.
                      00008 ;
                      00009 ;     breakout_1572 is distributed in the hope that it will be useful,
                      00010 ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00011 ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00012 ;     GNU General Public License for more details.
                      00013 ;
                      00014 ;     You should have received a copy of the GNU General Public License
                      00015 ;     along with breakout_1572.  If not, see <http://www.gnu.org/licenses/>.
                      00016 
                      00017 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00018 ;                BREAKOUT game
                      00019 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00020 ;             IMPLEMENTATION NOTES
                      00021 ;  PWM3 is used to generate NTSC synchronization signal.
                      00022 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00023 ;  Inside this interrupt there is a round robin task scheduler.
                      00024 ;  All video display and game logic is done inside these tasks.
                      00025 ;  After MCU initialization the main() procedure is an empty loop.
                      00026 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00027 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00028 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00029 ;  short of 140 nanoseconds.
                      00030 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00031 ;  must execute in less than 454 Tcy.    
                      00032 ;  The overhead before entering a task in at most 58Tcy.
                      00033 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00034 ;  To play safe any task should execute in less than 379Tcy.
                      00035 ;  VISIBLE video lines:
                      00036 ;   For the visibles video lines tasks some delay is introduce
                      00037 ;   before any display attempt to ensure the game left side is
                      00038 ;   inside visible part of the scan line.
                      00039 ;   Each visible line must be terminate by returning video_output to black
                      00040 ;   otherwise the sync signal will be mangled. 
                      00041 ;    
                      00042 ;  SCHEDULER
                      00043 ;  scan lines  | slices  |   usage
                      00044 ;  =================================
                      00045 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00046 ;    4-6       |  6      | task 1, vertical sync
                      00047 ;    7-9       |  6      | task 2, vertical post-equalization
                      00048 ;    10        |  1      | task 3, synchronization end
                      00049 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00050 ;    12        |  1      | task 5, sound timer
                      00051 ;    13        |  1      | task 6, user input
                      00052 ;    14        |  1      | task 7, move ball
                      00053 ;    15        |  1      | task 8, collision control
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00055 ;    30-49     |  20     | task 10, display score and balls count
                      00056 ;    50-57     |  8      | task 11, draw top border
                      00057 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00058 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00059 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00060 ;    242-249   |  8      | task 15, draw paddle
                      00061 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00062 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00063  
                      00064     
                      00065     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00066     
8007   3FA7           00067     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00068     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00069     
                      00070     radix dec
                      00071 
                      00072 ; constants
  00000800            00073 PROG_SIZE equ 2048  ; program words
  00000080            00074 EEPROM_SIZE equ 128 ; high endurance flash words
                      00075  
  01B4F360            00076 Fosc equ 28636000 ; external oscillator frequency
                      00077  
                      00078 ; NTSC signal 
  00003D76            00079 Fhorz equ 15734 ; horizontal frequency
  0000071B            00080 HPERIOD equ ((Fosc/Fhorz)-1)  ; PWM3PR count for horizontal period (63,55µS)
  00000086            00081 HSYNC  equ 134  ;  (4,7µS) PWM3DC count for horz. sync pulse
  00000041            00082 HEQUAL equ 65 ; PWM3DC count for 2,3µS equalization pulse
  00000308            00083 VSYNC_PULSE equ 776 ; PWM3PR count for 27,1µS vertical sync. pulse
  0000038D            00084 HALF_LINE equ ((Fosc/Fhorz/2)-1) ; PWM3PR count for vsync lines,  half HPERIOD
                      00085 ; boolean flags 
  00000000            00086 F_BIT8 equ 0    ; bit 8 of scan line counter
  00000001            00087 F_EVEN equ 1    ; even field
  00000002            00088 F_SYNC equ 2    ; set during vertical synchronization phase
  00000003            00089 F_SOUND equ 3   ; sound enabled 
  00000004            00090 F_START equ 4   ; game started 
  00000005            00091 F_PAUSE equ 5   ; game paused after a ball lost
  00000006            00092 F_COOL equ 6    ; player got maximum score
  00000007            00093 F_BORDERS equ 7  ; draw borders
                      00094  
                      00095 ;pins assignment
  00000000            00096 AUDIO EQU RA0  ; PWM2 output for audio tones
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00097 PADDLE equ RA0 ;  analog input for potentiometer controlling paddle position
  00000001            00098 CHROMA equ RA1  ;   chroma signal output
  00000002            00099 SYNC_OUT equ RA2  ; NTSC signal synchronization
  00000003            00100 START_BTN equ RA3 ; start button input
  00000004            00101 VIDEO_OUT equ RA4 ; video luminance output
  00000005            00102 CLKIN equ RA5     ; external oscillateur input.
                      00103  
                      00104     ; constants used in video display
                      00105 ; values are in pixels for x dimension.
                      00106 ; values are in number of scan lines for y dimension.
                      00107 ; Tcy are delay counted in MCU cycles.    
  0000001E            00108 FIRST_VIDEO_LINE equ 30 ; first scan line displayed
  0000004A            00109 FIRST_BRICK_Y equ 74 ; top of first brick row scan line
  000000F9            00110 LAST_VIDEO_LINE  equ 249 ; last scan line displayed
  00000045            00111 LEFT_MARGIN equ 69  ; Tcy delay before any display
  00000030            00112 PLAY_WIDTH equ 48 ; pixels
  00000005            00113 PIXEL_WIDTH equ 5; pixel width in Tcy 
  00000008            00114 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00115 BRICK_WIDTH equ 4  ; pixels
  00000004            00116 BORDER_WIDTH equ 4  ; Tcy
  00000002            00117 BALL_WIDTH equ 2 ; pixels
  000000C0            00118 BALL_MASK equ 0xC0 ;  applied to vbuffer to display ball
  00000008            00119 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00120 BALL_LEFT_BOUND equ 0 ; pixels
  0000002E            00121 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00122 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00123 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE ;scan line
  00000008            00124 PADDLE_WIDTH equ 8 ; pixels
  00000004            00125 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00126 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00127 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; scan line 
  000000FF            00128 PADDLE_MASK equ 0xFF ; applied to vbuffer to display paddle
  00000006            00129 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00130 ROW1_Y equ 74 ; row first scan line
  00000052            00131 ROW2_Y equ 82
  0000005A            00132 ROW3_Y equ 90
  00000062            00133 ROW4_Y equ 98
  0000006A            00134 ROW5_Y equ 106
  00000072            00135 ROW6_Y equ 114 
  00000004            00136 DIGIT_PIXEL_HEIGHT equ 4 ; scan lines
  00000005            00137 DIGIT_FONT_HEIGHT equ 5 ; 4x5 pixels font  
                      00138  
                      00139 ;;;;;;;;;;;;;;;;;;;;;;
                      00140 ;; assembler macros ;;
                      00141 ;;;;;;;;;;;;;;;;;;;;;;
                      00142 
                      00143 ; leave task by exiting interrupt service routine. 
                      00144 leave macro
                      00145     goto isr_exit
                      00146     endm
                      00147     
                      00148 ; move to next task on slice limit
                      00149 ; parameters:
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 ;   s  nomber of slices used by the task    
                      00151 next_task macro s    
                      00152     incf slice
                      00153     movlw s
                      00154     subwf slice,W
                      00155     skpz
                      00156     leave
                      00157     clrf slice
                      00158     incf task
                      00159     leave
                      00160     endm
                      00161     
                      00162     
                      00163 ; delay in machine cycle Tcy
                      00164 ; parameters:
                      00165 ;   mc   number of machine cycles (Tcy)   
                      00166 tdelay macro mc 
                      00167     if mc==0
                      00168     exitm
                      00169     endif
                      00170     if mc==1
                      00171     nop
                      00172     exitm
                      00173     endif
                      00174     if mc==2
                      00175     bra $+1
                      00176     exitm
                      00177     endif
                      00178     if mc==3
                      00179     nop
                      00180     bra $+1
                      00181     exitm
                      00182     endif
                      00183     if mc==4
                      00184     call _4tcy
                      00185     exitm
                      00186     endif
                      00187     if mc==5
                      00188     call _5tcy
                      00189     exitm
                      00190     endif
                      00191     if mc>5
                      00192     variable q=(mc-3)/3 
                      00193     variable r=mc-3-3*q
                      00194     movlw q
                      00195     call _3ntcy ; Tcy=3+3*q
                      00196     if (r==2)
                      00197     bra $+1
                      00198     exitm
                      00199     endif 
                      00200     if (r==1)
                      00201     nop
                      00202     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endif
                      00204     endif
                      00205     endm
                      00206 
                      00207 
                      00208 ;;;;;;;;;;;;;;;;;;;;;;
                      00209 ;   colors macros
                      00210 ;   TRISA configuration    
                      00211 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00212 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00213 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00214 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00215 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00216 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00217 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00218 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00219 
                      00220 ; for the colors macros TRISA bank must be pre-selected 
                      00221 ;set video output to black    
                      00222 black macro
                      00223     movlw BLACK
                      00224     movwf TRISA
                      00225     endm
                      00226     
                      00227 ; set video output to white    
                      00228 white macro    
                      00229     movlw WHITE
                      00230     movwf TRISA
                      00231     endm
                      00232 
                      00233 ; set video output to mauve    
                      00234 mauve macro
                      00235     movlw MAUVE
                      00236     movwf TRISA
                      00237     endm
                      00238 
                      00239 ; set video output to yellow   
                      00240 yellow macro
                      00241     movlw YELLOW
                      00242     movwf TRISA
                      00243     endm
                      00244     
                      00245 ; set video output to blue
                      00246 blue macro
                      00247     movlw BLUE
                      00248     movwf TRISA
                      00249     endm
                      00250     
                      00251 ; set video output to dark green    
                      00252 dark_green macro
                      00253     movlw DARK_GREEN
                      00254     movwf TRISA
                      00255     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 
                      00257 ; draw borders
                      00258 borders macro
                      00259     bsf flags,F_BORDERS
                      00260     endm
                      00261     
                      00262 ; no borders draw
                      00263 no_borders macro    
                      00264     bcf flags,F_BORDERS
                      00265     endm
                      00266     
                      00267 ; shift out 1 bit    
                      00268 display_bit macro n
                      00269     lslf vbuffer+n
                      00270     movlw BLACK
                      00271     skpnc
                      00272     movfw fg_color
                      00273     movwf TRISA
                      00274     endm
                      00275     
                      00276 ; display a byte of pixels from vbuffer
                      00277 ; this macro expansion result in 8*5 -> 40 instructions    
                      00278 ; input:
                      00279 ;   n is byte number {0..5}    
                      00280 display_byte macro n
                      00281     display_bit n
                      00282     display_bit n
                      00283     display_bit n
                      00284     display_bit n
                      00285     display_bit n
                      00286     display_bit n
                      00287     display_bit n
                      00288     display_bit n
                      00289     endm
                      00290     
                      00291    
                      00292 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00293 ;  stack manipulation macros
                      00294 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000050            00295 STACK_SIZE equ 80 ; size of argument stack
                      00296 #define T INDF0 ; indirect access to top of argument stack
                      00297 #define SP FSR0 ; use FSR0 as stack pointer 
                      00298 ; push WREG on T
                      00299 pushw  macro
                      00300     movwi --SP
                      00301     endm
                      00302   
                      00303 ; pop WREG from T
                      00304 popw macro
                      00305     moviw SP++
                      00306     endm
                      00307 
                      00308 ; drop n elements from stack
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 dropn macro n
                      00310     addfsr T,n
                      00311     endm
                      00312 
                      00313 ; copy nth element of stack to WREG
                      00314 ;  n {0..31}, 0 is T   
                      00315 pickn macro n
                      00316     moviw n[SP]
                      00317     endm
                      00318    
                      00319     
                      00320     
                      00321 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00322 ;;    variables
                      00323 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00324  
                      00325     
                      00326     udata 0x20 ; bank 0 
0020                  00327 stack res STACK_SIZE ; arguments stack
                      00328  
                      00329 ; video display manipulate TRISA register
                      00330 ; to avoid banksel during video update
                      00331 ; place variables related to video in same bank as TRISA 
                      00332 v_array   udata 0xA0 ; bank 1
00A0                  00333 vbuffer res 6
00A6                  00334 temp3 res 1 ; to simplify mask application on last byte of vbuffer 
00A7                  00335 row1 res 6; brick wall row1
00AD                  00336 fill1 res 2 ; to simplify computation, faster to multiply and divide by 8 rather than 6.
00AF                  00337 row2 res 6
00B5                  00338 fill2 res 2 
00B7                  00339 row3 res 6
00BD                  00340 fill3 res 2 
00BF                  00341 row4 res 6
00C5                  00342 fill4 res 2 
00C7                  00343 row5 res 6
00CD                  00344 fill5 res 2
00CF                  00345 row6 res 6
00D5                  00346 fill6 res 2 
00D7                  00347 fg_color res 1
00D8                  00348 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00349 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00350 ball_byte res 1 ; ball byte offset in vbuffer
00DC                  00351 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00352 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00353 balls res 1 ; number of recking balls available
                      00354  
                      00355 ; common 16 bytes RAM accessible whatever the selected bank 
                      00356     udata_shr 
0000                  00357 flags  res 1 ; boolean variables
0001                  00358 lcount res 1 ; video field line counter
0002                  00359 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00360 task res 1 ; where in video phase 
0004                  00361 temp1 res 1 ; temporary storage
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005                  00362 temp2 res 1 ; 
0006                  00363 paddle_pos res 1 
0007                  00364 ball_x res 1
0008                  00365 ball_y res 1
0009                  00366 ball_dx res 1
000A                  00367 ball_dy res 1
000B                  00368 ball_speed res 1
000C                  00369 score res 2 ; score stored in Binary Coded Decimal
000E                  00370 ball_timer res 1 
000F                  00371 seed res 1 ; pseudo random number generator used by lfsr8
                      00372  
                      00373 ;; cpu reset entry point
                      00374 RES_VECT  CODE    0x0000            
0000   2???           00375     goto    initialize  ; go to beginning of program
                      00376     
                      00377 ; delay = 3+3*n  (including the call)    
                      00378 ; SEE tdelay macro
                      00379 ;input:
                      00380 ;   WREG <- n {1..255}
0001                  00381 _3ntcy
0001   0B89           00382     decfsz WREG
0002   3???           00383     bra $-1
0003                  00384 _4tcy
0003   0008           00385     return  
                      00386 
                      00387 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00388 ; interrupt service routine triggered by PWM3 period rollover
                      00389 ; after initialization all processing in done inside 
                      00390 ; this interrupt.
                      00391 ; It is designed as a round robin scheduler.    
                      00392 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00393 ISR CODE 0x0004
0004                  00394 isr
0004   0A??           00395     incf lcount
0005   1903           00396     skpnz
0006   1400           00397     bsf flags, F_BIT8
0007   1900           00398     btfsc flags, F_SYNC
0008   2???           00399     goto task_switch
                      00400 ; clear video buffer before each line display
0009   003B           00401     banksel PWM1CON
000A   121B           00402     bcf PWM1CON,POL
000B   0021           00403     banksel TRISA
000C   01??           00404     clrf vbuffer
000D   01??           00405     clrf vbuffer+1
000E   01??           00406     clrf vbuffer+2
000F   01??           00407     clrf vbuffer+3
0010   01??           00408     clrf vbuffer+4
0011   01??           00409     clrf vbuffer+5
                      00410     borders ; default to drawing borders
0012   1780               M     bsf flags,F_BORDERS
                      00411 ; generate chroma synchronization
                      00412     tdelay 14
                          M     if 14==0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 14==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 14==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 14==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 14==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 14==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 14>5
  0003                    M     variable q=(14-3)/3 
  0002                    M     variable r=14-3-3*q
0013   3003               M     movlw q
0014   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
0015   3???               M     bra $+1
                          M     exitm
0016   108C           00413     bcf TRISA,CHROMA
                      00414     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3 
  0001                    M     variable r=16-3-3*q
0017   3004               M     movlw q
0018   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0019   0000               M     nop
                          M     exitm
001A   148C           00415     bsf TRISA,CHROMA
001B                  00416 task_switch ; round robin task scheduler   
001B   08??           00417     movfw task
001C   000B           00418     brw
001D   2???           00419     goto pre_vsync ;task 0, vertical pre-equalization pulses
001E   2???           00420     goto vsync ;task 1, vertical sync pulses
001F   2???           00421     goto post_vsync ;task 2, vertical post-equalization pulses
0020   2???           00422     goto vsync_end ;task 3, return to normal video line
0021   2???           00423     goto read_paddle; task 4, read paddle potentiometer
0022   2???           00424     goto sound ;task 5, check sound timer expiration
0023   2???           00425     goto read_button ;task 6,  read button
0024   2???           00426     goto move_ball ;task 7, move recking ball.
0025   2???           00427     goto collision ; task 8, check for collision with bricks.
0026   2???           00428     goto video_first ; task 9, wait FIRST_VIDEO line.
0027   2???           00429     goto draw_score ;task 10,  draw score en ball count
0028   2???           00430     goto draw_top_wall ;task 11,  draw top wall
0029   2???           00431     goto draw_sides ;task 12, draw play space with sides walls
002A   2???           00432     goto draw_bricks  ;task 13, draw bricks rows
002B   2???           00433     goto draw_empty;task 14, draw empty space with sides walls down to bottom
002C   2???           00434     goto draw_paddle ;task 15, draw paddle
002D   2???           00435     goto wait_field_end ;task 16, idle to end of video field
002E   0001           00436     reset ; error trap, task out of range
002F                  00437 isr_exit
002F   0021           00438     banksel TRISA
0030   1980           00439     btfsc flags, F_SOUND
0031   100C           00440     bcf TRISA,PADDLE
0032   003B           00441     banksel PWM3INTF
0033   103D           00442     bcf PWM3INTF,PRIF
0034   0009           00443     retfie
                      00444 
                      00445 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00446 ;;  all tasks routine are here            ;;
                      00447 ;;  each must be terminate by leave macro ;;    
                      00448 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00449     
                      00450 ; task 0, vertical synchronization pre equalization
                      00451 ; 6 half horizontal scan lines    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035                  00452 pre_vsync
0035   08??           00453     movfw slice
0036   1903           00454     skpnz
0037   2???           00455     goto set_presync
                      00456     next_task 6
0038   0A??               M     incf slice
0039   3006               M     movlw 6
003A   02??               M     subwf slice,W
003B   1D03               M     skpz
                          M     leave
003C   2???               M     goto isr_exit
003D   01??               M     clrf slice
003E   0A??               M     incf task
                          M     leave
003F   2???               M     goto isr_exit
0040                  00457 set_presync    
0040   003B           00458     banksel PWM3DC
0041   3041           00459     movlw HEQUAL
0042   00B3           00460     movwf PWM3DCL
0043   3003           00461     movlw high HALF_LINE
0044   00B6           00462     movwf PWM3PRH
0045   308D           00463     movlw low HALF_LINE
0046   00B5           00464     movwf PWM3PRL
0047   17BF           00465     bsf PWM3LDCON,7
0048   0A??           00466     incf slice
                      00467     leave
0049   2???               M     goto isr_exit
                      00468     
                      00469 ; task 1, vertical synchronization pulses
                      00470 ; 6 half horizontal scan lines    
004A                  00471 vsync 
004A   08??           00472     movfw slice
004B   1903           00473     skpnz
004C   2???           00474     goto set_vsync
                      00475     next_task 6
004D   0A??               M     incf slice
004E   3006               M     movlw 6
004F   02??               M     subwf slice,W
0050   1D03               M     skpz
                          M     leave
0051   2???               M     goto isr_exit
0052   01??               M     clrf slice
0053   0A??               M     incf task
                          M     leave
0054   2???               M     goto isr_exit
0055                  00476 set_vsync
0055   003B           00477     banksel PWM3DC
0056   3008           00478     movlw low VSYNC_PULSE
0057   00B3           00479     movwf PWM3DCL
0058   3003           00480     movlw high VSYNC_PULSE
0059   00B4           00481     movwf PWM3DCH
005A   17BF           00482     bsf PWM3LDCON,7
005B   0A??           00483     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00484     leave
005C   2???               M     goto isr_exit
                      00485     
                      00486 ; task 2, vertical synchronisation post equalization pulses
                      00487 ; 6 half horizontal scan lines    
005D                  00488 post_vsync
005D   08??           00489     movfw slice
005E   1903           00490     skpnz
005F   2???           00491     goto set_presync
0060   3006           00492     movlw 6
0061   02??           00493     subwf slice,W
0062   1903           00494     skpnz
0063   2???           00495     goto post_last
0064   0A??           00496     incf slice
                      00497     leave
0065   2???               M     goto isr_exit
0066                  00498 post_last    
0066   0A??           00499     incf task
0067   01??           00500     clrf slice
0068   1C80           00501     btfss flags, F_EVEN
                      00502     leave
0069   2???               M     goto isr_exit
                      00503     
                      00504 ; task 3, vertical synchronization completed, return to normal line
                      00505 ; rest horizonal line to its normal length.
                      00506 ; set lcount to 9.    
006A                  00507 vsync_end
006A   1100           00508     bcf flags, F_SYNC
006B   003B           00509     banksel PWM3DC
006C   3086           00510     movlw HSYNC
006D   00B3           00511     movwf PWM3DCL
006E   01B4           00512     clrf PWM3DCH
006F   3007           00513     movlw high HPERIOD
0070   00B6           00514     movwf PWM3PRH
0071   301B           00515     movlw low HPERIOD
0072   00B5           00516     movwf PWM3PRL
0073   17BF           00517     bsf PWM3LDCON,7
                      00518  ; divide lcount by 2 go get correct scan line count    
0074   36??           00519     lsrf lcount
0075   2???           00520     call lfsr8 ; update prng 60 times/sec.
0076   0A??           00521     incf task
                      00522     leave
0077   2???               M     goto isr_exit
                      00523 
                      00524 ; task 4, read paddle potentiometer
0078                  00525 read_paddle
0078   0A??           00526     incf task
0079   1980           00527     btfsc flags, F_SOUND
                      00528     leave
007A   2???               M     goto isr_exit
007B   140C           00529     bsf TRISA, PADDLE
007C   3003           00530     movlw 3
007D   009D           00531     movwf ADCON0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   189D           00532     btfsc ADCON0,NOT_DONE
007F   3???           00533     bra $-1
0080   361C           00534     lsrf ADRESH,W
0081   00??           00535     movwf paddle_pos
0082   3028           00536     movlw PADDLE_LIMIT
0083   02??           00537     subwf paddle_pos,W
0084   3028           00538     movlw PADDLE_LIMIT
0085   1803           00539     skpnc
0086   00??           00540     movwf paddle_pos
0087   3010           00541     movlw 4<<CHS0
0088   009D           00542     movwf ADCON0
                      00543 ; create paddle mask
                      00544 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00545 ; paddle_byte=paddle_pos/8
                      00546 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)   
0089   36??           00547     lsrf paddle_pos,W
008A   3689           00548     lsrf WREG
008B   3689           00549     lsrf WREG
008C   00??           00550     movwf paddle_byte
008D   30FF           00551     movlw PADDLE_MASK
008E   00??           00552     movwf paddle_mask
008F   01??           00553     clrf paddle_mask+1
0090   3007           00554     movlw 7
0091   05??           00555     andwf paddle_pos,W
0092   1903           00556     skpnz
0093   3???           00557     bra read_paddle_exit
0094   36??           00558     lsrf paddle_mask
0095   0C??           00559     rrf paddle_mask+1
0096   0B89           00560     decfsz WREG
0097   3???           00561     bra $-3
0098                  00562 read_paddle_exit    
0098   1A80           00563     btfsc flags, F_PAUSE
0099   2???           00564     call track_paddle
                      00565     leave
009A   2???               M     goto isr_exit
                      00566     
                      00567 ; task 5,  sound timer
                      00568 ; if sound active process it.    
009B                  00569 sound
009B   0A??           00570     incf task
009C   1D80           00571     btfss flags, F_SOUND
                      00572     leave
009D   2???               M     goto isr_exit
009E   1A80           00573     btfsc flags, F_PAUSE
009F   2???           00574     call sound_fx1
00A0   002?           00575     banksel sound_timer
00A1   0B??           00576     decfsz sound_timer
                      00577     leave
00A2   2???               M     goto isr_exit
00A3                  00578 sound_off    
00A3   1180           00579     bcf flags, F_SOUND
00A4   003B           00580     banksel PWM2CON
00A5   132B           00581     bcf PWM2CON,OE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A6   13AB           00582     bcf PWM2CON,EN
00A7   0021           00583     banksel TRISA
00A8   140C           00584     bsf TRISA,PADDLE
                      00585     leave
00A9   2???               M     goto isr_exit
                      00586 
                      00587 ; sound effect, low pitch to high-pitch    
00AA                  00588 sound_fx1
00AA   1C80           00589     btfss flags, F_EVEN
00AB   0008           00590     return
00AC   003B           00591     banksel PWM2CON
00AD   36A6           00592     lsrf PWM2PRH
00AE   0CA5           00593     rrf PWM2PRL
00AF   36A4           00594     lsrf PWM2DCH
00B0   0CA3           00595     rrf PWM2DCL
00B1   17AF           00596     bsf PWM2LDCON,LDA
00B2   0008           00597     return
                      00598     
                      00599 ; initialize sound generation.
                      00600 ; input:
                      00601 ;   T = duration
                      00602 ;   WREG = index in frequency table    
                      00603 ; outpout:
                      00604 ;   none    
00B3                  00605 sound_init
                      00606     pushw  ; ( d i -- )
00B3   0019               M     movwi --SP
00B4   1580           00607     bsf flags, F_SOUND
00B5   003B           00608     banksel PWM2CON
00B6   0800           00609     movfw T
00B7   2???           00610     call frequency
00B8   00A6           00611     movwf PWM2PRH
00B9   0A00           00612     incf T,W
00BA   2???           00613     call frequency
00BB   00A5           00614     movwf PWM2PRL
00BC   3626           00615     lsrf PWM2PRH,W
00BD   00A4           00616     movwf PWM2DCH
00BE   0C25           00617     rrf PWM2PRL,W
00BF   00A3           00618     movwf PWM2DCL
00C0   17AF           00619     bsf PWM2LDCON,LDA
00C1   172B           00620     bsf PWM2CON,OE
00C2   17AB           00621     bsf PWM2CON,EN
00C3   002?           00622     banksel sound_timer
                      00623     pickn 1
00C4   3F01               M     moviw 1[SP]
00C5   00??           00624     movwf sound_timer
                      00625     dropn 2
00C6   3102               M     addfsr T,2
00C7   0021           00626     banksel TRISA
00C8   100C           00627     bcf TRISA,AUDIO
00C9   0008           00628     return
                      00629     
                      00630 ;task 6, read button and paddle position
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA                  00631 read_button
00CA   0A??           00632     incf task
00CB   0020           00633     banksel PORTA
00CC   080C           00634     movfw PORTA
00CD   3908           00635     andlw 1<<START_BTN
00CE   0021           00636     banksel TRISA
00CF   1D03           00637     skpz
                      00638     leave
00D0   2???               M     goto isr_exit
00D1   1A00           00639     btfsc flags, F_START
00D2   3???           00640     bra resume_game
00D3   2???           00641     call game_init
                      00642     leave
00D4   2???               M     goto isr_exit
00D5                  00643 resume_game
00D5   1E80           00644     btfss flags, F_PAUSE
                      00645     leave
00D6   2???               M     goto isr_exit
00D7   2???           00646     call resume
                      00647     leave
00D8   2???               M     goto isr_exit
                      00648     
                      00649     
                      00650 
                      00651     
                      00652 ; task 7, move recking ball.   
                      00653 ; also check for ball bounce on paddle
                      00654 ; and ball lost at bottom    
00D9                  00655 move_ball
00D9   0A??           00656     incf task
00DA   0B??           00657     decfsz ball_timer
                      00658     leave
00DB   2???               M     goto isr_exit
00DC   08??           00659     movfw ball_speed
00DD   00??           00660     movwf ball_timer
00DE   08??           00661     movfw ball_dx
00DF   07??           00662     addwf ball_x
00E0   08??           00663     movfw ball_dy
00E1   07??           00664     addwf ball_y
                      00665 ; test x bounds
00E2   0103           00666     clrw
                      00667     pushw
00E3   0019               M     movwi --SP
00E4   302F           00668     movlw BALL_RIGHT_BOUND+1
                      00669     pushw
00E5   0019               M     movwi --SP
00E6   08??           00670     movfw ball_x
00E7   2???           00671     call between
00E8   1803           00672     skpnc
00E9   3???           00673     bra y_bounds
                      00674 ; ball_x out of bounds    
00EA   09??           00675     comf ball_dx
00EB   0A??           00676     incf ball_dx
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   302E           00677     movlw BALL_RIGHT_BOUND
00ED   1B80           00678     btfsc ball_x,7
00EE   01??           00679     clrf ball_x
00EF   1D03           00680     skpz
00F0   00??           00681     movwf ball_x
                      00682 ; test y bounds
00F1                  00683 y_bounds    
00F1   303A           00684     movlw BALL_TOP_BOUND
                      00685     pushw
00F2   0019               M     movwi --SP
00F3   30EE           00686     movlw PADDLE_Y-BALL_HEIGHT
                      00687     pushw
00F4   0019               M     movwi --SP
00F5   08??           00688     movfw ball_y
00F6   2???           00689     call between
00F7   1803           00690     skpnc
00F8   3???           00691     bra move_ball_exit
                      00692 ; ball_y out of bound
00F9   09??           00693     comf ball_dy
00FA   0A??           00694     incf ball_dy
00FB   303A           00695     movlw BALL_TOP_BOUND
00FC   1F80           00696     btfss ball_y,7
00FD   00??           00697     movwf ball_y
00FE   1F80           00698     btfss ball_y,7
00FF   3???           00699     bra move_ball_exit
                      00700 ;ball at bottom
0100   2???           00701     call paddle_bounce
0101   1803           00702     skpnc
0102   3???           00703     bra move_ball_exit
0103                  00704 ball_lost
0103   0B??           00705     decfsz balls
0104   3???           00706     bra pause_game
0105   1200           00707     bcf flags, F_START
0106   3???           00708     bra freeze_ball
0107                  00709 pause_game
0107   1680           00710     bsf flags, F_PAUSE
0108   3008           00711     movlw 8
                      00712     pushw
0109   0019               M     movwi --SP
010A   3002           00713     movlw 2
010B   2???           00714     call sound_init
010C                  00715 freeze_ball
010C   01??           00716     clrf ball_dx
010D   01??           00717     clrf ball_dy
010E   3003           00718     movlw 3
010F   07??           00719     addwf paddle_pos,W
0110   00??           00720     movwf ball_x
0111   30ED           00721     movlw PADDLE_Y-BALL_HEIGHT-1
0112   00??           00722     movwf ball_y
0113                  00723 move_ball_exit
0113   2???           00724     call create_ball_mask
                      00725     leave
0114   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00726 
                      00727 ; check if ball is bouncing on paddle
                      00728 ; input:
                      00729 ;   none
                      00730 ; output:
                      00731 ;   C set if bounced    
0115                  00732 paddle_bounce
0115   08??           00733     movfw paddle_pos
0116   02??           00734     subwf ball_x,W
0117   1C03           00735     skpc 
0118   0008           00736     return ; ball fall left of paddle
0119   3007           00737     movlw PADDLE_WIDTH-BALL_WIDTH+1
011A   07??           00738     addwf paddle_pos,W
011B   02??           00739     subwf ball_x,W
011C   1C03           00740     skpc
011D   3???           00741     bra ball_bouncing
011E   1003           00742     clrc ; ball fall right of paddle
011F   0008           00743     return
0120                  00744 ball_bouncing
                      00745 ; bounce direction depend where paddle was hit.    
0120   3906           00746     andlw 0x6
0121   000B           00747     brw
0122   30FF           00748     movlw -1      ;0-1 paddle hit left, bounce left
0123   3???           00749     bra set_dx
0124   08??           00750     movfw ball_dx ;2-3 paddle hit at center mirror bounce
0125   3???           00751     bra set_dx
0126   08??           00752     movfw ball_dx ;4-5  mirror bounce
0127   3???           00753     bra set_dx
0128   3001           00754     movlw 1       ;6 paddle hit right, bounce right
0129                  00755 set_dx    
0129   00??           00756     movwf ball_dx
012A                  00757 paddle_sound    
012A   3002           00758     movlw 2
                      00759     pushw
012B   0019               M     movwi --SP
012C   2???           00760     call sound_init
                      00761 ; skip collision task
012D   0A??           00762     incf task
                      00763 ; report bounce    
012E   1403           00764     bsf STATUS,C
012F   0008           00765     return
                      00766     
                      00767 ; task 8, check collision with bricks
0130                  00768 collision
0130   304A           00769     movlw ROW1_Y
                      00770     pushw
0131   0019               M     movwi --SP
0132   307A           00771     movlw ROW6_Y+BRICK_HEIGHT
                      00772     pushw
0133   0019               M     movwi --SP
0134   08??           00773     movfw ball_y
0135   2???           00774     call between
0136   1C03           00775     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0137   3???           00776     bra collision_exit
0138   002?           00777     banksel row1
0139   0187           00778     clrf FSR1H
013A   30??           00779     movlw low row1
013B   0086           00780     movwf FSR1L
013C   304A           00781     movlw ROW1_Y
013D   02??           00782     subwf ball_y,W
013E   39F8           00783     andlw 0xf8
                      00784     pushw
013F   0019               M     movwi --SP
0140   0786           00785     addwf FSR1L
0141   08??           00786     movfw ball_byte
0142   0786           00787     addwf FSR1L
0143   30F0           00788     movlw 0xf0
0144   1900           00789     btfsc ball_x,2
0145   0E89           00790     swapf WREG
0146   0501           00791     andwf INDF1,W
0147   1903           00792     skpnz
0148   3???           00793     bra collision_exit
0149   300F           00794     movlw 0x0f
014A   1900           00795     btfsc ball_x,2
014B   0E89           00796     swapf WREG
014C   0581           00797     andwf INDF1
014D   09??           00798     comf ball_dy
014E   0A??           00799     incf ball_dy
014F   08??           00800     movfw ball_dy
0150   07??           00801     addwf ball_y
                      00802     popw
0151   0012               M     moviw SP++
0152   3689           00803     lsrf WREG
0153   3689           00804     lsrf WREG
0154   000B           00805     brw
0155   3009           00806     movlw 9
0156   3???           00807     bra add_score
0157   3009           00808     movlw 9
0158   3???           00809     bra add_score
0159   3007           00810     movlw 7
015A   3???           00811     bra add_score
015B   3005           00812     movlw 5
015C   3???           00813     bra add_score
015D   3003           00814     movlw 3
015E   3???           00815     bra add_score
015F   3001           00816     movlw 1
0160                  00817 add_score    
0160   2???           00818     call inc_score
0161                  00819 pong_sound
0161   3001           00820     movlw 1
                      00821     pushw
0162   0019               M     movwi --SP
0163   3000           00822     movlw 0
0164   2???           00823     call sound_init
0165                  00824 collision_exit
0165   0A??           00825     incf task
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00826     leave
0166   2???               M     goto isr_exit
                      00827     
                      00828 ; check if  lb <= x < hb
                      00829 ; design to take same number of Tcy whatever the path.
                      00830 ; 13 tcy    
                      00831 ; input:
                      00832 ;    WREG  x
                      00833 ;    stack ( lb hb -- )     
                      00834 ; output:
                      00835 ;   Carry bit set if true    
0167                  00836 between
0167   00??           00837     movwf temp2
                      00838     pickn 1
0168   3F01               M     moviw 1[SP]
0169   02??           00839     subwf temp2,W
016A   1C03           00840     skpc
016B   3???           00841     bra between_exit2
016C   0800           00842     movfw T
016D   02??           00843     subwf temp2
016E   0803           00844     movfw STATUS
016F   3A01           00845     xorlw 1
0170   0083           00846     movwf STATUS
0171                  00847 between_exit    
                      00848     dropn 2
0171   3102               M     addfsr T,2
0172   0008           00849     return  ; 13 tcy
                      00850 ; add tcy to have constant tcy for this routine whatever the path    
0173                  00851 between_exit2
0173   3???           00852     bra $+1
0174   3???           00853     bra between_exit
                      00854     
                      00855 ; task 9, wait for first video line
0175                  00856 video_first
0175   301D           00857     movlw FIRST_VIDEO_LINE-1
0176   02??           00858     subwf lcount,W
0177   1D03           00859     skpz
                      00860     leave
0178   2???               M     goto isr_exit
0179   01??           00861     clrf slice
017A   0A??           00862     incf task
                      00863     leave
017B   2???               M     goto isr_exit
                      00864    
                      00865 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00866 ; The following tasks are responsible to render video display.
                      00867 ; Each video line must be completed by setting color to black.
                      00868 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00869 
                      00870 ; check if ball is visible on this scan line    
                      00871 ; visible if ball_y <= lcount < ball_y+BALL_HEIGHT
                      00872 ; designed to use a constant number of Tcy    
                      00873 ;  22 tcy   
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00874 ;  input:
                      00875 ;       none    
                      00876 ;  output:
                      00877 ;       C set if true   
017C                  00878 ball_visible
017C   08??           00879     movfw ball_y
                      00880     pushw
017D   0019               M     movwi --SP
017E   3E08           00881     addlw BALL_HEIGHT
                      00882     pushw
017F   0019               M     movwi --SP
0180   08??           00883     movfw lcount
0181   2???           00884     call between ; +13 tcy
0182   0008           00885     return
                      00886     
                      00887     
                      00888 ; display vbuffer
                      00889 ; the 6 macros 'display_byte' unroll to 240 instructions    
0183                  00890 display_vbuffer
0183   300B           00891     movlw WHITE
0184   1F80           00892     btfss flags,F_BORDERS
0185   301B           00893     movlw BLACK
0186   008C           00894     movwf TRISA
                      00895     tdelay BORDER_WIDTH-3
                          M     if BORDER_WIDTH-3==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH-3==1
0187   0000               M     nop
                          M     exitm
                      00896     display_byte 0
                          M     display_bit 0
0188   35??               M     lslf vbuffer+0
0189   301B               M     movlw BLACK
018A   1803               M     skpnc
018B   08??               M     movfw fg_color
018C   008C               M     movwf TRISA
                          M     display_bit 0
018D   35??               M     lslf vbuffer+0
018E   301B               M     movlw BLACK
018F   1803               M     skpnc
0190   08??               M     movfw fg_color
0191   008C               M     movwf TRISA
                          M     display_bit 0
0192   35??               M     lslf vbuffer+0
0193   301B               M     movlw BLACK
0194   1803               M     skpnc
0195   08??               M     movfw fg_color
0196   008C               M     movwf TRISA
                          M     display_bit 0
0197   35??               M     lslf vbuffer+0
0198   301B               M     movlw BLACK
0199   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019A   08??               M     movfw fg_color
019B   008C               M     movwf TRISA
                          M     display_bit 0
019C   35??               M     lslf vbuffer+0
019D   301B               M     movlw BLACK
019E   1803               M     skpnc
019F   08??               M     movfw fg_color
01A0   008C               M     movwf TRISA
                          M     display_bit 0
01A1   35??               M     lslf vbuffer+0
01A2   301B               M     movlw BLACK
01A3   1803               M     skpnc
01A4   08??               M     movfw fg_color
01A5   008C               M     movwf TRISA
                          M     display_bit 0
01A6   35??               M     lslf vbuffer+0
01A7   301B               M     movlw BLACK
01A8   1803               M     skpnc
01A9   08??               M     movfw fg_color
01AA   008C               M     movwf TRISA
                          M     display_bit 0
01AB   35??               M     lslf vbuffer+0
01AC   301B               M     movlw BLACK
01AD   1803               M     skpnc
01AE   08??               M     movfw fg_color
01AF   008C               M     movwf TRISA
                      00897     display_byte 1
                          M     display_bit 1
01B0   35??               M     lslf vbuffer+1
01B1   301B               M     movlw BLACK
01B2   1803               M     skpnc
01B3   08??               M     movfw fg_color
01B4   008C               M     movwf TRISA
                          M     display_bit 1
01B5   35??               M     lslf vbuffer+1
01B6   301B               M     movlw BLACK
01B7   1803               M     skpnc
01B8   08??               M     movfw fg_color
01B9   008C               M     movwf TRISA
                          M     display_bit 1
01BA   35??               M     lslf vbuffer+1
01BB   301B               M     movlw BLACK
01BC   1803               M     skpnc
01BD   08??               M     movfw fg_color
01BE   008C               M     movwf TRISA
                          M     display_bit 1
01BF   35??               M     lslf vbuffer+1
01C0   301B               M     movlw BLACK
01C1   1803               M     skpnc
01C2   08??               M     movfw fg_color
01C3   008C               M     movwf TRISA
                          M     display_bit 1
01C4   35??               M     lslf vbuffer+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C5   301B               M     movlw BLACK
01C6   1803               M     skpnc
01C7   08??               M     movfw fg_color
01C8   008C               M     movwf TRISA
                          M     display_bit 1
01C9   35??               M     lslf vbuffer+1
01CA   301B               M     movlw BLACK
01CB   1803               M     skpnc
01CC   08??               M     movfw fg_color
01CD   008C               M     movwf TRISA
                          M     display_bit 1
01CE   35??               M     lslf vbuffer+1
01CF   301B               M     movlw BLACK
01D0   1803               M     skpnc
01D1   08??               M     movfw fg_color
01D2   008C               M     movwf TRISA
                          M     display_bit 1
01D3   35??               M     lslf vbuffer+1
01D4   301B               M     movlw BLACK
01D5   1803               M     skpnc
01D6   08??               M     movfw fg_color
01D7   008C               M     movwf TRISA
                      00898     display_byte 2
                          M     display_bit 2
01D8   35??               M     lslf vbuffer+2
01D9   301B               M     movlw BLACK
01DA   1803               M     skpnc
01DB   08??               M     movfw fg_color
01DC   008C               M     movwf TRISA
                          M     display_bit 2
01DD   35??               M     lslf vbuffer+2
01DE   301B               M     movlw BLACK
01DF   1803               M     skpnc
01E0   08??               M     movfw fg_color
01E1   008C               M     movwf TRISA
                          M     display_bit 2
01E2   35??               M     lslf vbuffer+2
01E3   301B               M     movlw BLACK
01E4   1803               M     skpnc
01E5   08??               M     movfw fg_color
01E6   008C               M     movwf TRISA
                          M     display_bit 2
01E7   35??               M     lslf vbuffer+2
01E8   301B               M     movlw BLACK
01E9   1803               M     skpnc
01EA   08??               M     movfw fg_color
01EB   008C               M     movwf TRISA
                          M     display_bit 2
01EC   35??               M     lslf vbuffer+2
01ED   301B               M     movlw BLACK
01EE   1803               M     skpnc
01EF   08??               M     movfw fg_color
01F0   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 2
01F1   35??               M     lslf vbuffer+2
01F2   301B               M     movlw BLACK
01F3   1803               M     skpnc
01F4   08??               M     movfw fg_color
01F5   008C               M     movwf TRISA
                          M     display_bit 2
01F6   35??               M     lslf vbuffer+2
01F7   301B               M     movlw BLACK
01F8   1803               M     skpnc
01F9   08??               M     movfw fg_color
01FA   008C               M     movwf TRISA
                          M     display_bit 2
01FB   35??               M     lslf vbuffer+2
01FC   301B               M     movlw BLACK
01FD   1803               M     skpnc
01FE   08??               M     movfw fg_color
01FF   008C               M     movwf TRISA
                      00899     display_byte 3
                          M     display_bit 3
0200   35??               M     lslf vbuffer+3
0201   301B               M     movlw BLACK
0202   1803               M     skpnc
0203   08??               M     movfw fg_color
0204   008C               M     movwf TRISA
                          M     display_bit 3
0205   35??               M     lslf vbuffer+3
0206   301B               M     movlw BLACK
0207   1803               M     skpnc
0208   08??               M     movfw fg_color
0209   008C               M     movwf TRISA
                          M     display_bit 3
020A   35??               M     lslf vbuffer+3
020B   301B               M     movlw BLACK
020C   1803               M     skpnc
020D   08??               M     movfw fg_color
020E   008C               M     movwf TRISA
                          M     display_bit 3
020F   35??               M     lslf vbuffer+3
0210   301B               M     movlw BLACK
0211   1803               M     skpnc
0212   08??               M     movfw fg_color
0213   008C               M     movwf TRISA
                          M     display_bit 3
0214   35??               M     lslf vbuffer+3
0215   301B               M     movlw BLACK
0216   1803               M     skpnc
0217   08??               M     movfw fg_color
0218   008C               M     movwf TRISA
                          M     display_bit 3
0219   35??               M     lslf vbuffer+3
021A   301B               M     movlw BLACK
021B   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021C   08??               M     movfw fg_color
021D   008C               M     movwf TRISA
                          M     display_bit 3
021E   35??               M     lslf vbuffer+3
021F   301B               M     movlw BLACK
0220   1803               M     skpnc
0221   08??               M     movfw fg_color
0222   008C               M     movwf TRISA
                          M     display_bit 3
0223   35??               M     lslf vbuffer+3
0224   301B               M     movlw BLACK
0225   1803               M     skpnc
0226   08??               M     movfw fg_color
0227   008C               M     movwf TRISA
                      00900     display_byte 4
                          M     display_bit 4
0228   35??               M     lslf vbuffer+4
0229   301B               M     movlw BLACK
022A   1803               M     skpnc
022B   08??               M     movfw fg_color
022C   008C               M     movwf TRISA
                          M     display_bit 4
022D   35??               M     lslf vbuffer+4
022E   301B               M     movlw BLACK
022F   1803               M     skpnc
0230   08??               M     movfw fg_color
0231   008C               M     movwf TRISA
                          M     display_bit 4
0232   35??               M     lslf vbuffer+4
0233   301B               M     movlw BLACK
0234   1803               M     skpnc
0235   08??               M     movfw fg_color
0236   008C               M     movwf TRISA
                          M     display_bit 4
0237   35??               M     lslf vbuffer+4
0238   301B               M     movlw BLACK
0239   1803               M     skpnc
023A   08??               M     movfw fg_color
023B   008C               M     movwf TRISA
                          M     display_bit 4
023C   35??               M     lslf vbuffer+4
023D   301B               M     movlw BLACK
023E   1803               M     skpnc
023F   08??               M     movfw fg_color
0240   008C               M     movwf TRISA
                          M     display_bit 4
0241   35??               M     lslf vbuffer+4
0242   301B               M     movlw BLACK
0243   1803               M     skpnc
0244   08??               M     movfw fg_color
0245   008C               M     movwf TRISA
                          M     display_bit 4
0246   35??               M     lslf vbuffer+4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0247   301B               M     movlw BLACK
0248   1803               M     skpnc
0249   08??               M     movfw fg_color
024A   008C               M     movwf TRISA
                          M     display_bit 4
024B   35??               M     lslf vbuffer+4
024C   301B               M     movlw BLACK
024D   1803               M     skpnc
024E   08??               M     movfw fg_color
024F   008C               M     movwf TRISA
                      00901     display_byte 5
                          M     display_bit 5
0250   35??               M     lslf vbuffer+5
0251   301B               M     movlw BLACK
0252   1803               M     skpnc
0253   08??               M     movfw fg_color
0254   008C               M     movwf TRISA
                          M     display_bit 5
0255   35??               M     lslf vbuffer+5
0256   301B               M     movlw BLACK
0257   1803               M     skpnc
0258   08??               M     movfw fg_color
0259   008C               M     movwf TRISA
                          M     display_bit 5
025A   35??               M     lslf vbuffer+5
025B   301B               M     movlw BLACK
025C   1803               M     skpnc
025D   08??               M     movfw fg_color
025E   008C               M     movwf TRISA
                          M     display_bit 5
025F   35??               M     lslf vbuffer+5
0260   301B               M     movlw BLACK
0261   1803               M     skpnc
0262   08??               M     movfw fg_color
0263   008C               M     movwf TRISA
                          M     display_bit 5
0264   35??               M     lslf vbuffer+5
0265   301B               M     movlw BLACK
0266   1803               M     skpnc
0267   08??               M     movfw fg_color
0268   008C               M     movwf TRISA
                          M     display_bit 5
0269   35??               M     lslf vbuffer+5
026A   301B               M     movlw BLACK
026B   1803               M     skpnc
026C   08??               M     movfw fg_color
026D   008C               M     movwf TRISA
                          M     display_bit 5
026E   35??               M     lslf vbuffer+5
026F   301B               M     movlw BLACK
0270   1803               M     skpnc
0271   08??               M     movfw fg_color
0272   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 5
0273   35??               M     lslf vbuffer+5
0274   301B               M     movlw BLACK
0275   1803               M     skpnc
0276   08??               M     movfw fg_color
0277   008C               M     movwf TRISA
0278   300B           00902     movlw WHITE
0279   1F80           00903     btfss flags,F_BORDERS
027A   301B           00904     movlw BLACK
027B   008C           00905     movwf TRISA
                      00906     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
027C   2???               M     call _4tcy
                          M     exitm
                      00907     black
027D   301B               M     movlw BLACK
027E   008C               M     movwf TRISA
027F   0008           00908     return
                      00909  
                      00910 ; task 10, draw score en ball count
                      00911 ;  lcount 30-49    
0280                  00912 draw_score 
                      00913 ;    banksel TRISA
0280   36??           00914     lsrf slice,W
0281   3689           00915     lsrf WREG
0282   00??           00916     movwf temp3
0283   08??           00917     movfw score
0284   2???           00918     call digits
0285   0E89           00919     swapf WREG
0286   04??           00920     iorwf vbuffer
0287   0E??           00921     swapf score+1,W
0288   2???           00922     call digits
0289   04??           00923     iorwf vbuffer
028A   08??           00924     movfw score+1
028B   2???           00925     call digits
028C   0E89           00926     swapf WREG
028D   04??           00927     iorwf vbuffer+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028E   08??           00928     movfw balls
028F   2???           00929     call digits
0290   04??           00930     iorwf vbuffer+4
                      00931     no_borders
0291   1380               M     bcf flags,F_BORDERS
0292   2???           00932     call display_vbuffer
0293                  00933 score_exit
                      00934     next_task DIGIT_PIXEL_HEIGHT*DIGIT_FONT_HEIGHT ;4*5 
0293   0A??               M     incf slice
0294   3014               M     movlw DIGIT_PIXEL_HEIGHT*DIGIT_FONT_HEIGHT
0295   02??               M     subwf slice,W
0296   1D03               M     skpz
                          M     leave
0297   2???               M     goto isr_exit
0298   01??               M     clrf slice
0299   0A??               M     incf task
                          M     leave
029A   2???               M     goto isr_exit
                      00935 
                      00936     
                      00937 ; task 11,  draw top wall, 8 screen lines 
                      00938 ; lcount 50-57    
029B                  00939 draw_top_wall
                      00940 ;    banksel TRISA
029B   09??           00941     comf vbuffer
029C   09??           00942     comf vbuffer+1
029D   09??           00943     comf vbuffer+2
029E   09??           00944     comf vbuffer+3
029F   09??           00945     comf vbuffer+4
02A0   09??           00946     comf vbuffer+5
02A1   300B           00947     movlw WHITE
02A2   00??           00948     movwf fg_color
                      00949     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02A3   3016               M     movlw q
02A4   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      00950 ;    white
02A5   2???           00951     call display_vbuffer
                      00952 ;    white
                      00953 ;    tdelay BORDER_WIDTH
                      00954 ;    black
                      00955     next_task BRICK_HEIGHT
02A6   0A??               M     incf slice
02A7   3008               M     movlw BRICK_HEIGHT
02A8   02??               M     subwf slice,W
02A9   1D03               M     skpz
                          M     leave
02AA   2???               M     goto isr_exit
02AB   01??               M     clrf slice
02AC   0A??               M     incf task
                          M     leave
02AD   2???               M     goto isr_exit
                      00956 
                      00957 ; put ball mask in video_buffer
                      00958 ; designed to take a constant number of Tcy    
                      00959 ; 38 Tcy    
02AE                  00960 put_ball_in_buffer
02AE   2???           00961     call ball_visible ; +22 Tcy
02AF   1C03           00962     skpc
02B0   3???           00963     bra kill_time
02B1   0187           00964     clrf FSR1H
02B2   30??           00965     movlw low vbuffer
02B3   0086           00966     movwf FSR1L
02B4   08??           00967     movfw ball_byte
02B5   0786           00968     addwf FSR1L
02B6   08??           00969     movfw ball_mask
02B7   001E           00970     movwi FSR1++
02B8   08??           00971     movfw ball_mask+1
02B9   3FC0           00972     movwi [FSR1]
02BA   0008           00973     return ; 37 tcy
02BB                  00974 kill_time 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00975     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3  
  0001                    M     variable r=7-3-3*q
02BB   3001               M     movlw q
02BC   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02BD   0000               M     nop
                          M     exitm
02BE   0008           00976     return ; 37 tcy
                      00977 
02BF                  00978 empty_common    
02BF   2???           00979     call put_ball_in_buffer
02C0   300B           00980     movlw WHITE
02C1   00??           00981     movwf fg_color
                      00982     tdelay LEFT_MARGIN-37
                          M     if LEFT_MARGIN-37==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==2
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37>5
  0009                    M     variable q=(LEFT_MARGIN-37-3)/3 
  0002                    M     variable r=LEFT_MARGIN-37-3-3*q
02C2   3009               M     movlw q
02C3   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
02C4   3???               M     bra $+1
                          M     exitm
                      00983 ;    white
02C5   2???           00984     call display_vbuffer
                      00985 ;    white
                      00986 ;    tdelay BORDER_WIDTH
                      00987 ;    black
02C6   0008           00988     return
                      00989     
                      00990 ; task 12,  draw vertical sides over bricks.
                      00991 ; lcount 58-73    
02C7                  00992 draw_sides 
                      00993 ;    banksel TRISA
                      00994     tdelay 2
                          M     if 2==0
                          M     exitm
                          M     endif
                          M     if 2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 2==2
02C7   3???               M     bra $+1
                          M     exitm
02C8   2???           00995     call empty_common
                      00996     next_task 2*BRICK_HEIGHT
02C9   0A??               M     incf slice
02CA   3010               M     movlw 2*BRICK_HEIGHT
02CB   02??               M     subwf slice,W
02CC   1D03               M     skpz
                          M     leave
02CD   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CE   01??               M     clrf slice
02CF   0A??               M     incf task
                          M     leave
02D0   2???               M     goto isr_exit
                      00997  
                      00998 ; copy a brick row in vbuffer
                      00999 ; FSR1 initialized to point row    
02D1                  01000 copy_row
02D1   0016           01001     moviw FSR1++
02D2   04??           01002     iorwf vbuffer
02D3   0016           01003     moviw FSR1++
02D4   04??           01004     iorwf vbuffer+1
02D5   0016           01005     moviw FSR1++
02D6   04??           01006     iorwf vbuffer+2
02D7   0016           01007     moviw FSR1++
02D8   04??           01008     iorwf vbuffer+3
02D9   0016           01009     moviw FSR1++
02DA   04??           01010     iorwf vbuffer+4
02DB   0016           01011     moviw FSR1++
02DC   04??           01012     iorwf vbuffer+5
02DD   0008           01013     return    
                      01014 
                      01015 ;common code to all bricks row display    
02DE                  01016 rows_common
02DE   00??           01017     movwf fg_color
02DF   0187           01018     clrf FSR1H
02E0   2???           01019     call copy_row
                      01020     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
02E1   0000               M     nop
                          M     exitm
                      01021 ;    white
02E2   2???           01022     call display_vbuffer
                      01023 ;    white
                      01024 ;    tdelay BORDER_WIDTH
                      01025 ;    black
                      01026     next_task BRICKS_ROWS*BRICK_HEIGHT
02E3   0A??               M     incf slice
02E4   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
02E5   02??               M     subwf slice,W
02E6   1D03               M     skpz
                          M     leave
02E7   2???               M     goto isr_exit
02E8   01??               M     clrf slice
02E9   0A??               M     incf task
                          M     leave
02EA   2???               M     goto isr_exit
                      01027     
                      01028 ; task 13, draw brick rows
                      01029 ; lcount 74-121   
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02EB                  01030 draw_bricks
                      01031 ;    banksel vbuffer
02EB   2???           01032     call put_ball_in_buffer
02EC   30??           01033     movlw low row1
02ED   0086           01034     movwf FSR1L
02EE   30F8           01035     movlw 0xf8
02EF   05??           01036     andwf slice,W
02F0   0786           01037     addwf FSR1L
02F1   003B           01038     banksel PWM1CON
                      01039     pushw
02F2   0019               M     movwi --SP
02F3   3010           01040     movlw 2<<3
02F4   0200           01041     subwf T,W
02F5   1803           01042     skpnc
02F6   161B           01043     bsf PWM1CON,POL
                      01044     popw
02F7   0012               M     moviw SP++
02F8   0021           01045     banksel TRISA
02F9   3689           01046     lsrf WREG
02FA   3689           01047     lsrf WREG
                      01048     ; select color according to row index {0..5}
02FB   000B           01049     brw
02FC   3009           01050     movlw YELLOW
02FD   3???           01051     bra rows_common
02FE   3009           01052     movlw YELLOW
02FF   3???           01053     bra rows_common
0300   3009           01054     movlw MAUVE
0301   3???           01055     bra rows_common
0302   3009           01056     movlw MAUVE
0303   3???           01057     bra rows_common
0304   3019           01058     movlw BLUE
0305   3???           01059     bra rows_common
0306   3019           01060     movlw BLUE
0307   3???           01061     bra rows_common
                      01062     
  00000028            01063 MSG_FIRST equ 40
  00000028            01064 MSG_HEIGHT equ 40
  00000010            01065 MSG_PIXELS_COUNT equ 16 
                      01066 ; task 14
                      01067 ; draw all rows below bricks down to paddle
                      01068 ; also display message when game over. 
                      01069 ; lcount 122-241 
0308                  01070 draw_empty
                      01071 ;    banksel TRISA
0308   1E00           01072     btfss flags, F_START
0309   3???           01073     bra print_msg
030A   2???           01074     call empty_common
030B   3???           01075     bra draw_empty_exit
030C                  01076 print_msg    
030C   3009           01077     movlw YELLOW ; message color
030D   00??           01078     movwf fg_color
030E   3028           01079     movlw MSG_FIRST
                      01080     pushw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030F   0019               M     movwi --SP
0310   3050           01081     movlw MSG_FIRST+MSG_HEIGHT
                      01082     pushw
0311   0019               M     movwi --SP
0312   08??           01083     movfw slice
0313   2???           01084     call between
0314   1C03           01085     skpc
0315   3???           01086     bra msg01
0316   30??           01087     movlw high end_msg
0317   0087           01088     movwf FSR1H
0318   30??           01089     movlw low end_msg
0319   0086           01090     movwf FSR1L
031A   1003           01091     clrc
031B   300A           01092     movlw 10
031C   1B00           01093     btfsc flags,F_COOL
031D   0786           01094     addwf FSR1L
031E   1803           01095     skpnc
031F   0A87           01096     incf FSR1H
                      01097 ; copy message bitmap in vbuffer
                      01098 ; message is  16 pixels wide
0320                  01099 copy_msg
0320   3028           01100     movlw MSG_FIRST
0321   02??           01101     subwf slice,W
0322   39F8           01102     andlw 0xf8
0323   3689           01103     lsrf WREG
0324   3689           01104     lsrf WREG
0325   0786           01105     addwf FSR1L
0326   1803           01106     skpnc
0327   0A87           01107     incf FSR1H
0328   0016           01108     moviw FSR1++
0329   00??           01109     movwf vbuffer+1
032A   0016           01110     moviw FSR1++
032B   00??           01111     movwf vbuffer+2
032C   3???           01112     bra msg02
032D                  01113 msg01
                      01114     tdelay 24
                          M     if 24==0
                          M     exitm
                          M     endif
                          M     if 24==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 24==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 24==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 24==4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 24==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 24>5
  0007                    M     variable q=(24-3)/3 
  0000                    M     variable r=24-3-3*q
032D   3007               M     movlw q
032E   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
032F                  01115 msg02
                      01116     tdelay LEFT_MARGIN-45
                          M     if LEFT_MARGIN-45==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-45>5
  0007                    M     variable q=(LEFT_MARGIN-45-3)/3 
  0000                    M     variable r=LEFT_MARGIN-45-3-3*q
032F   3007               M     movlw q
0330   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0331   2???           01117     call display_vbuffer
0332                  01118 draw_empty_exit
                      01119     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0332   0A??               M     incf slice
0333   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0334   02??               M     subwf slice,W
0335   1D03               M     skpz
                          M     leave
0336   2???               M     goto isr_exit
0337   01??               M     clrf slice
0338   0A??               M     incf task
                          M     leave
0339   2???               M     goto isr_exit
                      01120 
                      01121     
                      01122 ; task 15, draw paddle at bottom screen  
                      01123 ; lcount 242-249    
033A                  01124 draw_paddle
                      01125 ;    banksel TRISA
033A   0187           01126     clrf FSR1H
033B   30??           01127     movlw low vbuffer
033C   0086           01128     movwf FSR1L
033D   08??           01129     movfw paddle_byte
033E   0786           01130     addwf FSR1L
033F   08??           01131     movfw paddle_mask
0340   001E           01132     movwi FSR1++
0341   08??           01133     movfw paddle_mask+1
0342   3FC0           01134     movwi  [FSR1]
0343   300B           01135     movlw WHITE
0344   00??           01136     movwf fg_color
                      01137     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
0345   3015               M     movlw q
0346   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01138  ;   white
0347   2???           01139     call display_vbuffer
                      01140 ;    white
                      01141 ;    tdelay BORDER_WIDTH
                      01142 ;    black
                      01143     next_task PADDLE_THICKNESS
0348   0A??               M     incf slice
0349   3004               M     movlw PADDLE_THICKNESS
034A   02??               M     subwf slice,W
034B   1D03               M     skpz
                          M     leave
034C   2???               M     goto isr_exit
034D   01??               M     clrf slice
034E   0A??               M     incf task
                          M     leave
034F   2???               M     goto isr_exit
                      01144 
                      01145 ; task 16,  wait end of this field, reset task to zero    
                      01146 ; lcount 251-262/3    
0350                  01147 wait_field_end
0350   1800           01148     btfsc flags, F_BIT8
0351   2???           01149     goto hi_line
                      01150     leave
0352   2???               M     goto isr_exit
0353                  01151 hi_line
0353   1880           01152     btfsc flags,F_EVEN
0354   2???           01153     goto even_field
0355   3005           01154     movlw 5
0356   02??           01155     subwf lcount,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0357   1D03           01156     skpz
                      01157     leave
0358   2???               M     goto isr_exit
0359   2???           01158     goto field_end
035A                  01159 even_field
035A   3006           01160     movlw 6
035B   02??           01161     subwf lcount,W
035C   1D03           01162     skpz
                      01163     leave
035D   2???               M     goto isr_exit
                      01164 ; even field last line is half_line    
                      01165 ; set PWM3 for line 263 half-line
035E   003B           01166     banksel PWM3DC
035F   3003           01167     movlw high HALF_LINE
0360   00B6           01168     movwf PWM3PRH
0361   308D           01169     movlw low HALF_LINE
0362   00B5           01170     movwf PWM3PRL
0363   17BF           01171     bsf PWM3LDCON,7
0364                  01172 field_end
0364   01??           01173     clrf task
0365   01??           01174     clrf slice
0366   01??           01175     clrf lcount
0367   1000           01176     bcf flags, F_BIT8
0368   1500           01177     bsf flags, F_SYNC
                      01178 ; toggle odd/even field flag    
0369   3002           01179     movlw 1<<F_EVEN
036A   06??           01180     xorwf flags
                      01181     leave
036B   2???               M     goto isr_exit
                      01182 
                      01183 ; helper functions
                      01184 
                      01185 
                      01186 ; increment user score
                      01187 ; This is a BCD addition where a single digit is added to score.   
                      01188 ; score is stored as big indian
                      01189 ; argument: 
                      01190 ;   WREG ->  bdc digit to add to score variable
036C                  01191 inc_score
036C   07??           01192     addwf score+1
036D   1883           01193     btfsc STATUS,DC
036E   3???           01194     bra $+6
036F   300F           01195     movlw 15
0370   05??           01196     andwf score+1,W
0371   3C09           01197     sublw 9
0372   1803           01198     skpnc
0373   3???           01199     bra $+3
0374   3006           01200     movlw 6
0375   07??           01201     addwf score+1
0376   0E??           01202     swapf score+1,W
0377   390F           01203     andlw 15
0378   3C09           01204     sublw 9
0379   1803           01205     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037A   3???           01206     bra game_over_test
037B   3060           01207     movlw 0x60
037C   07??           01208     addwf score+1
037D   0A??           01209     incf score
                      01210 ; double ball speed if score >=200
037E   3002           01211     movlw 2
037F   02??           01212     subwf score,W
0380   1C03           01213     skpc
0381   0008           01214     return
0382   3001           01215     movlw 1
0383   00??           01216     movwf ball_speed
0384                  01217 game_over_test ; all bricks destroyed?
0384   3004           01218     movlw 4
0385   02??           01219     subwf score,W
0386   1D03           01220     skpz
0387   0008           01221     return
0388   3008           01222     movlw 0x08
0389   02??           01223     subwf score+1,W
038A   1D03           01224     skpz
038B   0008           01225     return
038C   1200           01226     bcf flags,F_START ; game over
038D   1700           01227     bsf flags,F_COOL ; with maximum score.
038E   0008           01228     return
                      01229     
                      01230     
038F                  01231 brick_wall_init
038F   30??           01232     movlw high row1
0390   0087           01233     movwf FSR1H
0391   30??           01234     movlw low row1
0392   0086           01235     movwf FSR1L
0393   3030           01236     movlw BRICKS_ROWS*8
0394   00??           01237     movwf temp1
0395   30FF           01238     movlw 0xff
0396                  01239 bw_init
0396   001E           01240     movwi FSR1++
0397   0B??           01241     decfsz temp1
0398   3???           01242     bra bw_init
0399   0008           01243     return
                      01244 
                      01245 ; pseudo random number generator    
                      01246 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs  
  000000B8            01247 POLY equ 0xb8 
039A                  01248 lfsr8
039A   36??           01249     lsrf seed
039B   30B8           01250     movlw POLY
039C   1803           01251     skpnc
039D   06??           01252     xorwf seed
                      01253 ; call here for 5 Tcy delay using a single instruction
                      01254 ; see tdelay macro 
039E                  01255 _5tcy
039E   08??           01256     movfw seed
039F   0008           01257     return
                      01258     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01259 ; ball is sent at random direcction at serve.
03A0                  01260 set_ball_dx
03A0   2???           01261     call lfsr8 ;random
03A1   3907           01262     andlw 7
03A2   3589           01263     lslf WREG
03A3   000B           01264     brw
03A4   3001           01265     movlw 1
03A5   3???           01266     bra set_ball_dx_exit
03A6   30FF           01267     movlw -1
03A7   3???           01268     bra set_ball_dx_exit
03A8   3001           01269     movlw 1
03A9   3???           01270     bra set_ball_dx_exit
03AA   30FF           01271     movlw -1
03AB   3???           01272     bra set_ball_dx_exit
03AC   3001           01273     movlw 1
03AD   3???           01274     bra set_ball_dx_exit
03AE   30FF           01275     movlw -1
03AF   3???           01276     bra set_ball_dx_exit
03B0   3001           01277     movlw 1
03B1   3???           01278     bra set_ball_dx_exit
03B2   3000           01279     movlw 0
03B3                  01280 set_ball_dx_exit
03B3   00??           01281     movwf ball_dx
03B4   0008           01282     return
                      01283 
                      01284 ; compute ball_mask and ball_byte
                      01285 ; ball_mask= BALL_MASK>>(ball_x%8)
                      01286 ; ball_byte= ball_x/8     
03B5                  01287 create_ball_mask
03B5   002?           01288     banksel vbuffer
03B6   36??           01289     lsrf ball_x,W
03B7   3689           01290     lsrf WREG
03B8   3689           01291     lsrf WREG
03B9   00??           01292     movwf ball_byte
03BA   30C0           01293     movlw BALL_MASK
03BB   00??           01294     movwf ball_mask
03BC   01??           01295     clrf ball_mask+1
03BD   3007           01296     movlw 7
03BE   05??           01297     andwf ball_x,W
03BF   1903           01298     skpnz
03C0   0008           01299     return
03C1   36??           01300     lsrf ball_mask
03C2   0C??           01301     rrf ball_mask+1
03C3   0B89           01302     decfsz WREG
03C4   3???           01303     bra $-3
03C5   0008           01304     return
                      01305     
03C6                  01306 game_init
03C6   01??           01307     clrf score
03C7   01??           01308     clrf score+1
03C8   2???           01309     call brick_wall_init
03C9   002?           01310     banksel balls
03CA   3002           01311     movlw 2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CB   00??           01312     movwf ball_timer
03CC   3002           01313     movlw 2
03CD   00??           01314     movwf ball_speed
03CE   3003           01315     movlw 3
03CF   00??           01316     movwf balls
03D0   1600           01317     bsf flags,F_START
03D1                  01318 resume
03D1   1280           01319     bcf flags, F_PAUSE
03D2   2???           01320     call set_ball_dx
03D3   30FC           01321     movlw -4
03D4   00??           01322     movwf ball_dy
03D5                  01323 track_paddle
03D5   30ED           01324     movlw PADDLE_Y-BALL_HEIGHT-1
03D6   00??           01325     movwf ball_y
03D7   3003           01326     movlw 3
03D8   07??           01327     addwf paddle_pos,W
03D9   00??           01328     movwf ball_x
03DA   2???           01329     call create_ball_mask
03DB   0008           01330     return
                      01331     
                      01332 MAIN_PROG CODE                      ; let linker place main program
                      01333 
0000                  01334 initialize
                      01335 ; clear common RAM
0000   3070           01336     movlw 0x70
0001   0084           01337     movwf FSR0L
0002   0103           01338     clrw
0003   001A           01339     movwi FSR0++
0004   1F84           01340     btfss FSR0L,7
0005   3???           01341     bra $-2
                      01342 ; initialize LFSR seed
0006   1400           01343     bsf seed,0
                      01344 ; disable analog inputs, except AN0
0007   0023           01345     banksel ANSELA
0008   018C           01346     clrf ANSELA
                      01347 ; paddle potentiometer input     
0009   140C           01348     bsf ANSELA,PADDLE
                      01349 ;   setup arguments stack pointer
000A   30??           01350     movlw low (stack+STACK_SIZE)
000B   0084           01351     movwf FSR0L
                      01352 ; adc clock Fosc/32    
000C   0021           01353     banksel ADCON1
000D   3020           01354     movlw (2<<ADCS0)
000E   009E           01355     movwf ADCON1
                      01356 ; pin setup
                      01357 ; video luminance output always set to 1.    
000F   0022           01358     banksel LATA
0010   160C           01359     bsf LATA, VIDEO_OUT
                      01360 ; nstc sync output
0011   0021           01361     banksel TRISA
0012   110C           01362     bcf TRISA,SYNC_OUT
                      01363 ;  clear all PWM special fonction registers
                      01364 ;  to start configuration in a clean state.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013   300D           01365     movlw high PWMEN
0014   0087           01366     movwf FSR1H
0015   308E           01367     movlw low PWMEN
0016   0086           01368     movwf FSR1L
0017                  01369 clr_pwm_sfr
0017   0181           01370     clrf INDF1
0018   0A86           01371     incf FSR1L
0019   30C1           01372     movlw 0xc1
001A   0206           01373     subwf FSR1L,W
001B   1D03           01374     skpz
001C   3???           01375     bra clr_pwm_sfr
                      01376 ; PWM1 chroma signal on RA1
001D   003B           01377     banksel PWM1CON
001E   30C0           01378     movlw (1<<EN)|(1<<OE)
001F   009B           01379     movwf PWM1CON
0020   3007           01380     movlw 7
0021   0095           01381     movwf PWM1PRL
0022   3004           01382     movlw 4
0023   0093           01383     movwf PWM1DCL
0024   179F           01384     bsf PWM1LDCON,7
                      01385 ; PWM2 sound, clock source Fosc/8
0025   3030           01386     movlw 3<<PWM2PS0
0026   00AE           01387     movwf PWM2CLKCON
                      01388 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0027   301B           01389     movlw low HPERIOD
0028   00B5           01390     movwf PWM3PRL
0029   3007           01391     movlw high HPERIOD
002A   00B6           01392     movwf PWM3PRH
002B   3086           01393     movlw HSYNC
002C   00B3           01394     movwf PWM3DCL
002D   30D0           01395     movlw (1<<EN)|(1<<OE)|(1<<POL)
002E   00BB           01396     movwf PWM3CON
002F   17BF           01397     bsf PWM3LDCON,7
0030   143C           01398     bsf PWM3INTE,PRIE
                      01399 ; enbable interrupt
                      01400 ; only interrupt used is PWM3PR rollover    
0031   0020           01401     banksel PIR3
0032   1313           01402     bcf PIR3,PWM3IF
0033   0021           01403     banksel PIE3
0034   1713           01404     bsf PIE3,PWM3IE
0035   170B           01405     bsf INTCON,PEIE
0036   178B           01406     bsf INTCON,GIE
                      01407 ; test code
                      01408 ; all processing done in ISR    
0037   2???           01409     goto $
                      01410 
                      01411 ;digits character table
                      01412 ; input:
                      01413 ;   temp3 -> glyph row
                      01414 ;   WREG -> digit
                      01415 ; output:
                      01416 ;   WREG -> pixels
                      01417 ; 2 digits packed in 5 bytes
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01418 ; high nibble even digit, low nibble odd digit    
0038                  01419 digits
0038   00??           01420     movwf temp1
0039   390E           01421     andlw 0x0e
003A   00??           01422     movwf temp2
003B   35??           01423     lslf temp2
003C   35??           01424     lslf temp2
003D   07??           01425     addwf temp2
003E   36??           01426     lsrf temp2,W
003F   07??           01427     addwf temp3,W
0040   2???           01428     call digit_row
0041   1C00           01429     btfss temp1,0
0042   0E89           01430     swapf WREG
0043   390F           01431     andlw 0xf
0044   0008           01432     return
0045                  01433 digit_row    
0045   000B           01434     brw
0046   3444 34AC 34A4 01435     dt  0x44,0xAC,0xA4,0xA4,0x4E ; 0, 1
       34A4 344E 
004B   34EE 3422 34CC 01436     dt  0xEE,0x22,0xCC,0x82,0xEE ; 2, 3
       3482 34EE 
0050   34AE 34A8 34EE 01437     dt  0xAE,0xA8,0xEE,0x22,0x2E ; 4, 5
       3422 342E 
0055   34CE 3482 34E2 01438     dt  0xCE,0x82,0xE2,0xA2,0xE2 ; 6, 7
       34A2 34E2 
005A   34EE 34AA 34EE 01439     dt  0xEE,0xAA,0xEE,0xA2,0xE6 ; 8, 9
       34A2 34E6 
                      01440     
                      01441 ; PWM2PR count for sound frequencies    
005F                  01442 frequency
005F   000B           01443     brw
0060   348B 34D3      01444     dt high 35795, low 35795 ; 100 hertz
0062   340D 34FB      01445     dt high 3579, low 3579 ; 1000 hertz
                      01446   
                      01447 ; END! message bitmap
0064                  01448 end_msg
                      01449 ;    brw
0064   00F4 005C      01450     data 0xf4,0x5c
0066   0086 0052      01451     data 0x86,0x52
0068   00E5 0052      01452     data 0xe5,0x52
006A   0084 00D2      01453     data 0x84,0xd2
006C   00F4 005C      01454     data 0xf4,0x5c
                      01455   
                      01456 ; COOL message bitmap    
006E                  01457 cool_msg
                      01458 ;    brw
006E   00EE 00E8      01459     data 0xee,0xe8
0070   008A 00A8      01460     data 0x8a,0xa8
0072   008A 00A8      01461     data 0x8a,0xa8
0074   008A 00A8      01462     data 0x8a,0xa8
0076   00EE 00EF      01463     data 0xee,0xef
                      01464     
                      01465     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01466 eeprom org (PROG_SIZE-EEPROM_SIZE)
                      01467  
3FA7 1EFF             01468     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
DIGIT_FONT_HEIGHT                 00000005
DIGIT_PIXEL_HEIGHT                00000004
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_BORDERS                         00000007
F_COOL                            00000006
F_EVEN                            00000001
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fhorz                             00003D76
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
POLY                              000000B8
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000050
START_BTN                         00000003
STATUS                            00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

WRERR                             00000003
WUE                               00000001
YELLOW                            00000009
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0015                         00000015
_ISR_007F                         0000007F
_ISR_0097                         00000097
_ISR_0173                         00000173
_ISR_02C4                         000002C4
_ISR_02C7                         000002C7
_ISR_036E                         0000036E
_ISR_0373                         00000373
_ISR_03C4                         000003C4
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0005                   00000005
_MAIN_PROG_0037                   00000037
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_RES_VECT_0002                    00000002
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000160
ball_bouncing                     00000120
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000103
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      0000017C
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           00000167
between_exit                      00000171
between_exit2                     00000173
black                             
blue                              
borders                           
brick_wall_init                   0000038F
bw_init                           00000396
clr_pwm_sfr                       00000017
collision                         00000130
collision_exit                    00000165
cool_msg                          0000006E
copy_msg                          00000320
copy_row                          000002D1
create_ball_mask                  000003B5
dark_green                        
digit_row                         00000045
digits                            00000038
display_bit                       
display_byte                      
display_vbuffer                   00000183
draw_bricks                       000002EB
draw_empty                        00000308
draw_empty_exit                   00000332
draw_paddle                       0000033A
draw_score                        00000280
draw_sides                        000002C7
draw_top_wall                     0000029B
dropn                             
eeprom                            00000780
empty_common                      000002BF
end_msg                           00000064
even_field                        0000035A
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

fg_color                          000000D7
field_end                         00000364
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
freeze_ball                       0000010C
frequency                         0000005F
game_init                         000003C6
game_over_test                    00000384
hi_line                           00000353
inc_score                         0000036C
initialize                        00000000
isr                               00000004
isr_exit                          0000002F
kill_time                         000002BB
lcount                            00000001
leave                             
lfsr8                             0000039A
mauve                             
move_ball                         000000D9
move_ball_exit                    00000113
msg01                             0000032D
msg02                             0000032F
next_task                         
no_borders                        
paddle_bounce                     00000115
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      0000012A
pause_game                        00000107
pickn                             
pong_sound                        00000161
popw                              
post_last                         00000066
post_vsync                        0000005D
pre_vsync                         00000035
print_msg                         0000030C
pushw                             
put_ball_in_buffer                000002AE
q                                 00000015
r                                 00000000
read_button                       000000CA
read_paddle                       00000078
read_paddle_exit                  00000098
resume                            000003D1
resume_game                       000000D5
row1                              000000A7
row2                              000000AF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-27-2019  12:45:48         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       000002DE
score                             0000000C
score_exit                        00000293
seed                              0000000F
set_ball_dx                       000003A0
set_ball_dx_exit                  000003B3
set_dx                            00000129
set_presync                       00000040
set_vsync                         00000055
slice                             00000002
sound                             0000009B
sound_fx1                         000000AA
sound_init                        000000B3
sound_off                         000000A3
sound_timer                       000000DE
stack                             00000020
task                              00000003
task_switch                       0000001B
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
track_paddle                      000003D5
vbuffer                           000000A0
video_first                       00000175
vsync                             0000004A
vsync_end                         0000006A
wait_field_end                    00000350
white                             
y_bounds                          000000F1
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   269 suppressed

