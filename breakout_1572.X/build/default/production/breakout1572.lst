MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    0-2       |  6      | task 0, vertical pre-equalization
                      00030 ;    3-5       |  6      | task 1, vertical sync
                      00031 ;    6-8       |  6      | task 2, vertical post-equalization
                      00032 ;    9         |  1      | task 3, synchronization end
                      00033 ;    10        |  1      | task 4, sound timer
                      00034 ;    11        |  1      | task 5, user input
                      00035 ;    12        |  1      | task 6, move ball
                      00036 ;    13        |  1      | task 7, collision control
                      00037 ;    14-29     |  26     | task 8, do nothing until first visible line    
                      00038 ;    30-49     |  20     | task 9, display score and balls count
                      00039 ;    50-57     |  8      | task 10, even field draw top wall, odd field do nothing
                      00040 ;    58-250    |  193    | task 11, even field draw sides line and ball skip to task 19, odd skip 16 lin
                            es
                      00041 ;    74-81     |  8      | task 12, odd field draw first bricks row, even field skipped
                      00042 ;    82-89     |  8      | task 13, odd field draw second bricks row, even field skipped
                      00043 ;    90-97     |  8      | task 14, odd field draw third bricks row, even field skipped
                      00044 ;    98-105    |  8      | task 15, odd field draw fourth bricks row, even field skipped
                      00045 ;    106-113   |  8      | task 16, odd field draw fifth bricks row, even field skipped
                      00046 ;    114-242   |  129    | task 17, odd field display game messages, even field skipped
                      00047 ;    243-250   |  8      | task 18, odd filed draw paddle, even field skipped
                      00048 ;    251-262/3 |  12/13  | task 19, wait end of field    
                      00049 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00050  
                      00051     
                      00052     include p12f1572.inc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00053     
8007   3FA7           00054     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00055     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00056     
                      00057     radix dec
                      00058 
                      00059 ; constants
  00000800            00060 PROG_SIZE equ 2048  ; program words
  00000080            00061 EEPROM_SIZE equ 128 ; high endurance flash words
                      00062  
  01B4F360            00063 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00064 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00065 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00066  
                      00067 ; NTSC signal 
  00003D76            00068 Fhorz equ 15734 ; horizontal frequency
  0000071B            00069 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00070 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00071 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00072 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00073 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00074 ; boolean flags 
  00000000            00075 F_HI_LINE equ 0 ; lcount > 255
  00000001            00076 F_EVEN equ 1    ; even field
  00000002            00077 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00078 F_SOUND equ 3   ; sound enabled 
  00000004            00079 F_START equ 4   ; game started 
  00000005            00080 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00081 F_OVER equ 6    ; game over
  00000007            00082 F_COOL equ 7    ; player got maximum score
                      00083  
                      00084 ;pins assignment
  00000000            00085 AUDIO EQU RA0
  00000000            00086 PADDLE equ RA0
  00000001            00087 CHROMA equ RA1
  00000002            00088 SYNC_OUT equ RA2
  00000003            00089 START_BTN equ RA3 
  00000004            00090 VIDEO_OUT equ RA4
  00000005            00091 CLKIN equ RA5
                      00092  
                      00093     ; constants used in video display
                      00094 ; values are in Tcy for x dimension.
                      00095 ; values are in scan lines for y dimension.    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001E            00096 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00097 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00098 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00099 COURT_WIDTH equ 248 ; Tcy
  00000008            00100 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00101 BRICK_WIDTH equ 16  ; Tcy
  00000004            00102 BORDER_WIDTH equ 4  ; Tcy
  00000020            00103 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00104 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00105 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00106 BALL_WIDTH equ 8 ; Tcy
  00000008            00107 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00108 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00109 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00110 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00111 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  00000005            00113 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00114 ROW1_Y equ 74
  00000052            00115 ROW2_Y equ 82
  0000005A            00116 ROW3_Y equ 90
  00000062            00117 ROW4_Y equ 98
  0000006A            00118 ROW5_Y equ 106
                      00119  
                      00120 
                      00121 ;;;;;;;;;;;;;;;;;;;;;;
                      00122 ;; assembler macros ;;
                      00123 ;;;;;;;;;;;;;;;;;;;;;;
                      00124 
                      00125 ; leave task 
                      00126 leave macro
                      00127     goto isr_exit
                      00128     endm
                      00129     
                      00130 ; move to next task on slice limit
                      00131 ; parameters:
                      00132 ;   s  nomber of slices used by the task    
                      00133 next_task macro s    
                      00134     incf slice
                      00135     movlw s
                      00136     subwf slice,W
                      00137     skpz
                      00138     leave
                      00139     clrf slice
                      00140     incf task
                      00141 ;    movlw s
                      00142 ;    addwf lcount
                      00143     leave
                      00144     endm
                      00145     
                      00146     
                      00147 ; swap variable with WREG    
                      00148 swap_var macro var
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149     xorwf var
                      00150     xorwf var,W
                      00151     xorwf var
                      00152     endm
                      00153     
                      00154 
                      00155 ; delay in machine cycle T
                      00156 ; parameters:
                      00157 ;   mc   number of machine cycles    
                      00158 tdelay macro mc 
                      00159     if mc==0
                      00160     exitm
                      00161     endif
                      00162     if mc==1
                      00163     nop
                      00164     exitm
                      00165     endif
                      00166     if mc==2
                      00167     bra $+1
                      00168     exitm
                      00169     endif
                      00170     if mc==3
                      00171     nop
                      00172     bra $+1
                      00173     exitm
                      00174     endif
                      00175     if mc==4
                      00176     call _4tcy
                      00177     exitm
                      00178     endif
                      00179     if mc==5
                      00180     call _5tcy
                      00181     exitm
                      00182     endif
                      00183     if mc==6
                      00184     call _6tcy
                      00185     exitm
                      00186     endif
                      00187     if mc==7
                      00188     call _7tcy
                      00189     exitm
                      00190     endif
                      00191     if mc>7
                      00192     variable q=(mc-5)/3
                      00193     variable r=(mc-5)%3
                      00194     movlw q
                      00195     call _3ntcy
                      00196     if (r==2)
                      00197     bra $+1
                      00198     exitm
                      00199     endif 
                      00200     if (r==1)
                      00201     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00202     exitm
                      00203     endif
                      00204     endif
                      00205     endm
                      00206 
                      00207 ; enable weak pull on VIDEO_OUT
                      00208 ; to create a porch
                      00209 porch_on macro
                      00210     banksel WPUA
                      00211     bsf WPUA,VIDEO_OUT
                      00212     endm
                      00213     
                      00214 ; disable weak pull on VIDEO_OUT
                      00215 ; to remove porch
                      00216 porch_off macro
                      00217     banksel WPUA
                      00218     bcf WPUA,VIDEO_OUT
                      00219     endm
                      00220     
                      00221 ; enable chroma output
                      00222 chroma_on macro
                      00223     banksel TRISA
                      00224     bcf TRISA, CHROMA
                      00225     endm
                      00226     
                      00227 ;disable chroma output    
                      00228 chroma_off macro
                      00229     banksel TRISA
                      00230     bsf TRISA,CHROMA
                      00231     endm
                      00232     
                      00233 ; output chroma reference    
                      00234 chroma_ref macro
                      00235     banksel PWM1CON
                      00236     bcf PWM1CON,POL
                      00237     endm
                      00238     
                      00239 ; set chroma phase to 180 degree
                      00240 chroma_invert macro
                      00241     banksel PWM1CON
                      00242     bsf PWM1CON,POL
                      00243     endm
                      00244 
                      00245 ;;;;;;;;;;;;;;;;;;;;;;
                      00246 ;   colors macros
                      00247 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00248 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00249 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00250 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00251 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00252 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00253 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00254 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00255  
                      00256 ;set video output to black    
                      00257 black macro
                      00258     movlw BLACK
                      00259     movwf TRISA
                      00260     endm
                      00261     
                      00262 ; set video output to white    
                      00263 white macro    
                      00264     movlw WHITE
                      00265     movwf TRISA
                      00266     endm
                      00267 
                      00268 #define gray white
                      00269     
                      00270 ; set video output to mauve    
                      00271 mauve macro
                      00272     movlw MAUVE
                      00273     movwf TRISA
                      00274     endm
                      00275 
                      00276 ; set video output to yellow   
                      00277 yellow macro
                      00278     movlw YELLOW
                      00279     movwf TRISA
                      00280     endm
                      00281     
                      00282 ; set video output to blue
                      00283 blue macro
                      00284     movlw BLUE
                      00285     movwf TRISA
                      00286     endm
                      00287     
                      00288 ; set video output to dark blue    
                      00289 dark_green macro
                      00290     movlw DARK_GREEN
                      00291     movwf TRISA
                      00292     endm
                      00293 
                      00294     
                      00295     
                      00296     
                      00297 ; draw left and right borders
                      00298 ; parameters:
                      00299 ;   width delay determine width
                      00300 draw_border macro width
                      00301     banksel TRISA
                      00302     bsf TRISA,CHROMA
                      00303     bcf TRISA,VIDEO_OUT
                      00304     tdelay width
                      00305     bsf TRISA,VIDEO_OUT
                      00306     endm
                      00307     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00309 ;  stack manipulation macros
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00311 STACK_SIZE equ 16 ; size of argument stack
                      00312 #define T INDF0 ; indirect access to top of argument stack
                      00313 #define SP FSR0 ; use FSR0 as stack pointer 
                      00314 ; push WREG on T
                      00315 pushw  macro
                      00316     movwi --SP
                      00317     endm
                      00318   
                      00319 ; pop WREG from T
                      00320 popw macro
                      00321     moviw SP++
                      00322     endm
                      00323     
                      00324 ; swap WREG with 
                      00325 swapw  macro
                      00326     xorwf T
                      00327     xorwf T,W
                      00328     xorwf T
                      00329     endm
                      00330 
                      00331 ; drop n elements from stack
                      00332 dropn macro n
                      00333     addfsr T,n
                      00334     endm
                      00335 
                      00336 ; copy nth element of stack to WREG
                      00337 ;  n {0..31}, 0 is T   
                      00338 pickn macro n
                      00339     moviw n[SP]
                      00340     endm
                      00341    
                      00342 ; copy WREG to nth element of stack
                      00343 ; n {0..31}, 0 is T
                      00344 pokew macro n
                      00345     movwi n[SP]
                      00346     endm
                      00347     
                      00348     
                      00349 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00350 ;;    variables
                      00351 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00352  
                      00353     
                      00354     udata 0x20 ; bank 0
0020                  00355 stack res 16 ; arguments stack
0030                  00356 seed res 2 ; prng seed used by lfsr16
                      00357  
                      00358 ; video display manipulate TRISA register
                      00359 ; to avoid banksel during video update
                      00360 ; place variables related to video in same bank as TRISA 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00361 v_array   udata 0xA0 ; bank 1
00A0                  00362 row1 res 2; brick wall row1
00A2                  00363 row2 res 2
00A4                  00364 row3 res 2
00A6                  00365 row4 res 2
00A8                  00366 row5 res 2
00AA                  00367 row6 res 2
00AC                  00368 mask res 1 
00AD                  00369 pixels res 4
                      00370 ;d1 res 1 ; score msd digit pixels
                      00371 ;d2 res 1 ; score 2nd digit pixels
                      00372 ;d3 res 1 ; score lsd digit pixels
00B1                  00373 balls res 1 ; number of recking balls available 
00B2                  00374 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
                      00375  
                      00376 ; common 16 bytes RAM accessible whatever the selected bank 
                      00377     udata_shr 
0000                  00378 flags  res 1 ; boolean variables
0001                  00379 lcount res 1 ; video field line counter
0002                  00380 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00381 task res 1 ; where in video phase 
0004                  00382 temp1 res 1 ; temporary storage
0005                  00383 temp2 res 1 ; 
0006                  00384 paddle_pos res 1 
0007                  00385 ball_x res 1
0008                  00386 ball_y res 1
0009                  00387 ball_dx res 1
000A                  00388 ball_dy res 1
000B                  00389 ball_speed res 1
000C                  00390 score res 2 ; score stored in Binary Coded Decimal
000E                  00391 ball_timer res 1 
000F                  00392 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00393  
                      00394 ;; cpu reset entry point
                      00395 RES_VECT  CODE    0x0000            
0000   2???           00396     goto    initialize  ; go to beginning of program
0001   0001           00397     reset   
0002   0001           00398     reset
0003   0001           00399     reset
                      00400 
                      00401 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00402 ; interrupt service routine triggered by PWM3 period rollover
                      00403 ; after initialization is done all processing in done inside 
                      00404 ; this interrupt.
                      00405 ; It is designed as a round robin scheduler.    
                      00406 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00407 ISR CODE 0x0004
0004                  00408 isr
0004   1900           00409     btfsc flags, F_SYNC
0005   2???           00410     goto task_switch
                      00411  ; generate chroma sync
                      00412     tdelay 28
                          M     if 28==0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 28==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 28==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 28==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 28==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 28==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 28==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 28==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 28>7
  0007                    M     variable q=(28-5)/3
  0002                    M     variable r=(28-5)%3
0006   3007               M     movlw q
0007   2???               M     call _3ntcy
                          M     if (r==2)
0008   3???               M     bra $+1
                          M     exitm
                      00413     chroma_ref
0009   003B               M     banksel PWM1CON
000A   121B               M     bcf PWM1CON,POL
000B   0021           00414     banksel TRISA
000C   108C           00415     bcf TRISA,CHROMA
                      00416     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 16==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 16>7
  0003                    M     variable q=(16-5)/3
  0002                    M     variable r=(16-5)%3
000D   3003               M     movlw q
000E   2???               M     call _3ntcy
                          M     if (r==2)
000F   3???               M     bra $+1
                          M     exitm
0010   148C           00417     bsf TRISA,CHROMA
                      00418     porch_on
0011   0024               M     banksel WPUA
0012   160C               M     bsf WPUA,VIDEO_OUT
0013                  00419 task_switch ; round robin task scheduler   
0013   08??           00420     movfw task
0014   000B           00421     brw
0015   2???           00422     goto pre_vsync ;task 0, vertical pre-equalization pulses
0016   2???           00423     goto vsync ;task 1, vertical sync pulses
0017   2???           00424     goto post_vsync ;task 2, vertical post-equalization pulses
0018   2???           00425     goto vsync_end ;task 3, return to normal video line
0019   2???           00426     goto sound ;task 4, check sound timer expiration
001A   2???           00427     goto user_input ;task 5,  read button and paddle
001B   2???           00428     goto move_ball ;task 6, move recking ball.
001C   2???           00429     goto collision ; task 7, check for collision with brick wall and paddle
001D   2???           00430     goto video_first ; task 8, wait FIRST_VIDEO line.
001E   2???           00431     goto draw_score ;task 9,  draw score en ball count
001F   2???           00432     goto draw_top_wall ;task 10,  draw top wall
0020   2???           00433     goto draw_void ;task 11, draw play space
0021   2???           00434     goto draw_row1 ;task 12, draw top bricks row
0022   2???           00435     goto draw_row2 ;task 13, draw second bricks row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0023   2???           00436     goto draw_row3 ;task 14,  draw third bricks row
0024   2???           00437     goto draw_row4 ;task 15,  draw fourth bricks row
0025   2???           00438     goto draw_row5 ;task 16, draw fifth bricks row
0026   2???           00439     goto draw_empty;task 17, draw empty space down to bottom
0027   2???           00440     goto draw_paddle ;task 18, draw paddle
0028   2???           00441     goto wait_field_end ;task 19, idle to end of video field
0029   0001           00442     reset ; error trap, task out of range
002A                  00443 isr_exit  
                      00444     porch_off
002A   0024               M     banksel WPUA
002B   120C               M     bcf WPUA,VIDEO_OUT
002C   003B           00445     banksel PWM3INTF
002D   103D           00446     bcf PWM3INTF,PRIF
002E   0009           00447     retfie
                      00448 
                      00449 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00450 ;;  all tasks routine are here            ;;
                      00451 ;;  each must be terminate by leave macro ;;    
                      00452 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00453     
                      00454 ; task 0, vertical synchronization pre equalization
                      00455 ; 6 half horizontal scan lines    
002F                  00456 pre_vsync
002F   08??           00457     movfw slice
0030   1903           00458     skpnz
0031   2???           00459     goto set_presync
                      00460     next_task 6
0032   0A??               M     incf slice
0033   3006               M     movlw 6
0034   02??               M     subwf slice,W
0035   1D03               M     skpz
                          M     leave
0036   2???               M     goto isr_exit
0037   01??               M     clrf slice
0038   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
0039   2???               M     goto isr_exit
003A                  00461 set_presync    
003A   003B           00462     banksel PWM3DC
003B   3041           00463     movlw HEQUAL
003C   00B3           00464     movwf PWM3DCL
003D   01B4           00465     clrf PWM3DCH
003E   3003           00466     movlw high HALF_LINE
003F   00B6           00467     movwf PWM3PRH
0040   308D           00468     movlw low HALF_LINE
0041   00B5           00469     movwf PWM3PRL
0042   17BF           00470     bsf PWM3LDCON,7
0043   0A??           00471     incf slice
                      00472     leave
0044   2???               M     goto isr_exit
                      00473     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00474 ; task 1, vertical synchronization pulses
                      00475 ; 6 half horizontal scan lines    
0045                  00476 vsync 
0045   08??           00477     movfw slice
0046   1903           00478     skpnz
0047   2???           00479     goto set_vsync
                      00480     next_task 6
0048   0A??               M     incf slice
0049   3006               M     movlw 6
004A   02??               M     subwf slice,W
004B   1D03               M     skpz
                          M     leave
004C   2???               M     goto isr_exit
004D   01??               M     clrf slice
004E   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
004F   2???               M     goto isr_exit
0050                  00481 set_vsync
0050   003B           00482     banksel PWM3DC
0051   3008           00483     movlw low VSYNC_PULSE
0052   00B3           00484     movwf PWM3DCL
0053   3003           00485     movlw high VSYNC_PULSE
0054   00B4           00486     movwf PWM3DCH
0055   17BF           00487     bsf PWM3LDCON,7
0056   0A??           00488     incf slice
                      00489     leave
0057   2???               M     goto isr_exit
                      00490     
                      00491 ; task 2, vertical synchronisation post equalization pulses
                      00492 ; 6 half horizontal scan lines    
0058                  00493 post_vsync
0058   08??           00494     movfw slice
0059   1903           00495     skpnz
005A   2???           00496     goto set_presync
005B   3006           00497     movlw 6
005C   02??           00498     subwf slice,W
005D   1903           00499     skpnz
005E   2???           00500     goto post_last
005F   0A??           00501     incf slice
                      00502     leave
0060   2???               M     goto isr_exit
0061                  00503 post_last    
0061   0A??           00504     incf task
0062   01??           00505     clrf slice
0063   1C80           00506     btfss flags, F_EVEN
                      00507     leave
0064   2???               M     goto isr_exit
                      00508     
                      00509 ; task 3, vertical synchronization completed, return to normal line
                      00510 ; rest horizonal line to its normal length.
                      00511 ; set lcount to 9.    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065                  00512 vsync_end
0065   1100           00513     bcf flags, F_SYNC
0066   003B           00514     banksel PWM3DC
0067   3086           00515     movlw HSYNC
0068   00B3           00516     movwf PWM3DCL
0069   01B4           00517     clrf PWM3DCH
006A   3007           00518     movlw high HPERIOD
006B   00B6           00519     movwf PWM3PRH
006C   301B           00520     movlw low HPERIOD
006D   00B5           00521     movwf PWM3PRL
006E   17BF           00522     bsf PWM3LDCON,7
006F   0A??           00523     incf task
                      00524 ;    movlw 9
                      00525 ;    movwf lcount
                      00526     leave
0070   2???               M     goto isr_exit
                      00527 
                      00528 ; task 4,  sound timer
                      00529 ; if sound active process it.    
0071                  00530 sound
0071   0A??           00531     incf task
                      00532 ;    incf lcount
0072   1D80           00533     btfss flags, F_SOUND
                      00534     leave
0073   2???               M     goto isr_exit
0074   1A80           00535     btfsc flags, F_PAUSE
0075   2???           00536     call sound_fx1
0076   002?           00537     banksel sound_timer
0077   0B??           00538     decfsz sound_timer
                      00539     leave
0078   2???               M     goto isr_exit
0079   1180           00540     bcf flags, F_SOUND
007A   003B           00541     banksel PWM2CON
007B   132B           00542     bcf PWM2CON,OE
007C   13AB           00543     bcf PWM2CON,EN
                      00544     leave
007D   2???               M     goto isr_exit
                      00545 
                      00546 ; sound effect, low pitch to high-pitch    
007E                  00547 sound_fx1
007E   1D80           00548     btfss flags, F_SOUND
007F   0008           00549     return
0080   1C80           00550     btfss flags, F_EVEN
0081   0008           00551     return
0082   003B           00552     banksel PWM2CON
0083   36A6           00553     lsrf PWM2PRH
0084   0CA5           00554     rrf PWM2PRL
0085   36A4           00555     lsrf PWM2DCH
0086   0CA3           00556     rrf PWM2DCL
0087   17AF           00557     bsf PWM2LDCON,LDA
0088   0008           00558     return
                      00559     
                      00560 ; sound effect, high pitch to low-pitch    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0089                  00561 sound_fx2
0089   1D80           00562     btfss flags, F_SOUND
008A   0008           00563     return
008B   1C80           00564     btfss flags, F_EVEN
008C   0008           00565     return
008D   003B           00566     banksel PWM2CON
008E   35A5           00567     lslf PWM2PRL
008F   0DA6           00568     rlf PWM2PRH
0090   35A3           00569     lslf PWM2DCL
0091   0DA4           00570     rlf PWM2DCH
0092   17AF           00571     bsf PWM2LDCON,LDA
0093   0008           00572     return
                      00573     
                      00574 ; initialize sound generation.
                      00575 ; input:
                      00576 ;   T = duration
                      00577 ;   WREG = index in frequency table    
                      00578 ; outpout:
                      00579 ;   none    
0094                  00580 sound_init
                      00581     pushw  ; ( d i -- )
0094   0019               M     movwi --SP
0095   1580           00582     bsf flags, F_SOUND
0096   003B           00583     banksel PWM2CON
0097   0800           00584     movfw T
0098   2???           00585     call frequency
0099   00A6           00586     movwf PWM2PRH
009A   0A00           00587     incf T,W
009B   2???           00588     call frequency
009C   00A5           00589     movwf PWM2PRL
009D   3626           00590     lsrf PWM2PRH,W
009E   00A4           00591     movwf PWM2DCH
009F   0C25           00592     rrf PWM2PRL,W
00A0   00A3           00593     movwf PWM2DCL
00A1   17AF           00594     bsf PWM2LDCON,LDA
00A2   172B           00595     bsf PWM2CON,OE
00A3   17AB           00596     bsf PWM2CON,EN
00A4   002?           00597     banksel sound_timer
                      00598     pickn 1
00A5   3F01               M     moviw 1[SP]
00A6   00??           00599     movwf sound_timer
                      00600     dropn 2
00A7   3102               M     addfsr T,2
00A8   0008           00601     return
                      00602     
                      00603 ;task 5, read button and paddle position
00A9                  00604 user_input
00A9   0A??           00605     incf task
00AA   2???           00606     call read_paddle
00AB   1B00           00607     btfsc flags, F_OVER
00AC   3???           00608     bra game_over
00AD   1A00           00609     btfsc flags,F_START
00AE   3???           00610     bra game_running
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00611 ; game not running
00AF   2???           00612     call read_button
00B0   1D03           00613     skpz
00B1   3???           00614     bra skip_2_tasks
                      00615 ; start game    
00B2   2???           00616     call game_init
                      00617     leave
00B3   2???               M     goto isr_exit
00B4                  00618 game_running
00B4   1E80           00619     btfss flags, F_PAUSE
                      00620     leave
00B5   2???               M     goto isr_exit
                      00621 ; game on pause    
00B6                  00622 wait_trigger
00B6   2???           00623     call read_button
00B7   1D03           00624     skpz
00B8   3???           00625     bra skip_2_tasks
00B9   1280           00626     bcf flags,F_PAUSE
00BA   2???           00627     call set_ball_dx
                      00628     leave
00BB   2???               M     goto isr_exit
                      00629 ; game over
00BC                  00630 game_over
00BC   2???           00631     call read_button
00BD   1D03           00632     skpz
00BE   3???           00633     bra skip_2_tasks
00BF   1300           00634     bcf flags,F_OVER
00C0   2???           00635     call game_init
00C1   0A??           00636     incf task
                      00637 ;    incf lcount
                      00638     leave
00C2   2???               M     goto isr_exit
                      00639 ; while game not running skip 'move_ball' and 'collision' tasks    
00C3                  00640 skip_2_tasks
00C3   08??           00641     movfw paddle_pos
00C4   3E04           00642     addlw 4
00C5   00??           00643     movwf ball_x
00C6   0A??           00644     incf task
00C7   0A??           00645     incf task
00C8   2???           00646     call lfsr16
00C9   300C           00647     movlw 12
00CA   00??           00648     movwf lcount
                      00649     leave
00CB   2???               M     goto isr_exit
                      00650 
                      00651     
00CC                  00652 read_button
00CC   0020           00653     banksel PORTA
00CD   080C           00654     movfw PORTA
00CE   3908           00655     andlw 1<<START_BTN
00CF   0008           00656     return
                      00657     
00D0                  00658 read_paddle
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D0   003B           00659     banksel PWM2CON
00D1   13AB           00660     bcf PWM2CON,EN
00D2   0021           00661     banksel TRISA
00D3   140C           00662     bsf TRISA, PADDLE
00D4   0021           00663     banksel ADCON0
00D5   3003           00664     movlw 3
00D6   009D           00665     movwf ADCON0
00D7   189D           00666     btfsc ADCON0,NOT_DONE
00D8   2???           00667     goto $-1
00D9   3010           00668     movlw 4<<CHS0
00DA   009D           00669     movwf ADCON0
00DB   081C           00670     movfw ADRESH
00DC   1D80           00671     btfss flags, F_SOUND
00DD   3???           00672     bra $+3
00DE   003B           00673     banksel PWM2CON
00DF   17AB           00674     bsf PWM2CON,EN
00E0   00??           00675     movwf paddle_pos
00E1   304A           00676     movlw PADDLE_LIMIT
00E2   02??           00677     subwf paddle_pos,W
00E3   1C03           00678     skpc
00E4   3???           00679     bra $+3
00E5   304A           00680     movlw PADDLE_LIMIT
00E6   00??           00681     movwf paddle_pos
00E7   0021           00682     banksel TRISA
00E8   100C           00683     bcf TRISA, AUDIO
00E9   0008           00684     return
                      00685     
                      00686    
                      00687 ; task 6, move recking ball.   
00EA                  00688 move_ball
00EA   0B??           00689     decfsz ball_timer
00EB   3???           00690     bra move_ball_exit
00EC   08??           00691     movfw ball_speed
00ED   00??           00692     movwf ball_timer
00EE   08??           00693     movfw ball_dx
00EF   07??           00694     addwf ball_x
00F0   1D03           00695     skpz
00F1   3???           00696     bra right_bound
00F2   0A??           00697     incf ball_x
00F3   09??           00698     comf ball_dx
00F4   0A??           00699     incf ball_dx
00F5   3???           00700     bra move_y
00F6                  00701 right_bound    
00F6   08??           00702     movfw ball_x
00F7   3C52           00703     sublw BALL_RIGHT_BOUND
00F8   1803           00704     skpnc
00F9   3???           00705     bra move_y
00FA   03??           00706     decf ball_x
00FB   09??           00707     comf ball_dx
00FC   0A??           00708     incf ball_dx
00FD                  00709 move_y
00FD   08??           00710     movfw ball_dy
00FE   07??           00711     addwf ball_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FF   303A           00712     movlw BALL_TOP_BOUND
0100   02??           00713     subwf ball_y,W
0101   1803           00714     skpnc
0102   3???           00715     bra bottom_bound
0103   09??           00716     comf ball_dy
0104   0A??           00717     incf ball_dy
0105   3???           00718     bra move_ball_exit
0106                  00719 bottom_bound
0106   08??           00720     movfw ball_y
0107   3CFA           00721     sublw BALL_BOTTOM_BOUND
0108   1803           00722     skpnc
0109   3???           00723     bra move_ball_exit
010A   09??           00724     comf ball_dy
010B   0A??           00725     incf ball_dy
010C                  00726 move_ball_exit    
010C   0A??           00727     incf task
                      00728 ;    incf lcount
                      00729     leave
010D   2???               M     goto isr_exit
                      00730 
                      00731 ; task 7, collision detection
010E                  00732 collision
010E   30??           00733     movlw high row1
010F   0087           00734     movwf FSR1H
0110   30??           00735     movlw low row1
0111   0086           00736     movwf FSR1L
0112   002?           00737     banksel mask
                      00738 ; pre-compute ball column and compute brick mask
                      00739 ; column = 3*ball_x/16
0113   35??           00740     lslf ball_x,W
0114   07??           00741     addwf ball_x,W
0115   0E89           00742     swapf WREG
0116   390F           00743     andlw 15
0117   00??           00744     movwf temp1
0118   3008           00745     movlw 8
0119   02??           00746     subwf temp1,W
011A   1C03           00747     skpc
011B   3???           00748     bra $+3
011C   00??           00749     movwf temp1
011D   3141           00750     addfsr FSR1,1
                      00751 ; create mask    
011E   3080           00752     movlw 0x80
011F   00??           00753     movwf mask
0120   08??           00754     movfw temp1
0121   1903           00755     skpnz
0122   3???           00756     bra $+4
0123   36??           00757     lsrf mask
0124   0B??           00758     decfsz temp1
0125   3???           00759     bra $-2
0126   1B80           00760     btfsc ball_dy,7
0127   3???           00761     bra wall_test ; ball going up
0128                  00762 fallout_test
                      00763 ; if ball_y > LAST_VIDEO_LINE-BALL_HEIGTH/2 then ball lost
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0128   30F6           00764     movlw LAST_VIDEO_LINE-BALL_HEIGHT/2
0129   02??           00765     subwf ball_y,W
012A   1C03           00766     skpc
012B   3???           00767     bra paddle_test
012C                  00768 ball_lost    
012C   1680           00769     bsf flags, F_PAUSE ; pause game
012D   0B??           00770     decfsz balls
012E   3???           00771     bra $+3
012F   1200           00772     bcf flags, F_START
0130   1700           00773     bsf flags, F_OVER
0131   3004           00774     movlw 4
0132   07??           00775     addwf paddle_pos,W
0133   00??           00776     movwf ball_x
0134   30EB           00777     movlw PADDLE_Y-BRICK_HEIGHT
0135   00??           00778     movwf ball_y
0136   30FC           00779     movlw -4
0137   00??           00780     movwf ball_dy
0138   3008           00781     movlw 8
                      00782     pushw
0139   0019               M     movwi --SP
013A   3002           00783     movlw 2
013B   2???           00784     call sound_init
013C   3???           00785     bra collision_exit
013D                  00786 paddle_test    
                      00787 ; paddle bounce test
013D   30EC           00788     movlw PADDLE_Y-BALL_HEIGHT+1
013E   02??           00789     subwf ball_y,W
013F   1C03           00790     skpc
0140   3???           00791     bra wall_test
                      00792 ; if ball_x over paddle bounce ball
0141                  00793 check_paddle_bounce
0141   3002           00794     movlw BALL_WIDTH/3
0142   02??           00795     subwf paddle_pos,W
                      00796     pushw
0143   0019               M     movwi --SP
0144   300A           00797     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+(BALL_WIDTH/3)
0145   07??           00798     addwf paddle_pos,W
                      00799     pushw
0146   0019               M     movwi --SP
0147   08??           00800     movfw ball_x
0148   2???           00801     call between
0149   1C03           00802     skpc
014A   3???           00803     bra collision_exit
014B                  00804 paddle_bounce 
014B   08??           00805     movfw ball_dx
014C   00??           00806     movwf old_dx
014D   08??           00807     movfw paddle_pos
014E   02??           00808     subwf ball_x,W
014F   3789           00809     asrf WREG
0150   3789           00810     asrf WREG
0151   3789           00811     asrf WREG
0152   00??           00812     movwf ball_dx
0153   06??           00813     xorwf old_dx,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0154   1903           00814     skpnz
0155   2???           00815     call set_ball_dx
0156   30FC           00816     movlw -4
0157   00??           00817     movwf ball_dy
0158   3002           00818     movlw 2
                      00819     pushw
0159   0019               M     movwi --SP
015A   2???           00820     call sound_init
015B   3???           00821     bra collision_exit
                      00822 ; brick wall collision test    
015C                  00823 wall_test
015C   304A           00824     movlw ROW1_Y
015D   00??           00825     movwf temp1
015E   3072           00826     movlw ROW5_Y+BRICK_HEIGHT
015F   00??           00827     movwf temp2
0160   3007           00828     movlw BALL_HEIGHT-1
0161   1F80           00829     btfss ball_dy,7
0162   3???           00830     bra going_down
0163   07??           00831     addwf temp1
0164   07??           00832     addwf temp2
0165   3???           00833     bra $+3
0166                  00834 going_down
0166   02??           00835     subwf temp1
0167   02??           00836     subwf temp2
0168   08??           00837     movfw temp1
                      00838     pushw
0169   0019               M     movwi --SP
016A   08??           00839     movfw temp2
                      00840     pushw
016B   0019               M     movwi --SP
016C   08??           00841     movfw ball_y
016D   2???           00842     call between
016E   1C03           00843     skpc
016F   3???           00844     bra collision_exit
0170   08??           00845     movfw temp1
0171   02??           00846     subwf ball_y,W
0172   3689           00847     lsrf WREG
0173   3689           00848     lsrf WREG
0174   3689           00849     lsrf WREG
0175   000B           00850     brw
0176   3???           00851     bra row1_test
0177   3???           00852     bra row2_test
0178   3???           00853     bra row3_test
0179   3???           00854     bra row4_test
017A   3???           00855     bra row5_test
017B   0001           00856     reset
017C                  00857 row1_test
017C   08??           00858     movfw mask
017D   0501           00859     andwf INDF1,W
017E   1903           00860     skpnz
017F   3???           00861     bra collision_exit
0180   09??           00862     comf mask,W
0181   0581           00863     andwf INDF1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0182   3009           00864     movlw 9
0183   2???           00865     call inc_score
0184   3???           00866     bra brick_bounce
0185                  00867 row2_test
0185   3142           00868     addfsr FSR1,2
0186   08??           00869     movfw mask
0187   0501           00870     andwf INDF1, W
0188   1903           00871     skpnz
0189   3???           00872     bra collision_exit
018A   09??           00873     comf mask,W
018B   0581           00874     andwf INDF1
018C   3006           00875     movlw 6
018D   2???           00876     call inc_score
018E   3???           00877     bra brick_bounce
018F                  00878 row3_test
018F   3144           00879     addfsr FSR1,4
0190   08??           00880     movfw mask
0191   0501           00881     andwf INDF1,W
0192   1903           00882     skpnz
0193   3???           00883     bra collision_exit
0194   09??           00884     comf mask,W
0195   0581           00885     andwf INDF1
0196   3003           00886     movlw 3
0197   2???           00887     call inc_score
0198   3???           00888     bra brick_bounce
0199                  00889 row4_test
0199   3146           00890     addfsr FSR1,6
019A   08??           00891     movfw mask
019B   0501           00892     andwf INDF1,W
019C   1903           00893     skpnz
019D   3???           00894     bra collision_exit
019E   09??           00895     comf mask,W
019F   0581           00896     andwf INDF1
01A0   3002           00897     movlw 2
01A1   2???           00898     call inc_score
01A2   3???           00899     bra brick_bounce
01A3                  00900 row5_test    
01A3   3148           00901     addfsr FSR1,8
01A4   08??           00902     movfw mask
01A5   0501           00903     andwf INDF1,W
01A6   1903           00904     skpnz
01A7   3???           00905     bra collision_exit
01A8   09??           00906     comf mask,W
01A9   0581           00907     andwf INDF1
01AA   3001           00908     movlw 1
01AB   2???           00909     call inc_score
01AC                  00910 brick_bounce
01AC   09??           00911     comf ball_dy
01AD   0A??           00912     incf ball_dy
                      00913     ;call set_ball_dx
01AE   3001           00914     movlw 1
                      00915     pushw
01AF   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B0   3000           00916     movlw 0
01B1   2???           00917     call sound_init
01B2                  00918 collision_exit
01B2   0A??           00919     incf task
01B3   300E           00920     movlw 14
01B4   00??           00921     movwf lcount
                      00922     leave
01B5   2???               M     goto isr_exit
                      00923 
                      00924 ; check if  lb <= x < hb
                      00925 ; input:
                      00926 ;    WREG  x
                      00927 ;    stack ( lb hb -- )     
                      00928 ; output:
                      00929 ;   Carry bit set if true    
01B6                  00930 between
01B6   00??           00931     movwf temp2
                      00932     pickn 1
01B7   3F01               M     moviw 1[SP]
01B8   02??           00933     subwf temp2,W
01B9   1C03           00934     skpc
01BA   3???           00935     bra between_exit
01BB   0800           00936     movfw T
01BC   02??           00937     subwf temp2
01BD   0803           00938     movfw STATUS
01BE   3A01           00939     xorlw 1
01BF   0083           00940     movwf STATUS
01C0                  00941 between_exit    
                      00942     dropn 2
01C0   3102               M     addfsr T,2
01C1   0008           00943     return
                      00944     
                      00945 ; task 8, wait for first video line
                      00946 ; inter with lcount==    
01C2                  00947 video_first
01C2   0A??           00948     incf lcount
01C3   301E           00949     movlw FIRST_VIDEO_LINE
01C4   02??           00950     subwf lcount,W
01C5   1D03           00951     skpz
                      00952     leave
01C6   2???               M     goto isr_exit
01C7   01??           00953     clrf slice
01C8   0A??           00954     incf task
                      00955     leave
01C9   2???               M     goto isr_exit
                      00956    
                      00957 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00958 ; The following tasks are responsible to render video display.
                      00959 ; Each video line must be completed by setting color to black.
                      00960 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00961     
                      00962  
                      00963 ; task 9, draw score en ball count
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CA                  00964 draw_score ; lcount enter at 30 leave at 50
01CA   0021           00965     banksel TRISA
01CB   08??           00966     movfw slice
01CC   3689           00967     lsrf WREG
01CD   3689           00968     lsrf WREG
                      00969     pushw
01CE   0019               M     movwi --SP
01CF   300F           00970     movlw 0xf
01D0   05??           00971     andwf score+1,W
01D1   2???           00972     call digit_offset
01D2   0700           00973     addwf T,W
01D3   2???           00974     call digits
01D4   00??           00975     movwf pixels+2
01D5   0E??           00976     swapf score+1,W
01D6   390F           00977     andlw 0xf
01D7   2???           00978     call digit_offset
01D8   0700           00979     addwf T,W
01D9   2???           00980     call digits
01DA   00??           00981     movwf pixels+1
01DB   300F           00982     movlw 0xf
01DC   05??           00983     andwf score,W
01DD   2???           00984     call digit_offset
01DE   0700           00985     addwf T,W
01DF   2???           00986     call digits
01E0   2???           00987     call digit_row
01E1   08??           00988     movfw pixels+1
01E2   2???           00989     call digit_row
01E3   08??           00990     movfw pixels+2
01E4   2???           00991     call digit_row
                      00992     tdelay 60
                          M     if 60==0
                          M     exitm
                          M     endif
                          M     if 60==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 60==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 60==5
                          M     call _5tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 60==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 60==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 60>7
  0012                    M     variable q=(60-5)/3
  0001                    M     variable r=(60-5)%3
01E5   3012               M     movlw q
01E6   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01E7   0000               M     nop
                          M     exitm
01E8   120C           00993     bcf TRISA,VIDEO_OUT
                      00994     tdelay 5
                          M     if 5==0
                          M     exitm
                          M     endif
                          M     if 5==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 5==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 5==5
01E9   2???               M     call _5tcy
                          M     exitm
01EA   160C           00995     bsf TRISA,VIDEO_OUT
                      00996     tdelay 30
                          M     if 30==0
                          M     exitm
                          M     endif
                          M     if 30==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 30==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 30==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 30==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 30==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 30>7
  0008                    M     variable q=(30-5)/3
  0001                    M     variable r=(30-5)%3
01EB   3008               M     movlw q
01EC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01ED   0000               M     nop
                          M     exitm
01EE   08??           00997     movfw balls
01EF   2???           00998     call digit_offset
01F0   0700           00999     addwf T,W
01F1   2???           01000     call digits
01F2   2???           01001     call digit_row
01F3                  01002 score_exit
01F3   0A??           01003     incf lcount
                      01004     next_task 5*4
01F4   0A??               M     incf slice
01F5   3014               M     movlw 5*4
01F6   02??               M     subwf slice,W
01F7   1D03               M     skpz
                          M     leave
01F8   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F9   01??               M     clrf slice
01FA   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
01FB   2???               M     goto isr_exit
                      01005 
                      01006 ; display digit row pixels   
01FC                  01007 digit_row
                      01008     pushw
01FC   0019               M     movwi --SP
01FD   0D80           01009     rlf T
01FE   301A           01010     movlw BLACK
01FF   1803           01011     skpnc
0200   300A           01012     movlw WHITE
0201   008C           01013     movwf TRISA
0202   0D80           01014     rlf T
0203   301A           01015     movlw BLACK
0204   1803           01016     skpnc
0205   300A           01017     movlw WHITE
0206   008C           01018     movwf TRISA
0207   0D80           01019     rlf T
0208   301A           01020     movlw BLACK
0209   1803           01021     skpnc
020A   300A           01022     movlw WHITE
020B   008C           01023     movwf TRISA
                      01024     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
020C   0000               M     nop
020D   3???               M     bra $+1
                          M     exitm
                      01025     dropn 1
020E   3101               M     addfsr T,1
020F   160C           01026     bsf TRISA,VIDEO_OUT
0210   0008           01027     return
                      01028     
                      01029 ; task 10,  draw top wall, 8 screen lines    
0211                  01030 draw_top_wall ;lcount enter at 50 leave at 58
0211   1C80           01031     btfss flags, F_EVEN
0212   3???           01032     bra top_wall_exit
0213   0021           01033     banksel TRISA
                      01034     tdelay LEFT_MARGIN -2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN -2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN -2>7
  000F                    M     variable q=(LEFT_MARGIN -2-5)/3
  0000                    M     variable r=(LEFT_MARGIN -2-5)%3
0214   300F               M     movlw q
0215   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01035     white
0216   300A               M     movlw WHITE
0217   008C               M     movwf TRISA
                      01036     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==0
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH+3*BORDER_WIDTH+1>7
  0055                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1-5)/3
  0001                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1-5)%3
0218   3055               M     movlw q
0219   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
021A   0000               M     nop
                          M     exitm
                      01037     black
021B   301A               M     movlw BLACK
021C   008C               M     movwf TRISA
021D                  01038 top_wall_exit
021D   0A??           01039     incf lcount
                      01040     next_task BRICK_HEIGHT
021E   0A??               M     incf slice
021F   3008               M     movlw BRICK_HEIGHT
0220   02??               M     subwf slice,W
0221   1D03               M     skpz
                          M     leave
0222   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0223   01??               M     clrf slice
0224   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
0225   2???               M     goto isr_exit
                      01041 
                      01042 ; task 11,  only on even field draw vertical side bands.    
0226                  01043 draw_void ;enter at 58 leave at 74| 250-58
0226   1C80           01044     btfss flags, F_EVEN
0227   3???           01045     bra no_wall_draw
0228   08??           01046     movfw ball_y
0229   02??           01047     subwf lcount,W
022A   1C03           01048     skpc
022B   3???           01049     bra no_ball_dly
022C   3008           01050     movlw BALL_HEIGHT
022D   07??           01051     addwf ball_y,W
022E   02??           01052     subwf lcount,W
022F   1C03           01053     skpc
0230   3???           01054     bra yes_ball
0231   3???           01055     bra no_ball
0232                  01056 no_ball_dly
                      01057     tdelay 6
                          M     if 6==0
                          M     exitm
                          M     endif
                          M     if 6==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 6==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 6==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 6==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 6==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 6==6
0232   2???               M     call _6tcy
                          M     exitm
0233                  01058 no_ball    
                      01059     tdelay LEFT_MARGIN-13
                          M     if LEFT_MARGIN-13==0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-13>7
  000B                    M     variable q=(LEFT_MARGIN-13-5)/3
  0001                    M     variable r=(LEFT_MARGIN-13-5)%3
0233   300B               M     movlw q
0234   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0235   0000               M     nop
                          M     exitm
                      01060     draw_border BORDER_WIDTH
0236   0021               M     banksel TRISA
0237   148C               M     bsf TRISA,CHROMA
0238   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0239   2???               M     call _4tcy
                          M     exitm
023A   160C               M     bsf TRISA,VIDEO_OUT
                      01061     black
023B   301A               M     movlw BLACK
023C   008C               M     movwf TRISA
                      01062     tdelay COURT_WIDTH
                          M     if COURT_WIDTH==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH>7
  0051                    M     variable q=(COURT_WIDTH-5)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(COURT_WIDTH-5)%3
023D   3051               M     movlw q
023E   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01063     draw_border BORDER_WIDTH
023F   0021               M     banksel TRISA
0240   148C               M     bsf TRISA,CHROMA
0241   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0242   2???               M     call _4tcy
                          M     exitm
0243   160C               M     bsf TRISA,VIDEO_OUT
0244   3???           01064     bra draw_void_exit
0245                  01065 yes_ball
0245   0021           01066     banksel TRISA
0246   08??           01067     movfw ball_x
0247   1903           01068     skpnz
0248   3???           01069     bra ball_at_left
0249   3C52           01070     sublw BALL_RIGHT_BOUND
024A   1903           01071     skpnz
024B   3???           01072     bra ball_at_right
024C                  01073 ball_in_middle    
024C   3001           01074     movlw 1
024D   02??           01075     subwf ball_x,W
024E   1903           01076     skpnz
024F   3E01           01077     addlw 1
0250   00??           01078     movwf temp1
                      01079     tdelay LEFT_MARGIN-22
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-22==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-22>7
  0008                    M     variable q=(LEFT_MARGIN-22-5)/3
  0001                    M     variable r=(LEFT_MARGIN-22-5)%3
0251   3008               M     movlw q
0252   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0253   0000               M     nop
                          M     exitm
0254   120C           01080     bcf TRISA,VIDEO_OUT
                      01081     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
0255   0000               M     nop
0256   3???               M     bra $+1
                          M     exitm
0257   08??           01082     movfw temp1
0258   160C           01083     bsf TRISA,VIDEO_OUT
0259   0B89           01084     decfsz WREG
025A   3???           01085     bra $-1
025B   120C           01086     bcf TRISA, VIDEO_OUT
                      01087     tdelay BALL_WIDTH-1
                          M     if BALL_WIDTH-1==0
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if BALL_WIDTH-1==7
025C   2???               M     call _7tcy
                          M     exitm
025D   08??           01088     movfw ball_x
025E   160C           01089     bsf TRISA,VIDEO_OUT
025F   3C52           01090     sublw BALL_RIGHT_BOUND
0260   0B89           01091     decfsz WREG
0261   3???           01092     bra $-1
0262   120C           01093     bcf TRISA,VIDEO_OUT
                      01094     tdelay 4
                          M     if 4==0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0263   2???               M     call _4tcy
                          M     exitm
0264   160C           01095     bsf TRISA,VIDEO_OUT
0265   3???           01096     bra draw_void_exit
0266                  01097 ball_at_left
                      01098     tdelay LEFT_MARGIN-15
                          M     if LEFT_MARGIN-15==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-15==7
                          M     call _7tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-15>7
  000A                    M     variable q=(LEFT_MARGIN-15-5)/3
  0002                    M     variable r=(LEFT_MARGIN-15-5)%3
0266   300A               M     movlw q
0267   2???               M     call _3ntcy
                          M     if (r==2)
0268   3???               M     bra $+1
                          M     exitm
0269   120C           01099     bcf TRISA,VIDEO_OUT
                      01100     tdelay 12
                          M     if 12==0
                          M     exitm
                          M     endif
                          M     if 12==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 12==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 12==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 12==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 12==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 12==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 12==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 12>7
  0002                    M     variable q=(12-5)/3
  0001                    M     variable r=(12-5)%3
026A   3002               M     movlw q
026B   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026C   0000               M     nop
                          M     exitm
026D   160C           01101     bsf TRISA,VIDEO_OUT
                      01102     tdelay COURT_WIDTH-6
                          M     if COURT_WIDTH-6==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-6>7
  004F                    M     variable q=(COURT_WIDTH-6-5)/3
  0000                    M     variable r=(COURT_WIDTH-6-5)%3
026E   304F               M     movlw q
026F   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0270   0000           01103     nop
0271   120C           01104     bcf TRISA,VIDEO_OUT
                      01105     tdelay 4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0272   2???               M     call _4tcy
                          M     exitm
0273   160C           01106     bsf TRISA,VIDEO_OUT
0274   3???           01107     bra draw_void_exit
0275                  01108 ball_at_right
                      01109     tdelay LEFT_MARGIN-18
                          M     if LEFT_MARGIN-18==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18==7
                          M     call _7tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-18>7
  0009                    M     variable q=(LEFT_MARGIN-18-5)/3
  0002                    M     variable r=(LEFT_MARGIN-18-5)%3
0275   3009               M     movlw q
0276   2???               M     call _3ntcy
                          M     if (r==2)
0277   3???               M     bra $+1
                          M     exitm
0278   120C           01110     bcf TRISA,VIDEO_OUT
                      01111     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0279   2???               M     call _4tcy
                          M     exitm
027A   160C           01112     bsf TRISA,VIDEO_OUT
                      01113     tdelay COURT_WIDTH-2
                          M     if COURT_WIDTH-2==0
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if COURT_WIDTH-2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if COURT_WIDTH-2>7
  0050                    M     variable q=(COURT_WIDTH-2-5)/3
  0001                    M     variable r=(COURT_WIDTH-2-5)%3
027B   3050               M     movlw q
027C   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
027D   0000               M     nop
                          M     exitm
027E   120C           01114     bcf TRISA,VIDEO_OUT
                      01115     tdelay 10
                          M     if 10==0
                          M     exitm
                          M     endif
                          M     if 10==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 10==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 10==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 10==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 10==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 10==6
                          M     call _6tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 10==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 10>7
  0001                    M     variable q=(10-5)/3
  0002                    M     variable r=(10-5)%3
027F   3001               M     movlw q
0280   2???               M     call _3ntcy
                          M     if (r==2)
0281   3???               M     bra $+1
                          M     exitm
0282   160C           01116     bsf TRISA,VIDEO_OUT
0283                  01117 draw_void_exit    
0283   0A??           01118     incf slice
0284   0A??           01119     incf lcount
0285   30FB           01120     movlw LAST_VIDEO_LINE+1
0286   02??           01121     subwf lcount,W
0287   1D03           01122     skpz
                      01123     leave
0288   2???               M     goto isr_exit
0289   01??           01124     clrf slice
028A   3013           01125     movlw 19
028B   00??           01126     movwf task
                      01127     leave
028C   2???               M     goto isr_exit
028D                  01128 no_wall_draw
028D   0A??           01129     incf lcount
                      01130     next_task 2*BRICK_HEIGHT
028E   0A??               M     incf slice
028F   3010               M     movlw 2*BRICK_HEIGHT
0290   02??               M     subwf slice,W
0291   1D03               M     skpz
                          M     leave
0292   2???               M     goto isr_exit
0293   01??               M     clrf slice
0294   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
0295   2???               M     goto isr_exit
                      01131 
                      01132 ; draw 16 bricks wall
                      01133 ; input:
                      01134 ;   row in temp1,temp2
                      01135 ;   color in WREG
                      01136 ; output:
                      01137 ;   none    
0296                  01138 draw_wall; macro color
                      01139 ;    local next_brick
                      01140     pushw
0296   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0297   3010           01141     movlw 16
                      01142     pushw
0298   0019               M     movwi --SP
0299                  01143 next_brick
0299   35??           01144     lslf temp2
029A   0D??           01145     rlf temp1
029B   301A           01146     movlw BLACK
029C   1803           01147     skpnc
                      01148     pickn 1 ;movlw color
029D   3F01               M     moviw 1[SP]
029E   008C           01149     movwf TRISA
                      01150     tdelay BRICK_WIDTH-9
                          M     if BRICK_WIDTH-9==0
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==7
029F   2???               M     call _7tcy
                          M     exitm
02A0   0B80           01151     decfsz T
02A1   3???           01152     bra next_brick
                      01153     dropn 2
02A2   3102               M     addfsr T,2
02A3   0008           01154     return
                      01155     
                      01156 ; task 12, draw top brick row
02A4                  01157 draw_row1 ; lcount enter at 74 leave at 82
                      01158     chroma_ref
02A4   003B               M     banksel PWM1CON
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A5   121B               M     bcf PWM1CON,POL
02A6   0021           01159     banksel TRISA
02A7   08??           01160     movfw row1
02A8   00??           01161     movwf temp1
02A9   08??           01162     movfw row1+1
02AA   00??           01163     movwf temp2
                      01164     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02AB   300C               M     movlw q
02AC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AD   3008           01165     movlw YELLOW
02AE   2???           01166     call draw_wall
                      01167     black
02AF   301A               M     movlw BLACK
02B0   008C               M     movwf TRISA
                      01168     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02B1   0000               M     nop
02B2   3???               M     bra $+1
                          M     exitm
02B3   0A??           01169     incf lcount
                      01170     next_task BRICK_HEIGHT
02B4   0A??               M     incf slice
02B5   3008               M     movlw BRICK_HEIGHT
02B6   02??               M     subwf slice,W
02B7   1D03               M     skpz
                          M     leave
02B8   2???               M     goto isr_exit
02B9   01??               M     clrf slice
02BA   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
02BB   2???               M     goto isr_exit
                      01171     
                      01172 ; task 13, draw 2nd brick row    
02BC                  01173 draw_row2 ;lcount enter at 82 leave at 90
                      01174     chroma_invert
02BC   003B               M     banksel PWM1CON
02BD   161B               M     bsf PWM1CON,POL
02BE   0021           01175     banksel TRISA
02BF   08??           01176     movfw row2
02C0   00??           01177     movwf temp1
02C1   08??           01178     movfw row2+1
02C2   00??           01179     movwf temp2
                      01180     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02C3   300C               M     movlw q
02C4   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02C5   3008           01181     movlw MAUVE
02C6   2???           01182     call draw_wall
                      01183     black
02C7   301A               M     movlw BLACK
02C8   008C               M     movwf TRISA
                      01184     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02C9   0000               M     nop
02CA   3???               M     bra $+1
                          M     exitm
02CB   0A??           01185     incf lcount
                      01186     next_task BRICK_HEIGHT
02CC   0A??               M     incf slice
02CD   3008               M     movlw BRICK_HEIGHT
02CE   02??               M     subwf slice,W
02CF   1D03               M     skpz
                          M     leave
02D0   2???               M     goto isr_exit
02D1   01??               M     clrf slice
02D2   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
02D3   2???               M     goto isr_exit
                      01187 
                      01188 ; task 14, draw 3rd brick row    
02D4                  01189 draw_row3 ; lcount enter at 90 leave at 98
                      01190     chroma_invert
02D4   003B               M     banksel PWM1CON
02D5   161B               M     bsf PWM1CON,POL
02D6   0021           01191     banksel TRISA
02D7   08??           01192     movfw row3
02D8   00??           01193     movwf temp1
02D9   08??           01194     movfw row3+1
02DA   00??           01195     movwf temp2
                      01196     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02DB   300C               M     movlw q
02DC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02DD   3018           01197     movlw BLUE
02DE   2???           01198     call draw_wall
                      01199     black
02DF   301A               M     movlw BLACK
02E0   008C               M     movwf TRISA
                      01200     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02E1   0000               M     nop
02E2   3???               M     bra $+1
                          M     exitm
02E3                  01201 row3_exit
02E3   0A??           01202     incf lcount
                      01203     next_task BRICK_HEIGHT
02E4   0A??               M     incf slice
02E5   3008               M     movlw BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E6   02??               M     subwf slice,W
02E7   1D03               M     skpz
                          M     leave
02E8   2???               M     goto isr_exit
02E9   01??               M     clrf slice
02EA   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
02EB   2???               M     goto isr_exit
                      01204     
                      01205 ; task 15, draw 4th brick row    
02EC                  01206 draw_row4 ; lcount enter at 98 leave at 106
                      01207     chroma_ref
02EC   003B               M     banksel PWM1CON
02ED   121B               M     bcf PWM1CON,POL
02EE   0021           01208     banksel TRISA
02EF   08??           01209     movfw row4
02F0   00??           01210     movwf temp1
02F1   08??           01211     movfw row4+1
02F2   00??           01212     movwf temp2
                      01213     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
02F3   300C               M     movlw q
02F4   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02F5   3008           01214     movlw YELLOW
02F6   2???           01215     call draw_wall
                      01216     black
02F7   301A               M     movlw BLACK
02F8   008C               M     movwf TRISA
                      01217     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
02F9   0000               M     nop
02FA   3???               M     bra $+1
                          M     exitm
02FB   0A??           01218     incf lcount
                      01219     next_task BRICK_HEIGHT
02FC   0A??               M     incf slice
02FD   3008               M     movlw BRICK_HEIGHT
02FE   02??               M     subwf slice,W
02FF   1D03               M     skpz
                          M     leave
0300   2???               M     goto isr_exit
0301   01??               M     clrf slice
0302   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
0303   2???               M     goto isr_exit
                      01220 
                      01221 ; task 16, draw 5th brick row    
0304                  01222 draw_row5 ; lcount enter at 106 leave at 114
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01223     chroma_invert
0304   003B               M     banksel PWM1CON
0305   161B               M     bsf PWM1CON,POL
0306   0021           01224     banksel TRISA
0307   08??           01225     movfw row5
0308   00??           01226     movwf temp1
0309   08??           01227     movfw row5+1
030A   00??           01228     movwf temp2
                      01229     tdelay LEFT_MARGIN-11
                          M     if LEFT_MARGIN-11==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-11>7
  000C                    M     variable q=(LEFT_MARGIN-11-5)/3
  0000                    M     variable r=(LEFT_MARGIN-11-5)%3
030B   300C               M     movlw q
030C   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     endif
030D   3008           01230     movlw MAUVE
030E   2???           01231     call draw_wall
                      01232     black
030F   301A               M     movlw BLACK
0310   008C               M     movwf TRISA
                      01233     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
0311   0000               M     nop
0312   3???               M     bra $+1
                          M     exitm
                      01234     black
0313   301A               M     movlw BLACK
0314   008C               M     movwf TRISA
0315   0A??           01235     incf lcount
                      01236     next_task BRICK_HEIGHT
0316   0A??               M     incf slice
0317   3008               M     movlw BRICK_HEIGHT
0318   02??               M     subwf slice,W
0319   1D03               M     skpz
                          M     leave
031A   2???               M     goto isr_exit
031B   01??               M     clrf slice
031C   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
031D   2???               M     goto isr_exit
                      01237 
  00000028            01238 MSG_FIRST equ 40
  00000028            01239 MSG_HEIGHT equ 40
  00000010            01240 MSG_PIXELS_COUNT equ 16 
                      01241 ; task 17
                      01242 ; draw all rows between paddle and lower brick row    
031E                  01243 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
031E   3028           01244     movlw MSG_FIRST
                      01245     pushw
031F   0019               M     movwi --SP
0320   3050           01246     movlw MSG_FIRST+MSG_HEIGHT
                      01247     pushw
0321   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0322   08??           01248     movfw slice
0323   2???           01249     call between
0324   1C03           01250     skpc
0325   3???           01251     bra no_msg
0326   1F00           01252     btfss flags, F_OVER
0327   3???           01253     bra no_msg
0328   3008           01254     movlw YELLOW ; message color
                      01255     pushw
0329   0019               M     movwi --SP
032A   3010           01256     movlw MSG_PIXELS_COUNT
                      01257     pushw
032B   0019               M     movwi --SP
032C   1F80           01258     btfss flags, F_COOL
032D   3???           01259     bra display_end
                      01260 ; perfect score display 'COOL' message
032E   30??           01261     movlw high cool_msg
032F   0087           01262     movwf FSR1H
0330   30??           01263     movlw low cool_msg
0331   0086           01264     movwf FSR1L
0332   2???           01265     call display_msg
0333   3???           01266     bra no_msg
                      01267 ; display 'END!' message    
0334                  01268 display_end
0334   30??           01269     movlw high end_msg
0335   0087           01270     movwf FSR1H
0336   30??           01271     movlw low end_msg
0337   0086           01272     movwf FSR1L
0338   2???           01273     call display_msg
0339                  01274 no_msg    
0339   0A??           01275     incf slice
033A   0A??           01276     incf lcount
033B   30F3           01277     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
033C   02??           01278     subwf lcount,W
033D   1D03           01279     skpz
                      01280     leave
033E   2???               M     goto isr_exit
033F   01??           01281     clrf slice
0340   0A??           01282     incf task
                      01283     leave
0341   2???               M     goto isr_exit
                      01284 
                      01285 ; display end message
                      01286 ; message as a maximum of 24 pixels    
0342                  01287 display_msg
                      01288 ;    tdelay 8
0342   0021           01289     banksel TRISA
0343   3028           01290     movlw MSG_FIRST
0344   02??           01291     subwf slice,W
0345   3689           01292     lsrf WREG
0346   3689           01293     lsrf WREG
0347   3689           01294     lsrf WREG
0348   00??           01295     movwf temp1
0349   3589           01296     lslf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034A   07??           01297     addwf temp1,W
034B   0786           01298     addwf FSR1L
034C   1803           01299     skpnc
034D   0A87           01300     incf FSR1H
034E   0016           01301     moviw FSR1++
034F   00??           01302     movwf pixels
0350   0016           01303     moviw FSR1++
0351   00??           01304     movwf pixels+1
0352   0016           01305     moviw FSR1++
0353   00??           01306     movwf pixels+2
0354                  01307 next_pixel
0354   35??           01308     lslf pixels+2
0355   0D??           01309     rlf pixels+1
0356   0D??           01310     rlf pixels
0357   301A           01311     movlw BLACK
0358   1803           01312     skpnc
                      01313     pickn 1 ;movlw color
0359   3F01               M     moviw 1[SP]
035A   008C           01314     movwf TRISA
035B   0B80           01315     decfsz T
035C   3???           01316     bra next_pixel
                      01317     dropn 2
035D   3102               M     addfsr T,2
                      01318     black
035E   301A               M     movlw BLACK
035F   008C               M     movwf TRISA
0360   0008           01319     return
                      01320     
                      01321 ; task 18, draw paddle at bottom screen    
0361                  01322 draw_paddle
                      01323     tdelay LEFT_MARGIN+2
                          M     if LEFT_MARGIN+2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==5
                          M     call _5tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2>7
  0010                    M     variable q=(LEFT_MARGIN+2-5)/3
  0001                    M     variable r=(LEFT_MARGIN+2-5)%3
0361   3010               M     movlw q
0362   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0363   0000               M     nop
                          M     exitm
0364   08??           01324     movfw paddle_pos
0365   1903           01325     skpnz
0366   3???           01326     bra $+3
0367   0B89           01327     decfsz WREG
0368   3???           01328     bra $-1
0369   0021           01329     banksel TRISA
036A   120C           01330     bcf TRISA,VIDEO_OUT
                      01331     tdelay PADDLE_WIDTH
                          M     if PADDLE_WIDTH==0
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==5
                          M     call _5tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if PADDLE_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH>7
  0009                    M     variable q=(PADDLE_WIDTH-5)/3
  0000                    M     variable r=(PADDLE_WIDTH-5)%3
036B   3009               M     movlw q
036C   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
036D   160C           01332     bsf TRISA,VIDEO_OUT
036E   0A??           01333     incf lcount
                      01334     next_task PADDLE_THICKNESS
036F   0A??               M     incf slice
0370   3008               M     movlw PADDLE_THICKNESS
0371   02??               M     subwf slice,W
0372   1D03               M     skpz
                          M     leave
0373   2???               M     goto isr_exit
0374   01??               M     clrf slice
0375   0A??               M     incf task
                          M ;    movlw s
                          M ;    addwf lcount
                          M     leave
0376   2???               M     goto isr_exit
                      01335 
                      01336 ; task 19,  wait end of this field, reset task to zero    
0377                  01337 wait_field_end
0377   0A??           01338     incf lcount
0378   1903           01339     skpnz
0379   1400           01340     bsf flags, F_HI_LINE
037A   1800           01341     btfsc flags, F_HI_LINE
037B   2???           01342     goto hi_line
                      01343     leave
037C   2???               M     goto isr_exit
037D                  01344 hi_line
037D   1880           01345     btfsc flags,F_EVEN
037E   2???           01346     goto even_field
037F   3005           01347     movlw 5
0380   02??           01348     subwf lcount,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0381   1D03           01349     skpz
                      01350     leave
0382   2???               M     goto isr_exit
0383   2???           01351     goto field_end
0384                  01352 even_field
0384   3006           01353     movlw 6
0385   02??           01354     subwf lcount,W
0386   1D03           01355     skpz
                      01356     leave
0387   2???               M     goto isr_exit
                      01357 ; even field last line is half_line    
                      01358 ; set PWM3 for line 263 half-line
0388   003B           01359     banksel PWM3DC
0389   3003           01360     movlw high HALF_LINE
038A   00B6           01361     movwf PWM3PRH
038B   308D           01362     movlw low HALF_LINE
038C   00B5           01363     movwf PWM3PRL
038D   17BF           01364     bsf PWM3LDCON,7
038E                  01365 field_end
038E   01??           01366     clrf task
038F   01??           01367     clrf slice
                      01368 ;    clrf lcount
0390   1000           01369     bcf flags, F_HI_LINE
0391   1500           01370     bsf flags, F_SYNC
                      01371 ; toggle odd/even field flag    
0392   3002           01372     movlw 1<<F_EVEN
0393   06??           01373     xorwf flags
                      01374     leave
0394   2???               M     goto isr_exit
                      01375 
                      01376 ; helper functions
                      01377 
                      01378 ; delay = (3*n+5)*tcy    
                      01379 ;input:
                      01380 ;   WREG <- n    
0395                  01381 _3ntcy
0395   0B89           01382     decfsz WREG
0396   3???           01383     bra $-1
0397   0008           01384     return
                      01385     
0398                  01386 _7tcy ; call here for 7*tcy delay using a single instruction
0398   0000           01387     nop
0399                  01388 _6tcy ; call here for 6*tcy delay using a single instruction
0399   0000           01389     nop
039A                  01390 _5tcy ; call here for 5*tcy delay using a single instruction
039A   0000           01391     nop
039B                  01392 _4tcy ; call here for 4*Tcy delay using a single instruction    
039B   0008           01393     return
                      01394     
                      01395     
                      01396 ; increment user score
                      01397 ; This is a BCD addition where a single digit is added to score.   
                      01398 ; score is stored as big indian
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01399 ; argument: 
                      01400 ;   WREG ->  bdc digit to add to score variable
039C                  01401 inc_score
039C   07??           01402     addwf score+1
039D   1883           01403     btfsc STATUS,DC
039E   3???           01404     bra $+6
039F   300F           01405     movlw 15
03A0   05??           01406     andwf score+1,W
03A1   3C09           01407     sublw 9
03A2   1803           01408     skpnc
03A3   3???           01409     bra $+3
03A4   3006           01410     movlw 6
03A5   07??           01411     addwf score+1
03A6   0E??           01412     swapf score+1,W
03A7   390F           01413     andlw 15
03A8   3C09           01414     sublw 9
03A9   1803           01415     skpnc
03AA   3???           01416     bra game_over_test
03AB   3060           01417     movlw 0x60
03AC   07??           01418     addwf score+1
03AD   0A??           01419     incf score
03AE   3001           01420     movlw 1
03AF   00??           01421     movwf ball_speed
03B0                  01422 game_over_test ; all bricks destroyed?
03B0   3003           01423     movlw 3
03B1   02??           01424     subwf score,W
03B2   1D03           01425     skpz
03B3   0008           01426     return
03B4   3036           01427     movlw 0x36
03B5   02??           01428     subwf score+1,W
03B6   1D03           01429     skpz
03B7   0008           01430     return
03B8   1700           01431     bsf flags,F_OVER ; game over
03B9   1780           01432     bsf flags,F_COOL ; with maximum score.
03BA   0008           01433     return
                      01434     
                      01435 ;***********************************
                      01436 ; digit_offset, compute digit position in 'digits' table
                      01437 ;   position = digit * 5
                      01438 ; 
                      01439 ; input: WREG -> digit value {0..9}
                      01440 ;         
                      01441 ; output: WREG -> displacement in table
                      01442 ;***********************************
03BB                  01443 digit_offset    
                      01444     pushw 
03BB   0019               M     movwi --SP
03BC   3589           01445     lslf WREG
03BD   3589           01446     lslf WREG
03BE   0780           01447     addwf T
                      01448     popw
03BF   0012               M     moviw SP++
03C0   0008           01449     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01450     
03C1                  01451 brick_wall_init
03C1   30??           01452     movlw high row1
03C2   0087           01453     movwf FSR1H
03C3   30??           01454     movlw low row1
03C4   0086           01455     movwf FSR1L
03C5   300C           01456     movlw 12
03C6   00??           01457     movwf temp1
03C7   30FF           01458     movlw 0xff
03C8                  01459 bw_init
03C8   001E           01460     movwi FSR1++
03C9   0B??           01461     decfsz temp1
03CA   3???           01462     bra bw_init
03CB   0008           01463     return
                      01464 
                      01465 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
03CC                  01466 lfsr16
03CC   002?           01467     banksel seed
03CD   08??           01468     movfw seed+1
03CE   00??           01469     movwf temp1
03CF   3589           01470     lslf WREG
03D0   3589           01471     lslf WREG
03D1   00??           01472     movwf temp2
03D2   06??           01473     xorwf temp1
03D3   35??           01474     lslf temp2
03D4   08??           01475     movfw temp2
03D5   06??           01476     xorwf temp1
03D6   35??           01477     lslf temp2
03D7   35??           01478     lslf temp2,W
03D8   06??           01479     xorwf temp1
03D9   35??           01480     lslf temp1
03DA   0D??           01481     rlf seed
03DB   0D??           01482     rlf seed+1
03DC   08??           01483     movfw seed
03DD   0008           01484     return
                      01485     
                      01486 
03DE                  01487 set_ball_dx
03DE   2???           01488     call lfsr16 ;random
03DF   3007           01489     movlw 7
03E0   05??           01490     andwf seed,W
03E1   3589           01491     lslf WREG
03E2   000B           01492     brw
03E3   3000           01493     movlw 0
03E4   3???           01494     bra set_ball_dx_exit
03E5   3001           01495     movlw 1
03E6   3???           01496     bra set_ball_dx_exit
03E7   30FF           01497     movlw -1
03E8   3???           01498     bra set_ball_dx_exit
03E9   3000           01499     movlw 0
03EA   3???           01500     bra set_ball_dx_exit
03EB   3001           01501     movlw 1
03EC   3???           01502     bra set_ball_dx_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03ED   30FF           01503     movlw -1
03EE   3???           01504     bra set_ball_dx_exit
03EF   30FF           01505     movlw -1
03F0   3???           01506     bra set_ball_dx_exit
03F1   3001           01507     movlw 1
03F2                  01508 set_ball_dx_exit
03F2   00??           01509     movwf ball_dx
03F3   0008           01510     return
                      01511     
03F4                  01512 game_init
03F4   01??           01513     clrf score
03F5   01??           01514     clrf score+1
03F6   2???           01515     call brick_wall_init
03F7   002?           01516     banksel balls
03F8   3003           01517     movlw 3
03F9   00??           01518     movwf balls
03FA   01??           01519     clrf ball_timer
03FB   0A??           01520     incf ball_timer
03FC   30EB           01521     movlw PADDLE_Y-BRICK_HEIGHT
03FD   00??           01522     movwf ball_y
03FE   2???           01523     call set_ball_dx
03FF   30FC           01524     movlw -4
0400   00??           01525     movwf ball_dy
0401   3002           01526     movlw 2
0402   00??           01527     movwf ball_speed
0403   01??           01528     clrf flags
0404   1600           01529     bsf flags, F_START
0405   0008           01530     return
                      01531     
                      01532 ; delay by TIMER0
                      01533 ; parameter
                      01534 ;   WREG -> 2*Tcy+7cy    
0406                  01535 t0delay 
0406   0989           01536     comf WREG
0407   0095           01537     movwf TMR0
0408   110B           01538     bcf INTCON,T0IF
0409   1D0B           01539     btfss INTCON,T0IF
040A   3???           01540     bra $-1
040B   0008           01541     return
                      01542     
                      01543 MAIN_PROG CODE                      ; let linker place main program
                      01544 
0000                  01545 initialize
                      01546 ; clear common RAM
0000   0185           01547     clrf FSR0H
0001   3070           01548     movlw 0x70
0002   0084           01549     movwf FSR0L
0003   0103           01550     clrw
0004   001A           01551     movwi FSR0++
0005   1F84           01552     btfss FSR0L,7
0006   3???           01553     bra $-2
                      01554 ; clear banked RAM
0007   0184           01555     clrf FSR0L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   3020           01556     movlw 0x20
0009   0085           01557     movwf FSR0H
000A   0103           01558     clrw 
000B   001A           01559     movwi FSR0++
000C   1C05           01560     btfss FSR0H,0
000D   3???           01561     bra $-2
                      01562 ; initialize LFSR seed
000E   002?           01563     banksel seed
000F   09??           01564     comf seed
0010   09??           01565     comf seed+1
0011   09??           01566     comf seed+2
0012   09??           01567     comf seed+3
                      01568 ;   setup arguments stack pointer
0013   30??           01569     movlw high (stack+STACK_SIZE)
0014   0085           01570     movwf FSR0H
0015   30??           01571     movlw low (stack+STACK_SIZE)
0016   0084           01572     movwf FSR0L
                      01573 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01574 ; TIMER0 prescale 1:2
0017   3050           01575     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01576     movwf OPTION_REG
                      01577 ; disable analog inputs, except AN0
0019   0023           01578     banksel ANSELA
001A   018C           01579     clrf ANSELA
                      01580 ; paddle potentiometer input     
001B   140C           01581     bsf ANSELA,PADDLE
001C   0021           01582     banksel ADCON1
001D   3020           01583     movlw (2<<ADCS0)
001E   009E           01584     movwf ADCON1
                      01585 ; pin setup
001F   0024           01586     banksel WPUA
0020   018C           01587     clrf WPUA
0021   0021           01588     banksel TRISA
0022   110C           01589     bcf TRISA,SYNC_OUT
0023   100C           01590     bcf TRISA,AUDIO
0024   0022           01591     banksel LATA
0025   160C           01592     bsf LATA, VIDEO_OUT
                      01593 ; PWM1 chroma signal on RA1
0026   003B           01594     banksel PWM1CON
0027   019F           01595     clrf PWM1LDCON
0028   0191           01596     clrf PWM1PHL
0029   0192           01597     clrf PWM1PHH
002A   0197           01598     clrf PWM1OFL
002B   0198           01599     clrf PWM1OFH
002C   0196           01600     clrf PWM1PRH
002D   3007           01601     movlw 7
002E   0095           01602     movwf PWM1PRL
002F   3004           01603     movlw 4
0030   0093           01604     movwf PWM1DCL
0031   0194           01605     clrf PWM1DCH
0032   179F           01606     bsf PWM1LDCON,7
0033   30C0           01607     movlw (1<<EN)|(1<<OE)
0034   009B           01608     movwf PWM1CON
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01609 ; PWM2 sound
0035   003B           01610     banksel PWM2CON
0036   01A1           01611     clrf PWM2PHL
0037   01A2           01612     clrf PWM2PHH
0038   01A7           01613     clrf PWM2OFL
0039   01A8           01614     clrf PWM2OFH
003A   3030           01615     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01616     movwf PWM2CLKCON
003C   300D           01617     movlw high 3578;7
003D   00A6           01618     movwf PWM2PRH
003E   30FA           01619     movlw low 3578;7
003F   00A5           01620     movwf PWM2PRL
0040   3626           01621     lsrf PWM2PRH,W
0041   00A4           01622     movwf PWM2DCH
0042   0C25           01623     rrf PWM2PRL,W
0043   00A3           01624     movwf PWM2DCL
0044   17AF           01625     bsf PWM2LDCON,LDA
                      01626 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01627     banksel PWM3CON
0046   01BF           01628     clrf PWM3LDCON
0047   01B1           01629     clrf PWM3PHL
0048   01B2           01630     clrf PWM3PHH
0049   01B7           01631     clrf PWM3OFL
004A   01B8           01632     clrf PWM3OFH
004B   301B           01633     movlw low HPERIOD
004C   00B5           01634     movwf PWM3PRL
004D   3007           01635     movlw high HPERIOD
004E   00B6           01636     movwf PWM3PRH
004F   3086           01637     movlw HSYNC
0050   00B3           01638     movwf PWM3DCL
0051   01B4           01639     clrf PWM3DCH
0052   30D0           01640     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01641     movwf PWM3CON
0054   17BF           01642     bsf PWM3LDCON,7
0055   143C           01643     bsf PWM3INTE,PRIE
                      01644 ; enbable interrupt    
0056   0020           01645     banksel PIR3
0057   1313           01646     bcf PIR3,PWM3IF
0058   0021           01647     banksel PIE3
0059   1713           01648     bsf PIE3,PWM3IE
005A   170B           01649     bsf INTCON,PEIE
005B   178B           01650     bsf INTCON,GIE
005C   01??           01651     clrf flags
005D   1500           01652     bsf flags, F_SYNC
                      01653 ; test code
                      01654     
                      01655 ; all processing done in ISR    
005E   2???           01656     goto $
                      01657 
                      01658 ; digits character table
005F                  01659 digits
005F   000B           01660     brw
0060   3440 34A0 34A0 01661     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       34A0 3440 
0065   3440 34C0 3440 01662     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01663     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01664     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01665     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01666     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01667     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01668     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01669     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01670     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01671     reset
                      01672     
0093                  01673 frequency
0093   000B           01674     brw
0094   348B 34D3      01675     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01676     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01677     reset
                      01678   
                      01679 ;display END! when game is over    
0099                  01680 end_msg
                      01681 ;    brw
0099   00E8 00C8 0000 01682     data 0xe8,0xc8,0
009C   008E 00A8 0000 01683     data 0x8e,0xa8,0
009F   00EA 00A8 0000 01684     data 0xea,0xa8,0
00A2   008A 00A0 0000 01685     data 0x8a,0xa0,0
00A5   00EA 00C8 0000 01686     data 0xea,0xc8,0
                      01687   
00A8                  01688 cool_msg
                      01689 ;    brw
00A8   00EE 00E8 0000 01690     data 0xee,0xe8,0
00AB   008A 00A8 0000 01691     data 0x8a,0xa8,0
00AE   008A 00A8 0000 01692     data 0x8a,0xa8,0
00B1   008A 00A8 0000 01693     data 0x8a,0xa8,0
00B4   00EE 00EE 0000 01694     data 0xee,0xee,0
                      01695     
                      01696 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01697 max_score 
                      01698  
3FA7 1EFF             01699     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_COOL                            00000007
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000F                         0000000F
_ISR_00D8                         000000D8
_ISR_00DD                         000000DD
_ISR_00E4                         000000E4
_ISR_011B                         0000011B
_ISR_0122                         00000122
_ISR_0125                         00000125
_ISR_012E                         0000012E
_ISR_0165                         00000165
_ISR_020D                         0000020D
_ISR_0256                         00000256
_ISR_025A                         0000025A
_ISR_0261                         00000261
_ISR_0268                         00000268
_ISR_0277                         00000277
_ISR_0281                         00000281
_ISR_02B2                         000002B2
_ISR_02CA                         000002CA
_ISR_02E2                         000002E2
_ISR_02FA                         000002FA
_ISR_0312                         00000312
_ISR_0366                         00000366
_ISR_0368                         00000368
_ISR_0396                         00000396
_ISR_039E                         0000039E
_ISR_03A3                         000003A3
_ISR_040A                         0000040A
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      00000266
ball_at_right                     00000275
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    0000024C
ball_lost                         0000012C
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B1
between                           000001B6
between_exit                      000001C0
black                             
blue                              
bottom_bound                      00000106
brick_bounce                      000001AC
brick_wall_init                   000003C1
bw_init                           000003C8
check_paddle_bounce               00000141
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         0000010E
collision_exit                    000001B2
cool_msg                          000000A8
dark_green                        
digit_offset                      000003BB
digit_row                         000001FC
digits                            0000005F
display_end                       00000334
display_msg                       00000342
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

draw_border                       
draw_empty                        0000031E
draw_paddle                       00000361
draw_row1                         000002A4
draw_row2                         000002BC
draw_row3                         000002D4
draw_row4                         000002EC
draw_row5                         00000304
draw_score                        000001CA
draw_top_wall                     00000211
draw_void                         00000226
draw_void_exit                    00000283
draw_wall                         00000296
dropn                             
eeprom                            00000780
end_msg                           00000099
even_field                        00000384
fallout_test                      00000128
field_end                         0000038E
flags                             00000000
frequency                         00000093
game_init                         000003F4
game_over                         000000BC
game_over_test                    000003B0
game_running                      000000B4
going_down                        00000166
gray                              white
hi_line                           0000037D
inc_score                         0000039C
initialize                        00000000
isr                               00000004
isr_exit                          0000002A
lcount                            00000001
leave                             
lfsr16                            000003CC
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000EA
move_ball_exit                    0000010C
move_y                            000000FD
next_brick                        00000299
next_pixel                        00000354
next_task                         
no_ball                           00000233
no_ball_dly                       00000232
no_msg                            00000339
no_wall_draw                      0000028D
old_dx                            0000000F
paddle_bounce                     0000014B
paddle_pos                        00000006
paddle_test                       0000013D
pickn                             
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

pixels                            000000AD
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000061
post_vsync                        00000058
pre_vsync                         0000002F
pushw                             
q                                 00000009
r                                 00000000
read_button                       000000CC
read_paddle                       000000D0
right_bound                       000000F6
row1                              000000A0
row1_test                         0000017C
row2                              000000A2
row2_test                         00000185
row3                              000000A4
row3_exit                         000002E3
row3_test                         0000018F
row4                              000000A6
row4_test                         00000199
row5                              000000A8
row5_test                         000001A3
row6                              000000AA
score                             0000000C
score_exit                        000001F3
seed                              00000030
set_ball_dx                       000003DE
set_ball_dx_exit                  000003F2
set_presync                       0000003A
set_vsync                         00000050
skip_2_tasks                      000000C3
slice                             00000002
sound                             00000071
sound_fx1                         0000007E
sound_fx2                         00000089
sound_init                        00000094
sound_timer                       000000B2
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000406
task                              00000003
task_switch                       00000013
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     0000021D
user_input                        000000A9
video_first                       000001C2
vsync                             00000045
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-18-2019  22:39:09         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

vsync_end                         00000065
wait_field_end                    00000377
wait_trigger                      000000B6
wall_test                         0000015C
white                             
yellow                            
yes_ball                          00000245

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   283 suppressed

