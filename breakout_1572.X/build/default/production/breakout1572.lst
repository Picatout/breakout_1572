MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled.    
                      00025 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00026     
                      00027     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00028     
8007   3FA7           00029     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   3EFF           00030     __config _CONFIG2, _PLLEN_OFF
                      00031     
                      00032     radix dec
                      00033 
                      00034 ; constants
  00000800            00035 PROG_SIZE equ 2048  ; program words
  00000080            00036 EEPROM_SIZE equ 128 ; high endurance flash words
                      00037  
  01B4F360            00038 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00039 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00040 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00041  
                      00042 ; NTSC signal 
  00003D76            00043 Fhorz equ 15734 ; horizontal frequency
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000071B            00044 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00045 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00046 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00047 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00048 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00049 ; boolean flags 
  00000000            00050 F_HI_LINE equ 0 ; lcount > 255
  00000001            00051 F_EVEN equ 1    ; even field
  00000002            00052 F_START equ 2   ; game started 
  00000003            00053 F_OVER equ 3    ; game over
  00000004            00054 F_SOUND equ 4   ; sound enabled 
  00000005            00055 F_SYNC equ 5    ; vertical synchronization phase
  00000006            00056 F_PAUSE equ 6   ; game pause after a ball lost
                      00057  
                      00058 ;pins assignment
  00000000            00059 AUDIO EQU RA0
  00000000            00060 PADDLE equ RA0
  00000001            00061 CHROMA equ RA1
  00000002            00062 SYNC_OUT equ RA2
  00000003            00063 START_BTN equ RA3 
  00000004            00064 VIDEO_OUT equ RA4
  00000005            00065 CLKIN equ RA5
                      00066  
                      00067 
                      00068 ;;;;;;;;;;;;;;;;;;;;;;
                      00069 ;; assembler macros ;;
                      00070 ;;;;;;;;;;;;;;;;;;;;;;
                      00071 
                      00072 ; leave task 
                      00073 leave macro
                      00074     goto isr_exit
                      00075     endm
                      00076     
                      00077 ; move to next task on slice limit
                      00078 ; parameters:
                      00079 ;   s  nomber of slices used by the task    
                      00080 next_task macro s    
                      00081     incf slice
                      00082     movlw s
                      00083     subwf slice,W
                      00084     skpz
                      00085     leave
                      00086     clrf slice
                      00087     incf task
                      00088     movlw s
                      00089     addwf lcount
                      00090     leave
                      00091     endm
                      00092     
                      00093     
                      00094 ; case switch
                      00095 ; parameters:
                      00096 ;   var is control variable
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 ;   n  is constant to compare to var
                      00098 ;   adr  is goto address if var==n 
                      00099 case macro var, n, adr
                      00100     movlw n
                      00101     subwf var,W
                      00102     skpnz
                      00103     goto adr
                      00104     endm
                      00105 
                      00106 ; swap variable with WREG    
                      00107 swap_var macro var
                      00108     xorwf var
                      00109     xorwf var,W
                      00110     xorwf var
                      00111     endm
                      00112     
                      00113     
                      00114 ; delay in machine cycle T
                      00115 ; parameters:
                      00116 ;   T   number of machine cycles    
                      00117 tdelay macro T
                      00118     variable q=(T)/3
                      00119     variable r=(T)%3
                      00120     if (q)
                      00121     movlw q
                      00122     decfsz WREG
                      00123     goto $-1
                      00124     endif
                      00125     if (r==2)
                      00126     goto $+1
                      00127     endif 
                      00128     if (r==1)
                      00129     nop
                      00130     endif
                      00131     endm
                      00132 
                      00133 ; enable weak pull on VIDEO_OUT
                      00134 ; to create a porch
                      00135 porch_on macro
                      00136     banksel WPUA
                      00137     bsf WPUA,VIDEO_OUT
                      00138     endm
                      00139     
                      00140 ; disable weak pull on VIDEO_OUT
                      00141 ; to remove porch
                      00142 porch_off macro
                      00143     banksel WPUA
                      00144     bcf WPUA,VIDEO_OUT
                      00145     endm
                      00146     
                      00147 ; enable chroma output
                      00148 chroma_on macro
                      00149     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     bcf TRISA, CHROMA
                      00151     endm
                      00152     
                      00153 ;disable chroma output    
                      00154 chroma_off macro
                      00155     banksel TRISA
                      00156     bsf TRISA,CHROMA
                      00157     endm
                      00158     
                      00159 ; output chroma reference    
                      00160 chroma_ref macro
                      00161     banksel PWM1CON
                      00162     bcf PWM1CON,POL
                      00163     endm
                      00164     
                      00165 ; set chroma phase to 180 degree
                      00166 chroma_invert macro
                      00167     banksel PWM1CON
                      00168     bsf PWM1CON,POL
                      00169     endm
                      00170 
                      00171 ;;;;;;;;;;;;;;;;;;;;;;
                      00172 ;   colors macros
                      00173 ; each one take 5 T 
                      00174 ;;;;;;;;;;;;;;;;;;;;;;
                      00175     
                      00176 ;set video output to black    
                      00177 black macro
                      00178 ;    banksel TRISA
                      00179     bsf TRISA,CHROMA
                      00180     bsf TRISA,VIDEO_OUT
                      00181 ;    goto $+1
                      00182     endm
                      00183     
                      00184 ; set video output to white    
                      00185 white macro    
                      00186 ;    banksel TRISA
                      00187     bsf TRISA,CHROMA
                      00188     bcf TRISA,VIDEO_OUT
                      00189 ;    goto $+1
                      00190     endm
                      00191 
                      00192 ; set video output to yellow    
                      00193 yellow macro
                      00194 ;    chroma_ref
                      00195 ;    banksel TRISA
                      00196     bcf TRISA,VIDEO_OUT
                      00197     bcf TRISA,CHROMA
                      00198     endm
                      00199 
                      00200 ; set video output to cyan   
                      00201 cyan macro
                      00202 ;    chroma_invert
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 ;    banksel TRISA
                      00204     bcf TRISA,VIDEO_OUT
                      00205     bcf TRISA,CHROMA
                      00206     endm
                      00207     
                      00208 ; set video output to green
                      00209 green macro
                      00210 ;    chroma_ref
                      00211 ;    banksel TRISA
                      00212     bsf TRISA, VIDEO_OUT
                      00213     bcf TRISA,CHROMA
                      00214     endm
                      00215     
                      00216 ; set video output to dark blue    
                      00217 dark_blue macro
                      00218 ;    chroma_invert
                      00219 ;    banksel TRISA
                      00220     bsf TRISA, VIDEO_OUT
                      00221     bcf TRISA,CHROMA
                      00222     endm
                      00223 
                      00224     
                      00225 ; draw a brick
                      00226 ; use 6T+BRICK_WIDTH
                      00227 ; if carry is 1 draw in color else draw black    
  00000015            00228 BRICK_WIDTH equ 21   
                      00229 draw_brick macro color
                      00230     local no_brick
                      00231     local brick_delay
                      00232     skpc
                      00233     bra no_brick
                      00234     color
                      00235     nop
                      00236     bra brick_delay
                      00237 no_brick
                      00238     black
                      00239     bra brick_delay 
                      00240 brick_delay    
                      00241     tdelay BRICK_WIDTH
                      00242     endm
                      00243 
                      00244 ; draw 8 bricks wall
                      00245 ; parameter in temp
                      00246 draw_wall macro color
                      00247     local next_brick
                      00248     movlw 8
                      00249     pushw
                      00250 next_brick    
                      00251     lslf temp
                      00252     draw_brick color
                      00253     decfsz T
                      00254     bra next_brick
                      00255     dropn 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     endm
                      00257     
                      00258     
                      00259 ; draw left and right borders
                      00260 ; parameters:
                      00261 ;   width delay determine width
                      00262 ;   width 5T+nT    
                      00263 draw_border macro width
                      00264     banksel TRISA
                      00265     bsf TRISA,CHROMA
                      00266     bcf TRISA,VIDEO_OUT
                      00267     tdelay width
                      00268     bsf TRISA,VIDEO_OUT
                      00269     endm
                      00270     
                      00271 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00272 ;  stack manipulation macros
                      00273 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00274 STACK_SIZE equ 16 ; size of argument stack
                      00275 #define T INDF0 ; top of argument stack
                      00276 #define SP FSR0 ; use FSR0 as stack pointer 
                      00277 ; push WREG on T
                      00278 pushw  macro
                      00279     movwi --SP
                      00280     endm
                      00281   
                      00282 ; pop WREG from T
                      00283 popw macro
                      00284     moviw SP++
                      00285     endm
                      00286     
                      00287 ; swap WREG with 
                      00288 swapw  macro
                      00289     xorwf T
                      00290     xorwf T,W
                      00291     xorwf T
                      00292     endm
                      00293 
                      00294 ; drop n elements from stack
                      00295 dropn macro n
                      00296     addfsr T,n
                      00297     endm
                      00298 
                      00299 ; copy nth element of stack to WREG
                      00300 ;  n {0..31}    
                      00301 pickn macro n
                      00302     moviw n[SP]
                      00303     endm
                      00304    
                      00305 ; copy WREG to nth element of stack
                      00306 ; n {0..31}
                      00307 pokew macro n
                      00308     movwi n[SP]
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     endm
                      00310     
                      00311     
                      00312 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00313 ;;    variables
                      00314 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00315     
                      00316     udata 0x20
0020                  00317 stack res 16 ; arguments stack
                      00318 
                      00319 v_array   udata 0xA0
00A0                  00320 row1 res 1; brick wall row1
00A1                  00321 row2 res 1
00A2                  00322 row3 res 1
00A3                  00323 row4 res 1
00A4                  00324 row5 res 1
00A5                  00325 d1 res 1 ; score msd digit pixels
00A6                  00326 d2 res 1 ; score 2nd digit pixels
00A7                  00327 d3 res 1 ; score lsd digit pixels
00A8                  00328 balls res 1 ; number of recking balls available 
00A9                  00329 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00330   
                      00331     udata_shr
0000                  00332 flags  res 1 ; boolean variables
0001                  00333 lcount res 1 ; video field line counter
0002                  00334 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00335 task res 1 ; where in video phase 
0004                  00336 temp res 2 ; temporary storage
0006                  00337 paddle_pos res 1 
0007                  00338 ball_x res 1
0008                  00339 ball_y res 1
0009                  00340 ball_dx res 1
000A                  00341 ball_dy res 1
000B                  00342 ball_speed res 1
000C                  00343 score res 2 ; score stored in Binary Coded Decimal
000E                  00344 ball_timer res 1 
                      00345  
                      00346 ;; code 
                      00347 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00348     GOTO    START                   ; go to beginning of program
0001   0001           00349     reset
0002   0001           00350     reset
0003   0001           00351     reset
                      00352 
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00354 ; interrupt service routine triggered by PWM3 period rollover
                      00355 ISR CODE 0x0004
0004                  00356 isr
0004   1A80           00357     btfsc flags, F_SYNC
0005   2???           00358     goto task_switch
                      00359  ; chroma sync
                      00360     tdelay 30
  000A                    M     variable q=(30)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00361     banksel TRISA
000A   108C           00362     bcf TRISA,CHROMA
                      00363     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00364     bsf TRISA,CHROMA
                      00365     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00366 task_switch ; horizontal scan line used as round robin task scheduler   
0012   018A           00367     clrf PCLATH
0013   08??           00368     movfw task
0014   0782           00369     addwf PCL
0015   2???           00370     goto pre_vsync ;task 0, vertical pre-equalization pulses
0016   2???           00371     goto vsync ;task 1, vertical sync pulses
0017   2???           00372     goto post_vsync ;task 2, vertical post-equalization pulses
0018   2???           00373     goto vsync_end ;task 3, return to normal video line
0019   2???           00374     goto user_input ;task 4,  read button and paddle
001A   2???           00375     goto sound ;task 5, check sound timer expiration
001B   2???           00376     goto move_ball ;task 6, move recking ball.
001C   2???           00377     goto collision ; task 7, check for collision with brick wall and paddle
001D   2???           00378     goto video_first ; task 8, wait FIRST_VIDEO line.
001E   2???           00379     goto draw_score ;task 9,  draw score en ball count
001F   2???           00380     goto draw_top_wall ;task 10,  draw top wall
0020   2???           00381     goto draw_void ;task 11, draw play space
0021   2???           00382     goto draw_row1 ;task 12, draw top bricks row
0022   2???           00383     goto draw_row2 ;task 13, draw second bricks row
0023   2???           00384     goto draw_row3 ;task 14,  draw third bricks row
0024   2???           00385     goto draw_row4 ;task 15,  draw fourth bricks row
0025   2???           00386     goto draw_row5 ;task 16, draw fifth bricks row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0026   2???           00387     goto draw_empty;task 17, draw empty space down to bottom
0027   2???           00388     goto draw_paddle ;task 18, draw paddle
0028   2???           00389     goto wait_field_end ;task 19, idle to end of video field
0029   0001           00390     reset ; error trap, task out of range
002A                  00391 isr_exit  
                      00392     porch_off
002A   0024               M     banksel WPUA
002B   120C               M     bcf WPUA,VIDEO_OUT
002C   003B           00393     banksel PWM3INTF
002D   103D           00394     bcf PWM3INTF,PRIF
002E   0009           00395     retfie
                      00396 
                      00397 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00398 ;;  all tasks routine are here            ;;
                      00399 ;;  each must be terminate by leave macro ;;    
                      00400 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00401     
                      00402 ; task 0, vertical synchronization pre equalization
002F                  00403 pre_vsync
002F   08??           00404     movfw slice
0030   1903           00405     skpnz
0031   2???           00406     goto set_presync
                      00407     next_task 6
0032   0A??               M     incf slice
0033   3006               M     movlw 6
0034   02??               M     subwf slice,W
0035   1D03               M     skpz
                          M     leave
0036   2???               M     goto isr_exit
0037   01??               M     clrf slice
0038   0A??               M     incf task
0039   3006               M     movlw 6
003A   07??               M     addwf lcount
                          M     leave
003B   2???               M     goto isr_exit
003C                  00408 set_presync    
003C   003B           00409     banksel PWM3DC
003D   3041           00410     movlw HEQUAL
003E   00B3           00411     movwf PWM3DCL
003F   01B4           00412     clrf PWM3DCH
0040   3003           00413     movlw high HALF_LINE
0041   00B6           00414     movwf PWM3PRH
0042   308D           00415     movlw low HALF_LINE
0043   00B5           00416     movwf PWM3PRL
0044   17BF           00417     bsf PWM3LDCON,7
0045   0A??           00418     incf slice
                      00419     leave
0046   2???               M     goto isr_exit
                      00420     
                      00421 ; task 1, vertical synchronization pulses
0047                  00422 vsync 
0047   08??           00423     movfw slice
0048   1903           00424     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0049   2???           00425     goto set_vsync
                      00426     next_task 6
004A   0A??               M     incf slice
004B   3006               M     movlw 6
004C   02??               M     subwf slice,W
004D   1D03               M     skpz
                          M     leave
004E   2???               M     goto isr_exit
004F   01??               M     clrf slice
0050   0A??               M     incf task
0051   3006               M     movlw 6
0052   07??               M     addwf lcount
                          M     leave
0053   2???               M     goto isr_exit
0054                  00427 set_vsync
0054   003B           00428     banksel PWM3DC
0055   3008           00429     movlw low VSYNC_PULSE
0056   00B3           00430     movwf PWM3DCL
0057   3003           00431     movlw high VSYNC_PULSE
0058   00B4           00432     movwf PWM3DCH
0059   17BF           00433     bsf PWM3LDCON,7
005A   0A??           00434     incf slice
                      00435     leave
005B   2???               M     goto isr_exit
                      00436     
                      00437 ; task 2, vertical synchronisation post equalization pulses
005C                  00438 post_vsync
005C   08??           00439     movfw slice
005D   1903           00440     skpnz
005E   2???           00441     goto set_presync
005F   3006           00442     movlw 6
0060   02??           00443     subwf slice,W
0061   1903           00444     skpnz
0062   2???           00445     goto post_last
0063   0A??           00446     incf slice
                      00447     leave
0064   2???               M     goto isr_exit
0065                  00448 post_last    
0065   0A??           00449     incf task
0066   01??           00450     clrf slice
0067   1C80           00451     btfss flags, F_EVEN
                      00452     leave
0068   2???               M     goto isr_exit
                      00453     
                      00454 ; task 3, vertical synchronization completed, return to normal line
0069                  00455 vsync_end
0069   1280           00456     bcf flags, F_SYNC
006A   003B           00457     banksel PWM3DC
006B   3086           00458     movlw HSYNC
006C   00B3           00459     movwf PWM3DCL
006D   01B4           00460     clrf PWM3DCH
006E   3007           00461     movlw high HPERIOD
006F   00B6           00462     movwf PWM3PRH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   301B           00463     movlw low HPERIOD
0071   00B5           00464     movwf PWM3PRL
0072   17BF           00465     bsf PWM3LDCON,7
0073   0A??           00466     incf task
0074   3009           00467     movlw 9
0075   00??           00468     movwf lcount
                      00469     leave
0076   2???               M     goto isr_exit
                      00470 
                      00471 ; constants used in video display
                      00472 ; values are in Tcy for x dimension.
                      00473 ; values are in scan lines for y dimension.    
  0000001E            00474 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00475 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00476 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00477 COURT_WIDTH equ 248 ; Tcy
  00000008            00478 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00479 BORDER_WIDTH equ 4  ; Tcy
  00000020            00480 PADDLE_WIDTH equ 32 ; Tcy
  0000004A            00481 PADDLE_LIMIT equ 74 ; Tcy
  00000000            00482 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00483 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00484 BALL_TOP_BOUND equ 58  ; scan lines
  000000F2            00485 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE-BRICK_HEIGHT ;
  000000F2            00486 PADDLE_Y equ LAST_VIDEO_LINE-BRICK_HEIGHT ; 
  0000004A            00487 ROW1_Y equ 74
  00000052            00488 ROW2_Y equ 82
  0000005A            00489 ROW3_Y equ 90
  00000062            00490 ROW4_Y equ 98
  0000006A            00491 ROW5_Y equ 106
                      00492  
                      00493 ;task 4, read button and paddle position
0077                  00494 user_input
0077   0A??           00495     incf task
0078   0A??           00496     incf lcount
0079   1900           00497     btfsc flags, F_START
007A   2???           00498     goto read_paddle
                      00499 ; read start button
007B   0022           00500     banksel LATA
007C   1D8C           00501     btfss LATA,START_BTN
007D   1500           00502     bsf flags, F_START
                      00503     leave
007E   2???               M     goto isr_exit
007F                  00504 read_paddle
007F   0021           00505     banksel TRISA
0080   140C           00506     bsf TRISA, PADDLE
0081   0021           00507     banksel ADCON0
0082   3003           00508     movlw 3
0083   009D           00509     movwf ADCON0
0084   189D           00510     btfsc ADCON0,NOT_DONE
0085   2???           00511     goto $-1
0086   101D           00512     bcf ADCON0,ADON
0087   081C           00513     movfw ADRESH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0088   00??           00514     movwf paddle_pos
0089   304A           00515     movlw PADDLE_LIMIT
008A   02??           00516     subwf paddle_pos,W
008B   1C03           00517     skpc
008C   3???           00518     bra $+3
008D   304A           00519     movlw PADDLE_LIMIT
008E   00??           00520     movwf paddle_pos
008F   0021           00521     banksel TRISA
0090   100C           00522     bcf TRISA, AUDIO
                      00523     leave
0091   2???               M     goto isr_exit
                      00524 
                      00525 ; task 5,  sound timer
0092                  00526 sound
0092   0A??           00527     incf task
0093   0A??           00528     incf lcount
0094   1E00           00529     btfss flags, F_SOUND
                      00530     leave
0095   2???               M     goto isr_exit
0096   002?           00531     banksel sound_timer
0097   0B??           00532     decfsz sound_timer
                      00533     leave
0098   2???               M     goto isr_exit
0099   1200           00534     bcf flags, F_SOUND
009A   003B           00535     banksel PWM2CON
009B   132B           00536     bcf PWM2CON,OE
009C   13AB           00537     bcf PWM2CON,EN
                      00538     leave
009D   2???               M     goto isr_exit
                      00539 
                      00540    
                      00541 ; task 6, move recking ball.   
009E                  00542 move_ball
009E   0B??           00543     decfsz ball_timer
009F   3???           00544     bra move_ball_exit
00A0   08??           00545     movfw ball_speed
00A1   00??           00546     movwf ball_timer
00A2   08??           00547     movfw ball_dx
00A3   07??           00548     addwf ball_x
00A4   1D03           00549     skpz
00A5   3???           00550     bra right_bound
00A6   09??           00551     comf ball_dx
00A7   3???           00552     bra move_y
00A8                  00553 right_bound    
00A8   08??           00554     movfw ball_x
00A9   3C52           00555     sublw BALL_RIGHT_BOUND
00AA   1803           00556     skpnc
00AB   3???           00557     bra move_y
00AC   03??           00558     decf ball_x
00AD   09??           00559     comf ball_dx
00AE                  00560 move_y
00AE   08??           00561     movfw ball_dy
00AF   07??           00562     addwf ball_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B0   303A           00563     movlw BALL_TOP_BOUND
00B1   02??           00564     subwf ball_y,W
00B2   1803           00565     skpnc
00B3   3???           00566     bra bottom_bound
00B4   09??           00567     comf ball_dy
00B5   0A??           00568     incf ball_dy
00B6   3???           00569     bra move_ball_exit
00B7                  00570 bottom_bound
00B7   08??           00571     movfw ball_y
00B8   3CF2           00572     sublw BALL_BOTTOM_BOUND
00B9   1803           00573     skpnc
00BA   3???           00574     bra move_ball_exit
00BB   09??           00575     comf ball_dy
00BC   0A??           00576     incf ball_dy
00BD                  00577 move_ball_exit    
00BD   0A??           00578     incf task
00BE   0A??           00579     incf lcount
                      00580     leave
00BF   2???               M     goto isr_exit
                      00581 
00C0                  00582 collision
00C0   002?           00583     banksel row1
                      00584 ; pre-compute x column (brick bit mask)    
                      00585 ; column = 7-(3*ball_x/32)
00C1   35??           00586     lslf ball_x,W
00C2   07??           00587     addwf ball_x,W
00C3   3689           00588     lsrf WREG
00C4   0E89           00589     swapf WREG
00C5   390F           00590     andlw 15
00C6   3C07           00591     sublw 7
                      00592 ; create mask    
00C7   00??           00593     movwf temp
00C8   3001           00594     movlw 1
                      00595     pushw
00C9   0019               M     movwi --SP
00CA   08??           00596     movfw temp
00CB   1903           00597     skpnz
00CC   3???           00598     bra $+4
00CD   3580           00599     lslf T
00CE   0B89           00600     decfsz WREG
00CF   3???           00601     bra $-2
                      00602 ; ball lost?
                      00603 ;    movlw BALL_BOTTOM_BOUND
                      00604 ;    subwf ball_y
                      00605 ;    skpz
                      00606 ;    bra row1_coll
                      00607 ;    decfsz ball_count
                      00608 ;    bra $+3
                      00609 ;    bsf flags, F_OVER ; game over
                      00610 ;    bcf flags, F_START
                      00611 ;    
                      00612 ;    bcf flags, F_PAUSE ; pause game
                      00613     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00614 ; row1 collision?    
00D0                  00615 row1_coll    
00D0   3043           00616     movlw ROW1_Y-BRICK_HEIGHT+1
                      00617     pushw
00D1   0019               M     movwi --SP
00D2   3052           00618     movlw ROW1_Y+BRICK_HEIGHT
                      00619     pushw
00D3   0019               M     movwi --SP
00D4   08??           00620     movfw ball_y
00D5   2???           00621     call between
00D6   1C03           00622     skpc
00D7   3???           00623     bra row2_coll
                      00624 ; ball inside row1 bounds
00D8   0800           00625     movfw T
00D9   05??           00626     andwf row1, W
00DA   1903           00627     skpnz
00DB   3???           00628     bra collision_exit
00DC   0900           00629     comf T,W
00DD   05??           00630     andwf row1
00DE   3009           00631     movlw 9
00DF   2???           00632     call inc_score
00E0   3???           00633     bra bounce_y
                      00634 ; row2 collision?    
00E1                  00635 row2_coll
00E1   304B           00636     movlw ROW2_Y-BRICK_HEIGHT+1
                      00637     pushw
00E2   0019               M     movwi --SP
00E3   305A           00638     movlw ROW2_Y+BRICK_HEIGHT
                      00639     pushw
00E4   0019               M     movwi --SP
00E5   08??           00640     movfw ball_y
00E6   2???           00641     call between
00E7   1C03           00642     skpc
00E8   3???           00643     bra row3_coll
00E9   0800           00644     movfw T
00EA   05??           00645     andwf row2, W
00EB   1903           00646     skpnz
00EC   3???           00647     bra collision_exit
00ED   0900           00648     comf T,W
00EE   07??           00649     addwf row2
00EF   3006           00650     movlw 6
00F0   2???           00651     call inc_score
00F1   3???           00652     bra bounce_y
                      00653 ; row3 collision?    
00F2                  00654 row3_coll
00F2   3053           00655     movlw ROW3_Y-BRICK_HEIGHT+1
                      00656     pushw
00F3   0019               M     movwi --SP
00F4   3062           00657     movlw ROW3_Y+BRICK_HEIGHT
                      00658     pushw
00F5   0019               M     movwi --SP
00F6   08??           00659     movfw ball_y
00F7   2???           00660     call between
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F8   1C03           00661     skpc
00F9   3???           00662     bra row4_coll
00FA   0800           00663     movfw T
00FB   05??           00664     andwf row3,W
00FC   1903           00665     skpnz
00FD   3???           00666     bra collision_exit
00FE   0900           00667     comf T,W
00FF   05??           00668     andwf row3
0100   3003           00669     movlw 3
0101   2???           00670     call inc_score
0102   3???           00671     bra bounce_y
                      00672 ; row4 collision?    
0103                  00673 row4_coll
0103   305B           00674     movlw ROW4_Y-BRICK_HEIGHT+1
                      00675     pushw
0104   0019               M     movwi --SP
0105   306A           00676     movlw ROW4_Y+BRICK_HEIGHT
                      00677     pushw
0106   0019               M     movwi --SP
0107   08??           00678     movfw ball_y
0108   2???           00679     call between
0109   1C03           00680     skpc
010A   3???           00681     bra row5_coll
010B   0800           00682     movfw T
010C   05??           00683     andwf row4,W
010D   1903           00684     skpnz
010E   3???           00685     bra collision_exit
010F   0900           00686     comf T,W
0110   05??           00687     andwf row4
0111   3002           00688     movlw 2
0112   2???           00689     call inc_score
0113   3???           00690     bra bounce_y
                      00691 ; row5 collision?    
0114                  00692 row5_coll    
0114   3063           00693     movlw ROW5_Y-BRICK_HEIGHT+1
                      00694     pushw
0115   0019               M     movwi --SP
0116   3072           00695     movlw ROW5_Y+BRICK_HEIGHT
                      00696     pushw
0117   0019               M     movwi --SP
0118   08??           00697     movfw ball_y
0119   2???           00698     call between
011A   1C03           00699     skpc
011B   3???           00700     bra collision_exit
011C   0800           00701     movfw T
011D   05??           00702     andwf row5,W
011E   1903           00703     skpnz
011F   3???           00704     bra collision_exit
0120   0900           00705     comf T,W
0121   05??           00706     andwf row5
0122   3001           00707     movlw 1
0123   2???           00708     call inc_score
0124                  00709 bounce_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0124   09??           00710     comf ball_dy
0125   0A??           00711     incf ball_dy
0126                  00712 collision_exit
                      00713     popw
0126   0012               M     moviw SP++
0127   0A??           00714     incf task
0128   0A??           00715     incf lcount
                      00716     leave
0129   2???               M     goto isr_exit
                      00717 
                      00718 ; check if  lb <= x < hb
                      00719 ; input:
                      00720 ;    WREG  x
                      00721 ;    stack ( lb hb -- )     
                      00722 ; output:
                      00723 ;   Carry bit set if true    
012A                  00724 between
012A   00??           00725     movwf temp
                      00726     pickn 1
012B   3F01               M     moviw 1[SP]
012C   02??           00727     subwf temp,W
012D   1C03           00728     skpc
012E   3???           00729     bra between_exit
012F   0800           00730     movfw T
0130   02??           00731     subwf temp
0131   0803           00732     movfw STATUS
0132   3A01           00733     xorlw 1
0133   0083           00734     movwf STATUS
0134                  00735 between_exit    
                      00736     dropn 2
0134   3102               M     addfsr T,2
0135   0008           00737     return
                      00738     
                      00739 ; check if brick is there
                      00740 ;  TOS contain ball column    
0136                  00741 brick_hit
                      00742     
0136   0008           00743     return
                      00744     
                      00745 ; task 7, wait for first video line
0137                  00746 video_first
0137   0A??           00747     incf lcount
0138   301E           00748     movlw FIRST_VIDEO_LINE
0139   02??           00749     subwf lcount,W
013A   1D03           00750     skpz
                      00751     leave
013B   2???               M     goto isr_exit
013C   01??           00752     clrf slice
013D   0A??           00753     incf task
                      00754     leave
013E   2???               M     goto isr_exit
                      00755    
                      00756 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00757 ; The following tasks are responsible to render video display.
                      00758 ; Each video line must be completed by setting color to black.
                      00759 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00760     
                      00761  
                      00762 ; task 8, draw score en ball count
013F                  00763 draw_score ; lcount enter at 30 leave at 50
013F   0021           00764     banksel TRISA
0140   08??           00765     movfw slice
0141   3689           00766     lsrf WREG
0142   3689           00767     lsrf WREG
                      00768     pushw
0143   0019               M     movwi --SP
0144   300F           00769     movlw 0xf
0145   05??           00770     andwf score+1,W
0146   2???           00771     call digit_offset
0147   0700           00772     addwf T,W
0148   2???           00773     call digits
0149   00??           00774     movwf d3
014A   0E??           00775     swapf score+1,W
014B   390F           00776     andlw 0xf
014C   2???           00777     call digit_offset
014D   0700           00778     addwf T,W
014E   2???           00779     call digits
014F   00??           00780     movwf d2
0150   300F           00781     movlw 0xf
0151   05??           00782     andwf score,W
0152   2???           00783     call digit_offset
0153   0700           00784     addwf T,W
0154   2???           00785     call digits
0155   2???           00786     call digit_row
0156   08??           00787     movfw d2
0157   2???           00788     call digit_row
0158   08??           00789     movfw d3
0159   2???           00790     call digit_row
                      00791     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
015A   3014               M     movlw q
015B   0B89               M     decfsz WREG
015C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
015D   120C           00792     bcf TRISA,VIDEO_OUT
                      00793     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
015E   3001               M     movlw q
015F   0B89               M     decfsz WREG
0160   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0161   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0162   160C           00794     bsf TRISA,VIDEO_OUT
                      00795     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0163   300A               M     movlw q
0164   0B89               M     decfsz WREG
0165   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0166   08??           00796     movfw balls
0167   2???           00797     call digit_offset
0168   0700           00798     addwf T,W
0169   2???           00799     call digits
016A   2???           00800     call digit_row
016B                  00801 score_exit
                      00802     next_task 5*4
016B   0A??               M     incf slice
016C   3014               M     movlw 5*4
016D   02??               M     subwf slice,W
016E   1D03               M     skpz
                          M     leave
016F   2???               M     goto isr_exit
0170   01??               M     clrf slice
0171   0A??               M     incf task
0172   3014               M     movlw 5*4
0173   07??               M     addwf lcount
                          M     leave
0174   2???               M     goto isr_exit
                      00803 
  00000002            00804 digit_version equ 2
                      00805 ; display digit row    
0175                  00806 digit_row
                      00807  if digit_version==1
                      00808     rlf WREG
                      00809     skpnc
                      00810     bcf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00811     rlf WREG
                      00812     bra $+1
                      00813     bsf TRISA,VIDEO_OUT
                      00814     skpnc
                      00815     bcf TRISA,VIDEO_OUT
                      00816     rlf WREG
                      00817     bra $+1
                      00818     bsf TRISA,VIDEO_OUT
                      00819     skpnc
                      00820     bcf TRISA,VIDEO_OUT
                      00821     nop
                      00822     bra $+1
                      00823     bsf TRISA,VIDEO_OUT
                      00824  else
0175   0D89           00825     rlf WREG
0176   1803           00826     skpnc
0177   120C           00827     bcf TRISA,VIDEO_OUT
0178   1C03           00828     skpc
0179   160C           00829     bsf TRISA,VIDEO_OUT
017A   0D89           00830     rlf WREG
017B   1803           00831     skpnc
017C   120C           00832     bcf TRISA,VIDEO_OUT
017D   1C03           00833     skpc
017E   160C           00834     bsf TRISA,VIDEO_OUT
017F   0D89           00835     rlf WREG
0180   1803           00836     skpnc
0181   120C           00837     bcf TRISA,VIDEO_OUT
0182   1C03           00838     skpc
0183   160C           00839     bsf TRISA,VIDEO_OUT
0184   3???           00840     bra $+1
0185   3???           00841     bra $+1
0186   160C           00842     bsf TRISA,VIDEO_OUT
                      00843  endif
0187   0008           00844     return
                      00845     
                      00846 ; task 9,  draw top wall, 8 screen lines    
0188                  00847 draw_top_wall ;lcount enter at 50 leave at 58
0188   1C80           00848     btfss flags, F_EVEN
0189   3???           00849     bra top_wall_exit
018A   0021           00850     banksel TRISA
                      00851     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
  0002                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
018B   3010               M     movlw q
018C   0B89               M     decfsz WREG
018D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
018E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                      00852     white
                          M ;    banksel TRISA
018F   148C               M     bsf TRISA,CHROMA
0190   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00853     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0191   3057               M     movlw q
0192   0B89               M     decfsz WREG
0193   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00854     black
                          M ;    banksel TRISA
0194   148C               M     bsf TRISA,CHROMA
0195   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0196                  00855 top_wall_exit
                      00856     next_task BRICK_HEIGHT
0196   0A??               M     incf slice
0197   3008               M     movlw BRICK_HEIGHT
0198   02??               M     subwf slice,W
0199   1D03               M     skpz
                          M     leave
019A   2???               M     goto isr_exit
019B   01??               M     clrf slice
019C   0A??               M     incf task
019D   3008               M     movlw BRICK_HEIGHT
019E   07??               M     addwf lcount
                          M     leave
019F   2???               M     goto isr_exit
                      00857 
                      00858 ; task 10,  only on even field draw vertical side bands.    
01A0                  00859 draw_void ;enter at 58 leave at 74| 255-58
01A0   1C80           00860     btfss flags, F_EVEN
01A1   3???           00861     bra no_wall_draw
01A2   08??           00862     movfw ball_y
01A3   02??           00863     subwf lcount,W
01A4   1C03           00864     skpc
01A5   3???           00865     bra no_ball_dly
01A6   3008           00866     movlw 8
01A7   07??           00867     addwf ball_y,W
01A8   02??           00868     subwf lcount,W
01A9   1C03           00869     skpc
01AA   3???           00870     bra yes_ball
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AB   3???           00871     bra no_ball
01AC                  00872 no_ball_dly
                      00873     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
01AC   3002               M     movlw q
01AD   0B89               M     decfsz WREG
01AE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01AF                  00874 no_ball    
                      00875     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
01AF   300D               M     movlw q
01B0   0B89               M     decfsz WREG
01B1   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00876     draw_border BORDER_WIDTH
01B2   0021               M     banksel TRISA
01B3   148C               M     bsf TRISA,CHROMA
01B4   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
01B5   3001               M     movlw q
01B6   0B89               M     decfsz WREG
01B7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01B8   0000               M     nop
                          M     endif
01B9   160C               M     bsf TRISA,VIDEO_OUT
                      00877     black
                          M ;    banksel TRISA
01BA   148C               M     bsf TRISA,CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BB   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00878     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
01BC   3052               M     movlw q
01BD   0B89               M     decfsz WREG
01BE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01BF   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00879     draw_border BORDER_WIDTH
01C0   0021               M     banksel TRISA
01C1   148C               M     bsf TRISA,CHROMA
01C2   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
01C3   3001               M     movlw q
01C4   0B89               M     decfsz WREG
01C5   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01C6   0000               M     nop
                          M     endif
01C7   160C               M     bsf TRISA,VIDEO_OUT
01C8   3???           00880     bra draw_void_exit
01C9                  00881 yes_ball
01C9   0021           00882     banksel TRISA
01CA   08??           00883     movfw ball_x
01CB   1903           00884     skpnz
01CC   3???           00885     bra ball_at_left
01CD   3C52           00886     sublw BALL_RIGHT_BOUND
01CE   1903           00887     skpnz
01CF   3???           00888     bra ball_at_right
01D0                  00889 ball_in_middle    
                      00890     tdelay LEFT_MARGIN-17
  000B                    M     variable q=(LEFT_MARGIN-17)/3
  0002                    M     variable r=(LEFT_MARGIN-17)%3
                          M     if (q)
01D0   300B               M     movlw q
01D1   0B89               M     decfsz WREG
01D2   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
01D3   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01D4   120C           00891     bcf TRISA,VIDEO_OUT
                      00892     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
01D5   3001               M     movlw q
01D6   0B89               M     decfsz WREG
01D7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01D8   08??           00893     movfw ball_x
01D9   160C           00894     bsf TRISA,VIDEO_OUT
01DA   0B89           00895     decfsz WREG
01DB   3???           00896     bra $-1
01DC   120C           00897     bcf TRISA, VIDEO_OUT
                      00898     tdelay 8
  0002                    M     variable q=(8)/3
  0002                    M     variable r=(8)%3
                          M     if (q)
01DD   3002               M     movlw q
01DE   0B89               M     decfsz WREG
01DF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01E0   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01E1   160C           00899     bsf TRISA,VIDEO_OUT
01E2   08??           00900     movfw ball_x
01E3   3C52           00901     sublw BALL_RIGHT_BOUND
01E4   0B89           00902     decfsz WREG
01E5   3???           00903     bra $-1
                      00904 ;    nop
                      00905 ;    nop
01E6   120C           00906     bcf TRISA,VIDEO_OUT
                      00907     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
01E7   3001               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E8   0B89               M     decfsz WREG
01E9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01EA   0000               M     nop
                          M     endif
01EB   160C           00908     bsf TRISA,VIDEO_OUT
01EC   3???           00909     bra draw_void_exit
01ED                  00910 ball_at_left
                      00911     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
01ED   300C               M     movlw q
01EE   0B89               M     decfsz WREG
01EF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01F0   0000               M     nop
                          M     endif
01F1   120C           00912     bcf TRISA,VIDEO_OUT
                      00913     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
01F2   3004               M     movlw q
01F3   0B89               M     decfsz WREG
01F4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F5   160C           00914     bsf TRISA,VIDEO_OUT
                      00915     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
01F6   3052               M     movlw q
01F7   0B89               M     decfsz WREG
01F8   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01F9   2???               M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
01FA   0000           00916     nop
01FB   120C           00917     bcf TRISA,VIDEO_OUT
                      00918     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
01FC   3001               M     movlw q
01FD   0B89               M     decfsz WREG
01FE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01FF   0000               M     nop
                          M     endif
0200   160C           00919     bsf TRISA,VIDEO_OUT
0201   3???           00920     bra draw_void_exit
0202                  00921 ball_at_right
                      00922     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
0202   300B               M     movlw q
0203   0B89               M     decfsz WREG
0204   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0205   0000               M     nop
                          M     endif
0206   120C           00923     bcf TRISA,VIDEO_OUT
                      00924     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0207   3001               M     movlw q
0208   0B89               M     decfsz WREG
0209   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
020A   0000               M     nop
                          M     endif
020B   160C           00925     bsf TRISA,VIDEO_OUT
                      00926     tdelay COURT_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
020C   3052               M     movlw q
020D   0B89               M     decfsz WREG
020E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
020F   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0210   0000           00927     nop
0211   120C           00928     bcf TRISA,VIDEO_OUT
                      00929     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
0212   3004               M     movlw q
0213   0B89               M     decfsz WREG
0214   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0215   160C           00930     bsf TRISA,VIDEO_OUT
0216                  00931 draw_void_exit    
0216   0A??           00932     incf slice
0217   0A??           00933     incf lcount
0218   30FB           00934     movlw LAST_VIDEO_LINE+1
0219   02??           00935     subwf lcount,W
021A   1D03           00936     skpz
                      00937     leave
021B   2???               M     goto isr_exit
021C   01??           00938     clrf slice
021D   3013           00939     movlw 19
021E   00??           00940     movwf task
                      00941     leave
021F   2???               M     goto isr_exit
                      00942     ;    next_task 125*BRICK_HEIGHT
0220                  00943 no_wall_draw
                      00944     next_task 2*BRICK_HEIGHT
0220   0A??               M     incf slice
0221   3010               M     movlw 2*BRICK_HEIGHT
0222   02??               M     subwf slice,W
0223   1D03               M     skpz
                          M     leave
0224   2???               M     goto isr_exit
0225   01??               M     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0226   0A??               M     incf task
0227   3010               M     movlw 2*BRICK_HEIGHT
0228   07??               M     addwf lcount
                          M     leave
0229   2???               M     goto isr_exit
                      00945     
                      00946 ; task 11, draw top brick row
022A                  00947 draw_row1 ; lcount enter at 74 leave at 82
                      00948     chroma_ref
022A   003B               M     banksel PWM1CON
022B   121B               M     bcf PWM1CON,POL
022C   0021           00949     banksel TRISA
022D   08??           00950     movfw row1
022E   00??           00951     movwf temp
                      00952     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
022F   3010               M     movlw q
0230   0B89               M     decfsz WREG
0231   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0232   0000               M     nop
                          M     endif
                      00953 ;    draw_border BORDER_WIDTH
                      00954     draw_wall yellow
  0000                    M     local next_brick
0233   3008               M     movlw 8
                          M     pushw
0234   0019               M     movwi --SP
0235                      M next_brick    
0235   35??               M     lslf temp
                          M     draw_brick yellow
  0000                    M     local no_brick
  0000                    M     local brick_delay
0236   1C03               M     skpc
0237   3???               M     bra no_brick
                          M     yellow
                          M ;    chroma_ref
                          M ;    banksel TRISA
0238   120C               M     bcf TRISA,VIDEO_OUT
0239   108C               M     bcf TRISA,CHROMA
023A   0000               M     nop
023B   3???               M     bra brick_delay
023C                      M no_brick
                          M     black
                          M ;    banksel TRISA
023C   148C               M     bsf TRISA,CHROMA
023D   160C               M     bsf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;    goto $+1
023E   3???               M     bra brick_delay 
023F                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
023F   3007               M     movlw q
0240   0B89               M     decfsz WREG
0241   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0242   0B80               M     decfsz T
0243   3???               M     bra next_brick
                          M     dropn 1
0244   3101               M     addfsr T,1
                      00955     black
                          M ;    banksel TRISA
0245   148C               M     bsf TRISA,CHROMA
0246   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00956     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0247   3001               M     movlw q
0248   0B89               M     decfsz WREG
0249   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00957 ;    draw_border BORDER_WIDTH
                      00958     next_task BRICK_HEIGHT
024A   0A??               M     incf slice
024B   3008               M     movlw BRICK_HEIGHT
024C   02??               M     subwf slice,W
024D   1D03               M     skpz
                          M     leave
024E   2???               M     goto isr_exit
024F   01??               M     clrf slice
0250   0A??               M     incf task
0251   3008               M     movlw BRICK_HEIGHT
0252   07??               M     addwf lcount
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0253   2???               M     goto isr_exit
                      00959     
                      00960 ; task 12, draw 2nd brick row    
0254                  00961 draw_row2 ;lcount enter at 82 leave at 90
                      00962     chroma_invert
0254   003B               M     banksel PWM1CON
0255   161B               M     bsf PWM1CON,POL
0256   002?           00963     banksel row2
0257   08??           00964     movfw row2
0258   00??           00965     movwf temp
                      00966     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
0259   3010               M     movlw q
025A   0B89               M     decfsz WREG
025B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
025C   0000               M     nop
                          M     endif
                      00967 ;    draw_border BORDER_WIDTH
                      00968     draw_wall cyan
  0000                    M     local next_brick
025D   3008               M     movlw 8
                          M     pushw
025E   0019               M     movwi --SP
025F                      M next_brick    
025F   35??               M     lslf temp
                          M     draw_brick cyan
  0000                    M     local no_brick
  0000                    M     local brick_delay
0260   1C03               M     skpc
0261   3???               M     bra no_brick
                          M     cyan
                          M ;    chroma_invert
                          M ;    banksel TRISA
0262   120C               M     bcf TRISA,VIDEO_OUT
0263   108C               M     bcf TRISA,CHROMA
0264   0000               M     nop
0265   3???               M     bra brick_delay
0266                      M no_brick
                          M     black
                          M ;    banksel TRISA
0266   148C               M     bsf TRISA,CHROMA
0267   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0268   3???               M     bra brick_delay 
0269                      M brick_delay    
                          M     tdelay BRICK_WIDTH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0269   3007               M     movlw q
026A   0B89               M     decfsz WREG
026B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
026C   0B80               M     decfsz T
026D   3???               M     bra next_brick
                          M     dropn 1
026E   3101               M     addfsr T,1
                      00969     black
                          M ;    banksel TRISA
026F   148C               M     bsf TRISA,CHROMA
0270   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00970     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0271   3001               M     movlw q
0272   0B89               M     decfsz WREG
0273   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00971 ;    draw_border BORDER_WIDTH
                      00972     next_task BRICK_HEIGHT
0274   0A??               M     incf slice
0275   3008               M     movlw BRICK_HEIGHT
0276   02??               M     subwf slice,W
0277   1D03               M     skpz
                          M     leave
0278   2???               M     goto isr_exit
0279   01??               M     clrf slice
027A   0A??               M     incf task
027B   3008               M     movlw BRICK_HEIGHT
027C   07??               M     addwf lcount
                          M     leave
027D   2???               M     goto isr_exit
                      00973 
                      00974 ; task 13, draw 3rd brick row    
027E                  00975 draw_row3 ; lcount enter at 90 leave at 98
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00976 ;    btfss flags, F_EVEN
                      00977 ;    bra row3_exit
                      00978     chroma_ref
027E   003B               M     banksel PWM1CON
027F   121B               M     bcf PWM1CON,POL
0280   002?           00979     banksel row3
0281   08??           00980     movfw row3
0282   00??           00981     movwf temp
                      00982     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
0283   3010               M     movlw q
0284   0B89               M     decfsz WREG
0285   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0286   0000               M     nop
                          M     endif
                      00983 ;    draw_border BORDER_WIDTH
                      00984     draw_wall green
  0000                    M     local next_brick
0287   3008               M     movlw 8
                          M     pushw
0288   0019               M     movwi --SP
0289                      M next_brick    
0289   35??               M     lslf temp
                          M     draw_brick green
  0000                    M     local no_brick
  0000                    M     local brick_delay
028A   1C03               M     skpc
028B   3???               M     bra no_brick
                          M     green
                          M ;    chroma_ref
                          M ;    banksel TRISA
028C   160C               M     bsf TRISA, VIDEO_OUT
028D   108C               M     bcf TRISA,CHROMA
028E   0000               M     nop
028F   3???               M     bra brick_delay
0290                      M no_brick
                          M     black
                          M ;    banksel TRISA
0290   148C               M     bsf TRISA,CHROMA
0291   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0292   3???               M     bra brick_delay 
0293                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
0293   3007               M     movlw q
0294   0B89               M     decfsz WREG
0295   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0296   0B80               M     decfsz T
0297   3???               M     bra next_brick
                          M     dropn 1
0298   3101               M     addfsr T,1
                      00985     black
                          M ;    banksel TRISA
0299   148C               M     bsf TRISA,CHROMA
029A   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00986     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
029B   3001               M     movlw q
029C   0B89               M     decfsz WREG
029D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00987 ;    draw_border BORDER_WIDTH
029E                  00988 row3_exit    
                      00989     next_task BRICK_HEIGHT
029E   0A??               M     incf slice
029F   3008               M     movlw BRICK_HEIGHT
02A0   02??               M     subwf slice,W
02A1   1D03               M     skpz
                          M     leave
02A2   2???               M     goto isr_exit
02A3   01??               M     clrf slice
02A4   0A??               M     incf task
02A5   3008               M     movlw BRICK_HEIGHT
02A6   07??               M     addwf lcount
                          M     leave
02A7   2???               M     goto isr_exit
                      00990     
                      00991 ; task 14, draw 4th brick row    
02A8                  00992 draw_row4 ; lcount enter at 98 leave at 106
                      00993     chroma_invert
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A8   003B               M     banksel PWM1CON
02A9   161B               M     bsf PWM1CON,POL
02AA   002?           00994     banksel row4
02AB   08??           00995     movfw row4
02AC   00??           00996     movwf temp
                      00997     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
02AD   3010               M     movlw q
02AE   0B89               M     decfsz WREG
02AF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02B0   0000               M     nop
                          M     endif
                      00998 ;    draw_border BORDER_WIDTH
                      00999     draw_wall dark_blue
  0000                    M     local next_brick
02B1   3008               M     movlw 8
                          M     pushw
02B2   0019               M     movwi --SP
02B3                      M next_brick    
02B3   35??               M     lslf temp
                          M     draw_brick dark_blue
  0000                    M     local no_brick
  0000                    M     local brick_delay
02B4   1C03               M     skpc
02B5   3???               M     bra no_brick
                          M     dark_blue
                          M ;    chroma_invert
                          M ;    banksel TRISA
02B6   160C               M     bsf TRISA, VIDEO_OUT
02B7   108C               M     bcf TRISA,CHROMA
02B8   0000               M     nop
02B9   3???               M     bra brick_delay
02BA                      M no_brick
                          M     black
                          M ;    banksel TRISA
02BA   148C               M     bsf TRISA,CHROMA
02BB   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02BC   3???               M     bra brick_delay 
02BD                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02BD   3007               M     movlw q
02BE   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02C0   0B80               M     decfsz T
02C1   3???               M     bra next_brick
                          M     dropn 1
02C2   3101               M     addfsr T,1
                      01000     black
                          M ;    banksel TRISA
02C3   148C               M     bsf TRISA,CHROMA
02C4   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01001     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02C5   3001               M     movlw q
02C6   0B89               M     decfsz WREG
02C7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01002 ;    draw_border BORDER_WIDTH
                      01003     next_task BRICK_HEIGHT
02C8   0A??               M     incf slice
02C9   3008               M     movlw BRICK_HEIGHT
02CA   02??               M     subwf slice,W
02CB   1D03               M     skpz
                          M     leave
02CC   2???               M     goto isr_exit
02CD   01??               M     clrf slice
02CE   0A??               M     incf task
02CF   3008               M     movlw BRICK_HEIGHT
02D0   07??               M     addwf lcount
                          M     leave
02D1   2???               M     goto isr_exit
                      01004 
                      01005 ; task 15, draw 5th brick row    
02D2                  01006 draw_row5 ; lcount enter at 106 leave at 114
02D2   002?           01007     banksel row5
02D3   08??           01008     movfw row5
02D4   00??           01009     movwf temp
                      01010     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0002                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
02D5   3010               M     movlw q
02D6   0B89               M     decfsz WREG
02D7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
02D8   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01011 ;    draw_border BORDER_WIDTH
                      01012     draw_wall white
  0000                    M     local next_brick
02D9   3008               M     movlw 8
                          M     pushw
02DA   0019               M     movwi --SP
02DB                      M next_brick    
02DB   35??               M     lslf temp
                          M     draw_brick white
  0000                    M     local no_brick
  0000                    M     local brick_delay
02DC   1C03               M     skpc
02DD   3???               M     bra no_brick
                          M     white
                          M ;    banksel TRISA
02DE   148C               M     bsf TRISA,CHROMA
02DF   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
02E0   0000               M     nop
02E1   3???               M     bra brick_delay
02E2                      M no_brick
                          M     black
                          M ;    banksel TRISA
02E2   148C               M     bsf TRISA,CHROMA
02E3   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02E4   3???               M     bra brick_delay 
02E5                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02E5   3007               M     movlw q
02E6   0B89               M     decfsz WREG
02E7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
02E8   0B80               M     decfsz T
02E9   3???               M     bra next_brick
                          M     dropn 1
02EA   3101               M     addfsr T,1
                      01013     black
                          M ;    banksel TRISA
02EB   148C               M     bsf TRISA,CHROMA
02EC   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01014     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02ED   3001               M     movlw q
02EE   0B89               M     decfsz WREG
02EF   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01015 ;    draw_border BORDER_WIDTH
                      01016     black
                          M ;    banksel TRISA
02F0   148C               M     bsf TRISA,CHROMA
02F1   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01017     next_task BRICK_HEIGHT
02F2   0A??               M     incf slice
02F3   3008               M     movlw BRICK_HEIGHT
02F4   02??               M     subwf slice,W
02F5   1D03               M     skpz
                          M     leave
02F6   2???               M     goto isr_exit
02F7   01??               M     clrf slice
02F8   0A??               M     incf task
02F9   3008               M     movlw BRICK_HEIGHT
02FA   07??               M     addwf lcount
                          M     leave
02FB   2???               M     goto isr_exit
                      01018 
                      01019 ; task 16,draw all rows between paddle and lower brick row    
02FC                  01020 draw_empty ; lcount enter at 114 leave at LAST_VIDEO-112-BRICK_HEIGHT 
                      01021     tdelay LEFT_MARGIN
  0011                    M     variable q=(LEFT_MARGIN)/3
  0001                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
02FC   3011               M     movlw q
02FD   0B89               M     decfsz WREG
02FE   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02FF   0000               M     nop
                          M     endif
                      01022 ;    draw_border BORDER_WIDTH
                      01023     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
0300   306A               M     movlw q
0301   0B89               M     decfsz WREG
0302   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0303   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01024 ;    draw_border BORDER_WIDTH
                      01025     black
                          M ;    banksel TRISA
0304   148C               M     bsf TRISA,CHROMA
0305   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01026     next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
0306   0A??               M     incf slice
0307   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
0308   02??               M     subwf slice,W
0309   1D03               M     skpz
                          M     leave
030A   2???               M     goto isr_exit
030B   01??               M     clrf slice
030C   0A??               M     incf task
030D   3080               M     movlw LAST_VIDEO_LINE-114-BRICK_HEIGHT
030E   07??               M     addwf lcount
                          M     leave
030F   2???               M     goto isr_exit
                      01027 
                      01028     
                      01029 ; task 18, draw paddle at bottom screen    
0310                  01030 draw_paddle
                      01031     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
0310   3012               M     movlw q
0311   0B89               M     decfsz WREG
0312   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0313   08??           01032     movfw paddle_pos
0314   1903           01033     skpnz
0315   3???           01034     bra $+3
0316   0B89           01035     decfsz WREG
0317   3???           01036     bra $-1
0318   0021           01037     banksel TRISA
0319   120C           01038     bcf TRISA,VIDEO_OUT
                      01039     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
031A   300A               M     movlw q
031B   0B89               M     decfsz WREG
031C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
031D   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
031E   160C           01040     bsf TRISA,VIDEO_OUT
                      01041 ;    draw_border BORDER_WIDTH
                      01042 ;    movfw paddle_pos
                      01043 ;    skpnz
                      01044 ;    bcf TRISA,VIDEO_OUT
                      01045 ;    skpnz
                      01046 ;    bra at_left+2
                      01047 ;    decfsz WREG
                      01048 ;    bra $-1
                      01049 ;at_left
                      01050 ;    nop
                      01051 ;    bcf TRISA,VIDEO_OUT
                      01052 ;    tdelay PADDLE_WIDTH
                      01053 ;    movfw paddle_pos
                      01054 ;    sublw PADDLE_LIMIT
                      01055 ;    nop
                      01056 ;    skpnz
                      01057 ;    bra $+5
                      01058 ;    nop
                      01059 ;    bsf TRISA,VIDEO_OUT
                      01060 ;    decfsz WREG
                      01061 ;    bra $-1
                      01062 ;    draw_border BORDER_WIDTH
                      01063     next_task BRICK_HEIGHT
031F   0A??               M     incf slice
0320   3008               M     movlw BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0321   02??               M     subwf slice,W
0322   1D03               M     skpz
                          M     leave
0323   2???               M     goto isr_exit
0324   01??               M     clrf slice
0325   0A??               M     incf task
0326   3008               M     movlw BRICK_HEIGHT
0327   07??               M     addwf lcount
                          M     leave
0328   2???               M     goto isr_exit
                      01064 
                      01065 ; task 19,  wait end of this field, reset task to zero    
0329                  01066 wait_field_end
0329   0A??           01067     incf lcount
032A   1903           01068     skpnz
032B   1400           01069     bsf flags, F_HI_LINE
032C   1800           01070     btfsc flags, F_HI_LINE
032D   2???           01071     goto hi_line
                      01072     leave
032E   2???               M     goto isr_exit
032F                  01073 hi_line
032F   1880           01074     btfsc flags,F_EVEN
0330   2???           01075     goto even_field
0331   3005           01076     movlw 5
0332   02??           01077     subwf lcount,W
0333   1D03           01078     skpz
                      01079     leave
0334   2???               M     goto isr_exit
0335   2???           01080     goto field_end
0336                  01081 even_field
0336   3006           01082     movlw 6
0337   02??           01083     subwf lcount,W
0338   1D03           01084     skpz
                      01085     leave
0339   2???               M     goto isr_exit
                      01086 ; even field last line is half_line    
                      01087 ; set PWM3 for line 263 half-line
033A   003B           01088     banksel PWM3DC
033B   3003           01089     movlw high HALF_LINE
033C   00B6           01090     movwf PWM3PRH
033D   308D           01091     movlw low HALF_LINE
033E   00B5           01092     movwf PWM3PRL
033F   17BF           01093     bsf PWM3LDCON,7
0340                  01094 field_end
0340   01??           01095     clrf task
0341   01??           01096     clrf slice
0342   01??           01097     clrf lcount
0343   1000           01098     bcf flags, F_HI_LINE
0344   1680           01099     bsf flags, F_SYNC
                      01100 ; toggle odd/even field flag    
0345   3002           01101     movlw 1<<F_EVEN
0346   06??           01102     xorwf flags
                      01103     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0347   2???               M     goto isr_exit
                      01104 
                      01105 ; helper functions
                      01106 
                      01107 ; add 2 BCD digits
                      01108 ; parameters:
                      01109 ;   WREG -> first digit
                      01110 ;   T -> second digit
                      01111 ;   C -> carry from previous digits add    
                      01112 ; output:
                      01113 ;   T -> sum
                      01114 ;   C -> overflow
0348                  01115 bcd_add
0348   3D80           01116     addwfc T    
0349   300A           01117     movlw 10
034A   0200           01118     subwf T,W
034B   1C03           01119     skpc
034C   0008           01120     return
034D   3006           01121     movlw 6
034E   0780           01122     addwf T
034F   300F           01123     movlw 15
0350   0580           01124     andwf T
0351   1403           01125     bsf STATUS,C
0352   0008           01126     return
                      01127     
                      01128 ; increment user score
                      01129 ; This is a BCD addition where a single digit is added to score.   
                      01130 ; score is stored as big indian
                      01131 ; argument: 
                      01132 ;   WREG ->  bdc digit to add to score variable
0353                  01133 inc_score
                      01134     pushw
0353   0019               M     movwi --SP
0354   1003           01135     clrc
0355   300F           01136     movlw 15
0356   05??           01137     andwf score+1,W
0357   2???           01138     call bcd_add
0358   0103           01139     clrw 
                      01140     pushw
0359   0019               M     movwi --SP
035A   0E??           01141     swapf score+1,W
035B   390F           01142     andlw 15
035C   2???           01143     call bcd_add
035D   1803           01144     skpnc
035E   0A??           01145     incf score
                      01146     popw
035F   0012               M     moviw SP++
0360   0E89           01147     swapf WREG
0361   0400           01148     iorwf T,W
0362   00??           01149     movwf score+1
                      01150     dropn 1
0363   3101               M     addfsr T,1
0364   0008           01151     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01152     
                      01153 ;***********************************
                      01154 ; digit_offset, compute digit position in 'digits' table
                      01155 ;   position = digit * 5
                      01156 ; 
                      01157 ; input: WREG -> digit value {0..9}
                      01158 ;         
                      01159 ; output: WREG -> displacement in table
                      01160 ;***********************************
0365                  01161 digit_offset    
                      01162     pushw 
0365   0019               M     movwi --SP
0366   3589           01163     lslf WREG
0367   3589           01164     lslf WREG
0368   0780           01165     addwf T
                      01166     popw
0369   0012               M     moviw SP++
036A   0008           01167     return
                      01168     
036B                  01169 init_brick_wall
036B   30??           01170     movlw high row1
036C   0087           01171     movwf FSR1H
036D   30??           01172     movlw low row1
036E   0086           01173     movwf FSR1L
036F   3005           01174     movlw 5
0370   00??           01175     movwf temp
0371   30FF           01176     movlw 0xff
0372                  01177 ibw    
0372   001E           01178     movwi FSR1++
0373   0B??           01179     decfsz temp
0374   3???           01180     bra ibw
0375   0008           01181     return
                      01182 
                      01183 ; delay by TIMER0
                      01184 ; parameter
                      01185 ;   WREG -> 2*Tcy+7cy    
0376                  01186 t0delay 
0376   0989           01187     comf WREG
0377   0095           01188     movwf TMR0
0378   110B           01189     bcf INTCON,T0IF
0379   1D0B           01190     btfss INTCON,T0IF
037A   3???           01191     bra $-1
037B   0008           01192     return
                      01193     
                      01194 MAIN_PROG CODE                      ; let linker place main program
                      01195 
0000                  01196 START
                      01197 ; clear common RAM
0000   0185           01198     clrf FSR0H
0001   3070           01199     movlw 0x70
0002   0084           01200     movwf FSR0L
0003   0103           01201     clrw
0004   001A           01202     movwi FSR0++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005   1F84           01203     btfss FSR0L,7
0006   3???           01204     bra $-2
                      01205 ; clear banked RAM
0007   0184           01206     clrf FSR0L
0008   3020           01207     movlw 0x20
0009   0085           01208     movwf FSR0H
000A   0103           01209     clrw 
000B   001A           01210     movwi FSR0++
000C   1C05           01211     btfss FSR0H,0
000D   3???           01212     bra $-2
000E   2???           01213     call init_brick_wall
                      01214 ;   setup arguments stack pointer
000F   30??           01215     movlw high (stack+STACK_SIZE)
0010   0085           01216     movwf FSR0H
0011   30??           01217     movlw low (stack+STACK_SIZE)
0012   0084           01218     movwf FSR0L
                      01219 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01220 ; TIMER0 prescale 1:2
0013   3050           01221     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0014   0095           01222     movwf OPTION_REG
                      01223 ; disable analog inputs, except AN0
0015   0023           01224     banksel ANSELA
0016   018C           01225     clrf ANSELA
                      01226 ; paddle potentiometer input     
0017   140C           01227     bsf ANSELA,PADDLE
0018   0021           01228     banksel ADCON1
0019   3020           01229     movlw (2<<ADCS0)
001A   009E           01230     movwf ADCON1
                      01231 ; pin setup
001B   0024           01232     banksel WPUA
001C   018C           01233     clrf WPUA
001D   158C           01234     bsf WPUA,START_BTN
001E   0021           01235     banksel TRISA
001F   110C           01236     bcf TRISA,SYNC_OUT
0020   0022           01237     banksel LATA
0021   160C           01238     bsf LATA, VIDEO_OUT
                      01239 ; PWM1 chroma signal on RA1
0022   003B           01240     banksel PWM1CON
0023   019F           01241     clrf PWM1LDCON
0024   0191           01242     clrf PWM1PHL
0025   0192           01243     clrf PWM1PHH
0026   0197           01244     clrf PWM1OFL
0027   0198           01245     clrf PWM1OFH
0028   0196           01246     clrf PWM1PRH
0029   3007           01247     movlw 7
002A   0095           01248     movwf PWM1PRL
002B   3004           01249     movlw 4
002C   0093           01250     movwf PWM1DCL
002D   0194           01251     clrf PWM1DCH
002E   179F           01252     bsf PWM1LDCON,7
002F   30C0           01253     movlw (1<<EN)|(1<<OE)
0030   009B           01254     movwf PWM1CON
                      01255 ; PWM3 set to horizontal period 15734 hertz, output on RA2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0031   003B           01256     banksel PWM3CON
0032   01BF           01257     clrf PWM3LDCON
0033   01B1           01258     clrf PWM3PHL
0034   01B2           01259     clrf PWM3PHH
0035   01B7           01260     clrf PWM3OFL
0036   01B8           01261     clrf PWM3OFH
0037   301B           01262     movlw low HPERIOD
0038   00B5           01263     movwf PWM3PRL
0039   3007           01264     movlw high HPERIOD
003A   00B6           01265     movwf PWM3PRH
003B   3086           01266     movlw HSYNC
003C   00B3           01267     movwf PWM3DCL
003D   01B4           01268     clrf PWM3DCH
003E   30D0           01269     movlw (1<<EN)|(1<<OE)|(1<<POL)
003F   00BB           01270     movwf PWM3CON
0040   17BF           01271     bsf PWM3LDCON,7
0041   143C           01272     bsf PWM3INTE,PRIE
0042   0020           01273     banksel PIR3
0043   1313           01274     bcf PIR3,PWM3IF
0044   0021           01275     banksel PIE3
0045   1713           01276     bsf PIE3,PWM3IE
0046   170B           01277     bsf INTCON,PEIE
0047   178B           01278     bsf INTCON,GIE
0048   1480           01279     bsf flags, F_EVEN
0049   1680           01280     bsf flags, F_SYNC
                      01281 ; test code
004A   002?           01282     banksel balls
004B   3003           01283     movlw 3
004C   00??           01284     movwf balls
004D   3052           01285     movlw BALL_RIGHT_BOUND
004E   00??           01286     movwf ball_x
                      01287 ;    clrf ball_x
004F   03??           01288     decf ball_x
0050   30CA           01289     movlw BALL_BOTTOM_BOUND-40
0051   00??           01290     movwf ball_y
0052   0A??           01291     incf ball_dx
0053   3004           01292     movlw 4
0054   00??           01293     movwf ball_dy
0055   3002           01294     movlw 2
0056   00??           01295     movwf ball_speed
                      01296 ; end test code    
                      01297 ; all processing done in ISR    
0057   2???           01298     goto $
                      01299 
                      01300 ; digits character table
0058                  01301 digits
0058   000B           01302     brw
0059   3440 34A0 34A0 01303     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
005E   3440 34C0 3440 01304     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0063   34E0 3420 34C0 01305     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0068   34E0 3420 34C0 01306     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
006D   34A0 34A0 34E0 01307     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0072   34E0 3480 34E0 01308     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0077   34C0 3480 34E0 01309     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
007C   34E0 3420 3420 01310     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0081   34E0 34A0 34E0 01311     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0086   34E0 34A0 34E0 01312     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
                      01313     
                      01314     
                      01315 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01316 max_score 
                      01317  
3FA7 3EFF             01318     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F2
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BAUDCON                           0000019F
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000015
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000003
F_PAUSE                           00000006
F_SOUND                           00000004
F_START                           00000002
F_SYNC                            00000005
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F2
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_0085                         00000085
_ISR_008C                         0000008C
_ISR_00CC                         000000CC
_ISR_00CF                         000000CF
_ISR_015C                         0000015C
_ISR_0160                         00000160
_ISR_0161                         00000161
_ISR_0165                         00000165
_ISR_0184                         00000184
_ISR_0185                         00000185
_ISR_018D                         0000018D
_ISR_018E                         0000018E
_ISR_0193                         00000193
_ISR_01AE                         000001AE
_ISR_01B1                         000001B1
_ISR_01B7                         000001B7
_ISR_01BE                         000001BE
_ISR_01BF                         000001BF
_ISR_01C5                         000001C5
_ISR_01D2                         000001D2
_ISR_01D3                         000001D3
_ISR_01D7                         000001D7
_ISR_01DB                         000001DB
_ISR_01DF                         000001DF
_ISR_01E0                         000001E0
_ISR_01E5                         000001E5
_ISR_01E9                         000001E9
_ISR_01EF                         000001EF
_ISR_01F4                         000001F4
_ISR_01F8                         000001F8
_ISR_01F9                         000001F9
_ISR_01FE                         000001FE
_ISR_0204                         00000204
_ISR_0209                         00000209
_ISR_020E                         0000020E
_ISR_020F                         0000020F
_ISR_0214                         00000214
_ISR_0231                         00000231
_ISR_0241                         00000241
_ISR_0249                         00000249
_ISR_025B                         0000025B
_ISR_026B                         0000026B
_ISR_0273                         00000273
_ISR_0285                         00000285
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_0295                         00000295
_ISR_029D                         0000029D
_ISR_02AF                         000002AF
_ISR_02BF                         000002BF
_ISR_02C7                         000002C7
_ISR_02D7                         000002D7
_ISR_02D8                         000002D8
_ISR_02E7                         000002E7
_ISR_02EF                         000002EF
_ISR_02FE                         000002FE
_ISR_0302                         00000302
_ISR_0303                         00000303
_ISR_0312                         00000312
_ISR_0315                         00000315
_ISR_0317                         00000317
_ISR_031C                         0000031C
_ISR_031D                         0000031D
_ISR_037A                         0000037A
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_0057                   00000057
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      000001ED
ball_at_right                     00000202
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    000001D0
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000A8
bcd_add                           00000348
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

between                           0000012A
between_exit                      00000134
black                             
bottom_bound                      000000B7
bounce_y                          00000124
brick_hit                         00000136
case                              
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         000000C0
collision_exit                    00000126
cyan                              
d1                                000000A5
d2                                000000A6
d3                                000000A7
dark_blue                         
digit_offset                      00000365
digit_row                         00000175
digit_version                     00000002
digits                            00000058
draw_border                       
draw_brick                        
draw_empty                        000002FC
draw_paddle                       00000310
draw_row1                         0000022A
draw_row2                         00000254
draw_row3                         0000027E
draw_row4                         000002A8
draw_row5                         000002D2
draw_score                        0000013F
draw_top_wall                     00000188
draw_void                         000001A0
draw_void_exit                    00000216
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        00000336
field_end                         00000340
flags                             00000000
green                             
hi_line                           0000032F
ibw                               00000372
inc_score                         00000353
init_brick_wall                   0000036B
isr                               00000004
isr_exit                          0000002A
lcount                            00000001
leave                             
max_score                         00000780
move_ball                         0000009E
move_ball_exit                    000000BD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

move_y                            000000AE
next_task                         
no_ball                           000001AF
no_ball_dly                       000001AC
no_wall_draw                      00000220
paddle_pos                        00000006
pickn                             
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000065
post_vsync                        0000005C
pre_vsync                         0000002F
pushw                             
q                                 0000000A
r                                 00000002
read_paddle                       0000007F
right_bound                       000000A8
row1                              000000A0
row1_coll                         000000D0
row2                              000000A1
row2_coll                         000000E1
row3                              000000A2
row3_coll                         000000F2
row3_exit                         0000029E
row4                              000000A3
row4_coll                         00000103
row5                              000000A4
row5_coll                         00000114
score                             0000000C
score_exit                        0000016B
set_presync                       0000003C
set_vsync                         00000054
slice                             00000002
sound                             00000092
sound_timer                       000000A9
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000376
task                              00000003
task_switch                       00000012
tdelay                            
temp                              00000004
top_wall_exit                     00000196
user_input                        00000077
video_first                       00000137
vsync                             00000047
vsync_end                         00000069
wait_field_end                    00000329
white                             
yellow                            
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-8-2019  22:01:49         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

yes_ball                          000001C9

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   289 suppressed

