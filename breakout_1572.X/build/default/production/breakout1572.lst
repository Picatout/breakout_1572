MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 
                      00003     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00004     
8007   3FA7           00005     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   3EFF           00006     __config _CONFIG2, _PLLEN_OFF
                      00007     
                      00008     radix dec
                      00009 
                      00010 ; constants
  00000800            00011 PROG_SIZE equ 2048  ; program words
  00000080            00012 EEPROM_SIZE equ 128 ; high endurance flash words
                      00013  
  01B4F360            00014 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00015 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
                      00016 
                      00017  
                      00018 ; NTSC signal 
  00003D76            00019 Fhorz equ 15734 ; horizontal frequency
  0000071B            00020 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00021 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00022 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00023 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00024 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00025 ; boolean flags 
  00000000            00026 F_HI_LINE equ 0 ; lcount > 255
  00000001            00027 F_EVEN equ 1    ; even field
  00000002            00028 F_START equ 2   ; game started 
  00000003            00029 F_OVER equ 3    ; game over
  00000004            00030 F_SOUND equ 4   ; sound enabled 
  00000005            00031 F_SYNC equ 5    ; vertical synchronization phase
                      00032  
                      00033 ;pins assignment
  00000000            00034 AUDIO EQU RA0
  00000000            00035 PADDLE equ RA0
  00000001            00036 CHROMA equ RA1
  00000002            00037 SYNC_OUT equ RA2
  00000003            00038 START_BTN equ RA3 
  00000004            00039 VIDEO_OUT equ RA4
  00000005            00040 CLKIN equ RA5
                      00041  
                      00042 
                      00043 ;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044 ;; assembler macros ;;
                      00045 ;;;;;;;;;;;;;;;;;;;;;;
                      00046 
                      00047 ; leave task 
                      00048 leave macro
                      00049     goto isr_exit
                      00050     endm
                      00051     
                      00052 ; move to next task on slice limit
                      00053 ; parameters:
                      00054 ;   s  nomber of slices used by the task    
                      00055 next_task macro s    
                      00056     incf slice
                      00057     movlw s
                      00058     subwf slice,W
                      00059     skpz
                      00060     leave
                      00061     clrf slice
                      00062     incf task
                      00063     movlw s
                      00064     addwf lcount
                      00065     leave
                      00066     endm
                      00067     
                      00068     
                      00069 ; case switch
                      00070 ; parameters:
                      00071 ;   var is control variable
                      00072 ;   n  is constant to compare to var
                      00073 ;   adr  is goto address if var==n 
                      00074 case macro var, n, adr
                      00075     movlw n
                      00076     subwf var,W
                      00077     skpnz
                      00078     goto adr
                      00079     endm
                      00080 
                      00081 ; swap variable with WREG    
                      00082 swap_var macro var
                      00083     xorwf var
                      00084     xorwf var,W
                      00085     xorwf var
                      00086     endm
                      00087     
                      00088     
                      00089 ; delay in machine cycle T
                      00090 ; parameters:
                      00091 ;   T   number of machine cycles    
                      00092 tdelay macro T
                      00093     variable q=(T)/3
                      00094     variable r=(T)%3
                      00095     if (q)
                      00096     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     decfsz WREG
                      00098     goto $-1
                      00099     endif
                      00100     if (r==2)
                      00101     goto $+1
                      00102     endif 
                      00103     if (r==1)
                      00104     nop
                      00105     endif
                      00106     endm
                      00107 
                      00108 ; enable weak pull on VIDEO_OUT
                      00109 ; to create a porch
                      00110 porch_on macro
                      00111     banksel WPUA
                      00112     bsf WPUA,VIDEO_OUT
                      00113     endm
                      00114     
                      00115 ; disable weak pull on VIDEO_OUT
                      00116 ; to remove porch
                      00117 porch_off macro
                      00118     banksel WPUA
                      00119     bcf WPUA,VIDEO_OUT
                      00120     endm
                      00121     
                      00122 ; enable chroma output
                      00123 chroma_on macro
                      00124     banksel TRISA
                      00125     bcf TRISA, CHROMA
                      00126     endm
                      00127     
                      00128 ;disable chroma output    
                      00129 chroma_off macro
                      00130     banksel TRISA
                      00131     bsf TRISA,CHROMA
                      00132     endm
                      00133     
                      00134 ; output chroma reference    
                      00135 chroma_ref macro
                      00136     banksel PWM1CON
                      00137     bcf PWM1CON,POL
                      00138     endm
                      00139     
                      00140 ; set chroma phase to 180 degree
                      00141 chroma_invert macro
                      00142     banksel PWM1CON
                      00143     bsf PWM1CON,POL
                      00144     endm
                      00145 
                      00146 ;;;;;;;;;;;;;;;;;;;;;;
                      00147 ;   colors macros
                      00148 ; each one take 5 T 
                      00149 ;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     
                      00151 ;set video output to black    
                      00152 black macro
                      00153     banksel TRISA
                      00154     bsf TRISA,CHROMA
                      00155     bsf TRISA,VIDEO_OUT
                      00156 ;    goto $+1
                      00157     endm
                      00158     
                      00159 ; set video output to white    
                      00160 white macro    
                      00161     banksel TRISA
                      00162     bsf TRISA,CHROMA
                      00163     bcf TRISA,VIDEO_OUT
                      00164 ;    goto $+1
                      00165     endm
                      00166 
                      00167 ; set video output to yellow    
                      00168 yellow macro
                      00169 ;    chroma_ref
                      00170     banksel TRISA
                      00171     bcf TRISA,VIDEO_OUT
                      00172     bcf TRISA,CHROMA
                      00173     endm
                      00174 
                      00175 ; set video output to cyan   
                      00176 cyan macro
                      00177 ;    chroma_invert
                      00178     banksel TRISA
                      00179     bcf TRISA,VIDEO_OUT
                      00180     bcf TRISA,CHROMA
                      00181     endm
                      00182     
                      00183 ; set video output to green
                      00184 green macro
                      00185 ;    chroma_ref
                      00186     banksel TRISA
                      00187     bsf TRISA, VIDEO_OUT
                      00188     bcf TRISA,CHROMA
                      00189     endm
                      00190     
                      00191 ; set video output to dark blue    
                      00192 dark_blue macro
                      00193 ;    chroma_invert
                      00194     banksel TRISA
                      00195     bsf TRISA, VIDEO_OUT
                      00196     bcf TRISA,CHROMA
                      00197     endm
                      00198 
                      00199     
                      00200 ; draw a brick
                      00201 ; use 6T+BRICK_WIDTH
                      00202 ; if carry is 1 draw in color else draw black    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001C            00203 BRICK_WIDTH equ 28   
                      00204 draw_brick macro color
                      00205     local no_brick
                      00206     local brick_delay
                      00207     skpc
                      00208     bra no_brick
                      00209     color
                      00210     bra brick_delay
                      00211 no_brick
                      00212     nop
                      00213     black
                      00214     bra brick_delay 
                      00215 brick_delay    
                      00216     tdelay BRICK_WIDTH
                      00217     endm
                      00218 
                      00219 ; draw 8 bricks wall
                      00220 ;  parameter in temp
                      00221 draw_wall macro color
                      00222     local next_brick
                      00223     movlw 8
                      00224     pushw
                      00225 next_brick    
                      00226     lslf temp
                      00227     draw_brick color
                      00228     decfsz T
                      00229     bra next_brick
                      00230     dropn 1
                      00231     endm
                      00232     
                      00233     
                      00234 ; draw left and right borders
                      00235 ; parameters:
                      00236 ;   width delay determine width
                      00237 ;   width 5T+nT    
                      00238 draw_border macro width
                      00239     banksel TRISA
                      00240     bsf TRISA,CHROMA
                      00241     bcf TRISA,VIDEO_OUT
                      00242     tdelay width
                      00243     bsf TRISA,VIDEO_OUT
                      00244     endm
                      00245     
                      00246 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00247 ;  stack manipulation macros
                      00248 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00249 STACK_SIZE equ 16 ; size of argument stack
                      00250 #define T INDF0 ; top of argument stack
                      00251 #define SP FSR0 ; use FSR0 as stack pointer 
                      00252 ; push WREG on T
                      00253 pushw  macro
                      00254     movwi --SP
                      00255     endm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256   
                      00257 ; pop WREG from T
                      00258 popw macro
                      00259     moviw SP++
                      00260     endm
                      00261     
                      00262 ; swap WREG with 
                      00263 swapw  macro
                      00264     xorwf T
                      00265     xorwf T,W
                      00266     xorwf T
                      00267     endm
                      00268 
                      00269 ; drop n elements from stack
                      00270 dropn macro n
                      00271     addfsr T,n
                      00272     endm
                      00273 
                      00274 ; copy nth element of stack to WREG
                      00275 ;  n {0..31}    
                      00276 pickn macro n
                      00277     moviw n[SP]
                      00278     endm
                      00279    
                      00280 ; copy WREG to nth element of stack
                      00281 ; n {0..31}
                      00282 pokew macro n
                      00283     movwi n[SP]
                      00284     endm
                      00285     
                      00286     
                      00287 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00288 ;;    variables
                      00289 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00290     
                      00291     udata 0x20
0020                  00292 stack res 16 ; arguments stack
0030                  00293 brick_wall res 0  ; bricks data 1 byte per brick row.
0030                  00294 row1 res 1; brick wall row1
0031                  00295 row2 res 1
0032                  00296 row3 res 1
0033                  00297 row4 res 1
0034                  00298 row5 res 1
                      00299 
                      00300 v_array   udata 0xA0
00A0                  00301 d1 res 1 ; score msd digit pixels
00A1                  00302 d2 res 1 ; score 2nd digit pixels
00A2                  00303 d3 res 1 ; score lsd digit pixels
00A3                  00304 balls res 1 ; number of recking balls available 
00A4                  00305 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00306   
                      00307     udata_shr
0000                  00308 flags  res 1 ; boolean variables
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001                  00309 lcount res 1 ; video field line counter
0002                  00310 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00311 task res 1 ; where in video phase 
0004                  00312 temp res 2 ; temporary storage
0006                  00313 paddle_pos res 1 
0007                  00314 ball_x res 1
0008                  00315 ball_y res 1
0009                  00316 ball_dx res 1
000A                  00317 ball_dy res 1
000B                  00318 ball_speed res 1
000C                  00319 score res 2 ; score stored in Binary Coded Decimal
000E                  00320 ball_timer res 1 
                      00321  
                      00322 ;; code 
                      00323 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00324     GOTO    START                   ; go to beginning of program
0001   0001           00325     reset
0002   0001           00326     reset
0003   0001           00327     reset
                      00328 
                      00329 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00330 ; interrupt service routine triggered by PWM3 period rollover
                      00331 ISR CODE 0x0004
0004                  00332 isr
0004   1A80           00333     btfsc flags, F_SYNC
0005   2???           00334     goto task_switch
                      00335  ; chroma sync
                      00336     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00337     banksel TRISA
000A   108C           00338     bcf TRISA,CHROMA
                      00339     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00340     bsf TRISA,CHROMA
                      00341     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00342 task_switch    
0012   018A           00343     clrf PCLATH
0013   08??           00344     movfw task
0014   0782           00345     addwf PCL
0015   2???           00346     goto pre_vsync ;task 0, vertical pre-equalization pulses, 6 slices
0016   2???           00347     goto vsync ;task 1, vertical sync pulses, 6 slices
0017   2???           00348     goto post_vsync ;task 2, vertical post-equalization pulses, 6 slices
0018   2???           00349     goto vsync_end ;task 3, return to normal video line, 1 slice
0019   2???           00350     goto user_input ;task 4,  read button and paddle, 1 slice
001A   2???           00351     goto sound ;task 5, check sound timer expiration, 1 slice
001B   2???           00352     goto move_ball ;task 6, move recking ball and check collision, etc, 1 slice
001C   2???           00353     goto video_first ; task 7, wait up to lcount==19
001D   2???           00354     goto draw_score ;task 8,  draw score en ball count, 6 slices
001E   2???           00355     goto draw_top_wall ;task 9,  draw top wall, 4 slices
001F   2???           00356     goto draw_void ;task 10 draw void space between top wall and top brick row, 8 slices
0020   2???           00357     goto draw_row1 ;task 11, 4 slices
0021   2???           00358     goto draw_row2 ;task 12, 4 slices
0022   2???           00359     goto draw_row3 ;task 13,  4 slices
0023   2???           00360     goto draw_row4 ;task 14,  4 slices
0024   2???           00361     goto draw_row5 ;task 15, 4 slices
0025   2???           00362     goto draw_empty;task 16, 188 slices
0026   2???           00363     goto draw_paddle ;task 17, 4 slices
0027   2???           00364     goto wait_field_end ;task 18, player used all the available recking balls, 12/13 slices
0028   0001           00365     reset ; error trap, task out of range
0029                  00366 isr_exit  
                      00367     porch_off
0029   0024               M     banksel WPUA
002A   120C               M     bcf WPUA,VIDEO_OUT
002B   003B           00368     banksel PWM3INTF
002C   103D           00369     bcf PWM3INTF,PRIF
002D   0009           00370     retfie
                      00371 
                      00372 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00373 ;;  all tasks routine are here            ;;
                      00374 ;;  each must be terminate by leave macro ;;    
                      00375 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00376     
                      00377 ; task 0, vertical synchronization pre equalization
002E                  00378 pre_vsync
002E   08??           00379     movfw slice
002F   1903           00380     skpnz
0030   2???           00381     goto set_presync
                      00382     next_task 6
0031   0A??               M     incf slice
0032   3006               M     movlw 6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   02??               M     subwf slice,W
0034   1D03               M     skpz
                          M     leave
0035   2???               M     goto isr_exit
0036   01??               M     clrf slice
0037   0A??               M     incf task
0038   3006               M     movlw 6
0039   07??               M     addwf lcount
                          M     leave
003A   2???               M     goto isr_exit
003B                  00383 set_presync    
003B   003B           00384     banksel PWM3DC
003C   3041           00385     movlw HEQUAL
003D   00B3           00386     movwf PWM3DCL
003E   01B4           00387     clrf PWM3DCH
003F   3003           00388     movlw high HALF_LINE
0040   00B6           00389     movwf PWM3PRH
0041   308D           00390     movlw low HALF_LINE
0042   00B5           00391     movwf PWM3PRL
0043   17BF           00392     bsf PWM3LDCON,7
0044   0A??           00393     incf slice
                      00394     leave
0045   2???               M     goto isr_exit
                      00395     
                      00396 ; task 1, vertical synchronization pulses
0046                  00397 vsync 
0046   08??           00398     movfw slice
0047   1903           00399     skpnz
0048   2???           00400     goto set_vsync
                      00401     next_task 6
0049   0A??               M     incf slice
004A   3006               M     movlw 6
004B   02??               M     subwf slice,W
004C   1D03               M     skpz
                          M     leave
004D   2???               M     goto isr_exit
004E   01??               M     clrf slice
004F   0A??               M     incf task
0050   3006               M     movlw 6
0051   07??               M     addwf lcount
                          M     leave
0052   2???               M     goto isr_exit
0053                  00402 set_vsync
0053   003B           00403     banksel PWM3DC
0054   3008           00404     movlw low VSYNC_PULSE
0055   00B3           00405     movwf PWM3DCL
0056   3003           00406     movlw high VSYNC_PULSE
0057   00B4           00407     movwf PWM3DCH
0058   17BF           00408     bsf PWM3LDCON,7
0059   0A??           00409     incf slice
                      00410     leave
005A   2???               M     goto isr_exit
                      00411     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00412 ; task 2, vertical synchronisation post equalization pulses
005B                  00413 post_vsync
005B   08??           00414     movfw slice
005C   1903           00415     skpnz
005D   2???           00416     goto set_presync
005E   3006           00417     movlw 6
005F   02??           00418     subwf slice,W
0060   1903           00419     skpnz
0061   2???           00420     goto post_last
0062   0A??           00421     incf slice
                      00422     leave
0063   2???               M     goto isr_exit
0064                  00423 post_last    
0064   0A??           00424     incf task
0065   01??           00425     clrf slice
0066   1C80           00426     btfss flags, F_EVEN
                      00427     leave
0067   2???               M     goto isr_exit
                      00428     
                      00429 ; task 3, vertical synchronization completed, return to normal line
0068                  00430 vsync_end
0068   1280           00431     bcf flags, F_SYNC
0069   003B           00432     banksel PWM3DC
006A   3086           00433     movlw HSYNC
006B   00B3           00434     movwf PWM3DCL
006C   01B4           00435     clrf PWM3DCH
006D   3007           00436     movlw high HPERIOD
006E   00B6           00437     movwf PWM3PRH
006F   301B           00438     movlw low HPERIOD
0070   00B5           00439     movwf PWM3PRL
0071   17BF           00440     bsf PWM3LDCON,7
0072   0A??           00441     incf task
0073   3009           00442     movlw 9
0074   00??           00443     movwf lcount
                      00444     leave
0075   2???               M     goto isr_exit
                      00445 
                      00446 ;task 4, read button and paddle position
  00000020            00447 PADDLE_WIDTH equ 32
  0000005D            00448 PADDLE_LIMIT equ 93
  00000000            00449 BALL_LEFT_BOUND equ 0
  00000064            00450 BALL_RIGHT_BOUND equ 100
  00000036            00451 BALL_TOP_BOUND equ 54
  000000E6            00452 BALL_BOTTOM_BOUND equ 230 ;(BALL_TOP_BOUND+7*BRICK_HEIGHT+118)
                      00453  
                      00454  
0076                  00455 user_input
0076   0A??           00456     incf task
0077   0A??           00457     incf lcount
0078   1900           00458     btfsc flags, F_START
0079   2???           00459     goto read_paddle
                      00460 ; read start button
007A   0022           00461     banksel LATA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007B   1D8C           00462     btfss LATA,START_BTN
007C   1500           00463     bsf flags, F_START
                      00464     leave
007D   2???               M     goto isr_exit
007E                  00465 read_paddle
007E   0021           00466     banksel TRISA
007F   140C           00467     bsf TRISA, PADDLE
0080   0021           00468     banksel ADCON0
0081   3003           00469     movlw 3
0082   009D           00470     movwf ADCON0
0083   189D           00471     btfsc ADCON0,NOT_DONE
0084   2???           00472     goto $-1
0085   101D           00473     bcf ADCON0,ADON
0086   081C           00474     movfw ADRESH
0087   00??           00475     movwf paddle_pos
0088   305D           00476     movlw PADDLE_LIMIT
0089   02??           00477     subwf paddle_pos,W
008A   1C03           00478     skpc
008B   3???           00479     bra $+3
008C   305D           00480     movlw PADDLE_LIMIT
008D   00??           00481     movwf paddle_pos
008E   0021           00482     banksel TRISA
008F   100C           00483     bcf TRISA, AUDIO
                      00484     leave
0090   2???               M     goto isr_exit
                      00485 
                      00486 ; task 5,  sound timer
0091                  00487 sound
0091   0A??           00488     incf task
0092   0A??           00489     incf lcount
0093   1E00           00490     btfss flags, F_SOUND
                      00491     leave
0094   2???               M     goto isr_exit
0095   002?           00492     banksel sound_timer
0096   0B??           00493     decfsz sound_timer
                      00494     leave
0097   2???               M     goto isr_exit
0098   1200           00495     bcf flags, F_SOUND
0099   003B           00496     banksel PWM2CON
009A   132B           00497     bcf PWM2CON,OE
009B   13AB           00498     bcf PWM2CON,EN
                      00499     leave
009C   2???               M     goto isr_exit
                      00500 
                      00501    
                      00502 ; task 6, move recking ball and check collision    
009D                  00503 move_ball
009D   0B??           00504     decfsz ball_timer
009E   3???           00505     bra move_ball_exit
009F   08??           00506     movfw ball_speed
00A0   00??           00507     movwf ball_timer
00A1   08??           00508     movfw ball_dx
00A2   07??           00509     addwf ball_x
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A3   1D03           00510     skpz
00A4   3???           00511     bra right_bound
00A5   09??           00512     comf ball_dx
00A6   3???           00513     bra move_y
00A7                  00514 right_bound    
00A7   08??           00515     movfw ball_x
00A8   3C64           00516     sublw BALL_RIGHT_BOUND
00A9   1803           00517     skpnc
00AA   3???           00518     bra move_y
00AB   03??           00519     decf ball_x
00AC   09??           00520     comf ball_dx
00AD                  00521 move_y
00AD   08??           00522     movfw ball_dy
00AE   07??           00523     addwf ball_y
00AF   3036           00524     movlw BALL_TOP_BOUND
00B0   02??           00525     subwf ball_y,W
00B1   1803           00526     skpnc
00B2   3???           00527     bra bottom_bound
00B3   09??           00528     comf ball_dy
00B4   0A??           00529     incf ball_dy
00B5   3???           00530     bra move_ball_exit
00B6                  00531 bottom_bound
00B6   08??           00532     movfw ball_y
00B7   3CE6           00533     sublw BALL_BOTTOM_BOUND
00B8   1803           00534     skpnc
00B9   3???           00535     bra move_ball_exit
00BA   09??           00536     comf ball_dy
00BB   0A??           00537     incf ball_dy
00BC                  00538 move_ball_exit    
00BC   0A??           00539     incf task
00BD   0A??           00540     incf lcount
                      00541     leave
00BE   2???               M     goto isr_exit
                      00542 
                      00543     
                      00544 ; task 7, wait for lcount==26, First visible video line is 27
00BF                  00545 video_first
00BF   0A??           00546     incf lcount
00C0   301B           00547     movlw 27
00C1   02??           00548     subwf lcount,W
00C2   1D03           00549     skpz
                      00550     leave
00C3   2???               M     goto isr_exit
00C4   01??           00551     clrf slice
00C5   0A??           00552     incf task
                      00553     leave
00C6   2???               M     goto isr_exit
                      00554    
                      00555 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00556 ; The following tasks are responsible to render video display.
                      00557 ; Each video line must be completed by setting color to black.
                      00558 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00559     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00560 ; constants used in video display
  00000018            00561 LEFT_MARGIN equ 24
  00000130            00562 COURT_WIDTH equ 304
  00000008            00563 BRICK_HEIGHT equ 8
  00000004            00564 BORDER_WIDTH equ 4
  0000001A            00565 FIRST_VIDEO_LINE equ 26
                      00566  
                      00567 ; task 8, draw score en ball count
00C7                  00568 draw_score
00C7   0021           00569     banksel TRISA
00C8   08??           00570     movfw slice
00C9   3689           00571     lsrf WREG
00CA   3689           00572     lsrf WREG
                      00573     pushw
00CB   0019               M     movwi --SP
00CC   300F           00574     movlw 0xf
00CD   05??           00575     andwf score+1,W
00CE   2???           00576     call digit_offset
00CF   0700           00577     addwf T,W
00D0   2???           00578     call digits
00D1   00??           00579     movwf d3
00D2   0E??           00580     swapf score+1,W
00D3   390F           00581     andlw 0xf
00D4   2???           00582     call digit_offset
00D5   0700           00583     addwf T,W
00D6   2???           00584     call digits
00D7   00??           00585     movwf d2
00D8   300F           00586     movlw 0xf
00D9   05??           00587     andwf score,W
00DA   2???           00588     call digit_offset
00DB   0700           00589     addwf T,W
00DC   2???           00590     call digits
00DD   2???           00591     call digit_row
00DE   08??           00592     movfw d2
00DF   2???           00593     call digit_row
00E0   08??           00594     movfw d3
00E1   2???           00595     call digit_row
                      00596     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
00E2   3014               M     movlw q
00E3   0B89               M     decfsz WREG
00E4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00E5   120C           00597     bcf TRISA,VIDEO_OUT
                      00598     tdelay 5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
00E6   3001               M     movlw q
00E7   0B89               M     decfsz WREG
00E8   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
00E9   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00EA   160C           00599     bsf TRISA,VIDEO_OUT
                      00600     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
00EB   300A               M     movlw q
00EC   0B89               M     decfsz WREG
00ED   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
00EE   08??           00601     movfw balls
00EF   2???           00602     call digit_offset
00F0   0700           00603     addwf T,W
00F1   2???           00604     call digits
00F2   2???           00605     call digit_row
00F3                  00606 score_exit
                      00607     next_task 5*4
00F3   0A??               M     incf slice
00F4   3014               M     movlw 5*4
00F5   02??               M     subwf slice,W
00F6   1D03               M     skpz
                          M     leave
00F7   2???               M     goto isr_exit
00F8   01??               M     clrf slice
00F9   0A??               M     incf task
00FA   3014               M     movlw 5*4
00FB   07??               M     addwf lcount
                          M     leave
00FC   2???               M     goto isr_exit
                      00608 
  00000002            00609 digit_version equ 2
                      00610 ; display digit row    
00FD                  00611 digit_row
                      00612  if digit_version==1
                      00613     rlf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00614     skpnc
                      00615     bcf TRISA,VIDEO_OUT
                      00616     rlf WREG
                      00617     bra $+1
                      00618     bsf TRISA,VIDEO_OUT
                      00619     skpnc
                      00620     bcf TRISA,VIDEO_OUT
                      00621     rlf WREG
                      00622     bra $+1
                      00623     bsf TRISA,VIDEO_OUT
                      00624     skpnc
                      00625     bcf TRISA,VIDEO_OUT
                      00626     nop
                      00627     bra $+1
                      00628     bsf TRISA,VIDEO_OUT
                      00629  else
00FD   0D89           00630     rlf WREG
00FE   1803           00631     skpnc
00FF   120C           00632     bcf TRISA,VIDEO_OUT
0100   1C03           00633     skpc
0101   160C           00634     bsf TRISA,VIDEO_OUT
0102   0D89           00635     rlf WREG
0103   1803           00636     skpnc
0104   120C           00637     bcf TRISA,VIDEO_OUT
0105   1C03           00638     skpc
0106   160C           00639     bsf TRISA,VIDEO_OUT
0107   0D89           00640     rlf WREG
0108   1803           00641     skpnc
0109   120C           00642     bcf TRISA,VIDEO_OUT
010A   1C03           00643     skpc
010B   160C           00644     bsf TRISA,VIDEO_OUT
010C   3???           00645     bra $+1
010D   3???           00646     bra $+1
010E   160C           00647     bsf TRISA,VIDEO_OUT
                      00648  endif
010F   0008           00649     return
                      00650     
                      00651 ; task 9,  draw top wall, 8 screen lines    
0110                  00652 draw_top_wall
0110   1C80           00653     btfss flags, F_EVEN
0111   3???           00654     bra top_wall_exit
                      00655     tdelay LEFT_MARGIN-2
  0007                    M     variable q=(LEFT_MARGIN-2)/3
  0001                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
0112   3007               M     movlw q
0113   0B89               M     decfsz WREG
0114   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0115   0000               M     nop
                          M     endif
                      00656     white
0116   0021               M     banksel TRISA
0117   148C               M     bsf TRISA,CHROMA
0118   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00657     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0069                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0002                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0119   3069               M     movlw q
011A   0B89               M     decfsz WREG
011B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
011C   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00658     black
011D   0021               M     banksel TRISA
011E   148C               M     bsf TRISA,CHROMA
011F   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0120                  00659 top_wall_exit
                      00660     next_task BRICK_HEIGHT
0120   0A??               M     incf slice
0121   3008               M     movlw BRICK_HEIGHT
0122   02??               M     subwf slice,W
0123   1D03               M     skpz
                          M     leave
0124   2???               M     goto isr_exit
0125   01??               M     clrf slice
0126   0A??               M     incf task
0127   3008               M     movlw BRICK_HEIGHT
0128   07??               M     addwf lcount
                          M     leave
0129   2???               M     goto isr_exit
                      00661 
                      00662 ; task 10,  only on even field draw vertical side bands.    
012A                  00663 draw_void
012A   1C80           00664     btfss flags, F_EVEN
012B   3???           00665     bra no_wall_draw
012C   08??           00666     movfw ball_y
012D   02??           00667     subwf lcount,W
012E   1C03           00668     skpc
012F   3???           00669     bra no_ball_dly
0130   3008           00670     movlw 8
0131   07??           00671     addwf ball_y,W
0132   02??           00672     subwf lcount,W
0133   1C03           00673     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0134   3???           00674     bra yes_ball
0135   3???           00675     bra no_ball
0136                  00676 no_ball_dly
                      00677     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0136   3002               M     movlw q
0137   0B89               M     decfsz WREG
0138   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0139                  00678 no_ball    
                      00679     tdelay LEFT_MARGIN-13
  0003                    M     variable q=(LEFT_MARGIN-13)/3
  0002                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
0139   3003               M     movlw q
013A   0B89               M     decfsz WREG
013B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
013C   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00680     draw_border BORDER_WIDTH
013D   0021               M     banksel TRISA
013E   148C               M     bsf TRISA,CHROMA
013F   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
0140   3001               M     movlw q
0141   0B89               M     decfsz WREG
0142   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0143   0000               M     nop
                          M     endif
0144   160C               M     bsf TRISA,VIDEO_OUT
                      00681     black
0145   0021               M     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0146   148C               M     bsf TRISA,CHROMA
0147   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00682     tdelay COURT_WIDTH
  0065                    M     variable q=(COURT_WIDTH)/3
  0001                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0148   3065               M     movlw q
0149   0B89               M     decfsz WREG
014A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
014B   0000               M     nop
                          M     endif
                      00683     draw_border BORDER_WIDTH
014C   0021               M     banksel TRISA
014D   148C               M     bsf TRISA,CHROMA
014E   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
014F   3001               M     movlw q
0150   0B89               M     decfsz WREG
0151   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0152   0000               M     nop
                          M     endif
0153   160C               M     bsf TRISA,VIDEO_OUT
0154   3???           00684     bra draw_void_exit
0155                  00685 yes_ball
0155   0021           00686     banksel TRISA
0156   08??           00687     movfw ball_x
0157   1903           00688     skpnz
0158   3???           00689     bra ball_at_left
0159   3C64           00690     sublw BALL_RIGHT_BOUND
015A   1903           00691     skpnz
015B   3???           00692     bra ball_at_right
015C                  00693 ball_in_middle    
                      00694     tdelay LEFT_MARGIN-17
  0002                    M     variable q=(LEFT_MARGIN-17)/3
  0001                    M     variable r=(LEFT_MARGIN-17)%3
                          M     if (q)
015C   3002               M     movlw q
015D   0B89               M     decfsz WREG
015E   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
015F   0000               M     nop
                          M     endif
0160   120C           00695     bcf TRISA,VIDEO_OUT
                      00696     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0161   3001               M     movlw q
0162   0B89               M     decfsz WREG
0163   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0164   08??           00697     movfw ball_x
0165   160C           00698     bsf TRISA,VIDEO_OUT
0166   0B89           00699     decfsz WREG
0167   3???           00700     bra $-1
0168   120C           00701     bcf TRISA, VIDEO_OUT
                      00702     tdelay 8
  0002                    M     variable q=(8)/3
  0002                    M     variable r=(8)%3
                          M     if (q)
0169   3002               M     movlw q
016A   0B89               M     decfsz WREG
016B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
016C   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
016D   160C           00703     bsf TRISA,VIDEO_OUT
016E   08??           00704     movfw ball_x
016F   3C64           00705     sublw BALL_RIGHT_BOUND
0170   0B89           00706     decfsz WREG
0171   3???           00707     bra $-1
                      00708 ;    nop
                      00709 ;    nop
0172   120C           00710     bcf TRISA,VIDEO_OUT
                      00711     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   3001               M     movlw q
0174   0B89               M     decfsz WREG
0175   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0176   0000               M     nop
                          M     endif
0177   160C           00712     bsf TRISA,VIDEO_OUT
0178   3???           00713     bra draw_void_exit
0179                  00714 ball_at_left
                      00715     tdelay LEFT_MARGIN-15
  0003                    M     variable q=(LEFT_MARGIN-15)/3
  0000                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0179   3003               M     movlw q
017A   0B89               M     decfsz WREG
017B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
017C   120C           00716     bcf TRISA,VIDEO_OUT
                      00717     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
017D   3004               M     movlw q
017E   0B89               M     decfsz WREG
017F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0180   160C           00718     bsf TRISA,VIDEO_OUT
                      00719     tdelay 300
  0064                    M     variable q=(300)/3
  0000                    M     variable r=(300)%3
                          M     if (q)
0181   3064               M     movlw q
0182   0B89               M     decfsz WREG
0183   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0184   0000           00720     nop
0185   120C           00721     bcf TRISA,VIDEO_OUT
                      00722     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0186   3001               M     movlw q
0187   0B89               M     decfsz WREG
0188   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0189   0000               M     nop
                          M     endif
018A   160C           00723     bsf TRISA,VIDEO_OUT
018B   3???           00724     bra draw_void_exit
018C                  00725 ball_at_right
                      00726     tdelay LEFT_MARGIN-18
  0002                    M     variable q=(LEFT_MARGIN-18)/3
  0000                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
018C   3002               M     movlw q
018D   0B89               M     decfsz WREG
018E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
018F   120C           00727     bcf TRISA,VIDEO_OUT
                      00728     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0190   3001               M     movlw q
0191   0B89               M     decfsz WREG
0192   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0193   0000               M     nop
                          M     endif
0194   160C           00729     bsf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00730     tdelay 300
  0064                    M     variable q=(300)/3
  0000                    M     variable r=(300)%3
                          M     if (q)
0195   3064               M     movlw q
0196   0B89               M     decfsz WREG
0197   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0198   0000           00731     nop
0199   120C           00732     bcf TRISA,VIDEO_OUT
                      00733     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
019A   3004               M     movlw q
019B   0B89               M     decfsz WREG
019C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
019D   160C           00734     bsf TRISA,VIDEO_OUT
019E                  00735 draw_void_exit    
019E   0A??           00736     incf slice
019F   0A??           00737     incf lcount
01A0   30B6           00738     movlw 8*BRICK_HEIGHT+118
01A1   02??           00739     subwf slice,W
01A2   1D03           00740     skpz
                      00741     leave
01A3   2???               M     goto isr_exit
01A4   3012           00742     movlw 18
01A5   01??           00743     clrf slice
01A6   00??           00744     movwf task
                      00745     leave
01A7   2???               M     goto isr_exit
                      00746     ;    next_task 125*BRICK_HEIGHT
01A8                  00747 no_wall_draw
                      00748     next_task 2*BRICK_HEIGHT
01A8   0A??               M     incf slice
01A9   3010               M     movlw 2*BRICK_HEIGHT
01AA   02??               M     subwf slice,W
01AB   1D03               M     skpz
                          M     leave
01AC   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AD   01??               M     clrf slice
01AE   0A??               M     incf task
01AF   3010               M     movlw 2*BRICK_HEIGHT
01B0   07??               M     addwf lcount
                          M     leave
01B1   2???               M     goto isr_exit
                      00749     
                      00750 ; task 11, draw top brick row
01B2                  00751 draw_row1 ; yellow
                      00752     chroma_ref
01B2   003B               M     banksel PWM1CON
01B3   121B               M     bcf PWM1CON,POL
01B4   002?           00753     banksel row1
01B5   08??           00754     movfw row1
01B6   00??           00755     movwf temp
                      00756     tdelay LEFT_MARGIN-4
  0006                    M     variable q=(LEFT_MARGIN-4)/3
  0002                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
01B7   3006               M     movlw q
01B8   0B89               M     decfsz WREG
01B9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01BA   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00757 ;    draw_border BORDER_WIDTH
                      00758     draw_wall yellow
  0000                    M     local next_brick
01BB   3008               M     movlw 8
                          M     pushw
01BC   0019               M     movwi --SP
01BD                      M next_brick    
01BD   35??               M     lslf temp
                          M     draw_brick yellow
  0000                    M     local no_brick
  0000                    M     local brick_delay
01BE   1C03               M     skpc
01BF   3???               M     bra no_brick
                          M     yellow
                          M ;    chroma_ref
01C0   0021               M     banksel TRISA
01C1   120C               M     bcf TRISA,VIDEO_OUT
01C2   108C               M     bcf TRISA,CHROMA
01C3   3???               M     bra brick_delay
01C4                      M no_brick
01C4   0000               M     nop
                          M     black
01C5   0021               M     banksel TRISA
01C6   148C               M     bsf TRISA,CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C7   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
01C8   3???               M     bra brick_delay 
01C9                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0001                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
01C9   3009               M     movlw q
01CA   0B89               M     decfsz WREG
01CB   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01CC   0000               M     nop
                          M     endif
01CD   0B80               M     decfsz T
01CE   3???               M     bra next_brick
                          M     dropn 1
01CF   3101               M     addfsr T,1
                      00759     black
01D0   0021               M     banksel TRISA
01D1   148C               M     bsf TRISA,CHROMA
01D2   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00760     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
01D3   3001               M     movlw q
01D4   0B89               M     decfsz WREG
01D5   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00761 ;    draw_border BORDER_WIDTH
                      00762     next_task BRICK_HEIGHT
01D6   0A??               M     incf slice
01D7   3008               M     movlw BRICK_HEIGHT
01D8   02??               M     subwf slice,W
01D9   1D03               M     skpz
                          M     leave
01DA   2???               M     goto isr_exit
01DB   01??               M     clrf slice
01DC   0A??               M     incf task
01DD   3008               M     movlw BRICK_HEIGHT
01DE   07??               M     addwf lcount
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
01DF   2???               M     goto isr_exit
                      00763     
                      00764 ; task 12, draw 2nd brick row    
01E0                  00765 draw_row2 ;cyan
                      00766     chroma_invert
01E0   003B               M     banksel PWM1CON
01E1   161B               M     bsf PWM1CON,POL
01E2   002?           00767     banksel row2
01E3   08??           00768     movfw row2
01E4   00??           00769     movwf temp
                      00770     tdelay LEFT_MARGIN-4
  0006                    M     variable q=(LEFT_MARGIN-4)/3
  0002                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
01E5   3006               M     movlw q
01E6   0B89               M     decfsz WREG
01E7   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01E8   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00771 ;    draw_border BORDER_WIDTH
                      00772     draw_wall cyan
  0000                    M     local next_brick
01E9   3008               M     movlw 8
                          M     pushw
01EA   0019               M     movwi --SP
01EB                      M next_brick    
01EB   35??               M     lslf temp
                          M     draw_brick cyan
  0000                    M     local no_brick
  0000                    M     local brick_delay
01EC   1C03               M     skpc
01ED   3???               M     bra no_brick
                          M     cyan
                          M ;    chroma_invert
01EE   0021               M     banksel TRISA
01EF   120C               M     bcf TRISA,VIDEO_OUT
01F0   108C               M     bcf TRISA,CHROMA
01F1   3???               M     bra brick_delay
01F2                      M no_brick
01F2   0000               M     nop
                          M     black
01F3   0021               M     banksel TRISA
01F4   148C               M     bsf TRISA,CHROMA
01F5   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
01F6   3???               M     bra brick_delay 
01F7                      M brick_delay    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0001                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
01F7   3009               M     movlw q
01F8   0B89               M     decfsz WREG
01F9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
01FA   0000               M     nop
                          M     endif
01FB   0B80               M     decfsz T
01FC   3???               M     bra next_brick
                          M     dropn 1
01FD   3101               M     addfsr T,1
                      00773     black
01FE   0021               M     banksel TRISA
01FF   148C               M     bsf TRISA,CHROMA
0200   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00774     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0201   3001               M     movlw q
0202   0B89               M     decfsz WREG
0203   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00775 ;    draw_border BORDER_WIDTH
                      00776     next_task BRICK_HEIGHT
0204   0A??               M     incf slice
0205   3008               M     movlw BRICK_HEIGHT
0206   02??               M     subwf slice,W
0207   1D03               M     skpz
                          M     leave
0208   2???               M     goto isr_exit
0209   01??               M     clrf slice
020A   0A??               M     incf task
020B   3008               M     movlw BRICK_HEIGHT
020C   07??               M     addwf lcount
                          M     leave
020D   2???               M     goto isr_exit
                      00777 
                      00778 ; task 13, draw 3rd brick row    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020E                  00779 draw_row3 ; green
                      00780 ;    btfss flags, F_EVEN
                      00781 ;    bra row3_exit
                      00782     chroma_ref
020E   003B               M     banksel PWM1CON
020F   121B               M     bcf PWM1CON,POL
0210   002?           00783     banksel row3
0211   08??           00784     movfw row3
0212   00??           00785     movwf temp
                      00786     tdelay LEFT_MARGIN-4
  0006                    M     variable q=(LEFT_MARGIN-4)/3
  0002                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
0213   3006               M     movlw q
0214   0B89               M     decfsz WREG
0215   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0216   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00787 ;    draw_border BORDER_WIDTH
                      00788     draw_wall green
  0000                    M     local next_brick
0217   3008               M     movlw 8
                          M     pushw
0218   0019               M     movwi --SP
0219                      M next_brick    
0219   35??               M     lslf temp
                          M     draw_brick green
  0000                    M     local no_brick
  0000                    M     local brick_delay
021A   1C03               M     skpc
021B   3???               M     bra no_brick
                          M     green
                          M ;    chroma_ref
021C   0021               M     banksel TRISA
021D   160C               M     bsf TRISA, VIDEO_OUT
021E   108C               M     bcf TRISA,CHROMA
021F   3???               M     bra brick_delay
0220                      M no_brick
0220   0000               M     nop
                          M     black
0221   0021               M     banksel TRISA
0222   148C               M     bsf TRISA,CHROMA
0223   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0224   3???               M     bra brick_delay 
0225                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0001                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0225   3009               M     movlw q
0226   0B89               M     decfsz WREG
0227   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0228   0000               M     nop
                          M     endif
0229   0B80               M     decfsz T
022A   3???               M     bra next_brick
                          M     dropn 1
022B   3101               M     addfsr T,1
                      00789     black
022C   0021               M     banksel TRISA
022D   148C               M     bsf TRISA,CHROMA
022E   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00790     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
022F   3001               M     movlw q
0230   0B89               M     decfsz WREG
0231   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00791 ;    draw_border BORDER_WIDTH
0232                  00792 row3_exit    
                      00793     next_task BRICK_HEIGHT
0232   0A??               M     incf slice
0233   3008               M     movlw BRICK_HEIGHT
0234   02??               M     subwf slice,W
0235   1D03               M     skpz
                          M     leave
0236   2???               M     goto isr_exit
0237   01??               M     clrf slice
0238   0A??               M     incf task
0239   3008               M     movlw BRICK_HEIGHT
023A   07??               M     addwf lcount
                          M     leave
023B   2???               M     goto isr_exit
                      00794     
                      00795 ; task 14, draw 4th brick row    
023C                  00796 draw_row4 ; dark blue
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00797     chroma_invert
023C   003B               M     banksel PWM1CON
023D   161B               M     bsf PWM1CON,POL
023E   002?           00798     banksel row4
023F   08??           00799     movfw row4
0240   00??           00800     movwf temp
                      00801     tdelay LEFT_MARGIN-4
  0006                    M     variable q=(LEFT_MARGIN-4)/3
  0002                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
0241   3006               M     movlw q
0242   0B89               M     decfsz WREG
0243   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0244   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00802 ;    draw_border BORDER_WIDTH
                      00803     draw_wall dark_blue
  0000                    M     local next_brick
0245   3008               M     movlw 8
                          M     pushw
0246   0019               M     movwi --SP
0247                      M next_brick    
0247   35??               M     lslf temp
                          M     draw_brick dark_blue
  0000                    M     local no_brick
  0000                    M     local brick_delay
0248   1C03               M     skpc
0249   3???               M     bra no_brick
                          M     dark_blue
                          M ;    chroma_invert
024A   0021               M     banksel TRISA
024B   160C               M     bsf TRISA, VIDEO_OUT
024C   108C               M     bcf TRISA,CHROMA
024D   3???               M     bra brick_delay
024E                      M no_brick
024E   0000               M     nop
                          M     black
024F   0021               M     banksel TRISA
0250   148C               M     bsf TRISA,CHROMA
0251   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0252   3???               M     bra brick_delay 
0253                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0001                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0253   3009               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0254   0B89               M     decfsz WREG
0255   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0256   0000               M     nop
                          M     endif
0257   0B80               M     decfsz T
0258   3???               M     bra next_brick
                          M     dropn 1
0259   3101               M     addfsr T,1
                      00804     black
025A   0021               M     banksel TRISA
025B   148C               M     bsf TRISA,CHROMA
025C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00805     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
025D   3001               M     movlw q
025E   0B89               M     decfsz WREG
025F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00806 ;    draw_border BORDER_WIDTH
                      00807     next_task BRICK_HEIGHT
0260   0A??               M     incf slice
0261   3008               M     movlw BRICK_HEIGHT
0262   02??               M     subwf slice,W
0263   1D03               M     skpz
                          M     leave
0264   2???               M     goto isr_exit
0265   01??               M     clrf slice
0266   0A??               M     incf task
0267   3008               M     movlw BRICK_HEIGHT
0268   07??               M     addwf lcount
                          M     leave
0269   2???               M     goto isr_exit
                      00808 
                      00809 ; task 15, draw 5th brick row    
026A                  00810 draw_row5 ; white
026A   002?           00811     banksel row5
026B   08??           00812     movfw row5
026C   00??           00813     movwf temp
                      00814     tdelay LEFT_MARGIN-3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0007                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
026D   3007               M     movlw q
026E   0B89               M     decfsz WREG
026F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00815 ;    draw_border BORDER_WIDTH
                      00816     draw_wall white
  0000                    M     local next_brick
0270   3008               M     movlw 8
                          M     pushw
0271   0019               M     movwi --SP
0272                      M next_brick    
0272   35??               M     lslf temp
                          M     draw_brick white
  0000                    M     local no_brick
  0000                    M     local brick_delay
0273   1C03               M     skpc
0274   3???               M     bra no_brick
                          M     white
0275   0021               M     banksel TRISA
0276   148C               M     bsf TRISA,CHROMA
0277   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
0278   3???               M     bra brick_delay
0279                      M no_brick
0279   0000               M     nop
                          M     black
027A   0021               M     banksel TRISA
027B   148C               M     bsf TRISA,CHROMA
027C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
027D   3???               M     bra brick_delay 
027E                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0009                    M     variable q=(BRICK_WIDTH)/3
  0001                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
027E   3009               M     movlw q
027F   0B89               M     decfsz WREG
0280   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0281   0000               M     nop
                          M     endif
0282   0B80               M     decfsz T
0283   3???               M     bra next_brick
                          M     dropn 1
0284   3101               M     addfsr T,1
                      00817     black
0285   0021               M     banksel TRISA
0286   148C               M     bsf TRISA,CHROMA
0287   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00818     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0288   3001               M     movlw q
0289   0B89               M     decfsz WREG
028A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00819 ;    draw_border BORDER_WIDTH
                      00820     black
028B   0021               M     banksel TRISA
028C   148C               M     bsf TRISA,CHROMA
028D   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00821     next_task BRICK_HEIGHT
028E   0A??               M     incf slice
028F   3008               M     movlw BRICK_HEIGHT
0290   02??               M     subwf slice,W
0291   1D03               M     skpz
                          M     leave
0292   2???               M     goto isr_exit
0293   01??               M     clrf slice
0294   0A??               M     incf task
0295   3008               M     movlw BRICK_HEIGHT
0296   07??               M     addwf lcount
                          M     leave
0297   2???               M     goto isr_exit
                      00822 
                      00823 ; task 16,draw all rows between paddle and lower brick row    
0298                  00824 draw_empty
                      00825     tdelay LEFT_MARGIN
  0008                    M     variable q=(LEFT_MARGIN)/3
  0000                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0298   3008               M     movlw q
0299   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00826 ;    draw_border BORDER_WIDTH
                      00827     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
029B   306A               M     movlw q
029C   0B89               M     decfsz WREG
029D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
029E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00828 ;    draw_border BORDER_WIDTH
                      00829     black
029F   0021               M     banksel TRISA
02A0   148C               M     bsf TRISA,CHROMA
02A1   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      00830     next_task 118
02A2   0A??               M     incf slice
02A3   3076               M     movlw 118
02A4   02??               M     subwf slice,W
02A5   1D03               M     skpz
                          M     leave
02A6   2???               M     goto isr_exit
02A7   01??               M     clrf slice
02A8   0A??               M     incf task
02A9   3076               M     movlw 118
02AA   07??               M     addwf lcount
                          M     leave
02AB   2???               M     goto isr_exit
                      00831 
                      00832     
                      00833 ; task 17, draw paddle at bottom screen    
02AC                  00834 draw_paddle
                      00835     tdelay LEFT_MARGIN+2
  0008                    M     variable q=(LEFT_MARGIN+2)/3
  0002                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
02AC   3008               M     movlw q
02AD   0B89               M     decfsz WREG
02AE   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
02AF   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02B0   08??           00836     movfw paddle_pos
02B1   1903           00837     skpnz
02B2   3???           00838     bra $+3
02B3   0B89           00839     decfsz WREG
02B4   3???           00840     bra $-1
02B5   0021           00841     banksel TRISA
02B6   120C           00842     bcf TRISA,VIDEO_OUT
                      00843     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
02B7   300A               M     movlw q
02B8   0B89               M     decfsz WREG
02B9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
02BA   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02BB   160C           00844     bsf TRISA,VIDEO_OUT
                      00845 ;    draw_border BORDER_WIDTH
                      00846 ;    movfw paddle_pos
                      00847 ;    skpnz
                      00848 ;    bcf TRISA,VIDEO_OUT
                      00849 ;    skpnz
                      00850 ;    bra at_left+2
                      00851 ;    decfsz WREG
                      00852 ;    bra $-1
                      00853 ;at_left
                      00854 ;    nop
                      00855 ;    bcf TRISA,VIDEO_OUT
                      00856 ;    tdelay PADDLE_WIDTH
                      00857 ;    movfw paddle_pos
                      00858 ;    sublw PADDLE_LIMIT
                      00859 ;    nop
                      00860 ;    skpnz
                      00861 ;    bra $+5
                      00862 ;    nop
                      00863 ;    bsf TRISA,VIDEO_OUT
                      00864 ;    decfsz WREG
                      00865 ;    bra $-1
                      00866 ;    draw_border BORDER_WIDTH
                      00867     next_task 8
02BC   0A??               M     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BD   3008               M     movlw 8
02BE   02??               M     subwf slice,W
02BF   1D03               M     skpz
                          M     leave
02C0   2???               M     goto isr_exit
02C1   01??               M     clrf slice
02C2   0A??               M     incf task
02C3   3008               M     movlw 8
02C4   07??               M     addwf lcount
                          M     leave
02C5   2???               M     goto isr_exit
                      00868 
                      00869 ; task 18,  wait end of this field, reset task to zero    
02C6                  00870 wait_field_end
02C6   0A??           00871     incf lcount
02C7   1903           00872     skpnz
02C8   1400           00873     bsf flags, F_HI_LINE
02C9   1800           00874     btfsc flags, F_HI_LINE
02CA   2???           00875     goto hi_line
                      00876     leave
02CB   2???               M     goto isr_exit
02CC                  00877 hi_line
02CC   1880           00878     btfsc flags,F_EVEN
02CD   2???           00879     goto even_field
02CE   3005           00880     movlw 5
02CF   02??           00881     subwf lcount,W
02D0   1D03           00882     skpz
                      00883     leave
02D1   2???               M     goto isr_exit
02D2   2???           00884     goto field_end
02D3                  00885 even_field
02D3   3006           00886     movlw 6
02D4   02??           00887     subwf lcount,W
02D5   1D03           00888     skpz
                      00889     leave
02D6   2???               M     goto isr_exit
                      00890 ; even field last line is half_line    
                      00891 ; set PWM3 for line 263 half-line
02D7   003B           00892     banksel PWM3DC
02D8   3003           00893     movlw high HALF_LINE
02D9   00B6           00894     movwf PWM3PRH
02DA   308D           00895     movlw low HALF_LINE
02DB   00B5           00896     movwf PWM3PRL
02DC   17BF           00897     bsf PWM3LDCON,7
02DD                  00898 field_end
02DD   01??           00899     clrf task
02DE   01??           00900     clrf slice
02DF   01??           00901     clrf lcount
02E0   1000           00902     bcf flags, F_HI_LINE
02E1   1680           00903     bsf flags, F_SYNC
                      00904 ; toggle odd/even field flag    
02E2   3002           00905     movlw 1<<F_EVEN
02E3   06??           00906     xorwf flags
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00907     leave
02E4   2???               M     goto isr_exit
                      00908 
                      00909 ; helper functions
                      00910 
                      00911 ; add 2 BCD digits
                      00912 ; parameters:
                      00913 ;   WREG -> first digit
                      00914 ;   T -> second digit
                      00915 ;   C -> carry from previous digits add    
                      00916 ; output:
                      00917 ;   T -> sum
                      00918 ;   C -> overflow
02E5                  00919 bcd_add
02E5   3D80           00920     addwfc T
02E6   300A           00921     movlw 10
02E7   0200           00922     subwf T,W
02E8   1C03           00923     skpc
02E9   0008           00924     return
02EA   3006           00925     movlw 6
02EB   0780           00926     addwf T
02EC   300F           00927     movlw 15
02ED   0580           00928     andwf T
02EE   1403           00929     bsf STATUS,C
02EF   0008           00930     return
                      00931     
                      00932 ; increment user score
                      00933 ; This is a BCD addition where a single digit is added to score.   
                      00934 ; score is stored as big indian
                      00935 ; argument: ( n -- )
                      00936 ;   WREG ->  bdc digit to add to score variable
02F0                  00937 inc_score
                      00938     pushw
02F0   0019               M     movwi --SP
02F1   1003           00939     clrc
02F2   300F           00940     movlw 15
02F3   05??           00941     andwf score+1,W
02F4   2???           00942     call bcd_add
02F5   0103           00943     clrw 
                      00944     pushw
02F6   0019               M     movwi --SP
02F7   0E??           00945     swapf score+1,W
02F8   390F           00946     andlw 15
02F9   2???           00947     call bcd_add
02FA   1803           00948     skpnc
02FB   0A??           00949     incf score
                      00950     popw
02FC   0012               M     moviw SP++
02FD   0E89           00951     swapf WREG
02FE   0400           00952     iorwf T,W
02FF   00??           00953     movwf score+1
                      00954     dropn 1
0300   3101               M     addfsr T,1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0301   0008           00955     return
                      00956     
                      00957 ;***********************************
                      00958 ; digit_offset, compute digit position in 'digits' table
                      00959 ;   position = digit * 5
                      00960 ; 
                      00961 ; input: WREG -> digit value {0..9}
                      00962 ;         
                      00963 ; output: WREG -> displacement in table
                      00964 ;***********************************
0302                  00965 digit_offset    
                      00966     pushw 
0302   0019               M     movwi --SP
0303   3589           00967     lslf WREG
0304   3589           00968     lslf WREG
0305   0780           00969     addwf T
                      00970     popw
0306   0012               M     moviw SP++
0307   0008           00971     return
                      00972     
0308                  00973 init_brick_wall
0308   30??           00974     movlw high brick_wall
0309   0087           00975     movwf FSR1H
030A   30??           00976     movlw low brick_wall
030B   0086           00977     movwf FSR1L
030C   3005           00978     movlw 5
030D   00??           00979     movwf temp
030E   30FF           00980     movlw 0xff
030F                  00981 ibw    
030F   001E           00982     movwi FSR1++
0310   0B??           00983     decfsz temp
0311   3???           00984     bra ibw
0312   0008           00985     return
                      00986 
                      00987 ; delay by TIMER0
                      00988 ; parameter
                      00989 ;   WREG -> 2*Tcy+7cy    
0313                  00990 t0delay 
0313   0989           00991     comf WREG
0314   0095           00992     movwf TMR0
0315   110B           00993     bcf INTCON,T0IF
0316   1D0B           00994     btfss INTCON,T0IF
0317   3???           00995     bra $-1
0318   0008           00996     return
                      00997     
                      00998 MAIN_PROG CODE                      ; let linker place main program
                      00999 
0000                  01000 START
                      01001 ; clear common RAM
0000   0185           01002     clrf FSR0H
0001   3070           01003     movlw 0x70
0002   0084           01004     movwf FSR0L
0003   0103           01005     clrw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   001A           01006     movwi FSR0++
0005   1F84           01007     btfss FSR0L,7
0006   3???           01008     bra $-2
                      01009 ; clear banked RAM
0007   0184           01010     clrf FSR0L
0008   3020           01011     movlw 0x20
0009   0085           01012     movwf FSR0H
000A   0103           01013     clrw 
000B   001A           01014     movwi FSR0++
000C   1C05           01015     btfss FSR0H,0
000D   3???           01016     bra $-2
000E   2???           01017     call init_brick_wall
                      01018 ;   setup arguments stack pointer
000F   30??           01019     movlw high (stack+STACK_SIZE)
0010   0085           01020     movwf FSR0H
0011   30??           01021     movlw low (stack+STACK_SIZE)
0012   0084           01022     movwf FSR0L
                      01023 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01024 ; TIMER0 prescale 1:2
0013   3050           01025     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0014   0095           01026     movwf OPTION_REG
                      01027 ; disable analog inputs, except AN0
0015   0023           01028     banksel ANSELA
0016   018C           01029     clrf ANSELA
                      01030 ; paddle potentiometer input     
0017   140C           01031     bsf ANSELA,PADDLE
0018   0021           01032     banksel ADCON1
0019   3020           01033     movlw (2<<ADCS0)
001A   009E           01034     movwf ADCON1
                      01035 ; pin setup
001B   0024           01036     banksel WPUA
001C   018C           01037     clrf WPUA
001D   158C           01038     bsf WPUA,START_BTN
001E   0021           01039     banksel TRISA
001F   110C           01040     bcf TRISA,SYNC_OUT
0020   0022           01041     banksel LATA
0021   160C           01042     bsf LATA, VIDEO_OUT
                      01043 ; PWM1 chroma signal on RA1
0022   003B           01044     banksel PWM1CON
0023   019F           01045     clrf PWM1LDCON
0024   0191           01046     clrf PWM1PHL
0025   0192           01047     clrf PWM1PHH
0026   0197           01048     clrf PWM1OFL
0027   0198           01049     clrf PWM1OFH
0028   0196           01050     clrf PWM1PRH
0029   3007           01051     movlw 7
002A   0095           01052     movwf PWM1PRL
002B   3004           01053     movlw 4
002C   0093           01054     movwf PWM1DCL
002D   0194           01055     clrf PWM1DCH
002E   179F           01056     bsf PWM1LDCON,7
002F   30C0           01057     movlw (1<<EN)|(1<<OE)
0030   009B           01058     movwf PWM1CON
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01059 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0031   003B           01060     banksel PWM3CON
0032   01BF           01061     clrf PWM3LDCON
0033   01B1           01062     clrf PWM3PHL
0034   01B2           01063     clrf PWM3PHH
0035   01B7           01064     clrf PWM3OFL
0036   01B8           01065     clrf PWM3OFH
0037   301B           01066     movlw low HPERIOD
0038   00B5           01067     movwf PWM3PRL
0039   3007           01068     movlw high HPERIOD
003A   00B6           01069     movwf PWM3PRH
003B   3086           01070     movlw HSYNC
003C   00B3           01071     movwf PWM3DCL
003D   01B4           01072     clrf PWM3DCH
003E   30D0           01073     movlw (1<<EN)|(1<<OE)|(1<<POL)
003F   00BB           01074     movwf PWM3CON
0040   17BF           01075     bsf PWM3LDCON,7
0041   143C           01076     bsf PWM3INTE,PRIE
0042   0020           01077     banksel PIR3
0043   1313           01078     bcf PIR3,PWM3IF
0044   0021           01079     banksel PIE3
0045   1713           01080     bsf PIE3,PWM3IE
0046   170B           01081     bsf INTCON,PEIE
0047   178B           01082     bsf INTCON,GIE
0048   1480           01083     bsf flags, F_EVEN
0049   1680           01084     bsf flags, F_SYNC
                      01085 ; test code
004A   002?           01086     banksel balls
004B   3003           01087     movlw 3
004C   00??           01088     movwf balls
004D   3064           01089     movlw BALL_RIGHT_BOUND
004E   00??           01090     movwf ball_x
                      01091 ;    clrf ball_x
004F   03??           01092     decf ball_x
0050   30BE           01093     movlw BALL_BOTTOM_BOUND-40
0051   00??           01094     movwf ball_y
0052   0A??           01095     incf ball_dx
0053   3004           01096     movlw 4
0054   00??           01097     movwf ball_dy
0055   3002           01098     movlw 2
0056   00??           01099     movwf ball_speed
0057                  01100 test_loop
0057   303C           01101     movlw 60
0058   002?           01102     banksel sound_timer
0059   00??           01103     movwf sound_timer
005A   1600           01104     bsf flags, F_SOUND
005B   1A00           01105     btfsc flags, F_SOUND
005C   3???           01106     bra $-1
005D   3001           01107     movlw 1
005E   2???           01108     call inc_score
005F   1C80           01109     btfss score,1
0060   3???           01110     bra test_loop
0061   01??           01111     clrf score
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0062   01??           01112     clrf score+1
0063   3???           01113     bra test_loop
                      01114 ; end test code    
                      01115  ; all processing done in ISR    
0064   2???           01116     goto $
                      01117 
                      01118 ; digits character table
0065                  01119 digits
0065   000B           01120     brw
0066   3440 34A0 34A0 01121     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006B   3440 34C0 3440 01122     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0070   34E0 3420 34C0 01123     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0075   34E0 3420 34C0 01124     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
007A   34A0 34A0 34E0 01125     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
007F   34E0 3480 34E0 01126     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0084   34C0 3480 34E0 01127     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0089   34E0 3420 3420 01128     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
008E   34E0 34A0 34E0 01129     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0093   34E0 34A0 34E0 01130     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
                      01131     
                      01132     
                      01133 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01134 max_score 
                      01135  
3FA7 3EFF             01136     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000E6
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000064
BALL_TOP_BOUND                    00000036
BAUDCON                           0000019F
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       0000001C
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       00000130
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001A
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000003
F_SOUND                           00000004
F_START                           00000002
F_SYNC                            00000005
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000018
LFIOFR                            00000001
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000005D
PADDLE_WIDTH                      00000020
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

RD                                00000000
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_0084                         00000084
_ISR_008B                         0000008B
_ISR_00E4                         000000E4
_ISR_00E8                         000000E8
_ISR_00E9                         000000E9
_ISR_00ED                         000000ED
_ISR_010C                         0000010C
_ISR_010D                         0000010D
_ISR_0114                         00000114
_ISR_011B                         0000011B
_ISR_011C                         0000011C
_ISR_0138                         00000138
_ISR_013B                         0000013B
_ISR_013C                         0000013C
_ISR_0142                         00000142
_ISR_014A                         0000014A
_ISR_0151                         00000151
_ISR_015E                         0000015E
_ISR_0163                         00000163
_ISR_0167                         00000167
_ISR_016B                         0000016B
_ISR_016C                         0000016C
_ISR_0171                         00000171
_ISR_0175                         00000175
_ISR_017B                         0000017B
_ISR_017F                         0000017F
_ISR_0183                         00000183
_ISR_0188                         00000188
_ISR_018E                         0000018E
_ISR_0192                         00000192
_ISR_0197                         00000197
_ISR_019C                         0000019C
_ISR_01B9                         000001B9
_ISR_01BA                         000001BA
_ISR_01CB                         000001CB
_ISR_01D5                         000001D5
_ISR_01E7                         000001E7
_ISR_01E8                         000001E8
_ISR_01F9                         000001F9
_ISR_0203                         00000203
_ISR_0215                         00000215
_ISR_0216                         00000216
_ISR_0227                         00000227
_ISR_0231                         00000231
_ISR_0243                         00000243
_ISR_0244                         00000244
_ISR_0255                         00000255
_ISR_025F                         0000025F
_ISR_026F                         0000026F
_ISR_0280                         00000280
_ISR_028A                         0000028A
_ISR_029A                         0000029A
_ISR_029D                         0000029D
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_029E                         0000029E
_ISR_02AE                         000002AE
_ISR_02AF                         000002AF
_ISR_02B2                         000002B2
_ISR_02B4                         000002B4
_ISR_02B9                         000002B9
_ISR_02BA                         000002BA
_ISR_0317                         00000317
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005C                   0000005C
_MAIN_PROG_0064                   00000064
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      00000179
ball_at_right                     0000018C
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    0000015C
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000A3
bcd_add                           000002E5
black                             
bottom_bound                      000000B6
brick_wall                        00000030
case                              
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
cyan                              
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

d1                                000000A0
d2                                000000A1
d3                                000000A2
dark_blue                         
digit_offset                      00000302
digit_row                         000000FD
digit_version                     00000002
digits                            00000065
draw_border                       
draw_brick                        
draw_empty                        00000298
draw_paddle                       000002AC
draw_row1                         000001B2
draw_row2                         000001E0
draw_row3                         0000020E
draw_row4                         0000023C
draw_row5                         0000026A
draw_score                        000000C7
draw_top_wall                     00000110
draw_void                         0000012A
draw_void_exit                    0000019E
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        000002D3
field_end                         000002DD
flags                             00000000
green                             
hi_line                           000002CC
ibw                               0000030F
inc_score                         000002F0
init_brick_wall                   00000308
isr                               00000004
isr_exit                          00000029
lcount                            00000001
leave                             
max_score                         00000780
move_ball                         0000009D
move_ball_exit                    000000BC
move_y                            000000AD
next_task                         
no_ball                           00000139
no_ball_dly                       00000136
no_wall_draw                      000001A8
paddle_pos                        00000006
pickn                             
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         0000002E
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-6-2019  17:17:59         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

pushw                             
q                                 0000000A
r                                 00000002
read_paddle                       0000007E
right_bound                       000000A7
row1                              00000030
row2                              00000031
row3                              00000032
row3_exit                         00000232
row4                              00000033
row5                              00000034
score                             0000000C
score_exit                        000000F3
set_presync                       0000003B
set_vsync                         00000053
slice                             00000002
sound                             00000091
sound_timer                       000000A4
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000313
task                              00000003
task_switch                       00000012
tdelay                            
temp                              00000004
test_loop                         00000057
top_wall_exit                     00000120
user_input                        00000076
video_first                       000000BF
vsync                             00000046
vsync_end                         00000068
wait_field_end                    000002C6
white                             
yellow                            
yes_ball                          00000155

Errors   :     0
Warnings :     0 reported,     1 suppressed
Messages :     0 reported,   275 suppressed

