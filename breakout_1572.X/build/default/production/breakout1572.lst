MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00034 ;    12        |  1      | task 5, sound timer
                      00035 ;    13        |  1      | task 6, user input
                      00036 ;    14        |  1      | task 7, move ball
                      00037 ;    15        |  1      | task 8, collision control
                      00038 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00039 ;    30-49     |  20     | task 10, display score and balls count
                      00040 ;    50-57     |  8      | task 11, draw top border
                      00041 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00042 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00043 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00044 ;    242-249   |  8      | task 15, draw paddle
                      00045 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00046 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00047  
                      00048     
                      00049     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00050     
8007   3FA7           00051     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00052     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00053     
                      00054     radix dec
                      00055 
                      00056 ; constants
  00000800            00057 PROG_SIZE equ 2048  ; program words
  00000080            00058 EEPROM_SIZE equ 128 ; high endurance flash words
                      00059  
  01B4F360            00060 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00061 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00062 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00063  
                      00064 ; NTSC signal 
  00003D76            00065 Fhorz equ 15734 ; horizontal frequency
  0000071B            00066 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00067 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00068 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00069 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00070 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00071 ; boolean flags 
  00000000            00072 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00073 F_EVEN equ 1    ; even field
  00000002            00074 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00075 F_SOUND equ 3   ; sound enabled 
  00000004            00076 F_START equ 4   ; game started 
  00000005            00077 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00078 F_OVER equ 6    ; game over
  00000007            00079 F_COOL equ 7    ; player got maximum score
                      00080  
                      00081 ;pins assignment
  00000000            00082 AUDIO EQU RA0
  00000000            00083 PADDLE equ RA0
  00000001            00084 CHROMA equ RA1
  00000002            00085 SYNC_OUT equ RA2
  00000003            00086 START_BTN equ RA3 
  00000004            00087 VIDEO_OUT equ RA4
  00000005            00088 CLKIN equ RA5
                      00089  
                      00090     ; constants used in video display
                      00091 ; values are in Tcy for x dimension.
                      00092 ; values are in scan lines for y dimension.    
  0000001E            00093 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  0000004A            00094 FIRST_BRICK_Y equ 74 ; lcount first brick scan line
  000000F9            00095 LAST_VIDEO_LINE  equ 249 ; last video line displayed
  00000045            00096 LEFT_MARGIN equ 69  ; tcy delay before any display
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00097 PLAY_WIDTH equ 48 ; pixels
  00000005            00098 PIXEL_WIDTH equ 5; pixel width in tcy 
  00000008            00099 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00100 BRICK_WIDTH equ 4  ; pixels
  00000004            00101 BORDER_WIDTH equ 4  ; Tcy
  00000002            00102 BALL_WIDTH equ 2 ; pixels
  000000C0            00103 BALL_MASK equ 0xC0 ;  
  00000008            00104 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00105 BALL_LEFT_BOUND equ 0 ; pixel
  0000002E            00106 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00107 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00108 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE
  00000008            00109 PADDLE_WIDTH equ 8 ; pixels
  00000004            00110 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00111 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  000000FF            00113 PADDLE_MASK equ 0xFF 
  00000006            00114 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00115 ROW1_Y equ 74
  00000052            00116 ROW2_Y equ 82
  0000005A            00117 ROW3_Y equ 90
  00000062            00118 ROW4_Y equ 98
  0000006A            00119 ROW5_Y equ 106
  00000072            00120 ROW6_Y equ 114 
                      00121 
                      00122 ;;;;;;;;;;;;;;;;;;;;;;
                      00123 ;; assembler macros ;;
                      00124 ;;;;;;;;;;;;;;;;;;;;;;
                      00125 
                      00126 ; leave task 
                      00127 leave macro
                      00128     goto isr_exit
                      00129     endm
                      00130     
                      00131 ; move to next task on slice limit
                      00132 ; parameters:
                      00133 ;   s  nomber of slices used by the task    
                      00134 next_task macro s    
                      00135     incf slice
                      00136     movlw s
                      00137     subwf slice,W
                      00138     skpz
                      00139     leave
                      00140     clrf slice
                      00141     incf task
                      00142     leave
                      00143     endm
                      00144     
                      00145     
                      00146 ; swap variable with WREG    
                      00147 swap_var macro var
                      00148     xorwf var
                      00149     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     endm
                      00152     
                      00153 
                      00154 ; delay in machine cycle T
                      00155 ; parameters:
                      00156 ;   mc   number of machine cycles    
                      00157 tdelay macro mc 
                      00158     if mc==0
                      00159     exitm
                      00160     endif
                      00161     if mc==1
                      00162     nop
                      00163     exitm
                      00164     endif
                      00165     if mc==2
                      00166     bra $+1
                      00167     exitm
                      00168     endif
                      00169     if mc==3
                      00170     nop
                      00171     bra $+1
                      00172     exitm
                      00173     endif
                      00174     if mc==4
                      00175     call _4tcy
                      00176     exitm
                      00177     endif
                      00178     if mc==5
                      00179     call _5tcy
                      00180     exitm
                      00181     endif
                      00182     if mc>5
                      00183     variable q=(mc-3)/3
                      00184     variable r=mc-3-3*q
                      00185     movlw q
                      00186     call _3ntcy ; tcy=3+3*q
                      00187     if (r==2)
                      00188     bra $+1
                      00189     exitm
                      00190     endif 
                      00191     if (r==1)
                      00192     nop
                      00193     exitm
                      00194     endif
                      00195     endif
                      00196     endm
                      00197 
                      00198 ; enable weak pull on VIDEO_OUT
                      00199 ; to create a porch
                      00200 porch_on macro
                      00201     banksel WPUA
                      00202     bsf WPUA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204     
                      00205 ; disable weak pull on VIDEO_OUT
                      00206 ; to remove porch
                      00207 porch_off macro
                      00208     banksel WPUA
                      00209     bcf WPUA,VIDEO_OUT
                      00210     endm
                      00211     
                      00212 ; enable chroma output
                      00213 chroma_on macro
                      00214     banksel TRISA
                      00215     bcf TRISA, CHROMA
                      00216     endm
                      00217     
                      00218 ;disable chroma output    
                      00219 chroma_off macro
                      00220     banksel TRISA
                      00221     bsf TRISA,CHROMA
                      00222     endm
                      00223     
                      00224 ; output chroma reference    
                      00225 chroma_ref macro
                      00226     banksel PWM1CON
                      00227     bcf PWM1CON,POL
                      00228     endm
                      00229     
                      00230 ; set chroma phase to 180 degree
                      00231 chroma_invert macro
                      00232     banksel PWM1CON
                      00233     bsf PWM1CON,POL
                      00234     endm
                      00235 
                      00236 ;;;;;;;;;;;;;;;;;;;;;;
                      00237 ;   colors macros
                      00238 ;   TRISA configuration    
                      00239 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00240 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00241 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00242 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00243 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00244 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00245 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00246 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00247  
                      00248 ;set video output to black    
                      00249 black macro
                      00250     movlw BLACK
                      00251     movwf TRISA
                      00252     endm
                      00253     
                      00254 ; set video output to white    
                      00255 white macro    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     movlw WHITE
                      00257     movwf TRISA
                      00258     endm
                      00259 
                      00260 #define gray white
                      00261     
                      00262 ; set video output to mauve    
                      00263 mauve macro
                      00264     movlw MAUVE
                      00265     movwf TRISA
                      00266     endm
                      00267 
                      00268 ; set video output to yellow   
                      00269 yellow macro
                      00270     movlw YELLOW
                      00271     movwf TRISA
                      00272     endm
                      00273     
                      00274 ; set video output to blue
                      00275 blue macro
                      00276     movlw BLUE
                      00277     movwf TRISA
                      00278     endm
                      00279     
                      00280 ; set video output to dark blue    
                      00281 dark_green macro
                      00282     movlw DARK_GREEN
                      00283     movwf TRISA
                      00284     endm
                      00285 
                      00286 ; shift out 1 bit    
                      00287 display_bit macro n
                      00288     lslf vbuffer+n
                      00289     movlw BLACK
                      00290     skpnc
                      00291     movfw fg_color
                      00292     movwf TRISA
                      00293     endm
                      00294     
                      00295 ; display a byte of pixels    
                      00296 ; input:
                      00297 ;   n is byte number {0..5}    
                      00298 display_byte macro n
                      00299     display_bit n
                      00300     display_bit n
                      00301     display_bit n
                      00302     display_bit n
                      00303     display_bit n
                      00304     display_bit n
                      00305     display_bit n
                      00306     display_bit n
                      00307     endm
                      00308     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309    
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00311 ;  stack manipulation macros
                      00312 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00313 STACK_SIZE equ 16 ; size of argument stack
                      00314 #define T INDF0 ; indirect access to top of argument stack
                      00315 #define SP FSR0 ; use FSR0 as stack pointer 
                      00316 ; push WREG on T
                      00317 pushw  macro
                      00318     movwi --SP
                      00319     endm
                      00320   
                      00321 ; pop WREG from T
                      00322 popw macro
                      00323     moviw SP++
                      00324     endm
                      00325     
                      00326 ; swap WREG with 
                      00327 swapw  macro
                      00328     xorwf T
                      00329     xorwf T,W
                      00330     xorwf T
                      00331     endm
                      00332 
                      00333 ; drop n elements from stack
                      00334 dropn macro n
                      00335     addfsr T,n
                      00336     endm
                      00337 
                      00338 ; copy nth element of stack to WREG
                      00339 ;  n {0..31}, 0 is T   
                      00340 pickn macro n
                      00341     moviw n[SP]
                      00342     endm
                      00343    
                      00344 ; copy WREG to nth element of stack
                      00345 ; n {0..31}, 0 is T
                      00346 pokew macro n
                      00347     movwi n[SP]
                      00348     endm
                      00349     
                      00350     
                      00351 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00352 ;;    variables
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00354  
                      00355     
                      00356     udata 0x20 ; bank 0
0020                  00357 stack res 16 ; arguments stack
0030                  00358 seed res 2 ; prng seed used by lfsr16
                      00359  
                      00360 ; video display manipulate TRISA register
                      00361 ; to avoid banksel during video update
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; place variables related to video in same bank as TRISA 
                      00363 v_array   udata 0xA0 ; bank 1
00A0                  00364 vbuffer res 6
00A6                  00365 temp3 res 1
00A7                  00366 row1 res 6; brick wall row1
00AD                  00367 fill1 res 2 
00AF                  00368 row2 res 6
00B5                  00369 fill2 res 2 
00B7                  00370 row3 res 6
00BD                  00371 fill3 res 2 
00BF                  00372 row4 res 6
00C5                  00373 fill4 res 2 
00C7                  00374 row5 res 6
00CD                  00375 fill5 res 2
00CF                  00376 row6 res 6
00D5                  00377 fill6 res 2 
00D7                  00378 fg_color res 1
00D8                  00379 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00380 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00381 ball_byte res 1 ; byte offset in vbuffer
00DC                  00382 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00383 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00384 balls res 1 ; number of recking balls available
                      00385  
                      00386 ; common 16 bytes RAM accessible whatever the selected bank 
                      00387     udata_shr 
0000                  00388 flags  res 1 ; boolean variables
0001                  00389 lcount res 1 ; video field line counter
0002                  00390 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00391 task res 1 ; where in video phase 
0004                  00392 temp1 res 1 ; temporary storage
0005                  00393 temp2 res 1 ; 
0006                  00394 paddle_pos res 1 
0007                  00395 ball_x res 1
0008                  00396 ball_y res 1
0009                  00397 ball_dx res 1
000A                  00398 ball_dy res 1
000B                  00399 ball_speed res 1
000C                  00400 score res 2 ; score stored in Binary Coded Decimal
000E                  00401 ball_timer res 1 
000F                  00402 odd_fld_pread res 1 ; value of paddle read during odd field
                      00403  
                      00404 ;; cpu reset entry point
                      00405 RES_VECT  CODE    0x0000            
0000   2???           00406     goto    initialize  ; go to beginning of program
0001   0001           00407     reset   
0002   0001           00408     reset
0003   0001           00409     reset
                      00410 
                      00411 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00412 ; interrupt service routine triggered by PWM3 period rollover
                      00413 ; after initialization is done all processing in done inside 
                      00414 ; this interrupt.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; It is designed as a round robin scheduler.    
                      00416 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00417 ISR CODE 0x0004
0004                  00418 isr
0004   0A??           00419     incf lcount
0005   1903           00420     skpnz
0006   1400           00421     bsf flags, F_BIT8
0007   1900           00422     btfsc flags, F_SYNC
0008   2???           00423     goto task_switch
0009   002?           00424     banksel vbuffer
000A   01??           00425     clrf vbuffer
000B   01??           00426     clrf vbuffer+1
000C   01??           00427     clrf vbuffer+2
000D   01??           00428     clrf vbuffer+3
000E   01??           00429     clrf vbuffer+4
000F   01??           00430     clrf vbuffer+5
                      00431 ; generate chroma sync
                      00432     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18>5
  0005                    M     variable q=(18-3)/3
  0000                    M     variable r=18-3-3*q
0010   3005               M     movlw q
0011   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     endif
                      00433     chroma_ref
0012   003B               M     banksel PWM1CON
0013   121B               M     bcf PWM1CON,POL
0014   0021           00434     banksel TRISA
0015   108C           00435     bcf TRISA,CHROMA
                      00436     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3
  0001                    M     variable r=16-3-3*q
0016   3004               M     movlw q
0017   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0018   0000               M     nop
                          M     exitm
0019   148C           00437     bsf TRISA,CHROMA
                      00438     porch_on
001A   0024               M     banksel WPUA
001B   160C               M     bsf WPUA,VIDEO_OUT
001C                  00439 task_switch ; round robin task scheduler   
001C   08??           00440     movfw task
001D   000B           00441     brw
001E   2???           00442     goto pre_vsync ;task 0, vertical pre-equalization pulses
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F   2???           00443     goto vsync ;task 1, vertical sync pulses
0020   2???           00444     goto post_vsync ;task 2, vertical post-equalization pulses
0021   2???           00445     goto vsync_end ;task 3, return to normal video line
0022   2???           00446     goto read_paddle; task 4, read paddle potentiometer
0023   2???           00447     goto sound ;task 5, check sound timer expiration
0024   2???           00448     goto read_button ;task 6,  read button
0025   2???           00449     goto move_ball ;task 7, move recking ball.
0026   2???           00450     goto collision ; task 8, check for collision with brick wall and paddle
0027   2???           00451     goto video_first ; task 9, wait FIRST_VIDEO line.
0028   2???           00452     goto draw_score ;task 10,  draw score en ball count
0029   2???           00453     goto draw_top_wall ;task 11,  draw top wall
002A   2???           00454     goto draw_sides ;task 12, draw play space
002B   2???           00455     goto draw_bricks  ;task 13, draw bricks rows
002C   2???           00456     goto draw_empty;task 14, draw empty space down to bottom
002D   2???           00457     goto draw_paddle ;task 15, draw paddle
002E   2???           00458     goto wait_field_end ;task 16, idle to end of video field
002F   0001           00459     reset ; error trap, task out of range
0030                  00460 isr_exit  
                      00461     porch_off
0030   0024               M     banksel WPUA
0031   120C               M     bcf WPUA,VIDEO_OUT
0032   003B           00462     banksel PWM3INTF
0033   103D           00463     bcf PWM3INTF,PRIF
0034   0009           00464     retfie
                      00465 
                      00466 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00467 ;;  all tasks routine are here            ;;
                      00468 ;;  each must be terminate by leave macro ;;    
                      00469 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00470     
                      00471 ; task 0, vertical synchronization pre equalization
                      00472 ; 6 half horizontal scan lines    
0035                  00473 pre_vsync
0035   08??           00474     movfw slice
0036   1903           00475     skpnz
0037   2???           00476     goto set_presync
                      00477     next_task 6
0038   0A??               M     incf slice
0039   3006               M     movlw 6
003A   02??               M     subwf slice,W
003B   1D03               M     skpz
                          M     leave
003C   2???               M     goto isr_exit
003D   01??               M     clrf slice
003E   0A??               M     incf task
                          M     leave
003F   2???               M     goto isr_exit
0040                  00478 set_presync    
0040   003B           00479     banksel PWM3DC
0041   3041           00480     movlw HEQUAL
0042   00B3           00481     movwf PWM3DCL
0043   01B4           00482     clrf PWM3DCH
0044   3003           00483     movlw high HALF_LINE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0045   00B6           00484     movwf PWM3PRH
0046   308D           00485     movlw low HALF_LINE
0047   00B5           00486     movwf PWM3PRL
0048   17BF           00487     bsf PWM3LDCON,7
0049   0A??           00488     incf slice
                      00489     leave
004A   2???               M     goto isr_exit
                      00490     
                      00491 ; task 1, vertical synchronization pulses
                      00492 ; 6 half horizontal scan lines    
004B                  00493 vsync 
004B   08??           00494     movfw slice
004C   1903           00495     skpnz
004D   2???           00496     goto set_vsync
                      00497     next_task 6
004E   0A??               M     incf slice
004F   3006               M     movlw 6
0050   02??               M     subwf slice,W
0051   1D03               M     skpz
                          M     leave
0052   2???               M     goto isr_exit
0053   01??               M     clrf slice
0054   0A??               M     incf task
                          M     leave
0055   2???               M     goto isr_exit
0056                  00498 set_vsync
0056   003B           00499     banksel PWM3DC
0057   3008           00500     movlw low VSYNC_PULSE
0058   00B3           00501     movwf PWM3DCL
0059   3003           00502     movlw high VSYNC_PULSE
005A   00B4           00503     movwf PWM3DCH
005B   17BF           00504     bsf PWM3LDCON,7
005C   0A??           00505     incf slice
                      00506     leave
005D   2???               M     goto isr_exit
                      00507     
                      00508 ; task 2, vertical synchronisation post equalization pulses
                      00509 ; 6 half horizontal scan lines    
005E                  00510 post_vsync
005E   08??           00511     movfw slice
005F   1903           00512     skpnz
0060   2???           00513     goto set_presync
0061   3006           00514     movlw 6
0062   02??           00515     subwf slice,W
0063   1903           00516     skpnz
0064   2???           00517     goto post_last
0065   0A??           00518     incf slice
                      00519     leave
0066   2???               M     goto isr_exit
0067                  00520 post_last    
0067   0A??           00521     incf task
0068   01??           00522     clrf slice
0069   1C80           00523     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00524     leave
006A   2???               M     goto isr_exit
                      00525     
                      00526 ; task 3, vertical synchronization completed, return to normal line
                      00527 ; rest horizonal line to its normal length.
                      00528 ; set lcount to 9.    
006B                  00529 vsync_end
006B   1100           00530     bcf flags, F_SYNC
006C   003B           00531     banksel PWM3DC
006D   3086           00532     movlw HSYNC
006E   00B3           00533     movwf PWM3DCL
006F   01B4           00534     clrf PWM3DCH
0070   3007           00535     movlw high HPERIOD
0071   00B6           00536     movwf PWM3PRH
0072   301B           00537     movlw low HPERIOD
0073   00B5           00538     movwf PWM3PRL
0074   17BF           00539     bsf PWM3LDCON,7
0075   0A??           00540     incf task
0076   36??           00541     lsrf lcount
                      00542     leave
0077   2???               M     goto isr_exit
                      00543 
                      00544 ; task 4, read paddle potentiometer
                      00545 ; paddle_pos is mean between 2 reading
                      00546 ; first reading during odd field is saved
                      00547 ; in 'odd_fld_pread' variable
                      00548 ; second reading during even field
                      00549 ; is added to first and result divided by 4
                      00550 ; to get paddle_pos    
0078                  00551 read_paddle
0078   0A??           00552     incf task
0079   1980           00553     btfsc flags, F_SOUND
                      00554     leave
007A   2???               M     goto isr_exit
007B   0021           00555     banksel ADCON0
007C   3003           00556     movlw 3
007D   009D           00557     movwf ADCON0
007E   189D           00558     btfsc ADCON0,NOT_DONE
007F   3???           00559     bra $-1
0080   081C           00560     movfw ADRESH
                      00561     pushw
0081   0019               M     movwi --SP
0082   3010           00562     movlw 4<<CHS0
0083   009D           00563     movwf ADCON0
0084   1C80           00564     btfss flags, F_EVEN
0085   3???           00565     bra even_field_read
                      00566     popw
0086   0012               M     moviw SP++
0087   00??           00567     movwf odd_fld_pread
                      00568     leave
0088   2???               M     goto isr_exit
                      00569 ; potentiometer read during even field
0089                  00570 even_field_read    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00571     popw
0089   0012               M     moviw SP++
008A   07??           00572     addwf odd_fld_pread
008B   0C??           00573     rrf odd_fld_pread
008C   36??           00574     lsrf odd_fld_pread,W
008D   00??           00575     movwf paddle_pos
008E   3028           00576     movlw PADDLE_LIMIT
008F   02??           00577     subwf paddle_pos,W
0090   3028           00578     movlw PADDLE_LIMIT
0091   1803           00579     skpnc
0092   00??           00580     movwf paddle_pos
                      00581 ; create paddle mask
0093   2???           00582     call compute_paddle_mask
                      00583     leave
0094   2???               M     goto isr_exit
                      00584 
                      00585     
                      00586 ; task 5,  sound timer
                      00587 ; if sound active process it.    
0095                  00588 sound
0095   0A??           00589     incf task
0096   1D80           00590     btfss flags, F_SOUND
                      00591     leave
0097   2???               M     goto isr_exit
0098   1A80           00592     btfsc flags, F_PAUSE
0099   2???           00593     call sound_fx1
009A   002?           00594     banksel sound_timer
009B   0B??           00595     decfsz sound_timer
                      00596     leave
009C   2???               M     goto isr_exit
009D                  00597 sound_off    
009D   1180           00598     bcf flags, F_SOUND
009E   003B           00599     banksel PWM2CON
009F   132B           00600     bcf PWM2CON,OE
00A0   13AB           00601     bcf PWM2CON,EN
00A1   0021           00602     banksel TRISA
00A2   140C           00603     bsf TRISA,PADDLE
                      00604     leave
00A3   2???               M     goto isr_exit
                      00605 
                      00606 ; sound effect, low pitch to high-pitch    
00A4                  00607 sound_fx1
00A4   1C80           00608     btfss flags, F_EVEN
00A5   0008           00609     return
00A6   003B           00610     banksel PWM2CON
00A7   36A6           00611     lsrf PWM2PRH
00A8   0CA5           00612     rrf PWM2PRL
00A9   36A4           00613     lsrf PWM2DCH
00AA   0CA3           00614     rrf PWM2DCL
00AB   17AF           00615     bsf PWM2LDCON,LDA
00AC   0008           00616     return
                      00617     
                      00618 ;; sound effect, high pitch to low-pitch    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00619 ;sound_fx2
                      00620 ;    btfss flags, F_EVEN
                      00621 ;    return
                      00622 ;    banksel PWM2CON
                      00623 ;    lslf PWM2PRL
                      00624 ;    rlf PWM2PRH
                      00625 ;    lslf PWM2DCL
                      00626 ;    rlf PWM2DCH
                      00627 ;    bsf PWM2LDCON,LDA
                      00628 ;    return
                      00629     
                      00630 ; initialize sound generation.
                      00631 ; input:
                      00632 ;   T = duration
                      00633 ;   WREG = index in frequency table    
                      00634 ; outpout:
                      00635 ;   none    
00AD                  00636 sound_init
                      00637     pushw  ; ( d i -- )
00AD   0019               M     movwi --SP
00AE   1580           00638     bsf flags, F_SOUND
00AF   003B           00639     banksel PWM2CON
00B0   0800           00640     movfw T
00B1   2???           00641     call frequency
00B2   00A6           00642     movwf PWM2PRH
00B3   0A00           00643     incf T,W
00B4   2???           00644     call frequency
00B5   00A5           00645     movwf PWM2PRL
00B6   3626           00646     lsrf PWM2PRH,W
00B7   00A4           00647     movwf PWM2DCH
00B8   0C25           00648     rrf PWM2PRL,W
00B9   00A3           00649     movwf PWM2DCL
00BA   17AF           00650     bsf PWM2LDCON,LDA
00BB   172B           00651     bsf PWM2CON,OE
00BC   17AB           00652     bsf PWM2CON,EN
00BD   002?           00653     banksel sound_timer
                      00654     pickn 1
00BE   3F01               M     moviw 1[SP]
00BF   00??           00655     movwf sound_timer
                      00656     dropn 2
00C0   3102               M     addfsr T,2
00C1   0021           00657     banksel TRISA
00C2   100C           00658     bcf TRISA,AUDIO
00C3   0008           00659     return
                      00660     
                      00661 ;task 6, read button and paddle position
00C4                  00662 read_button
00C4   0A??           00663     incf task
00C5   0020           00664     banksel PORTA
00C6   080C           00665     movfw PORTA
00C7   3908           00666     andlw 1<<START_BTN
00C8   00??           00667     movwf temp1
00C9   1B00           00668     btfsc flags, F_OVER
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   3???           00669     bra game_over
00CB   1A00           00670     btfsc flags,F_START
00CC   3???           00671     bra game_running
                      00672 ; game not running
00CD   1D03           00673     skpz
00CE   3???           00674     bra skip_2_tasks
                      00675 ; start game    
00CF   2???           00676     call game_init
                      00677     leave
00D0   2???               M     goto isr_exit
00D1                  00678 game_running
00D1   1E80           00679     btfss flags, F_PAUSE
                      00680     leave
00D2   2???               M     goto isr_exit
                      00681 ; game on pause    
00D3                  00682 wait_trigger
00D3   1D03           00683     skpz
00D4   3???           00684     bra skip_2_tasks
00D5   1280           00685     bcf flags,F_PAUSE
00D6   2???           00686     call set_ball_dx
                      00687     leave
00D7   2???               M     goto isr_exit
                      00688 ; game over
00D8                  00689 game_over
00D8   1D03           00690     skpz
00D9   3???           00691     bra skip_2_tasks
00DA   2???           00692     call game_init
                      00693 ;    incf task
                      00694     leave
00DB   2???               M     goto isr_exit
                      00695 ; while game not running skip 'move_ball' and 'collision' tasks    
00DC                  00696 skip_2_tasks
00DC   08??           00697     movfw paddle_pos
00DD   3E02           00698     addlw 2
00DE   00??           00699     movwf ball_x
00DF   2???           00700     call compute_ball_mask
00E0   0A??           00701     incf task ; skip move_ball
00E1   0A??           00702     incf task ; skip collision
00E2   2???           00703     call lfsr16
                      00704     leave
00E3   2???               M     goto isr_exit
                      00705 
                      00706     
                      00707     
                      00708 
                      00709 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00710 ; paddle_byte=paddle_pos/8
                      00711 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00E4                  00712 compute_paddle_mask
00E4   36??           00713     lsrf paddle_pos,W
00E5   3689           00714     lsrf WREG
00E6   3689           00715     lsrf WREG
00E7   00??           00716     movwf paddle_byte
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   30FF           00717     movlw PADDLE_MASK
00E9   00??           00718     movwf paddle_mask
00EA   01??           00719     clrf paddle_mask+1
00EB   3007           00720     movlw 7
00EC   05??           00721     andwf paddle_pos,W
00ED   1903           00722     skpnz
00EE   0008           00723     return
00EF   36??           00724     lsrf paddle_mask
00F0   0C??           00725     rrf paddle_mask+1
00F1   0B89           00726     decfsz WREG
00F2   3???           00727     bra $-3
00F3   0008           00728     return
                      00729     
                      00730     
                      00731     
                      00732     
                      00733 ; task 7, move recking ball.   
00F4                  00734 move_ball
00F4   0B??           00735     decfsz ball_timer
00F5   3???           00736     bra move_ball_exit
00F6   08??           00737     movfw ball_speed
00F7   00??           00738     movwf ball_timer
00F8   08??           00739     movfw ball_dx
00F9   07??           00740     addwf ball_x
00FA   1F80           00741     btfss ball_dx,7
00FB   3???           00742     bra right_bound
00FC                  00743 left_bound
00FC   1F80           00744     btfss ball_x,7
00FD   3???           00745     bra move_y
00FE   01??           00746     clrf ball_x
00FF   09??           00747     comf ball_dx
0100   0A??           00748     incf ball_dx
0101   3???           00749     bra move_y
0102                  00750 right_bound    
0102   08??           00751     movfw ball_x
0103   3C2E           00752     sublw BALL_RIGHT_BOUND
0104   1803           00753     skpnc
0105   3???           00754     bra move_y
0106   03??           00755     decf ball_x
0107   09??           00756     comf ball_dx
0108   0A??           00757     incf ball_dx
0109                  00758 move_y
0109   08??           00759     movfw ball_dy
010A   07??           00760     addwf ball_y
010B   1F80           00761     btfss ball_dy,7
010C   3???           00762     bra bottom_bound
010D                  00763 top_bound    
010D   303A           00764     movlw BALL_TOP_BOUND
010E   02??           00765     subwf ball_y,W
010F   1803           00766     skpnc
0110   3???           00767     bra move_ball_exit
0111   303A           00768     movlw BALL_TOP_BOUND
0112   00??           00769     movwf ball_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   09??           00770     comf ball_dy
0114   0A??           00771     incf ball_dy
0115   3???           00772     bra move_ball_exit
0116                  00773 bottom_bound
0116   08??           00774     movfw ball_y
0117   3CED           00775     sublw PADDLE_Y-BALL_HEIGHT-1
0118   1803           00776     skpnc
0119   3???           00777     bra move_ball_exit
011A   2???           00778     call paddle_bounce
011B   1803           00779     skpnc
011C   3???           00780     bra move_ball_exit
011D                  00781 ball_lost
011D   1680           00782     bsf flags, F_PAUSE ; pause game
011E   002?           00783     banksel balls
011F   0B??           00784     decfsz balls
0120   3???           00785     bra $+3
0121   1200           00786     bcf flags, F_START
0122   1700           00787     bsf flags, F_OVER
0123   3002           00788     movlw 2
0124   07??           00789     addwf paddle_pos,W
0125   00??           00790     movwf ball_x
0126   30EF           00791     movlw PADDLE_Y-BALL_HEIGHT+1
0127   00??           00792     movwf ball_y
0128   30FC           00793     movlw -4
0129   00??           00794     movwf ball_dy
012A   3008           00795     movlw 8
                      00796     pushw
012B   0019               M     movwi --SP
012C   3002           00797     movlw 2
012D   2???           00798     call sound_init
012E   0A??           00799     incf task ; skip collision task
012F                  00800 move_ball_exit
012F   2???           00801     call compute_ball_mask
0130   0A??           00802     incf task
                      00803     leave
0131   2???               M     goto isr_exit
                      00804 
                      00805 ; check if ball is bouncing on paddle
                      00806 ; input:
                      00807 ;   none
                      00808 ; output:
                      00809 ;   C set if bounced    
0132                  00810 paddle_bounce
                      00811 ; if ball_x over paddle bounce ball
0132   08??           00812     movfw paddle_pos
                      00813     pushw
0133   0019               M     movwi --SP
0134   1903           00814     skpnz
0135   0380           00815     decf T
0136   3E08           00816     addlw PADDLE_WIDTH
                      00817     pushw
0137   0019               M     movwi --SP
0138   08??           00818     movfw ball_x
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0139   2???           00819     call between
013A   1803           00820     skpnc
013B   3???           00821     bra bouncing
013C   1003           00822     bcf STATUS,C
013D   0008           00823     return
013E                  00824 bouncing
013E   30EE           00825     movlw PADDLE_Y-BALL_HEIGHT
013F   00??           00826     movwf ball_y
0140   09??           00827     comf ball_dy
0141   0A??           00828     incf ball_dy
                      00829 ; bounce direction depend where paddle was hit.    
0142   08??           00830     movfw paddle_pos
0143   02??           00831     subwf ball_x,W
0144   1C03           00832     skpc
0145   3???           00833     bra bounce_left
0146   1903           00834     skpnz
0147   3???           00835     bra bounce_left
0148   3006           00836     movlw PADDLE_WIDTH-2
0149   07??           00837     addwf paddle_pos,W
014A   02??           00838     subwf ball_x,W
014B   3001           00839     movlw 1
014C   1803           00840     skpnc
014D   00??           00841     movwf ball_dx ; bounce right
014E   3???           00842     bra paddle_sound
014F                  00843 bounce_left
014F   30FF           00844     movlw -1
0150   00??           00845     movwf ball_dx
0151                  00846 paddle_sound    
0151   3002           00847     movlw 2
                      00848     pushw
0152   0019               M     movwi --SP
0153   2???           00849     call sound_init
                      00850 ; skip collision task
0154   0A??           00851     incf task
                      00852 ; report bounce    
0155   1403           00853     bsf STATUS,C
0156   0008           00854     return
                      00855     
                      00856     
                      00857 ; compute ball_mask and ball_byte
                      00858 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00859 ; ball_byte= ball_x/8     
0157                  00860 compute_ball_mask
0157   002?           00861     banksel vbuffer
0158   36??           00862     lsrf ball_x,W
0159   3689           00863     lsrf WREG
015A   3689           00864     lsrf WREG
015B   00??           00865     movwf ball_byte
015C   30C0           00866     movlw BALL_MASK
015D   00??           00867     movwf ball_mask
015E   01??           00868     clrf ball_mask+1
015F   3007           00869     movlw 7
0160   05??           00870     andwf ball_x,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0161   1903           00871     skpnz
0162   0008           00872     return
0163   36??           00873     lsrf ball_mask
0164   0C??           00874     rrf ball_mask+1
0165   0B89           00875     decfsz WREG
0166   3???           00876     bra $-3
0167   0008           00877     return
                      00878     
                      00879 ; task 8, collision detection
0168                  00880 collision
0168   304A           00881     movlw ROW1_Y
                      00882     pushw
0169   0019               M     movwi --SP
016A   307A           00883     movlw ROW6_Y+BRICK_HEIGHT
                      00884     pushw
016B   0019               M     movwi --SP
016C   08??           00885     movfw ball_y
016D   2???           00886     call between
016E   1C03           00887     skpc
016F   3???           00888     bra collision_exit
0170   002?           00889     banksel row1
0171   0187           00890     clrf FSR1H
0172   30??           00891     movlw low row1
0173   0086           00892     movwf FSR1L
0174   304A           00893     movlw ROW1_Y
0175   02??           00894     subwf ball_y,W
0176   39F8           00895     andlw 0xf8
                      00896     pushw
0177   0019               M     movwi --SP
0178   0786           00897     addwf FSR1L
0179   08??           00898     movfw ball_byte
017A   0786           00899     addwf FSR1L
017B   30F0           00900     movlw 0xf0
017C   1900           00901     btfsc ball_x,2
017D   0E89           00902     swapf WREG
017E   0501           00903     andwf INDF1,W
017F   1903           00904     skpnz
0180   3???           00905     bra collision_exit
0181   300F           00906     movlw 0x0f
0182   1900           00907     btfsc ball_x,2
0183   0E89           00908     swapf WREG
0184   0581           00909     andwf INDF1
0185   09??           00910     comf ball_dy
0186   0A??           00911     incf ball_dy
0187   08??           00912     movfw ball_dy
0188   07??           00913     addwf ball_y
                      00914     popw
0189   0012               M     moviw SP++
018A   3689           00915     lsrf WREG
018B   3689           00916     lsrf WREG
018C   000B           00917     brw
018D   3009           00918     movlw 9
018E   3???           00919     bra add_score
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   3009           00920     movlw 9
0190   3???           00921     bra add_score
0191   3007           00922     movlw 7
0192   3???           00923     bra add_score
0193   3005           00924     movlw 5
0194   3???           00925     bra add_score
0195   3003           00926     movlw 3
0196   3???           00927     bra add_score
0197   3001           00928     movlw 1
0198                  00929 add_score    
0198   2???           00930     call inc_score
0199                  00931 pong_sound
0199   3001           00932     movlw 1
                      00933     pushw
019A   0019               M     movwi --SP
019B   3000           00934     movlw 0
019C   2???           00935     call sound_init
019D                  00936 collision_exit
019D   0A??           00937     incf task
                      00938     leave
019E   2???               M     goto isr_exit
                      00939 
                      00940     
                      00941     
                      00942 ; check if  lb <= x < hb
                      00943 ; 13 tcy    
                      00944 ; input:
                      00945 ;    WREG  x
                      00946 ;    stack ( lb hb -- )     
                      00947 ; output:
                      00948 ;   Carry bit set if true    
019F                  00949 between
019F   00??           00950     movwf temp2
                      00951     pickn 1
01A0   3F01               M     moviw 1[SP]
01A1   02??           00952     subwf temp2,W
01A2   1C03           00953     skpc
01A3   3???           00954     bra between_exit2
01A4   0800           00955     movfw T
01A5   02??           00956     subwf temp2
01A6   0803           00957     movfw STATUS
01A7   3A01           00958     xorlw 1
01A8   0083           00959     movwf STATUS
01A9                  00960 between_exit    
                      00961     dropn 2
01A9   3102               M     addfsr T,2
01AA   0008           00962     return  ; 13 tcy
                      00963 ; add tcy to have constant tcy for this routine whatever the path    
01AB                  00964 between_exit2
01AB   3???           00965     bra $+1
01AC   3???           00966     bra between_exit
                      00967     
                      00968 ; task 9, wait for first video line
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01AD                  00969 video_first
01AD   301D           00970     movlw FIRST_VIDEO_LINE-1
01AE   02??           00971     subwf lcount,W
01AF   1D03           00972     skpz
                      00973     leave
01B0   2???               M     goto isr_exit
01B1   01??           00974     clrf slice
01B2   0A??           00975     incf task
                      00976     leave
01B3   2???               M     goto isr_exit
                      00977    
                      00978 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00979 ; The following tasks are responsible to render video display.
                      00980 ; Each video line must be completed by setting color to black.
                      00981 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00982 
                      00983 ; check if ball is visible on this scan line    
                      00984 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT    
                      00985 ;  22 tcy   
                      00986 ;  input:
                      00987 ;       none    
                      00988 ;  output:
                      00989 ;       C set if true   
01B4                  00990 ball_visible
01B4   08??           00991     movfw ball_y
                      00992     pushw
01B5   0019               M     movwi --SP
01B6   3E08           00993     addlw BALL_HEIGHT
                      00994     pushw
01B7   0019               M     movwi --SP
01B8   08??           00995     movfw lcount
01B9   2???           00996     call between ; +13 tcy
01BA   0008           00997     return
                      00998     
                      00999     
                      01000     
01BB                  01001 display_vbuffer
                      01002     display_byte 0
                          M     display_bit 0
01BB   35??               M     lslf vbuffer+0
01BC   301B               M     movlw BLACK
01BD   1803               M     skpnc
01BE   08??               M     movfw fg_color
01BF   008C               M     movwf TRISA
                          M     display_bit 0
01C0   35??               M     lslf vbuffer+0
01C1   301B               M     movlw BLACK
01C2   1803               M     skpnc
01C3   08??               M     movfw fg_color
01C4   008C               M     movwf TRISA
                          M     display_bit 0
01C5   35??               M     lslf vbuffer+0
01C6   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C7   1803               M     skpnc
01C8   08??               M     movfw fg_color
01C9   008C               M     movwf TRISA
                          M     display_bit 0
01CA   35??               M     lslf vbuffer+0
01CB   301B               M     movlw BLACK
01CC   1803               M     skpnc
01CD   08??               M     movfw fg_color
01CE   008C               M     movwf TRISA
                          M     display_bit 0
01CF   35??               M     lslf vbuffer+0
01D0   301B               M     movlw BLACK
01D1   1803               M     skpnc
01D2   08??               M     movfw fg_color
01D3   008C               M     movwf TRISA
                          M     display_bit 0
01D4   35??               M     lslf vbuffer+0
01D5   301B               M     movlw BLACK
01D6   1803               M     skpnc
01D7   08??               M     movfw fg_color
01D8   008C               M     movwf TRISA
                          M     display_bit 0
01D9   35??               M     lslf vbuffer+0
01DA   301B               M     movlw BLACK
01DB   1803               M     skpnc
01DC   08??               M     movfw fg_color
01DD   008C               M     movwf TRISA
                          M     display_bit 0
01DE   35??               M     lslf vbuffer+0
01DF   301B               M     movlw BLACK
01E0   1803               M     skpnc
01E1   08??               M     movfw fg_color
01E2   008C               M     movwf TRISA
                      01003     display_byte 1
                          M     display_bit 1
01E3   35??               M     lslf vbuffer+1
01E4   301B               M     movlw BLACK
01E5   1803               M     skpnc
01E6   08??               M     movfw fg_color
01E7   008C               M     movwf TRISA
                          M     display_bit 1
01E8   35??               M     lslf vbuffer+1
01E9   301B               M     movlw BLACK
01EA   1803               M     skpnc
01EB   08??               M     movfw fg_color
01EC   008C               M     movwf TRISA
                          M     display_bit 1
01ED   35??               M     lslf vbuffer+1
01EE   301B               M     movlw BLACK
01EF   1803               M     skpnc
01F0   08??               M     movfw fg_color
01F1   008C               M     movwf TRISA
                          M     display_bit 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F2   35??               M     lslf vbuffer+1
01F3   301B               M     movlw BLACK
01F4   1803               M     skpnc
01F5   08??               M     movfw fg_color
01F6   008C               M     movwf TRISA
                          M     display_bit 1
01F7   35??               M     lslf vbuffer+1
01F8   301B               M     movlw BLACK
01F9   1803               M     skpnc
01FA   08??               M     movfw fg_color
01FB   008C               M     movwf TRISA
                          M     display_bit 1
01FC   35??               M     lslf vbuffer+1
01FD   301B               M     movlw BLACK
01FE   1803               M     skpnc
01FF   08??               M     movfw fg_color
0200   008C               M     movwf TRISA
                          M     display_bit 1
0201   35??               M     lslf vbuffer+1
0202   301B               M     movlw BLACK
0203   1803               M     skpnc
0204   08??               M     movfw fg_color
0205   008C               M     movwf TRISA
                          M     display_bit 1
0206   35??               M     lslf vbuffer+1
0207   301B               M     movlw BLACK
0208   1803               M     skpnc
0209   08??               M     movfw fg_color
020A   008C               M     movwf TRISA
                      01004     display_byte 2
                          M     display_bit 2
020B   35??               M     lslf vbuffer+2
020C   301B               M     movlw BLACK
020D   1803               M     skpnc
020E   08??               M     movfw fg_color
020F   008C               M     movwf TRISA
                          M     display_bit 2
0210   35??               M     lslf vbuffer+2
0211   301B               M     movlw BLACK
0212   1803               M     skpnc
0213   08??               M     movfw fg_color
0214   008C               M     movwf TRISA
                          M     display_bit 2
0215   35??               M     lslf vbuffer+2
0216   301B               M     movlw BLACK
0217   1803               M     skpnc
0218   08??               M     movfw fg_color
0219   008C               M     movwf TRISA
                          M     display_bit 2
021A   35??               M     lslf vbuffer+2
021B   301B               M     movlw BLACK
021C   1803               M     skpnc
021D   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021E   008C               M     movwf TRISA
                          M     display_bit 2
021F   35??               M     lslf vbuffer+2
0220   301B               M     movlw BLACK
0221   1803               M     skpnc
0222   08??               M     movfw fg_color
0223   008C               M     movwf TRISA
                          M     display_bit 2
0224   35??               M     lslf vbuffer+2
0225   301B               M     movlw BLACK
0226   1803               M     skpnc
0227   08??               M     movfw fg_color
0228   008C               M     movwf TRISA
                          M     display_bit 2
0229   35??               M     lslf vbuffer+2
022A   301B               M     movlw BLACK
022B   1803               M     skpnc
022C   08??               M     movfw fg_color
022D   008C               M     movwf TRISA
                          M     display_bit 2
022E   35??               M     lslf vbuffer+2
022F   301B               M     movlw BLACK
0230   1803               M     skpnc
0231   08??               M     movfw fg_color
0232   008C               M     movwf TRISA
                      01005     display_byte 3
                          M     display_bit 3
0233   35??               M     lslf vbuffer+3
0234   301B               M     movlw BLACK
0235   1803               M     skpnc
0236   08??               M     movfw fg_color
0237   008C               M     movwf TRISA
                          M     display_bit 3
0238   35??               M     lslf vbuffer+3
0239   301B               M     movlw BLACK
023A   1803               M     skpnc
023B   08??               M     movfw fg_color
023C   008C               M     movwf TRISA
                          M     display_bit 3
023D   35??               M     lslf vbuffer+3
023E   301B               M     movlw BLACK
023F   1803               M     skpnc
0240   08??               M     movfw fg_color
0241   008C               M     movwf TRISA
                          M     display_bit 3
0242   35??               M     lslf vbuffer+3
0243   301B               M     movlw BLACK
0244   1803               M     skpnc
0245   08??               M     movfw fg_color
0246   008C               M     movwf TRISA
                          M     display_bit 3
0247   35??               M     lslf vbuffer+3
0248   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   1803               M     skpnc
024A   08??               M     movfw fg_color
024B   008C               M     movwf TRISA
                          M     display_bit 3
024C   35??               M     lslf vbuffer+3
024D   301B               M     movlw BLACK
024E   1803               M     skpnc
024F   08??               M     movfw fg_color
0250   008C               M     movwf TRISA
                          M     display_bit 3
0251   35??               M     lslf vbuffer+3
0252   301B               M     movlw BLACK
0253   1803               M     skpnc
0254   08??               M     movfw fg_color
0255   008C               M     movwf TRISA
                          M     display_bit 3
0256   35??               M     lslf vbuffer+3
0257   301B               M     movlw BLACK
0258   1803               M     skpnc
0259   08??               M     movfw fg_color
025A   008C               M     movwf TRISA
                      01006     display_byte 4
                          M     display_bit 4
025B   35??               M     lslf vbuffer+4
025C   301B               M     movlw BLACK
025D   1803               M     skpnc
025E   08??               M     movfw fg_color
025F   008C               M     movwf TRISA
                          M     display_bit 4
0260   35??               M     lslf vbuffer+4
0261   301B               M     movlw BLACK
0262   1803               M     skpnc
0263   08??               M     movfw fg_color
0264   008C               M     movwf TRISA
                          M     display_bit 4
0265   35??               M     lslf vbuffer+4
0266   301B               M     movlw BLACK
0267   1803               M     skpnc
0268   08??               M     movfw fg_color
0269   008C               M     movwf TRISA
                          M     display_bit 4
026A   35??               M     lslf vbuffer+4
026B   301B               M     movlw BLACK
026C   1803               M     skpnc
026D   08??               M     movfw fg_color
026E   008C               M     movwf TRISA
                          M     display_bit 4
026F   35??               M     lslf vbuffer+4
0270   301B               M     movlw BLACK
0271   1803               M     skpnc
0272   08??               M     movfw fg_color
0273   008C               M     movwf TRISA
                          M     display_bit 4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0274   35??               M     lslf vbuffer+4
0275   301B               M     movlw BLACK
0276   1803               M     skpnc
0277   08??               M     movfw fg_color
0278   008C               M     movwf TRISA
                          M     display_bit 4
0279   35??               M     lslf vbuffer+4
027A   301B               M     movlw BLACK
027B   1803               M     skpnc
027C   08??               M     movfw fg_color
027D   008C               M     movwf TRISA
                          M     display_bit 4
027E   35??               M     lslf vbuffer+4
027F   301B               M     movlw BLACK
0280   1803               M     skpnc
0281   08??               M     movfw fg_color
0282   008C               M     movwf TRISA
                      01007     display_byte 5
                          M     display_bit 5
0283   35??               M     lslf vbuffer+5
0284   301B               M     movlw BLACK
0285   1803               M     skpnc
0286   08??               M     movfw fg_color
0287   008C               M     movwf TRISA
                          M     display_bit 5
0288   35??               M     lslf vbuffer+5
0289   301B               M     movlw BLACK
028A   1803               M     skpnc
028B   08??               M     movfw fg_color
028C   008C               M     movwf TRISA
                          M     display_bit 5
028D   35??               M     lslf vbuffer+5
028E   301B               M     movlw BLACK
028F   1803               M     skpnc
0290   08??               M     movfw fg_color
0291   008C               M     movwf TRISA
                          M     display_bit 5
0292   35??               M     lslf vbuffer+5
0293   301B               M     movlw BLACK
0294   1803               M     skpnc
0295   08??               M     movfw fg_color
0296   008C               M     movwf TRISA
                          M     display_bit 5
0297   35??               M     lslf vbuffer+5
0298   301B               M     movlw BLACK
0299   1803               M     skpnc
029A   08??               M     movfw fg_color
029B   008C               M     movwf TRISA
                          M     display_bit 5
029C   35??               M     lslf vbuffer+5
029D   301B               M     movlw BLACK
029E   1803               M     skpnc
029F   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A0   008C               M     movwf TRISA
                          M     display_bit 5
02A1   35??               M     lslf vbuffer+5
02A2   301B               M     movlw BLACK
02A3   1803               M     skpnc
02A4   08??               M     movfw fg_color
02A5   008C               M     movwf TRISA
                          M     display_bit 5
02A6   35??               M     lslf vbuffer+5
02A7   301B               M     movlw BLACK
02A8   1803               M     skpnc
02A9   08??               M     movfw fg_color
02AA   008C               M     movwf TRISA
02AB   0008           01008     return
                      01009  
                      01010 ; task 10, draw score en ball count
                      01011 ;  lcount 30-49    
02AC                  01012 draw_score 
02AC   0021           01013     banksel TRISA
02AD   08??           01014     movfw slice
02AE   3689           01015     lsrf WREG
02AF   3689           01016     lsrf WREG
                      01017     pushw
02B0   0019               M     movwi --SP
02B1   300F           01018     movlw 0xf
02B2   05??           01019     andwf score,W
02B3   2???           01020     call digits
02B4   04??           01021     iorwf vbuffer
02B5   0E??           01022     swapf score+1,W
02B6   390F           01023     andlw 0xf
02B7   2???           01024     call digits
02B8   0E89           01025     swapf WREG
02B9   04??           01026     iorwf vbuffer
02BA   300F           01027     movlw 0xf
02BB   05??           01028     andwf score+1,W
02BC   2???           01029     call digits
02BD   04??           01030     iorwf vbuffer+1
02BE   08??           01031     movfw balls
02BF   2???           01032     call digits
02C0   04??           01033     iorwf vbuffer+5
                      01034     tdelay 9
                          M     if 9==0
                          M     exitm
                          M     endif
                          M     if 9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 9>5
  0002                    M     variable q=(9-3)/3
  0000                    M     variable r=9-3-3*q
02C1   3002               M     movlw q
02C2   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02C3   2???           01035     call display_vbuffer
                      01036     dropn 1
02C4   3101               M     addfsr T,1
02C5                  01037 score_exit
                      01038     next_task 5*4
02C5   0A??               M     incf slice
02C6   3014               M     movlw 5*4
02C7   02??               M     subwf slice,W
02C8   1D03               M     skpz
                          M     leave
02C9   2???               M     goto isr_exit
02CA   01??               M     clrf slice
02CB   0A??               M     incf task
                          M     leave
02CC   2???               M     goto isr_exit
                      01039 
                      01040     
                      01041 ; task 11,  draw top wall, 8 screen lines 
                      01042 ; lcount 50-57    
02CD                  01043 draw_top_wall
02CD   0021           01044     banksel TRISA
02CE   09??           01045     comf vbuffer
02CF   09??           01046     comf vbuffer+1
02D0   09??           01047     comf vbuffer+2
02D1   09??           01048     comf vbuffer+3
02D2   09??           01049     comf vbuffer+4
02D3   09??           01050     comf vbuffer+5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4   300B           01051     movlw WHITE
02D5   00??           01052     movwf fg_color
                      01053     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02D6   3016               M     movlw q
02D7   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01054     white
02D8   300B               M     movlw WHITE
02D9   008C               M     movwf TRISA
02DA   2???           01055     call display_vbuffer
                      01056     white
02DB   300B               M     movlw WHITE
02DC   008C               M     movwf TRISA
                      01057     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02DD   2???               M     call _4tcy
                          M     exitm
                      01058     black
02DE   301B               M     movlw BLACK
02DF   008C               M     movwf TRISA
                      01059     next_task BRICK_HEIGHT
02E0   0A??               M     incf slice
02E1   3008               M     movlw BRICK_HEIGHT
02E2   02??               M     subwf slice,W
02E3   1D03               M     skpz
                          M     leave
02E4   2???               M     goto isr_exit
02E5   01??               M     clrf slice
02E6   0A??               M     incf task
                          M     leave
02E7   2???               M     goto isr_exit
                      01060 
                      01061 ; put ball mask in video_buffer
                      01062 ; 38 tcy    
02E8                  01063 put_ball_in_buffer
02E8   2???           01064     call ball_visible ; +22tcy
02E9   1C03           01065     skpc
02EA   3???           01066     bra kill_time
02EB   0187           01067     clrf FSR1H
02EC   30??           01068     movlw low vbuffer
02ED   0086           01069     movwf FSR1L
02EE   08??           01070     movfw ball_byte
02EF   0786           01071     addwf FSR1L
02F0   08??           01072     movfw ball_mask
02F1   001E           01073     movwi FSR1++
02F2   08??           01074     movfw ball_mask+1
02F3   3FC0           01075     movwi [FSR1]
02F4   0008           01076     return ; 37 tcy
02F5                  01077 kill_time 
                      01078     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3
  0001                    M     variable r=7-3-3*q
02F5   3001               M     movlw q
02F6   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02F7   0000               M     nop
                          M     exitm
02F8   0008           01079     return ; 37 tcy
                      01080     
                      01081 ; task 12,  only on even field draw vertical sides and ball.
                      01082 ; lcount 58-73    
02F9                  01083 draw_sides 
02F9   0021           01084     banksel TRISA
02FA   2???           01085     call put_ball_in_buffer
                      01086     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31>5
  000B                    M     variable q=(LEFT_MARGIN-31-3)/3
  0002                    M     variable r=LEFT_MARGIN-31-3-3*q
02FB   300B               M     movlw q
02FC   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
02FD   3???               M     bra $+1
                          M     exitm
                      01087     white
02FE   300B               M     movlw WHITE
02FF   008C               M     movwf TRISA
0300   2???           01088     call display_vbuffer
                      01089     white
0301   300B               M     movlw WHITE
0302   008C               M     movwf TRISA
                      01090     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0303   2???               M     call _4tcy
                          M     exitm
                      01091     black
0304   301B               M     movlw BLACK
0305   008C               M     movwf TRISA
                      01092     next_task 2*BRICK_HEIGHT
0306   0A??               M     incf slice
0307   3010               M     movlw 2*BRICK_HEIGHT
0308   02??               M     subwf slice,W
0309   1D03               M     skpz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     leave
030A   2???               M     goto isr_exit
030B   01??               M     clrf slice
030C   0A??               M     incf task
                          M     leave
030D   2???               M     goto isr_exit
                      01093  
030E                  01094 copy_row
030E   0016           01095     moviw FSR1++
030F   04??           01096     iorwf vbuffer
0310   0016           01097     moviw FSR1++
0311   04??           01098     iorwf vbuffer+1
0312   0016           01099     moviw FSR1++
0313   04??           01100     iorwf vbuffer+2
0314   0016           01101     moviw FSR1++
0315   04??           01102     iorwf vbuffer+3
0316   0016           01103     moviw FSR1++
0317   04??           01104     iorwf vbuffer+4
0318   0016           01105     moviw FSR1++
0319   04??           01106     iorwf vbuffer+5
031A   0008           01107     return    
                      01108 
031B                  01109 rows_common
031B   00??           01110     movwf fg_color
031C   0187           01111     clrf FSR1H
031D   2???           01112     call copy_row
                      01113     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
031E   0000               M     nop
                          M     exitm
                      01114     white
031F   300B               M     movlw WHITE
0320   008C               M     movwf TRISA
0321   2???           01115     call display_vbuffer
                      01116     white
0322   300B               M     movlw WHITE
0323   008C               M     movwf TRISA
                      01117     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0324   2???               M     call _4tcy
                          M     exitm
                      01118     black
0325   301B               M     movlw BLACK
0326   008C               M     movwf TRISA
                      01119     next_task BRICKS_ROWS*BRICK_HEIGHT
0327   0A??               M     incf slice
0328   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
0329   02??               M     subwf slice,W
032A   1D03               M     skpz
                          M     leave
032B   2???               M     goto isr_exit
032C   01??               M     clrf slice
032D   0A??               M     incf task
                          M     leave
032E   2???               M     goto isr_exit
                      01120     
                      01121 ; task 13, draw brick rows
                      01122 ; lcount 74-121   
032F                  01123 draw_bricks
032F   002?           01124     banksel vbuffer
0330   2???           01125     call put_ball_in_buffer
0331   30??           01126     movlw low row1
0332   0086           01127     movwf FSR1L
0333   30F8           01128     movlw 0xf8
0334   05??           01129     andwf slice,W
0335   0786           01130     addwf FSR1L
0336   003B           01131     banksel PWM1CON
                      01132     pushw
0337   0019               M     movwi --SP
0338   3010           01133     movlw 2<<3
0339   0200           01134     subwf T,W
033A   1803           01135     skpnc
033B   161B           01136     bsf PWM1CON,POL
                      01137     popw
033C   0012               M     moviw SP++
033D   0021           01138     banksel TRISA
033E   3689           01139     lsrf WREG
033F   3689           01140     lsrf WREG
0340   000B           01141     brw
0341   3009           01142     movlw YELLOW
0342   3???           01143     bra rows_common
0343   3009           01144     movlw YELLOW
0344   3???           01145     bra rows_common
0345   3009           01146     movlw MAUVE
0346   3???           01147     bra rows_common
0347   3009           01148     movlw MAUVE
0348   3???           01149     bra rows_common
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0349   3019           01150     movlw BLUE
034A   3???           01151     bra rows_common
034B   3019           01152     movlw BLUE
034C   3???           01153     bra rows_common
                      01154     
  00000028            01155 MSG_FIRST equ 40
  00000028            01156 MSG_HEIGHT equ 40
  00000010            01157 MSG_PIXELS_COUNT equ 16 
                      01158 ; task 14
                      01159 ; draw all rows below bricks to paddle
                      01160 ; lcount 122-241 
034D                  01161 draw_empty
034D   0021           01162     banksel TRISA
034E   1B00           01163     btfsc flags, F_OVER
034F   3???           01164     bra print_msg
0350   2???           01165     call put_ball_in_buffer
0351   300B           01166     movlw WHITE
0352   00??           01167     movwf fg_color
                      01168     tdelay LEFT_MARGIN-35
                          M     if LEFT_MARGIN-35==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35>5
  000A                    M     variable q=(LEFT_MARGIN-35-3)/3
  0001                    M     variable r=LEFT_MARGIN-35-3-3*q
0353   300A               M     movlw q
0354   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0355   0000               M     nop
                          M     exitm
                      01169     white
0356   300B               M     movlw WHITE
0357   008C               M     movwf TRISA
0358   2???           01170     call display_vbuffer
                      01171     white
0359   300B               M     movlw WHITE
035A   008C               M     movwf TRISA
                      01172     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
035B   2???               M     call _4tcy
                          M     exitm
                      01173     black
035C   301B               M     movlw BLACK
035D   008C               M     movwf TRISA
035E   3???           01174     bra draw_empty_exit
035F                  01175 print_msg    
035F   3009           01176     movlw YELLOW ; message color
0360   00??           01177     movwf fg_color
0361   3028           01178     movlw MSG_FIRST
                      01179     pushw
0362   0019               M     movwi --SP
0363   3050           01180     movlw MSG_FIRST+MSG_HEIGHT
                      01181     pushw
0364   0019               M     movwi --SP
0365   08??           01182     movfw slice
0366   2???           01183     call between
0367   1C03           01184     skpc
0368   3???           01185     bra msg
0369   1F80           01186     btfss flags, F_COOL
036A   3???           01187     bra display_end
                      01188 ; perfect score display 'COOL' message
036B   30??           01189     movlw high cool_msg
036C   0087           01190     movwf FSR1H
036D   30??           01191     movlw low cool_msg
036E   0086           01192     movwf FSR1L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036F   2???           01193     call display_msg
0370   3???           01194     bra msg
                      01195 ; display 'END!' message    
0371                  01196 display_end
0371   30??           01197     movlw high end_msg
0372   0087           01198     movwf FSR1H
0373   30??           01199     movlw low end_msg
0374   0086           01200     movwf FSR1L
0375   2???           01201     call display_msg
0376                  01202 msg
0376   2???           01203     call display_vbuffer
0377                  01204 draw_empty_exit
                      01205     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0377   0A??               M     incf slice
0378   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0379   02??               M     subwf slice,W
037A   1D03               M     skpz
                          M     leave
037B   2???               M     goto isr_exit
037C   01??               M     clrf slice
037D   0A??               M     incf task
                          M     leave
037E   2???               M     goto isr_exit
                      01206 ;    incf slice
                      01207 ;    movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01208 ;    subwf lcount,W
                      01209 ;    skpz
                      01210 ;    leave
                      01211 ;    clrf slice
                      01212 ;    incf task
                      01213 ;    leave
                      01214 
                      01215 ; display end message
                      01216 ; message as a maximum of 24 vbuffer    
037F                  01217 display_msg
037F   3028           01218     movlw MSG_FIRST
0380   02??           01219     subwf slice,W
0381   3689           01220     lsrf WREG
0382   3689           01221     lsrf WREG
0383   3689           01222     lsrf WREG
0384   00??           01223     movwf temp1
0385   3589           01224     lslf WREG
0386   07??           01225     addwf temp1,W
0387   0786           01226     addwf FSR1L
0388   1803           01227     skpnc
0389   0A87           01228     incf FSR1H
038A   0016           01229     moviw FSR1++
038B   00??           01230     movwf vbuffer+1
038C   0016           01231     moviw FSR1++
038D   00??           01232     movwf vbuffer+2
038E   0016           01233     moviw FSR1++
038F   00??           01234     movwf vbuffer+3
0390   0008           01235     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01236     
                      01237 ; task 15, draw paddle at bottom screen  
                      01238 ; lcount 242-249    
0391                  01239 draw_paddle
0391   0021           01240     banksel TRISA
0392   0187           01241     clrf FSR1H
0393   30??           01242     movlw low vbuffer
0394   0086           01243     movwf FSR1L
0395   08??           01244     movfw paddle_byte
0396   0786           01245     addwf FSR1L
0397   08??           01246     movfw paddle_mask
0398   001E           01247     movwi FSR1++
0399   08??           01248     movfw paddle_mask+1
039A   3FC0           01249     movwi  [FSR1]
039B   300B           01250     movlw WHITE
039C   00??           01251     movwf fg_color
                      01252     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
039D   3015               M     movlw q
039E   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     endif
                      01253     white
039F   300B               M     movlw WHITE
03A0   008C               M     movwf TRISA
03A1   2???           01254     call display_vbuffer
                      01255     white
03A2   300B               M     movlw WHITE
03A3   008C               M     movwf TRISA
                      01256     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
03A4   2???               M     call _4tcy
                          M     exitm
                      01257     black
03A5   301B               M     movlw BLACK
03A6   008C               M     movwf TRISA
                      01258     next_task PADDLE_THICKNESS
03A7   0A??               M     incf slice
03A8   3004               M     movlw PADDLE_THICKNESS
03A9   02??               M     subwf slice,W
03AA   1D03               M     skpz
                          M     leave
03AB   2???               M     goto isr_exit
03AC   01??               M     clrf slice
03AD   0A??               M     incf task
                          M     leave
03AE   2???               M     goto isr_exit
                      01259 
                      01260 ; task 16,  wait end of this field, reset task to zero    
                      01261 ; lcount 251-262/3    
03AF                  01262 wait_field_end
03AF   1800           01263     btfsc flags, F_BIT8
03B0   2???           01264     goto hi_line
                      01265     leave
03B1   2???               M     goto isr_exit
03B2                  01266 hi_line
03B2   1880           01267     btfsc flags,F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B3   2???           01268     goto even_field
03B4   3005           01269     movlw 5
03B5   02??           01270     subwf lcount,W
03B6   1D03           01271     skpz
                      01272     leave
03B7   2???               M     goto isr_exit
03B8   2???           01273     goto field_end
03B9                  01274 even_field
03B9   3006           01275     movlw 6
03BA   02??           01276     subwf lcount,W
03BB   1D03           01277     skpz
                      01278     leave
03BC   2???               M     goto isr_exit
                      01279 ; even field last line is half_line    
                      01280 ; set PWM3 for line 263 half-line
03BD   003B           01281     banksel PWM3DC
03BE   3003           01282     movlw high HALF_LINE
03BF   00B6           01283     movwf PWM3PRH
03C0   308D           01284     movlw low HALF_LINE
03C1   00B5           01285     movwf PWM3PRL
03C2   17BF           01286     bsf PWM3LDCON,7
03C3                  01287 field_end
03C3   01??           01288     clrf task
03C4   01??           01289     clrf slice
03C5   01??           01290     clrf lcount
03C6   1000           01291     bcf flags, F_BIT8
03C7   1500           01292     bsf flags, F_SYNC
                      01293 ; toggle odd/even field flag    
03C8   3002           01294     movlw 1<<F_EVEN
03C9   06??           01295     xorwf flags
                      01296     leave
03CA   2???               M     goto isr_exit
                      01297 
                      01298 ; helper functions
                      01299 
                      01300 ; delay = 4+(n-1)*3    
                      01301 ;input:
                      01302 ;   WREG <- n {1..255}
03CB                  01303 _3ntcy
03CB   0B89           01304     decfsz WREG
03CC   3???           01305     bra $-1
03CD   0008           01306     return
03CE                  01307 _5tcy ; call here for 5*tcy delay using a single instruction
03CE   0000           01308     nop
03CF                  01309 _4tcy ; call here for 4*Tcy delay using a single instruction    
03CF   0008           01310     return
                      01311 
                      01312 ; increment user score
                      01313 ; This is a BCD addition where a single digit is added to score.   
                      01314 ; score is stored as big indian
                      01315 ; argument: 
                      01316 ;   WREG ->  bdc digit to add to score variable
03D0                  01317 inc_score
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03D0   07??           01318     addwf score+1
03D1   1883           01319     btfsc STATUS,DC
03D2   3???           01320     bra $+6
03D3   300F           01321     movlw 15
03D4   05??           01322     andwf score+1,W
03D5   3C09           01323     sublw 9
03D6   1803           01324     skpnc
03D7   3???           01325     bra $+3
03D8   3006           01326     movlw 6
03D9   07??           01327     addwf score+1
03DA   0E??           01328     swapf score+1,W
03DB   390F           01329     andlw 15
03DC   3C09           01330     sublw 9
03DD   1803           01331     skpnc
03DE   3???           01332     bra game_over_test
03DF   3060           01333     movlw 0x60
03E0   07??           01334     addwf score+1
03E1   0A??           01335     incf score
                      01336 ; double ball speed if score >=200
03E2   3002           01337     movlw 2
03E3   02??           01338     subwf score,W
03E4   1C03           01339     skpc
03E5   0008           01340     return
03E6   3001           01341     movlw 1
03E7   00??           01342     movwf ball_speed
03E8                  01343 game_over_test ; all bricks destroyed?
03E8   3004           01344     movlw 4
03E9   02??           01345     subwf score,W
03EA   1D03           01346     skpz
03EB   0008           01347     return
03EC   3008           01348     movlw 0x08
03ED   02??           01349     subwf score+1,W
03EE   1D03           01350     skpz
03EF   0008           01351     return
03F0   1700           01352     bsf flags,F_OVER ; game over
03F1   1780           01353     bsf flags,F_COOL ; with maximum score.
03F2   0008           01354     return
                      01355     
                      01356     
03F3                  01357 brick_wall_init
03F3   30??           01358     movlw high row1
03F4   0087           01359     movwf FSR1H
03F5   30??           01360     movlw low row1
03F6   0086           01361     movwf FSR1L
03F7   3030           01362     movlw BRICKS_ROWS*8
03F8   00??           01363     movwf temp1
03F9   30FF           01364     movlw 0xff
03FA                  01365 bw_init
03FA   001E           01366     movwi FSR1++
03FB   0B??           01367     decfsz temp1
03FC   3???           01368     bra bw_init
03FD   0008           01369     return
                      01370 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01371 ; compute tcy delay from pixel coordinateur
                      01372 ;  1 pixel is 5 tcy wide.
                      01373 ; input:
                      01374 ;   WREG  px
                      01375 ; output
                      01376 ;   WREG  tcy    
03FE                  01377 px2tcy
                      01378    pushw
03FE   0019               M     movwi --SP
03FF   3589           01379    lslf WREG
0400   3589           01380    lslf WREG
0401   0780           01381    addwf T
                      01382    popw
0402   0012               M     moviw SP++
0403   0008           01383    return
                      01384 
                      01385    
                      01386     
                      01387     
                      01388     
                      01389 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
0404                  01390 lfsr16
0404   002?           01391     banksel seed
0405   08??           01392     movfw seed+1
0406   00??           01393     movwf temp1
0407   3589           01394     lslf WREG
0408   3589           01395     lslf WREG
0409   00??           01396     movwf temp2
040A   06??           01397     xorwf temp1
040B   35??           01398     lslf temp2
040C   08??           01399     movfw temp2
040D   06??           01400     xorwf temp1
040E   35??           01401     lslf temp2
040F   35??           01402     lslf temp2,W
0410   06??           01403     xorwf temp1
0411   35??           01404     lslf temp1
0412   0D??           01405     rlf seed
0413   0D??           01406     rlf seed+1
0414   08??           01407     movfw seed
0415   0008           01408     return
                      01409     
                      01410 
0416                  01411 set_ball_dx
0416   2???           01412     call lfsr16 ;random
0417   3007           01413     movlw 7
0418   05??           01414     andwf seed,W
0419   3589           01415     lslf WREG
041A   000B           01416     brw
041B   3000           01417     movlw 0
041C   3???           01418     bra set_ball_dx_exit
041D   3001           01419     movlw 1
041E   3???           01420     bra set_ball_dx_exit
041F   30FF           01421     movlw -1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0420   3???           01422     bra set_ball_dx_exit
0421   3000           01423     movlw 0
0422   3???           01424     bra set_ball_dx_exit
0423   3001           01425     movlw 1
0424   3???           01426     bra set_ball_dx_exit
0425   30FF           01427     movlw -1
0426   3???           01428     bra set_ball_dx_exit
0427   30FF           01429     movlw -1
0428   3???           01430     bra set_ball_dx_exit
0429   3001           01431     movlw 1
042A                  01432 set_ball_dx_exit
042A   00??           01433     movwf ball_dx
042B   0008           01434     return
                      01435     
042C                  01436 game_init
042C   01??           01437     clrf score
042D   01??           01438     clrf score+1
042E   2???           01439     call brick_wall_init
042F   002?           01440     banksel balls
0430   3003           01441     movlw 3
0431   00??           01442     movwf balls
0432   01??           01443     clrf ball_timer
0433   0A??           01444     incf ball_timer
0434   30EF           01445     movlw PADDLE_Y-BALL_HEIGHT+1
0435   00??           01446     movwf ball_y
0436   2???           01447     call set_ball_dx
0437   30FC           01448     movlw -4
0438   00??           01449     movwf ball_dy
0439   3002           01450     movlw 2
043A   00??           01451     movwf ball_speed
043B   01??           01452     clrf flags
043C   1600           01453     bsf flags, F_START
043D   0008           01454     return
                      01455     
                      01456 ; delay by TIMER0
                      01457 ; parameter
                      01458 ;   WREG -> 2*Tcy+7cy    
043E                  01459 t0delay 
043E   0989           01460     comf WREG
043F   0095           01461     movwf TMR0
0440   110B           01462     bcf INTCON,T0IF
0441   1D0B           01463     btfss INTCON,T0IF
0442   3???           01464     bra $-1
0443   0008           01465     return
                      01466     
                      01467 MAIN_PROG CODE                      ; let linker place main program
                      01468 
0000                  01469 initialize
                      01470 ; clear common RAM
0000   0185           01471     clrf FSR0H
0001   3070           01472     movlw 0x70
0002   0084           01473     movwf FSR0L
0003   0103           01474     clrw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   001A           01475     movwi FSR0++
0005   1F84           01476     btfss FSR0L,7
0006   3???           01477     bra $-2
                      01478 ; clear banked RAM
0007   0184           01479     clrf FSR0L
0008   3020           01480     movlw 0x20
0009   0085           01481     movwf FSR0H
000A   0103           01482     clrw 
000B   001A           01483     movwi FSR0++
000C   1C05           01484     btfss FSR0H,0
000D   3???           01485     bra $-2
                      01486 ; initialize LFSR seed
000E   002?           01487     banksel seed
000F   09??           01488     comf seed
0010   09??           01489     comf seed+1
0011   09??           01490     comf seed+2
0012   09??           01491     comf seed+3
                      01492 ;   setup arguments stack pointer
0013   30??           01493     movlw high (stack+STACK_SIZE)
0014   0085           01494     movwf FSR0H
0015   30??           01495     movlw low (stack+STACK_SIZE)
0016   0084           01496     movwf FSR0L
                      01497 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01498 ; TIMER0 prescale 1:2
0017   3050           01499     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01500     movwf OPTION_REG
                      01501 ; disable analog inputs, except AN0
0019   0023           01502     banksel ANSELA
001A   018C           01503     clrf ANSELA
                      01504 ; paddle potentiometer input     
001B   140C           01505     bsf ANSELA,PADDLE
001C   0021           01506     banksel ADCON1
001D   3020           01507     movlw (2<<ADCS0)
001E   009E           01508     movwf ADCON1
                      01509 ; pin setup
001F   0024           01510     banksel WPUA
0020   018C           01511     clrf WPUA
0021   0021           01512     banksel TRISA
0022   110C           01513     bcf TRISA,SYNC_OUT
0023   0022           01514     banksel LATA
0024   160C           01515     bsf LATA, VIDEO_OUT
                      01516 ; PWM1 chroma signal on RA1
0025   003B           01517     banksel PWM1CON
0026   019F           01518     clrf PWM1LDCON
0027   0191           01519     clrf PWM1PHL
0028   0192           01520     clrf PWM1PHH
0029   0197           01521     clrf PWM1OFL
002A   0198           01522     clrf PWM1OFH
002B   0196           01523     clrf PWM1PRH
002C   3007           01524     movlw 7
002D   0095           01525     movwf PWM1PRL
002E   3004           01526     movlw 4
002F   0093           01527     movwf PWM1DCL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   0194           01528     clrf PWM1DCH
0031   179F           01529     bsf PWM1LDCON,7
0032   30C0           01530     movlw (1<<EN)|(1<<OE)
0033   009B           01531     movwf PWM1CON
                      01532 ; PWM2 sound
0034   003B           01533     banksel PWM2CON
0035   01A1           01534     clrf PWM2PHL
0036   01A2           01535     clrf PWM2PHH
0037   01A7           01536     clrf PWM2OFL
0038   01A8           01537     clrf PWM2OFH
0039   3030           01538     movlw 3<<PWM2PS0 ; clock source FOSC/8
003A   00AE           01539     movwf PWM2CLKCON
003B   300D           01540     movlw high 3578;7
003C   00A6           01541     movwf PWM2PRH
003D   30FA           01542     movlw low 3578;7
003E   00A5           01543     movwf PWM2PRL
003F   3626           01544     lsrf PWM2PRH,W
0040   00A4           01545     movwf PWM2DCH
0041   0C25           01546     rrf PWM2PRL,W
0042   00A3           01547     movwf PWM2DCL
0043   17AF           01548     bsf PWM2LDCON,LDA
                      01549 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0044   003B           01550     banksel PWM3CON
0045   01BF           01551     clrf PWM3LDCON
0046   01B1           01552     clrf PWM3PHL
0047   01B2           01553     clrf PWM3PHH
0048   01B7           01554     clrf PWM3OFL
0049   01B8           01555     clrf PWM3OFH
004A   301B           01556     movlw low HPERIOD
004B   00B5           01557     movwf PWM3PRL
004C   3007           01558     movlw high HPERIOD
004D   00B6           01559     movwf PWM3PRH
004E   3086           01560     movlw HSYNC
004F   00B3           01561     movwf PWM3DCL
0050   01B4           01562     clrf PWM3DCH
0051   30D0           01563     movlw (1<<EN)|(1<<OE)|(1<<POL)
0052   00BB           01564     movwf PWM3CON
0053   17BF           01565     bsf PWM3LDCON,7
0054   143C           01566     bsf PWM3INTE,PRIE
                      01567 ; enbable interrupt    
0055   0020           01568     banksel PIR3
0056   1313           01569     bcf PIR3,PWM3IF
0057   0021           01570     banksel PIE3
0058   1713           01571     bsf PIE3,PWM3IE
0059   170B           01572     bsf INTCON,PEIE
005A   178B           01573     bsf INTCON,GIE
005B   2???           01574     call game_init
005C   01??           01575     clrf flags
005D   1500           01576     bsf flags, F_SYNC
                      01577 ; test code
005E   1600           01578     bsf flags, F_START
                      01579 ; all processing done in ISR    
005F   2???           01580     goto $
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01581 
                      01582 ;digits character table
                      01583 ; input:
                      01584 ;   T -> glyph row
                      01585 ;   WREG -> digit
                      01586 ; output:
                      01587 ;   WREG -> pixels
                      01588 ;   T -> glyph row    
0060                  01589 digits
                      01590     pushw 
0060   0019               M     movwi --SP
0061   3589           01591     lslf WREG
0062   3589           01592     lslf WREG
0063   0780           01593     addwf T
                      01594     popw
0064   0012               M     moviw SP++
0065   0700           01595     addwf T,W
0066   000B           01596     brw
0067   3440 34A0 34A0 01597     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006C   3440 34C0 3440 01598     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0071   34E0 3420 34C0 01599     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0076   34E0 3420 34C0 01600     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
007B   34A0 34A0 34E0 01601     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0080   34E0 3480 34E0 01602     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0085   34C0 3480 34E0 01603     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
008A   34E0 3420 3420 01604     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
008F   34E0 34A0 34E0 01605     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0094   34E0 34A0 34E0 01606     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0099   0001           01607     reset
                      01608     
009A                  01609 frequency
009A   000B           01610     brw
009B   348B 34D3      01611     dt high 35795, low 35795 ; 100 hertz
009D   340D 34FB      01612     dt high 3579, low 3579 ; 1000 hertz
009F   0001           01613     reset
                      01614   
                      01615 ;display END! when game is over    
00A0                  01616 end_msg
                      01617 ;    brw
00A0   00E8 00C8 0000 01618     data 0xe8,0xc8,0
00A3   008E 00A8 0000 01619     data 0x8e,0xa8,0
00A6   00EA 00A8 0000 01620     data 0xea,0xa8,0
00A9   008A 00A0 0000 01621     data 0x8a,0xa0,0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AC   00EA 00C8 0000 01622     data 0xea,0xc8,0
                      01623   
00AF                  01624 cool_msg
                      01625 ;    brw
00AF   00EE 00E8 0000 01626     data 0xee,0xe8,0
00B2   008A 00A8 0000 01627     data 0x8a,0xa8,0
00B5   008A 00A8 0000 01628     data 0x8a,0xa8,0
00B8   008A 00A8 0000 01629     data 0x8a,0xa8,0
00BB   00EE 00EE 0000 01630     data 0xee,0xee,0
                      01631     
                      01632 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01633 max_score 
                      01634  
3FA7 1EFF             01635     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
YELLOW                            00000009
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_007F                         0000007F
_ISR_00F2                         000000F2
_ISR_0120                         00000120
_ISR_0166                         00000166
_ISR_01AB                         000001AB
_ISR_02FD                         000002FD
_ISR_03CC                         000003CC
_ISR_03D2                         000003D2
_ISR_03D7                         000003D7
_ISR_0442                         00000442
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005F                   0000005F
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000198
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         0000011D
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001B4
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           0000019F
between_exit                      000001A9
between_exit2                     000001AB
black                             
blue                              
bottom_bound                      00000116
bounce_left                       0000014F
bouncing                          0000013E
brick_wall_init                   000003F3
bw_init                           000003FA
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000168
collision_exit                    0000019D
compute_ball_mask                 00000157
compute_paddle_mask               000000E4
cool_msg                          000000AF
copy_row                          0000030E
dark_green                        
digits                            00000060
display_bit                       
display_byte                      
display_end                       00000371
display_msg                       0000037F
display_vbuffer                   000001BB
draw_bricks                       0000032F
draw_empty                        0000034D
draw_empty_exit                   00000377
draw_paddle                       00000391
draw_score                        000002AC
draw_sides                        000002F9
draw_top_wall                     000002CD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

dropn                             
eeprom                            00000780
end_msg                           000000A0
even_field                        000003B9
even_field_read                   00000089
fg_color                          000000D7
field_end                         000003C3
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         0000009A
game_init                         0000042C
game_over                         000000D8
game_over_test                    000003E8
game_running                      000000D1
gray                              white
hi_line                           000003B2
inc_score                         000003D0
initialize                        00000000
isr                               00000004
isr_exit                          00000030
kill_time                         000002F5
lcount                            00000001
leave                             
left_bound                        000000FC
lfsr16                            00000404
mauve                             
max_score                         00000780
move_ball                         000000F4
move_ball_exit                    0000012F
move_y                            00000109
msg                               00000376
next_task                         
odd_fld_pread                     0000000F
paddle_bounce                     00000132
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000151
pickn                             
pokew                             
pong_sound                        00000199
popw                              
porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000035
print_msg                         0000035F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  15:28:58         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

pushw                             
put_ball_in_buffer                000002E8
px2tcy                            000003FE
q                                 00000015
r                                 00000000
read_button                       000000C4
read_paddle                       00000078
right_bound                       00000102
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       0000031B
score                             0000000C
score_exit                        000002C5
seed                              00000030
set_ball_dx                       00000416
set_ball_dx_exit                  0000042A
set_presync                       00000040
set_vsync                         00000056
skip_2_tasks                      000000DC
slice                             00000002
sound                             00000095
sound_fx1                         000000A4
sound_init                        000000AD
sound_off                         0000009D
sound_timer                       000000DE
stack                             00000020
swap_var                          
swapw                             
t0delay                           0000043E
task                              00000003
task_switch                       0000001C
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         0000010D
vbuffer                           000000A0
video_first                       000001AD
vsync                             0000004B
vsync_end                         0000006B
wait_field_end                    000003AF
wait_trigger                      000000D3
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   334 suppressed

