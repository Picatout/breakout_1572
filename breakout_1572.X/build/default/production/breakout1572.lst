MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  VIDEO DISPLAY ZONES
                      00027 ;  scan lines     display
                      00028 ;  =======================    
                      00029 ;    30-49     |   score and balls count
                      00030 ;    50-57     |   top wall
                      00031 ;    58-250    |   play ground
                      00032 ;    58-73     |   empty zone
                      00033 ;    74-81     |   mauve bricks
                      00034 ;    82-89     |   yellow bricks
                      00035 ;    90-97     |   blue bricks
                      00036 ;    98-105    |   dark green bricks
                      00037 ;    106-113   |   gray bricks
                      00038 ;    114-250   |   empty zone
                      00039 ;    243-250   |   paddle zone    
                      00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00041  
                      00042     
                      00043     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044     
8007   3FA7           00045     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00046     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00047     
                      00048     radix dec
                      00049 
                      00050 ; constants
  00000800            00051 PROG_SIZE equ 2048  ; program words
  00000080            00052 EEPROM_SIZE equ 128 ; high endurance flash words
                      00053  
  01B4F360            00054 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00055 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00056 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00057  
                      00058 ; NTSC signal 
  00003D76            00059 Fhorz equ 15734 ; horizontal frequency
  0000071B            00060 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00061 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00062 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00063 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00064 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00065 ; boolean flags 
  00000000            00066 F_HI_LINE equ 0 ; lcount > 255
  00000001            00067 F_EVEN equ 1    ; even field
  00000002            00068 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00069 F_SOUND equ 3   ; sound enabled 
  00000004            00070 F_START equ 4   ; game started 
  00000005            00071 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00072 F_OVER equ 6    ; game over
                      00073  
                      00074  
                      00075 ;pins assignment
  00000000            00076 AUDIO EQU RA0
  00000000            00077 PADDLE equ RA0
  00000001            00078 CHROMA equ RA1
  00000002            00079 SYNC_OUT equ RA2
  00000003            00080 START_BTN equ RA3 
  00000004            00081 VIDEO_OUT equ RA4
  00000005            00082 CLKIN equ RA5
                      00083  
                      00084     ; constants used in video display
                      00085 ; values are in Tcy for x dimension.
                      00086 ; values are in scan lines for y dimension.    
  0000001E            00087 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00088 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00089 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00090 COURT_WIDTH equ 248 ; Tcy
  00000008            00091 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00092 BORDER_WIDTH equ 4  ; Tcy
  00000020            00093 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00094 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00095 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00096 BALL_WIDTH equ 8 ; Tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00097 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00098 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00099 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00100 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00101 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00102 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  0000004A            00103 ROW1_Y equ 74
  00000052            00104 ROW2_Y equ 82
  0000005A            00105 ROW3_Y equ 90
  00000062            00106 ROW4_Y equ 98
  0000006A            00107 ROW5_Y equ 106
                      00108  
                      00109 
                      00110 ;;;;;;;;;;;;;;;;;;;;;;
                      00111 ;; assembler macros ;;
                      00112 ;;;;;;;;;;;;;;;;;;;;;;
                      00113 
                      00114 ; leave task 
                      00115 leave macro
                      00116     goto isr_exit
                      00117     endm
                      00118     
                      00119 ; move to next task on slice limit
                      00120 ; parameters:
                      00121 ;   s  nomber of slices used by the task    
                      00122 next_task macro s    
                      00123     incf slice
                      00124     movlw s
                      00125     subwf slice,W
                      00126     skpz
                      00127     leave
                      00128     clrf slice
                      00129     incf task
                      00130     movlw s
                      00131     addwf lcount
                      00132     leave
                      00133     endm
                      00134     
                      00135     
                      00136 ; case switch
                      00137 ; parameters:
                      00138 ;   var is control variable
                      00139 ;   n  is constant to compare to var
                      00140 ;   adr  is goto address if var==n 
                      00141 case macro var, n, adr
                      00142     movlw n
                      00143     subwf var,W
                      00144     skpnz
                      00145     goto adr
                      00146     endm
                      00147 
                      00148 ; swap variable with WREG    
                      00149 swap_var macro var
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     xorwf var,W
                      00152     xorwf var
                      00153     endm
                      00154     
                      00155 
                      00156 ; delay in machine cycle T
                      00157 ; parameters:
                      00158 ;   T   number of machine cycles    
                      00159 tdelay macro T
                      00160     variable q=(T)/3
                      00161     variable r=(T)%3
                      00162     if (q)
                      00163     movlw q
                      00164     decfsz WREG
                      00165     goto $-1
                      00166     endif
                      00167     if (r==2)
                      00168     goto $+1
                      00169     endif 
                      00170     if (r==1)
                      00171     nop
                      00172     endif
                      00173     endm
                      00174 
                      00175 ; enable weak pull on VIDEO_OUT
                      00176 ; to create a porch
                      00177 porch_on macro
                      00178     banksel WPUA
                      00179     bsf WPUA,VIDEO_OUT
                      00180     endm
                      00181     
                      00182 ; disable weak pull on VIDEO_OUT
                      00183 ; to remove porch
                      00184 porch_off macro
                      00185     banksel WPUA
                      00186     bcf WPUA,VIDEO_OUT
                      00187     endm
                      00188     
                      00189 ; enable chroma output
                      00190 chroma_on macro
                      00191     banksel TRISA
                      00192     bcf TRISA, CHROMA
                      00193     endm
                      00194     
                      00195 ;disable chroma output    
                      00196 chroma_off macro
                      00197     banksel TRISA
                      00198     bsf TRISA,CHROMA
                      00199     endm
                      00200     
                      00201 ; output chroma reference    
                      00202 chroma_ref macro
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     banksel PWM1CON
                      00204     bcf PWM1CON,POL
                      00205     endm
                      00206     
                      00207 ; set chroma phase to 180 degree
                      00208 chroma_invert macro
                      00209     banksel PWM1CON
                      00210     bsf PWM1CON,POL
                      00211     endm
                      00212 
                      00213 ;;;;;;;;;;;;;;;;;;;;;;
                      00214 ;   colors macros
                      00215 ; each one take 5 T 
                      00216 ;;;;;;;;;;;;;;;;;;;;;;
                      00217     
                      00218 ;set video output to black    
                      00219 black macro
                      00220 ;    banksel TRISA
                      00221     bsf TRISA,CHROMA
                      00222     bsf TRISA,VIDEO_OUT
                      00223 ;    goto $+1
                      00224     endm
                      00225     
                      00226 ; set video output to white    
                      00227 white macro    
                      00228 ;    banksel TRISA
                      00229     bsf TRISA,CHROMA
                      00230     bcf TRISA,VIDEO_OUT
                      00231 ;    goto $+1
                      00232     endm
                      00233 
                      00234 #define gray white
                      00235     
                      00236 ; set video output to mauve    
                      00237 mauve macro
                      00238 ;    chroma_ref
                      00239 ;    banksel TRISA
                      00240     bcf TRISA,VIDEO_OUT
                      00241     bcf TRISA,CHROMA
                      00242     endm
                      00243 
                      00244 ; set video output to yellow   
                      00245 yellow macro
                      00246 ;    chroma_invert
                      00247 ;    banksel TRISA
                      00248     bcf TRISA,VIDEO_OUT
                      00249     bcf TRISA,CHROMA
                      00250     endm
                      00251     
                      00252 ; set video output to blue
                      00253 blue macro
                      00254 ;    chroma_ref
                      00255 ;    banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     bsf TRISA, VIDEO_OUT
                      00257     bcf TRISA,CHROMA
                      00258     endm
                      00259     
                      00260 ; set video output to dark blue    
                      00261 dark_green macro
                      00262 ;    chroma_invert
                      00263 ;    banksel TRISA
                      00264     bsf TRISA, VIDEO_OUT
                      00265     bcf TRISA,CHROMA
                      00266     endm
                      00267 
                      00268     
                      00269 ; draw a brick
                      00270 ; use 6T+BRICK_WIDTH
                      00271 ; if carry is 1 draw in color else draw black    
  00000015            00272 BRICK_WIDTH equ 21   
                      00273 draw_brick macro color
                      00274     local no_brick
                      00275     local brick_delay
                      00276     skpc
                      00277     bra no_brick
                      00278     color
                      00279     nop
                      00280     bra brick_delay
                      00281 no_brick
                      00282     black
                      00283     bra brick_delay 
                      00284 brick_delay    
                      00285     tdelay BRICK_WIDTH
                      00286     endm
                      00287 
                      00288 ; draw 8 bricks wall
                      00289 ; parameter in temp
                      00290 draw_wall macro color
                      00291     local next_brick
                      00292     movlw 8
                      00293     pushw
                      00294 next_brick    
                      00295     lslf temp
                      00296     draw_brick color
                      00297     decfsz T
                      00298     bra next_brick
                      00299     dropn 1
                      00300     endm
                      00301     
                      00302     
                      00303 ; draw left and right borders
                      00304 ; parameters:
                      00305 ;   width delay determine width
                      00306 ;   width 5T+nT    
                      00307 draw_border macro width
                      00308     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     bsf TRISA,CHROMA
                      00310     bcf TRISA,VIDEO_OUT
                      00311     tdelay width
                      00312     bsf TRISA,VIDEO_OUT
                      00313     endm
                      00314     
                      00315 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00316 ;  stack manipulation macros
                      00317 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00318 STACK_SIZE equ 16 ; size of argument stack
                      00319 #define T INDF0 ; top of argument stack
                      00320 #define SP FSR0 ; use FSR0 as stack pointer 
                      00321 ; push WREG on T
                      00322 pushw  macro
                      00323     movwi --SP
                      00324     endm
                      00325   
                      00326 ; pop WREG from T
                      00327 popw macro
                      00328     moviw SP++
                      00329     endm
                      00330     
                      00331 ; swap WREG with 
                      00332 swapw  macro
                      00333     xorwf T
                      00334     xorwf T,W
                      00335     xorwf T
                      00336     endm
                      00337 
                      00338 ; drop n elements from stack
                      00339 dropn macro n
                      00340     addfsr T,n
                      00341     endm
                      00342 
                      00343 ; copy nth element of stack to WREG
                      00344 ;  n {0..31}    
                      00345 pickn macro n
                      00346     moviw n[SP]
                      00347     endm
                      00348    
                      00349 ; copy WREG to nth element of stack
                      00350 ; n {0..31}
                      00351 pokew macro n
                      00352     movwi n[SP]
                      00353     endm
                      00354     
                      00355     
                      00356 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00357 ;;    variables
                      00358 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00359     
                      00360     udata 0x20
0020                  00361 stack res 16 ; arguments stack
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030                  00362 seed res 4 ; prng seed
                      00363  
                      00364 v_array   udata 0xA0
00A0                  00365 row1 res 1; brick wall row1
00A1                  00366 row2 res 1
00A2                  00367 row3 res 1
00A3                  00368 row4 res 1
00A4                  00369 row5 res 1
00A5                  00370 d1 res 1 ; score msd digit pixels
00A6                  00371 d2 res 1 ; score 2nd digit pixels
00A7                  00372 d3 res 1 ; score lsd digit pixels
00A8                  00373 balls res 1 ; number of recking balls available 
00A9                  00374 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00375   
                      00376     udata_shr
0000                  00377 flags  res 1 ; boolean variables
0001                  00378 lcount res 1 ; video field line counter
0002                  00379 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00380 task res 1 ; where in video phase 
0004                  00381 temp res 1 ; temporary storage
0005                  00382 temp2 res 1 ; 
0006                  00383 paddle_pos res 1 
0007                  00384 ball_x res 1
0008                  00385 ball_y res 1
0009                  00386 ball_dx res 1
000A                  00387 ball_dy res 1
000B                  00388 ball_speed res 1
000C                  00389 score res 2 ; score stored in Binary Coded Decimal
000E                  00390 ball_timer res 1 
                      00391 ;heading res 1 ; ball direction:0=N,2=NW,3=NE,4=S,6=SW,7=SE 
                      00392  
                      00393 ;; code 
                      00394 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00395     GOTO    START                   ; go to beginning of program
0001   0001           00396     reset
0002   0001           00397     reset
0003   0001           00398     reset
                      00399 
                      00400 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00401 ; interrupt service routine triggered by PWM3 period rollover
                      00402 ISR CODE 0x0004
0004                  00403 isr
0004   1900           00404     btfsc flags, F_SYNC
0005   2???           00405     goto task_switch
                      00406  ; chroma sync
                      00407     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00408     banksel TRISA
000A   108C           00409     bcf TRISA,CHROMA
                      00410     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00411     bsf TRISA,CHROMA
                      00412     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00413 task_switch ; horizontal scan line used as round robin task scheduler   
0012   08??           00414     movfw task
0013   000B           00415     brw
0014   2???           00416     goto pre_vsync ;task 0, vertical pre-equalization pulses
0015   2???           00417     goto vsync ;task 1, vertical sync pulses
0016   2???           00418     goto post_vsync ;task 2, vertical post-equalization pulses
0017   2???           00419     goto vsync_end ;task 3, return to normal video line
0018   2???           00420     goto sound ;task 4, check sound timer expiration
0019   2???           00421     goto user_input ;task 5,  read button and paddle
001A   2???           00422     goto move_ball ;task 6, move recking ball.
001B   2???           00423     goto collision ; task 7, check for collision with brick wall and paddle
001C   2???           00424     goto video_first ; task 8, wait FIRST_VIDEO line.
001D   2???           00425     goto draw_score ;task 9,  draw score en ball count
001E   2???           00426     goto draw_top_wall ;task 10,  draw top wall
001F   2???           00427     goto draw_void ;task 11, draw play space
0020   2???           00428     goto draw_row1 ;task 12, draw top bricks row
0021   2???           00429     goto draw_row2 ;task 13, draw second bricks row
0022   2???           00430     goto draw_row3 ;task 14,  draw third bricks row
0023   2???           00431     goto draw_row4 ;task 15,  draw fourth bricks row
0024   2???           00432     goto draw_row5 ;task 16, draw fifth bricks row
0025   2???           00433     goto draw_empty;task 17, draw empty space down to bottom
0026   2???           00434     goto draw_paddle ;task 18, draw paddle
0027   2???           00435     goto wait_field_end ;task 19, idle to end of video field
0028   0001           00436     reset ; error trap, task out of range
0029                  00437 isr_exit  
                      00438     porch_off
0029   0024               M     banksel WPUA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   120C               M     bcf WPUA,VIDEO_OUT
002B   003B           00439     banksel PWM3INTF
002C   103D           00440     bcf PWM3INTF,PRIF
002D   0009           00441     retfie
                      00442 
                      00443 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00444 ;;  all tasks routine are here            ;;
                      00445 ;;  each must be terminate by leave macro ;;    
                      00446 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00447     
                      00448 ; task 0, vertical synchronization pre equalization
002E                  00449 pre_vsync
002E   08??           00450     movfw slice
002F   1903           00451     skpnz
0030   2???           00452     goto set_presync
                      00453     next_task 6
0031   0A??               M     incf slice
0032   3006               M     movlw 6
0033   02??               M     subwf slice,W
0034   1D03               M     skpz
                          M     leave
0035   2???               M     goto isr_exit
0036   01??               M     clrf slice
0037   0A??               M     incf task
0038   3006               M     movlw 6
0039   07??               M     addwf lcount
                          M     leave
003A   2???               M     goto isr_exit
003B                  00454 set_presync    
003B   003B           00455     banksel PWM3DC
003C   3041           00456     movlw HEQUAL
003D   00B3           00457     movwf PWM3DCL
003E   01B4           00458     clrf PWM3DCH
003F   3003           00459     movlw high HALF_LINE
0040   00B6           00460     movwf PWM3PRH
0041   308D           00461     movlw low HALF_LINE
0042   00B5           00462     movwf PWM3PRL
0043   17BF           00463     bsf PWM3LDCON,7
0044   0A??           00464     incf slice
                      00465     leave
0045   2???               M     goto isr_exit
                      00466     
                      00467 ; task 1, vertical synchronization pulses
0046                  00468 vsync 
0046   08??           00469     movfw slice
0047   1903           00470     skpnz
0048   2???           00471     goto set_vsync
                      00472     next_task 6
0049   0A??               M     incf slice
004A   3006               M     movlw 6
004B   02??               M     subwf slice,W
004C   1D03               M     skpz
                          M     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   2???               M     goto isr_exit
004E   01??               M     clrf slice
004F   0A??               M     incf task
0050   3006               M     movlw 6
0051   07??               M     addwf lcount
                          M     leave
0052   2???               M     goto isr_exit
0053                  00473 set_vsync
0053   003B           00474     banksel PWM3DC
0054   3008           00475     movlw low VSYNC_PULSE
0055   00B3           00476     movwf PWM3DCL
0056   3003           00477     movlw high VSYNC_PULSE
0057   00B4           00478     movwf PWM3DCH
0058   17BF           00479     bsf PWM3LDCON,7
0059   0A??           00480     incf slice
                      00481     leave
005A   2???               M     goto isr_exit
                      00482     
                      00483 ; task 2, vertical synchronisation post equalization pulses
005B                  00484 post_vsync
005B   08??           00485     movfw slice
005C   1903           00486     skpnz
005D   2???           00487     goto set_presync
005E   3006           00488     movlw 6
005F   02??           00489     subwf slice,W
0060   1903           00490     skpnz
0061   2???           00491     goto post_last
0062   0A??           00492     incf slice
                      00493     leave
0063   2???               M     goto isr_exit
0064                  00494 post_last    
0064   0A??           00495     incf task
0065   01??           00496     clrf slice
0066   1C80           00497     btfss flags, F_EVEN
                      00498     leave
0067   2???               M     goto isr_exit
                      00499     
                      00500 ; task 3, vertical synchronization completed, return to normal line
0068                  00501 vsync_end
0068   1100           00502     bcf flags, F_SYNC
0069   003B           00503     banksel PWM3DC
006A   3086           00504     movlw HSYNC
006B   00B3           00505     movwf PWM3DCL
006C   01B4           00506     clrf PWM3DCH
006D   3007           00507     movlw high HPERIOD
006E   00B6           00508     movwf PWM3PRH
006F   301B           00509     movlw low HPERIOD
0070   00B5           00510     movwf PWM3PRL
0071   17BF           00511     bsf PWM3LDCON,7
0072   0A??           00512     incf task
0073   3009           00513     movlw 9
0074   00??           00514     movwf lcount
                      00515     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075   2???               M     goto isr_exit
                      00516 
                      00517 ; task 4,  sound timer
0076                  00518 sound
0076   0A??           00519     incf task
0077   0A??           00520     incf lcount
0078   1D80           00521     btfss flags, F_SOUND
                      00522     leave
0079   2???               M     goto isr_exit
007A   002?           00523     banksel sound_timer
007B   0B??           00524     decfsz sound_timer
                      00525     leave
007C   2???               M     goto isr_exit
007D   1180           00526     bcf flags, F_SOUND
007E   003B           00527     banksel PWM2CON
007F   132B           00528     bcf PWM2CON,OE
0080   13AB           00529     bcf PWM2CON,EN
                      00530     leave
0081   2???               M     goto isr_exit
                      00531 
                      00532 ; low pitch to high-pitch    
0082                  00533 sound_fx1
0082   1D80           00534     btfss flags, F_SOUND
0083   0008           00535     return
0084   1C80           00536     btfss flags, F_EVEN
0085   0008           00537     return
0086   003B           00538     banksel PWM2CON
0087   36A6           00539     lsrf PWM2PRH
0088   0CA5           00540     rrf PWM2PRL
0089   36A4           00541     lsrf PWM2DCH
008A   0CA3           00542     rrf PWM2DCL
008B   17AF           00543     bsf PWM2LDCON,LDA
008C   0008           00544     return
                      00545     
                      00546 ; high pitch to low-pitch    
008D                  00547 sound_fx2
008D   1D80           00548     btfss flags, F_SOUND
008E   0008           00549     return
008F   1C80           00550     btfss flags, F_EVEN
0090   0008           00551     return
0091   003B           00552     banksel PWM2CON
0092   35A5           00553     lslf PWM2PRL
0093   0DA6           00554     rlf PWM2PRH
0094   35A3           00555     lslf PWM2DCL
0095   0DA4           00556     rlf PWM2DCH
0096   17AF           00557     bsf PWM2LDCON,LDA
0097   0008           00558     return
                      00559     
                      00560 ; produce a pong sound
                      00561 ; input: ( d i -- )
                      00562 ;   d duration
                      00563 ;   i index frequency table    
0098                  00564 pong
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0098   1580           00565     bsf flags, F_SOUND
0099   003B           00566     banksel PWM2CON
009A   0800           00567     movfw T
009B   2???           00568     call frequency
009C   00A6           00569     movwf PWM2PRH
009D   0A00           00570     incf T,W
009E   2???           00571     call frequency
009F   00A5           00572     movwf PWM2PRL
00A0   3626           00573     lsrf PWM2PRH,W
00A1   00A4           00574     movwf PWM2DCH
00A2   0C25           00575     rrf PWM2PRL,W
00A3   00A3           00576     movwf PWM2DCL
00A4   17AF           00577     bsf PWM2LDCON,LDA
00A5   172B           00578     bsf PWM2CON,OE
00A6   17AB           00579     bsf PWM2CON,EN
00A7   002?           00580     banksel sound_timer
                      00581     pickn 1
00A8   3F01               M     moviw 1[SP]
00A9   00??           00582     movwf sound_timer
                      00583     dropn 2
00AA   3102               M     addfsr T,2
00AB   0008           00584     return
                      00585     
                      00586 ;task 5, read button and paddle position
00AC                  00587 user_input
00AC   0A??           00588     incf task
00AD   0A??           00589     incf lcount
00AE   2???           00590     call read_paddle
00AF   1B00           00591     btfsc flags, F_OVER
00B0   3???           00592     bra game_over
00B1   1A00           00593     btfsc flags,F_START
00B2   3???           00594     bra game_running
                      00595 ; game not running
00B3   2???           00596     call read_button
00B4   1D03           00597     skpz
00B5   3???           00598     bra skip_2_tasks
                      00599 ; start game    
00B6   2???           00600     call game_init
                      00601     leave
00B7   2???               M     goto isr_exit
00B8                  00602 game_running
00B8   1E80           00603     btfss flags, F_PAUSE
                      00604     leave
00B9   2???               M     goto isr_exit
                      00605 ; game on pause    
00BA                  00606 wait_trigger
00BA   2???           00607     call sound_fx2
00BB   2???           00608     call read_button
00BC   1D03           00609     skpz
00BD   3???           00610     bra skip_2_tasks
00BE   1280           00611     bcf flags,F_PAUSE
00BF   2???           00612     call set_ball_dx
                      00613     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   2???               M     goto isr_exit
                      00614 ; game over
00C1                  00615 game_over
00C1   2???           00616     call read_button
00C2   1D03           00617     skpz
00C3   3???           00618     bra skip_2_tasks
00C4   1300           00619     bcf flags,F_OVER
00C5   2???           00620     call game_init
00C6   0A??           00621     incf task
00C7   0A??           00622     incf lcount
                      00623     leave
00C8   2???               M     goto isr_exit
                      00624 ; while game not running skip 'move_ball' and 'collision' tasks    
00C9                  00625 skip_2_tasks
00C9   08??           00626     movfw paddle_pos
00CA   3E04           00627     addlw 4
00CB   00??           00628     movwf ball_x
00CC   0A??           00629     incf task
00CD   0A??           00630     incf task
00CE   2???           00631     call lfsr_rand
                      00632     leave
00CF   2???               M     goto isr_exit
                      00633 
                      00634     
00D0                  00635 read_button
00D0   0020           00636     banksel PORTA
00D1   080C           00637     movfw PORTA
00D2   3908           00638     andlw 1<<START_BTN
00D3   0008           00639     return
                      00640     
00D4                  00641 read_paddle
00D4   003B           00642     banksel PWM2CON
00D5   132B           00643     bcf PWM2CON,OE
00D6   0021           00644     banksel TRISA
00D7   140C           00645     bsf TRISA, PADDLE
00D8   0021           00646     banksel ADCON0
00D9   3003           00647     movlw 3
00DA   009D           00648     movwf ADCON0
00DB   189D           00649     btfsc ADCON0,NOT_DONE
00DC   2???           00650     goto $-1
00DD   3010           00651     movlw 4<<CHS0
00DE   009D           00652     movwf ADCON0
00DF   081C           00653     movfw ADRESH
00E0   1D80           00654     btfss flags, F_SOUND
00E1   3???           00655     bra $+3
00E2   003B           00656     banksel PWM2CON
00E3   172B           00657     bsf PWM2CON,OE
00E4   00??           00658     movwf paddle_pos
00E5   304A           00659     movlw PADDLE_LIMIT
00E6   02??           00660     subwf paddle_pos,W
00E7   1C03           00661     skpc
00E8   3???           00662     bra $+3
00E9   304A           00663     movlw PADDLE_LIMIT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   00??           00664     movwf paddle_pos
00EB   0021           00665     banksel TRISA
00EC   100C           00666     bcf TRISA, AUDIO
00ED   0008           00667     return
                      00668     
                      00669    
                      00670 ; task 6, move recking ball.   
00EE                  00671 move_ball
00EE   0B??           00672     decfsz ball_timer
00EF   3???           00673     bra move_ball_exit
00F0   08??           00674     movfw ball_speed
00F1   00??           00675     movwf ball_timer
00F2   08??           00676     movfw ball_dx
00F3   07??           00677     addwf ball_x
00F4   1D03           00678     skpz
00F5   3???           00679     bra right_bound
00F6   0A??           00680     incf ball_x
00F7   09??           00681     comf ball_dx
00F8   0A??           00682     incf ball_dx
00F9   3???           00683     bra move_y
00FA                  00684 right_bound    
00FA   08??           00685     movfw ball_x
00FB   3C52           00686     sublw BALL_RIGHT_BOUND
00FC   1803           00687     skpnc
00FD   3???           00688     bra move_y
00FE   03??           00689     decf ball_x
00FF   09??           00690     comf ball_dx
0100   0A??           00691     incf ball_dx
0101                  00692 move_y
0101   08??           00693     movfw ball_dy
0102   07??           00694     addwf ball_y
0103   303A           00695     movlw BALL_TOP_BOUND
0104   02??           00696     subwf ball_y,W
0105   1803           00697     skpnc
0106   3???           00698     bra bottom_bound
0107   09??           00699     comf ball_dy
0108   0A??           00700     incf ball_dy
0109   3???           00701     bra move_ball_exit
010A                  00702 bottom_bound
010A   08??           00703     movfw ball_y
010B   3CFA           00704     sublw BALL_BOTTOM_BOUND
010C   1803           00705     skpnc
010D   3???           00706     bra move_ball_exit
010E   09??           00707     comf ball_dy
010F   0A??           00708     incf ball_dy
0110                  00709 move_ball_exit    
0110   0A??           00710     incf task
0111   0A??           00711     incf lcount
                      00712     leave
0112   2???               M     goto isr_exit
                      00713 
                      00714 ; task 7, collision detection
0113                  00715 collision
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   002?           00716     banksel row1
                      00717 ; pre-compute x column (brick bit mask)    
                      00718 ; column = 7-(3*ball_x/32)
0114   35??           00719     lslf ball_x,W
0115   07??           00720     addwf ball_x,W
                      00721     pushw
0116   0019               M     movwi --SP
0117   3689           00722     lsrf WREG
0118   0E89           00723     swapf WREG
0119   390F           00724     andlw 15
011A   3C07           00725     sublw 7
                      00726 ; create mask    
011B   00??           00727     movwf temp
011C   3001           00728     movlw 1
                      00729     pushw
011D   0019               M     movwi --SP
011E   08??           00730     movfw temp
011F   1903           00731     skpnz
0120   3???           00732     bra $+4
0121   3580           00733     lslf T
0122   0B89           00734     decfsz WREG
0123   3???           00735     bra $-2
                      00736 ; ball/paddle test
0124   30EC           00737     movlw PADDLE_Y-BALL_HEIGHT+1
                      00738     pushw
0125   0019               M     movwi --SP
0126   30FB           00739     movlw PADDLE_Y+PADDLE_THICKNESS
                      00740     pushw
0127   0019               M     movwi --SP
0128   08??           00741     movfw ball_y
0129   2???           00742     call between
012A   1803           00743     skpnc
012B   3???           00744     bra check_paddle_bounce
012C   08??           00745     movfw ball_y
012D   3CF3           00746     sublw PADDLE_Y
012E   1C03           00747     skpc
012F   3???           00748     bra ball_lost
0130   3???           00749     bra row1_coll
0131                  00750 ball_lost    
0131   1680           00751     bsf flags, F_PAUSE ; pause game
0132   0B??           00752     decfsz balls
0133   3???           00753     bra $+2
0134   1200           00754     bcf flags, F_START
0135   3004           00755     movlw 4
0136   07??           00756     addwf paddle_pos,W
0137   00??           00757     movwf ball_x
0138   30EB           00758     movlw PADDLE_Y-BRICK_HEIGHT
0139   00??           00759     movwf ball_y
013A   30FC           00760     movlw -4
013B   00??           00761     movwf ball_dy
013C   3010           00762     movlw 16
                      00763     pushw
013D   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013E   3002           00764     movlw 2
                      00765     pushw
013F   0019               M     movwi --SP
0140   2???           00766     call pong
0141   3???           00767     bra collision_exit
                      00768 ; if ball_x over paddle bounce ball
0142                  00769 check_paddle_bounce
0142   08??           00770     movfw paddle_pos
                      00771     pushw
0143   0019               M     movwi --SP
0144   300A           00772     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+2
0145   07??           00773     addwf paddle_pos,W
                      00774     pushw
0146   0019               M     movwi --SP
0147   08??           00775     movfw ball_x
0148   2???           00776     call between
0149   1C03           00777     skpc
014A   3???           00778     bra collision_exit
014B   30FC           00779     movlw -4
014C   00??           00780     movwf ball_dy
014D   2???           00781     call set_ball_dx
014E   3002           00782     movlw 2
                      00783     pushw
014F   0019               M     movwi --SP
                      00784     pushw
0150   0019               M     movwi --SP
0151   2???           00785     call pong
0152   3???           00786     bra collision_exit
                      00787 ; row1 collision?    
0153                  00788 row1_coll    
0153   3043           00789     movlw ROW1_Y-BRICK_HEIGHT+1
                      00790     pushw
0154   0019               M     movwi --SP
0155   3052           00791     movlw ROW1_Y+BRICK_HEIGHT
                      00792     pushw
0156   0019               M     movwi --SP
0157   08??           00793     movfw ball_y
0158   2???           00794     call between
0159   1C03           00795     skpc
015A   3???           00796     bra row2_coll
                      00797 ; ball inside row1 bounds
015B   0800           00798     movfw T
015C   05??           00799     andwf row1, W
015D   1903           00800     skpnz
015E   3???           00801     bra collision_exit
015F   0900           00802     comf T,W
0160   05??           00803     andwf row1
0161   3009           00804     movlw 9
0162   2???           00805     call inc_score
0163   3???           00806     bra brick_bounce
                      00807 ; row2 collision?    
0164                  00808 row2_coll
0164   304B           00809     movlw ROW2_Y-BRICK_HEIGHT+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00810     pushw
0165   0019               M     movwi --SP
0166   305A           00811     movlw ROW2_Y+BRICK_HEIGHT
                      00812     pushw
0167   0019               M     movwi --SP
0168   08??           00813     movfw ball_y
0169   2???           00814     call between
016A   1C03           00815     skpc
016B   3???           00816     bra row3_coll
016C   0800           00817     movfw T
016D   05??           00818     andwf row2, W
016E   1903           00819     skpnz
016F   3???           00820     bra collision_exit
0170   0900           00821     comf T,W
0171   05??           00822     andwf row2
0172   3006           00823     movlw 6
0173   2???           00824     call inc_score
0174   3???           00825     bra brick_bounce
                      00826 ; row3 collision?    
0175                  00827 row3_coll
0175   3053           00828     movlw ROW3_Y-BRICK_HEIGHT+1
                      00829     pushw
0176   0019               M     movwi --SP
0177   3062           00830     movlw ROW3_Y+BRICK_HEIGHT
                      00831     pushw
0178   0019               M     movwi --SP
0179   08??           00832     movfw ball_y
017A   2???           00833     call between
017B   1C03           00834     skpc
017C   3???           00835     bra row4_coll
017D   0800           00836     movfw T
017E   05??           00837     andwf row3,W
017F   1903           00838     skpnz
0180   3???           00839     bra collision_exit
0181   0900           00840     comf T,W
0182   05??           00841     andwf row3
0183   3003           00842     movlw 3
0184   2???           00843     call inc_score
0185   3???           00844     bra brick_bounce
                      00845 ; row4 collision?    
0186                  00846 row4_coll
0186   305B           00847     movlw ROW4_Y-BRICK_HEIGHT+1
                      00848     pushw
0187   0019               M     movwi --SP
0188   306A           00849     movlw ROW4_Y+BRICK_HEIGHT
                      00850     pushw
0189   0019               M     movwi --SP
018A   08??           00851     movfw ball_y
018B   2???           00852     call between
018C   1C03           00853     skpc
018D   3???           00854     bra row5_coll
018E   0800           00855     movfw T
018F   05??           00856     andwf row4,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0190   1903           00857     skpnz
0191   3???           00858     bra collision_exit
0192   0900           00859     comf T,W
0193   05??           00860     andwf row4
0194   3002           00861     movlw 2
0195   2???           00862     call inc_score
0196   3???           00863     bra brick_bounce
                      00864 ; row5 collision?    
0197                  00865 row5_coll    
0197   3063           00866     movlw ROW5_Y-BRICK_HEIGHT+1
                      00867     pushw
0198   0019               M     movwi --SP
0199   3072           00868     movlw ROW5_Y+BRICK_HEIGHT
                      00869     pushw
019A   0019               M     movwi --SP
019B   08??           00870     movfw ball_y
019C   2???           00871     call between
019D   1C03           00872     skpc
019E   3???           00873     bra collision_exit
019F   0800           00874     movfw T
01A0   05??           00875     andwf row5,W
01A1   1903           00876     skpnz
01A2   3???           00877     bra collision_exit
01A3   0900           00878     comf T,W
01A4   05??           00879     andwf row5
01A5   3001           00880     movlw 1
01A6   2???           00881     call inc_score
01A7                  00882 brick_bounce
01A7   09??           00883     comf ball_dy
01A8   0A??           00884     incf ball_dy
01A9   2???           00885     call set_ball_dx
01AA   3001           00886     movlw 1
                      00887     pushw
01AB   0019               M     movwi --SP
01AC   3000           00888     movlw 0
                      00889     pushw
01AD   0019               M     movwi --SP
01AE   2???           00890     call pong
01AF                  00891 collision_exit
                      00892     dropn 2
01AF   3102               M     addfsr T,2
01B0   0A??           00893     incf task
01B1   0A??           00894     incf lcount
                      00895     leave
01B2   2???               M     goto isr_exit
                      00896 
                      00897 ; check if  lb <= x < hb
                      00898 ; input:
                      00899 ;    WREG  x
                      00900 ;    stack ( lb hb -- )     
                      00901 ; output:
                      00902 ;   Carry bit set if true    
01B3                  00903 between
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B3   00??           00904     movwf temp
                      00905     pickn 1
01B4   3F01               M     moviw 1[SP]
01B5   02??           00906     subwf temp,W
01B6   1C03           00907     skpc
01B7   3???           00908     bra between_exit
01B8   0800           00909     movfw T
01B9   02??           00910     subwf temp
01BA   0803           00911     movfw STATUS
01BB   3A01           00912     xorlw 1
01BC   0083           00913     movwf STATUS
01BD                  00914 between_exit    
                      00915     dropn 2
01BD   3102               M     addfsr T,2
01BE   0008           00916     return
                      00917     
                      00918 ; task 8, wait for first video line
01BF                  00919 video_first
01BF   0A??           00920     incf lcount
01C0   301E           00921     movlw FIRST_VIDEO_LINE
01C1   02??           00922     subwf lcount,W
01C2   1D03           00923     skpz
                      00924     leave
01C3   2???               M     goto isr_exit
01C4   01??           00925     clrf slice
01C5   0A??           00926     incf task
                      00927     leave
01C6   2???               M     goto isr_exit
                      00928    
                      00929 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00930 ; The following tasks are responsible to render video display.
                      00931 ; Each video line must be completed by setting color to black.
                      00932 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00933     
                      00934  
                      00935 ; task 9, draw score en ball count
01C7                  00936 draw_score ; lcount enter at 30 leave at 50
01C7   0021           00937     banksel TRISA
01C8   08??           00938     movfw slice
01C9   3689           00939     lsrf WREG
01CA   3689           00940     lsrf WREG
                      00941     pushw
01CB   0019               M     movwi --SP
01CC   300F           00942     movlw 0xf
01CD   05??           00943     andwf score+1,W
01CE   2???           00944     call digit_offset
01CF   0700           00945     addwf T,W
01D0   2???           00946     call digits
01D1   00??           00947     movwf d3
01D2   0E??           00948     swapf score+1,W
01D3   390F           00949     andlw 0xf
01D4   2???           00950     call digit_offset
01D5   0700           00951     addwf T,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D6   2???           00952     call digits
01D7   00??           00953     movwf d2
01D8   300F           00954     movlw 0xf
01D9   05??           00955     andwf score,W
01DA   2???           00956     call digit_offset
01DB   0700           00957     addwf T,W
01DC   2???           00958     call digits
01DD   2???           00959     call digit_row
01DE   08??           00960     movfw d2
01DF   2???           00961     call digit_row
01E0   08??           00962     movfw d3
01E1   2???           00963     call digit_row
                      00964     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
01E2   3014               M     movlw q
01E3   0B89               M     decfsz WREG
01E4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01E5   120C           00965     bcf TRISA,VIDEO_OUT
                      00966     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
01E6   3001               M     movlw q
01E7   0B89               M     decfsz WREG
01E8   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01E9   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01EA   160C           00967     bsf TRISA,VIDEO_OUT
                      00968     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
01EB   300A               M     movlw q
01EC   0B89               M     decfsz WREG
01ED   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
01EE   08??           00969     movfw balls
01EF   2???           00970     call digit_offset
01F0   0700           00971     addwf T,W
01F1   2???           00972     call digits
01F2   2???           00973     call digit_row
01F3                  00974 score_exit
                      00975     next_task 5*4
01F3   0A??               M     incf slice
01F4   3014               M     movlw 5*4
01F5   02??               M     subwf slice,W
01F6   1D03               M     skpz
                          M     leave
01F7   2???               M     goto isr_exit
01F8   01??               M     clrf slice
01F9   0A??               M     incf task
01FA   3014               M     movlw 5*4
01FB   07??               M     addwf lcount
                          M     leave
01FC   2???               M     goto isr_exit
                      00976 
  00000002            00977 digit_version equ 2
                      00978 ; display digit row    
01FD                  00979 digit_row
                      00980  if digit_version==1
                      00981     rlf WREG
                      00982     skpnc
                      00983     bcf TRISA,VIDEO_OUT
                      00984     rlf WREG
                      00985     bra $+1
                      00986     bsf TRISA,VIDEO_OUT
                      00987     skpnc
                      00988     bcf TRISA,VIDEO_OUT
                      00989     rlf WREG
                      00990     bra $+1
                      00991     bsf TRISA,VIDEO_OUT
                      00992     skpnc
                      00993     bcf TRISA,VIDEO_OUT
                      00994     nop
                      00995     bra $+1
                      00996     bsf TRISA,VIDEO_OUT
                      00997  else
01FD   0D89           00998     rlf WREG
01FE   1803           00999     skpnc
01FF   120C           01000     bcf TRISA,VIDEO_OUT
0200   1C03           01001     skpc
0201   160C           01002     bsf TRISA,VIDEO_OUT
0202   0D89           01003     rlf WREG
0203   1803           01004     skpnc
0204   120C           01005     bcf TRISA,VIDEO_OUT
0205   1C03           01006     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0206   160C           01007     bsf TRISA,VIDEO_OUT
0207   0D89           01008     rlf WREG
0208   1803           01009     skpnc
0209   120C           01010     bcf TRISA,VIDEO_OUT
020A   1C03           01011     skpc
020B   160C           01012     bsf TRISA,VIDEO_OUT
020C   3???           01013     bra $+1
020D   3???           01014     bra $+1
020E   160C           01015     bsf TRISA,VIDEO_OUT
                      01016  endif
020F   0008           01017     return
                      01018     
                      01019 ; task 10,  draw top wall, 8 screen lines    
0210                  01020 draw_top_wall ;lcount enter at 50 leave at 58
0210   1C80           01021     btfss flags, F_EVEN
0211   3???           01022     bra top_wall_exit
0212   0021           01023     banksel TRISA
                      01024     tdelay LEFT_MARGIN -2
  0010                    M     variable q=(LEFT_MARGIN -2)/3
  0002                    M     variable r=(LEFT_MARGIN -2)%3
                          M     if (q)
0213   3010               M     movlw q
0214   0B89               M     decfsz WREG
0215   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0216   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01025     white
                          M ;    banksel TRISA
0217   148C               M     bsf TRISA,CHROMA
0218   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01026     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0219   3057               M     movlw q
021A   0B89               M     decfsz WREG
021B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01027     black
                          M ;    banksel TRISA
021C   148C               M     bsf TRISA,CHROMA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021D   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
021E                  01028 top_wall_exit
                      01029     next_task BRICK_HEIGHT
021E   0A??               M     incf slice
021F   3008               M     movlw BRICK_HEIGHT
0220   02??               M     subwf slice,W
0221   1D03               M     skpz
                          M     leave
0222   2???               M     goto isr_exit
0223   01??               M     clrf slice
0224   0A??               M     incf task
0225   3008               M     movlw BRICK_HEIGHT
0226   07??               M     addwf lcount
                          M     leave
0227   2???               M     goto isr_exit
                      01030 
                      01031 ; task 11,  only on even field draw vertical side bands.    
0228                  01032 draw_void ;enter at 58 leave at 74| 255-58
0228   1C80           01033     btfss flags, F_EVEN
0229   3???           01034     bra no_wall_draw
022A   08??           01035     movfw ball_y
022B   02??           01036     subwf lcount,W
022C   1C03           01037     skpc
022D   3???           01038     bra no_ball_dly
022E   3008           01039     movlw BALL_HEIGHT
022F   07??           01040     addwf ball_y,W
0230   02??           01041     subwf lcount,W
0231   1C03           01042     skpc
0232   3???           01043     bra yes_ball
0233   3???           01044     bra no_ball
0234                  01045 no_ball_dly
                      01046     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0234   3002               M     movlw q
0235   0B89               M     decfsz WREG
0236   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0237                  01047 no_ball    
                      01048     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
0237   300D               M     movlw q
0238   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0239   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01049     draw_border BORDER_WIDTH
023A   0021               M     banksel TRISA
023B   148C               M     bsf TRISA,CHROMA
023C   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
023D   3001               M     movlw q
023E   0B89               M     decfsz WREG
023F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0240   0000               M     nop
                          M     endif
0241   160C               M     bsf TRISA,VIDEO_OUT
                      01050     black
                          M ;    banksel TRISA
0242   148C               M     bsf TRISA,CHROMA
0243   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01051     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0244   3052               M     movlw q
0245   0B89               M     decfsz WREG
0246   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0247   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01052     draw_border BORDER_WIDTH
0248   0021               M     banksel TRISA
0249   148C               M     bsf TRISA,CHROMA
024A   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
024B   3001               M     movlw q
024C   0B89               M     decfsz WREG
024D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
024E   0000               M     nop
                          M     endif
024F   160C               M     bsf TRISA,VIDEO_OUT
0250   3???           01053     bra draw_void_exit
0251                  01054 yes_ball
0251   0021           01055     banksel TRISA
0252   08??           01056     movfw ball_x
0253   1903           01057     skpnz
0254   3???           01058     bra ball_at_left
0255   3C52           01059     sublw BALL_RIGHT_BOUND
0256   1903           01060     skpnz
0257   3???           01061     bra ball_at_right
0258                  01062 ball_in_middle    
0258   3001           01063     movlw 1
0259   02??           01064     subwf ball_x,W
025A   1903           01065     skpnz
025B   3E01           01066     addlw 1
025C   00??           01067     movwf temp
                      01068     tdelay LEFT_MARGIN-22
  000A                    M     variable q=(LEFT_MARGIN-22)/3
  0000                    M     variable r=(LEFT_MARGIN-22)%3
                          M     if (q)
025D   300A               M     movlw q
025E   0B89               M     decfsz WREG
025F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0260   120C           01069     bcf TRISA,VIDEO_OUT
                      01070     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0261   3001               M     movlw q
0262   0B89               M     decfsz WREG
0263   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
0264   08??           01071     movfw temp
0265   160C           01072     bsf TRISA,VIDEO_OUT
0266   0B89           01073     decfsz WREG
0267   3???           01074     bra $-1
0268   120C           01075     bcf TRISA, VIDEO_OUT
                      01076     tdelay BALL_WIDTH
  0002                    M     variable q=(BALL_WIDTH)/3
  0002                    M     variable r=(BALL_WIDTH)%3
                          M     if (q)
0269   3002               M     movlw q
026A   0B89               M     decfsz WREG
026B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
026C   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
026D   160C           01077     bsf TRISA,VIDEO_OUT
026E   08??           01078     movfw ball_x
026F   3C52           01079     sublw BALL_RIGHT_BOUND
0270   0B89           01080     decfsz WREG
0271   3???           01081     bra $-1
0272   120C           01082     bcf TRISA,VIDEO_OUT
                      01083     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0273   3001               M     movlw q
0274   0B89               M     decfsz WREG
0275   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0276   0000               M     nop
                          M     endif
0277   160C           01084     bsf TRISA,VIDEO_OUT
0278   3???           01085     bra draw_void_exit
0279                  01086 ball_at_left
                      01087     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0279   300C               M     movlw q
027A   0B89               M     decfsz WREG
027B   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
027C   0000               M     nop
                          M     endif
027D   120C           01088     bcf TRISA,VIDEO_OUT
                      01089     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
027E   3004               M     movlw q
027F   0B89               M     decfsz WREG
0280   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0281   160C           01090     bsf TRISA,VIDEO_OUT
                      01091     tdelay COURT_WIDTH-6
  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
0282   3050               M     movlw q
0283   0B89               M     decfsz WREG
0284   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0285   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0286   0000           01092     nop
0287   120C           01093     bcf TRISA,VIDEO_OUT
                      01094     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0288   3001               M     movlw q
0289   0B89               M     decfsz WREG
028A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
028B   0000               M     nop
                          M     endif
028C   160C           01095     bsf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028D   3???           01096     bra draw_void_exit
028E                  01097 ball_at_right
                      01098     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
028E   300B               M     movlw q
028F   0B89               M     decfsz WREG
0290   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0291   0000               M     nop
                          M     endif
0292   120C           01099     bcf TRISA,VIDEO_OUT
                      01100     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0293   3001               M     movlw q
0294   0B89               M     decfsz WREG
0295   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0296   0000               M     nop
                          M     endif
0297   160C           01101     bsf TRISA,VIDEO_OUT
                      01102     tdelay COURT_WIDTH-2
  0052                    M     variable q=(COURT_WIDTH-2)/3
  0000                    M     variable r=(COURT_WIDTH-2)%3
                          M     if (q)
0298   3052               M     movlw q
0299   0B89               M     decfsz WREG
029A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
029B   120C           01103     bcf TRISA,VIDEO_OUT
                      01104     tdelay 10
  0003                    M     variable q=(10)/3
  0001                    M     variable r=(10)%3
                          M     if (q)
029C   3003               M     movlw q
029D   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
029F   0000               M     nop
                          M     endif
02A0   160C           01105     bsf TRISA,VIDEO_OUT
02A1                  01106 draw_void_exit    
02A1   0A??           01107     incf slice
02A2   0A??           01108     incf lcount
02A3   30FB           01109     movlw LAST_VIDEO_LINE+1
02A4   02??           01110     subwf lcount,W
02A5   1D03           01111     skpz
                      01112     leave
02A6   2???               M     goto isr_exit
02A7   01??           01113     clrf slice
02A8   3013           01114     movlw 19
02A9   00??           01115     movwf task
                      01116     leave
02AA   2???               M     goto isr_exit
02AB                  01117 no_wall_draw
                      01118     next_task 2*BRICK_HEIGHT
02AB   0A??               M     incf slice
02AC   3010               M     movlw 2*BRICK_HEIGHT
02AD   02??               M     subwf slice,W
02AE   1D03               M     skpz
                          M     leave
02AF   2???               M     goto isr_exit
02B0   01??               M     clrf slice
02B1   0A??               M     incf task
02B2   3010               M     movlw 2*BRICK_HEIGHT
02B3   07??               M     addwf lcount
                          M     leave
02B4   2???               M     goto isr_exit
                      01119     
                      01120 ; task 12, draw top brick row
02B5                  01121 draw_row1 ; lcount enter at 74 leave at 82
                      01122     chroma_ref
02B5   003B               M     banksel PWM1CON
02B6   121B               M     bcf PWM1CON,POL
02B7   0021           01123     banksel TRISA
02B8   08??           01124     movfw row1
02B9   00??           01125     movwf temp
                      01126     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
02BA   3010               M     movlw q
02BB   0B89               M     decfsz WREG
02BC   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02BD   0000               M     nop
                          M     endif
                      01127 ;    draw_border BORDER_WIDTH
                      01128     draw_wall mauve
  0000                    M     local next_brick
02BE   3008               M     movlw 8
                          M     pushw
02BF   0019               M     movwi --SP
02C0                      M next_brick    
02C0   35??               M     lslf temp
                          M     draw_brick mauve
  0000                    M     local no_brick
  0000                    M     local brick_delay
02C1   1C03               M     skpc
02C2   3???               M     bra no_brick
                          M     mauve
                          M ;    chroma_ref
                          M ;    banksel TRISA
02C3   120C               M     bcf TRISA,VIDEO_OUT
02C4   108C               M     bcf TRISA,CHROMA
02C5   0000               M     nop
02C6   3???               M     bra brick_delay
02C7                      M no_brick
                          M     black
                          M ;    banksel TRISA
02C7   148C               M     bsf TRISA,CHROMA
02C8   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02C9   3???               M     bra brick_delay 
02CA                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02CA   3007               M     movlw q
02CB   0B89               M     decfsz WREG
02CC   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02CD   0B80               M     decfsz T
02CE   3???               M     bra next_brick
                          M     dropn 1
02CF   3101               M     addfsr T,1
                      01129     black
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;    banksel TRISA
02D0   148C               M     bsf TRISA,CHROMA
02D1   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01130     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02D2   3001               M     movlw q
02D3   0B89               M     decfsz WREG
02D4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01131 ;    draw_border BORDER_WIDTH
                      01132     next_task BRICK_HEIGHT
02D5   0A??               M     incf slice
02D6   3008               M     movlw BRICK_HEIGHT
02D7   02??               M     subwf slice,W
02D8   1D03               M     skpz
                          M     leave
02D9   2???               M     goto isr_exit
02DA   01??               M     clrf slice
02DB   0A??               M     incf task
02DC   3008               M     movlw BRICK_HEIGHT
02DD   07??               M     addwf lcount
                          M     leave
02DE   2???               M     goto isr_exit
                      01133     
                      01134 ; task 13, draw 2nd brick row    
02DF                  01135 draw_row2 ;lcount enter at 82 leave at 90
                      01136     chroma_invert
02DF   003B               M     banksel PWM1CON
02E0   161B               M     bsf PWM1CON,POL
02E1   002?           01137     banksel row2
02E2   08??           01138     movfw row2
02E3   00??           01139     movwf temp
                      01140     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
02E4   3010               M     movlw q
02E5   0B89               M     decfsz WREG
02E6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E7   0000               M     nop
                          M     endif
                      01141 ;    draw_border BORDER_WIDTH
                      01142     draw_wall yellow
  0000                    M     local next_brick
02E8   3008               M     movlw 8
                          M     pushw
02E9   0019               M     movwi --SP
02EA                      M next_brick    
02EA   35??               M     lslf temp
                          M     draw_brick yellow
  0000                    M     local no_brick
  0000                    M     local brick_delay
02EB   1C03               M     skpc
02EC   3???               M     bra no_brick
                          M     yellow
                          M ;    chroma_invert
                          M ;    banksel TRISA
02ED   120C               M     bcf TRISA,VIDEO_OUT
02EE   108C               M     bcf TRISA,CHROMA
02EF   0000               M     nop
02F0   3???               M     bra brick_delay
02F1                      M no_brick
                          M     black
                          M ;    banksel TRISA
02F1   148C               M     bsf TRISA,CHROMA
02F2   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
02F3   3???               M     bra brick_delay 
02F4                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
02F4   3007               M     movlw q
02F5   0B89               M     decfsz WREG
02F6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02F7   0B80               M     decfsz T
02F8   3???               M     bra next_brick
                          M     dropn 1
02F9   3101               M     addfsr T,1
                      01143     black
                          M ;    banksel TRISA
02FA   148C               M     bsf TRISA,CHROMA
02FB   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01144     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02FC   3001               M     movlw q
02FD   0B89               M     decfsz WREG
02FE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01145 ;    draw_border BORDER_WIDTH
                      01146     next_task BRICK_HEIGHT
02FF   0A??               M     incf slice
0300   3008               M     movlw BRICK_HEIGHT
0301   02??               M     subwf slice,W
0302   1D03               M     skpz
                          M     leave
0303   2???               M     goto isr_exit
0304   01??               M     clrf slice
0305   0A??               M     incf task
0306   3008               M     movlw BRICK_HEIGHT
0307   07??               M     addwf lcount
                          M     leave
0308   2???               M     goto isr_exit
                      01147 
                      01148 ; task 14, draw 3rd brick row    
0309                  01149 draw_row3 ; lcount enter at 90 leave at 98
                      01150 ;    btfss flags, F_EVEN
                      01151 ;    bra row3_exit
                      01152     chroma_ref
0309   003B               M     banksel PWM1CON
030A   121B               M     bcf PWM1CON,POL
030B   002?           01153     banksel row3
030C   08??           01154     movfw row3
030D   00??           01155     movwf temp
                      01156     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
030E   3010               M     movlw q
030F   0B89               M     decfsz WREG
0310   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0311   0000               M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01157 ;    draw_border BORDER_WIDTH
                      01158     draw_wall blue
  0000                    M     local next_brick
0312   3008               M     movlw 8
                          M     pushw
0313   0019               M     movwi --SP
0314                      M next_brick    
0314   35??               M     lslf temp
                          M     draw_brick blue
  0000                    M     local no_brick
  0000                    M     local brick_delay
0315   1C03               M     skpc
0316   3???               M     bra no_brick
                          M     blue
                          M ;    chroma_ref
                          M ;    banksel TRISA
0317   160C               M     bsf TRISA, VIDEO_OUT
0318   108C               M     bcf TRISA,CHROMA
0319   0000               M     nop
031A   3???               M     bra brick_delay
031B                      M no_brick
                          M     black
                          M ;    banksel TRISA
031B   148C               M     bsf TRISA,CHROMA
031C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
031D   3???               M     bra brick_delay 
031E                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
031E   3007               M     movlw q
031F   0B89               M     decfsz WREG
0320   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0321   0B80               M     decfsz T
0322   3???               M     bra next_brick
                          M     dropn 1
0323   3101               M     addfsr T,1
                      01159     black
                          M ;    banksel TRISA
0324   148C               M     bsf TRISA,CHROMA
0325   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01160     tdelay 3
  0001                    M     variable q=(3)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(3)%3
                          M     if (q)
0326   3001               M     movlw q
0327   0B89               M     decfsz WREG
0328   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01161 ;    draw_border BORDER_WIDTH
0329                  01162 row3_exit    
                      01163     next_task BRICK_HEIGHT
0329   0A??               M     incf slice
032A   3008               M     movlw BRICK_HEIGHT
032B   02??               M     subwf slice,W
032C   1D03               M     skpz
                          M     leave
032D   2???               M     goto isr_exit
032E   01??               M     clrf slice
032F   0A??               M     incf task
0330   3008               M     movlw BRICK_HEIGHT
0331   07??               M     addwf lcount
                          M     leave
0332   2???               M     goto isr_exit
                      01164     
                      01165 ; task 15, draw 4th brick row    
0333                  01166 draw_row4 ; lcount enter at 98 leave at 106
                      01167     chroma_invert
0333   003B               M     banksel PWM1CON
0334   161B               M     bsf PWM1CON,POL
0335   002?           01168     banksel row4
0336   08??           01169     movfw row4
0337   00??           01170     movwf temp
                      01171     tdelay LEFT_MARGIN-3
  0010                    M     variable q=(LEFT_MARGIN-3)/3
  0001                    M     variable r=(LEFT_MARGIN-3)%3
                          M     if (q)
0338   3010               M     movlw q
0339   0B89               M     decfsz WREG
033A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
033B   0000               M     nop
                          M     endif
                      01172 ;    draw_border BORDER_WIDTH
                      01173     draw_wall dark_green
  0000                    M     local next_brick
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033C   3008               M     movlw 8
                          M     pushw
033D   0019               M     movwi --SP
033E                      M next_brick    
033E   35??               M     lslf temp
                          M     draw_brick dark_green
  0000                    M     local no_brick
  0000                    M     local brick_delay
033F   1C03               M     skpc
0340   3???               M     bra no_brick
                          M     dark_green
                          M ;    chroma_invert
                          M ;    banksel TRISA
0341   160C               M     bsf TRISA, VIDEO_OUT
0342   108C               M     bcf TRISA,CHROMA
0343   0000               M     nop
0344   3???               M     bra brick_delay
0345                      M no_brick
                          M     black
                          M ;    banksel TRISA
0345   148C               M     bsf TRISA,CHROMA
0346   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0347   3???               M     bra brick_delay 
0348                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0348   3007               M     movlw q
0349   0B89               M     decfsz WREG
034A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
034B   0B80               M     decfsz T
034C   3???               M     bra next_brick
                          M     dropn 1
034D   3101               M     addfsr T,1
                      01174     black
                          M ;    banksel TRISA
034E   148C               M     bsf TRISA,CHROMA
034F   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01175     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0350   3001               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0351   0B89               M     decfsz WREG
0352   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01176 ;    draw_border BORDER_WIDTH
                      01177     next_task BRICK_HEIGHT
0353   0A??               M     incf slice
0354   3008               M     movlw BRICK_HEIGHT
0355   02??               M     subwf slice,W
0356   1D03               M     skpz
                          M     leave
0357   2???               M     goto isr_exit
0358   01??               M     clrf slice
0359   0A??               M     incf task
035A   3008               M     movlw BRICK_HEIGHT
035B   07??               M     addwf lcount
                          M     leave
035C   2???               M     goto isr_exit
                      01178 
                      01179 ; task 16, draw 5th brick row    
035D                  01180 draw_row5 ; lcount enter at 106 leave at 114
035D   002?           01181     banksel row5
035E   08??           01182     movfw row5
035F   00??           01183     movwf temp
                      01184     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
  0002                    M     variable r=(LEFT_MARGIN-2)%3
                          M     if (q)
0360   3010               M     movlw q
0361   0B89               M     decfsz WREG
0362   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0363   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01185 ;    draw_border BORDER_WIDTH
                      01186     draw_wall gray
  0000                    M     local next_brick
0364   3008               M     movlw 8
                          M     pushw
0365   0019               M     movwi --SP
0366                      M next_brick    
0366   35??               M     lslf temp
                          M     draw_brick white
  0000                    M     local no_brick
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     local brick_delay
0367   1C03               M     skpc
0368   3???               M     bra no_brick
                          M     white
                          M ;    banksel TRISA
0369   148C               M     bsf TRISA,CHROMA
036A   120C               M     bcf TRISA,VIDEO_OUT
                          M ;    goto $+1
036B   0000               M     nop
036C   3???               M     bra brick_delay
036D                      M no_brick
                          M     black
                          M ;    banksel TRISA
036D   148C               M     bsf TRISA,CHROMA
036E   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
036F   3???               M     bra brick_delay 
0370                      M brick_delay    
                          M     tdelay BRICK_WIDTH
  0007                    M     variable q=(BRICK_WIDTH)/3
  0000                    M     variable r=(BRICK_WIDTH)%3
                          M     if (q)
0370   3007               M     movlw q
0371   0B89               M     decfsz WREG
0372   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0373   0B80               M     decfsz T
0374   3???               M     bra next_brick
                          M     dropn 1
0375   3101               M     addfsr T,1
                      01187     black
                          M ;    banksel TRISA
0376   148C               M     bsf TRISA,CHROMA
0377   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01188     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0378   3001               M     movlw q
0379   0B89               M     decfsz WREG
037A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     nop
                          M     endif
                      01189 ;    draw_border BORDER_WIDTH
                      01190     black
                          M ;    banksel TRISA
037B   148C               M     bsf TRISA,CHROMA
037C   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
                      01191     next_task BRICK_HEIGHT
037D   0A??               M     incf slice
037E   3008               M     movlw BRICK_HEIGHT
037F   02??               M     subwf slice,W
0380   1D03               M     skpz
                          M     leave
0381   2???               M     goto isr_exit
0382   01??               M     clrf slice
0383   0A??               M     incf task
0384   3008               M     movlw BRICK_HEIGHT
0385   07??               M     addwf lcount
                          M     leave
0386   2???               M     goto isr_exit
                      01192 
                      01193 ; task 17,draw all rows between paddle and lower brick row    
0387                  01194 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01195     tdelay LEFT_MARGIN
  0011                    M     variable q=(LEFT_MARGIN)/3
  0001                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0387   3011               M     movlw q
0388   0B89               M     decfsz WREG
0389   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
038A   0000               M     nop
                          M     endif
                      01196 ;    draw_border BORDER_WIDTH
                      01197     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
038B   306A               M     movlw q
038C   0B89               M     decfsz WREG
038D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
038E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01198 ;    draw_border BORDER_WIDTH
                      01199     black
                          M ;    banksel TRISA
038F   148C               M     bsf TRISA,CHROMA
0390   160C               M     bsf TRISA,VIDEO_OUT
                          M ;    goto $+1
0391   0A??           01200     incf lcount
0392   30F3           01201     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0393   02??           01202     subwf lcount,W
0394   1D03           01203     skpz
                      01204     leave
0395   2???               M     goto isr_exit
0396   01??           01205     clrf slice
0397   0A??           01206     incf task
                      01207     leave
0398   2???               M     goto isr_exit
                      01208 ;    next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
                      01209 
                      01210     
                      01211 ; task 18, draw paddle at bottom screen    
0399                  01212 draw_paddle
                      01213     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
0399   3012               M     movlw q
039A   0B89               M     decfsz WREG
039B   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
039C   08??           01214     movfw paddle_pos
039D   1903           01215     skpnz
039E   3???           01216     bra $+3
039F   0B89           01217     decfsz WREG
03A0   3???           01218     bra $-1
03A1   0021           01219     banksel TRISA
03A2   120C           01220     bcf TRISA,VIDEO_OUT
                      01221     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
03A3   300A               M     movlw q
03A4   0B89               M     decfsz WREG
03A5   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
03A6   2???               M     goto $+1
                          M     endif 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==1)
                          M     nop
                          M     endif
03A7   160C           01222     bsf TRISA,VIDEO_OUT
                      01223     next_task PADDLE_THICKNESS
03A8   0A??               M     incf slice
03A9   3008               M     movlw PADDLE_THICKNESS
03AA   02??               M     subwf slice,W
03AB   1D03               M     skpz
                          M     leave
03AC   2???               M     goto isr_exit
03AD   01??               M     clrf slice
03AE   0A??               M     incf task
03AF   3008               M     movlw PADDLE_THICKNESS
03B0   07??               M     addwf lcount
                          M     leave
03B1   2???               M     goto isr_exit
                      01224 
                      01225 ; task 19,  wait end of this field, reset task to zero    
03B2                  01226 wait_field_end
03B2   0A??           01227     incf lcount
03B3   1903           01228     skpnz
03B4   1400           01229     bsf flags, F_HI_LINE
03B5   1800           01230     btfsc flags, F_HI_LINE
03B6   2???           01231     goto hi_line
                      01232     leave
03B7   2???               M     goto isr_exit
03B8                  01233 hi_line
03B8   1880           01234     btfsc flags,F_EVEN
03B9   2???           01235     goto even_field
03BA   3005           01236     movlw 5
03BB   02??           01237     subwf lcount,W
03BC   1D03           01238     skpz
                      01239     leave
03BD   2???               M     goto isr_exit
03BE   2???           01240     goto field_end
03BF                  01241 even_field
03BF   3006           01242     movlw 6
03C0   02??           01243     subwf lcount,W
03C1   1D03           01244     skpz
                      01245     leave
03C2   2???               M     goto isr_exit
                      01246 ; even field last line is half_line    
                      01247 ; set PWM3 for line 263 half-line
03C3   003B           01248     banksel PWM3DC
03C4   3003           01249     movlw high HALF_LINE
03C5   00B6           01250     movwf PWM3PRH
03C6   308D           01251     movlw low HALF_LINE
03C7   00B5           01252     movwf PWM3PRL
03C8   17BF           01253     bsf PWM3LDCON,7
03C9                  01254 field_end
03C9   01??           01255     clrf task
03CA   01??           01256     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CB   01??           01257     clrf lcount
03CC   1000           01258     bcf flags, F_HI_LINE
03CD   1500           01259     bsf flags, F_SYNC
                      01260 ; toggle odd/even field flag    
03CE   3002           01261     movlw 1<<F_EVEN
03CF   06??           01262     xorwf flags
                      01263     leave
03D0   2???               M     goto isr_exit
                      01264 
                      01265 ; helper functions
                      01266 
                      01267 ; add 2 BCD digits
                      01268 ; parameters:
                      01269 ;   WREG -> first digit
                      01270 ;   T -> second digit
                      01271 ;   C -> carry from previous digits add    
                      01272 ; output:
                      01273 ;   T -> sum
                      01274 ;   C -> overflow
03D1                  01275 bcd_add
03D1   3D80           01276     addwfc T    
03D2   300A           01277     movlw 10
03D3   0200           01278     subwf T,W
03D4   1C03           01279     skpc
03D5   0008           01280     return
03D6   3006           01281     movlw 6
03D7   0780           01282     addwf T
03D8   300F           01283     movlw 15
03D9   0580           01284     andwf T
03DA   1403           01285     bsf STATUS,C
03DB   0008           01286     return
                      01287     
                      01288 ; increment user score
                      01289 ; This is a BCD addition where a single digit is added to score.   
                      01290 ; score is stored as big indian
                      01291 ; argument: 
                      01292 ;   WREG ->  bdc digit to add to score variable
03DC                  01293 inc_score
                      01294     pushw
03DC   0019               M     movwi --SP
03DD   1003           01295     clrc
03DE   300F           01296     movlw 15
03DF   05??           01297     andwf score+1,W
03E0   2???           01298     call bcd_add
03E1   0103           01299     clrw 
                      01300     pushw
03E2   0019               M     movwi --SP
03E3   0E??           01301     swapf score+1,W
03E4   390F           01302     andlw 15
03E5   2???           01303     call bcd_add
03E6   1803           01304     skpnc
03E7   0A??           01305     incf score
                      01306     popw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E8   0012               M     moviw SP++
03E9   0E89           01307     swapf WREG
03EA   0400           01308     iorwf T,W
03EB   00??           01309     movwf score+1
                      01310     dropn 1
03EC   3101               M     addfsr T,1
03ED   1C00           01311     btfss score,0
03EE   0008           01312     return
03EF   3001           01313     movlw 1
03F0   00??           01314     movwf ball_speed
03F1   3068           01315     movlw 0x68
03F2   02??           01316     subwf score+1,W
03F3   1D03           01317     skpz
03F4   0008           01318     return
03F5   1700           01319     bsf flags,F_OVER
03F6   0008           01320     return
                      01321     
                      01322 ;***********************************
                      01323 ; digit_offset, compute digit position in 'digits' table
                      01324 ;   position = digit * 5
                      01325 ; 
                      01326 ; input: WREG -> digit value {0..9}
                      01327 ;         
                      01328 ; output: WREG -> displacement in table
                      01329 ;***********************************
03F7                  01330 digit_offset    
                      01331     pushw 
03F7   0019               M     movwi --SP
03F8   3589           01332     lslf WREG
03F9   3589           01333     lslf WREG
03FA   0780           01334     addwf T
                      01335     popw
03FB   0012               M     moviw SP++
03FC   0008           01336     return
                      01337     
03FD                  01338 init_brick_wall
03FD   30??           01339     movlw high row1
03FE   0087           01340     movwf FSR1H
03FF   30??           01341     movlw low row1
0400   0086           01342     movwf FSR1L
0401   3005           01343     movlw 5
0402   00??           01344     movwf temp
0403   30FF           01345     movlw 0xff
0404                  01346 ibw    
0404   001E           01347     movwi FSR1++
0405   0B??           01348     decfsz temp
0406   3???           01349     bra ibw
0407   0008           01350     return
                      01351 
                      01352 ;    LFSR 32 bits
                      01353 ;    REF:  http://www.ece.cmu.edu/~koopman/lfsr/index.html
                      01354 ;    must be initialized with 0xFFFFFFFF
  7FFFF159            01355 LFSR_MASK equ 0x7FFFF159
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0408                  01356 lfsr_rand
0408   0C??           01357     rrf seed+3,W   ; rotation du LFSR 1 bit vers la droite
0409   0C??           01358     rrf seed, F
040A   0C??           01359     rrf seed+1,F
040B   0C??           01360     rrf seed+2,F
040C   0C??           01361     rrf seed+3,F
040D   1B80           01362     btfsc seed+3,7
040E   2???           01363     goto lfsr_rand_exit
040F   3059           01364     movlw LFSR_MASK & 0xFF
0410   06??           01365     xorwf seed
0411   30F1           01366     movlw (LFSR_MASK>>8) & 0xFF
0412   06??           01367     xorwf seed+1
0413   30FF           01368     movlw (LFSR_MASK>>16) & 0xFF
0414   06??           01369     xorwf seed+2
0415   307F           01370     movlw (LFSR_MASK>>24) & 0xFF
0416   06??           01371     xorwf seed+3
0417                  01372 lfsr_rand_exit
0417   301F           01373     movlw 0x1F
0418   05??           01374     andwf seed,W  ; modulo 32
0419   0008           01375     return
                      01376     
041A                  01377 set_ball_dx
041A   2???           01378     call lfsr_rand ;random
041B   3007           01379     movlw 7
041C   05??           01380     andwf seed,W
041D   3589           01381     lslf WREG
041E   000B           01382     brw
041F   3000           01383     movlw 0
0420   3???           01384     bra set_ball_dx_exit
0421   3001           01385     movlw 1
0422   3???           01386     bra set_ball_dx_exit
0423   30FF           01387     movlw -1
0424   3???           01388     bra set_ball_dx_exit
0425   3000           01389     movlw 0
0426   3???           01390     bra set_ball_dx_exit
0427   3001           01391     movlw 1
0428   3???           01392     bra set_ball_dx_exit
0429   30FF           01393     movlw -1
042A   3???           01394     bra set_ball_dx_exit
042B   30FF           01395     movlw -1
042C   3???           01396     bra set_ball_dx_exit
042D   3001           01397     movlw 1
042E                  01398 set_ball_dx_exit
042E   00??           01399     movwf ball_dx
042F   0008           01400     return
                      01401     
0430                  01402 game_init
0430   01??           01403     clrf score
0431   01??           01404     clrf score+1
0432   2???           01405     call init_brick_wall
0433   002?           01406     banksel balls
0434   3003           01407     movlw 3
0435   00??           01408     movwf balls
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0436   01??           01409     clrf ball_timer
0437   0A??           01410     incf ball_timer
0438   30EB           01411     movlw PADDLE_Y-BRICK_HEIGHT
0439   00??           01412     movwf ball_y
043A   2???           01413     call set_ball_dx
043B   30FC           01414     movlw -4
043C   00??           01415     movwf ball_dy
043D   3002           01416     movlw 2
043E   00??           01417     movwf ball_speed
043F   1600           01418     bsf flags, F_START
0440   1280           01419     bcf flags, F_PAUSE
0441   0008           01420     return
                      01421     
                      01422 ; delay by TIMER0
                      01423 ; parameter
                      01424 ;   WREG -> 2*Tcy+7cy    
0442                  01425 t0delay 
0442   0989           01426     comf WREG
0443   0095           01427     movwf TMR0
0444   110B           01428     bcf INTCON,T0IF
0445   1D0B           01429     btfss INTCON,T0IF
0446   3???           01430     bra $-1
0447   0008           01431     return
                      01432     
                      01433 MAIN_PROG CODE                      ; let linker place main program
                      01434 
0000                  01435 START
                      01436 ; clear common RAM
0000   0185           01437     clrf FSR0H
0001   3070           01438     movlw 0x70
0002   0084           01439     movwf FSR0L
0003   0103           01440     clrw
0004   001A           01441     movwi FSR0++
0005   1F84           01442     btfss FSR0L,7
0006   3???           01443     bra $-2
                      01444 ; clear banked RAM
0007   0184           01445     clrf FSR0L
0008   3020           01446     movlw 0x20
0009   0085           01447     movwf FSR0H
000A   0103           01448     clrw 
000B   001A           01449     movwi FSR0++
000C   1C05           01450     btfss FSR0H,0
000D   3???           01451     bra $-2
                      01452 ; initialize LFSR seed
000E   002?           01453     banksel seed
000F   09??           01454     comf seed
0010   09??           01455     comf seed+1
0011   09??           01456     comf seed+2
0012   09??           01457     comf seed+3
                      01458 ;   setup arguments stack pointer
0013   30??           01459     movlw high (stack+STACK_SIZE)
0014   0085           01460     movwf FSR0H
0015   30??           01461     movlw low (stack+STACK_SIZE)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016   0084           01462     movwf FSR0L
                      01463 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01464 ; TIMER0 prescale 1:2
0017   3050           01465     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01466     movwf OPTION_REG
                      01467 ; disable analog inputs, except AN0
0019   0023           01468     banksel ANSELA
001A   018C           01469     clrf ANSELA
                      01470 ; paddle potentiometer input     
001B   140C           01471     bsf ANSELA,PADDLE
001C   0021           01472     banksel ADCON1
001D   3020           01473     movlw (2<<ADCS0)
001E   009E           01474     movwf ADCON1
                      01475 ; pin setup
001F   0024           01476     banksel WPUA
0020   018C           01477     clrf WPUA
0021   0021           01478     banksel TRISA
0022   110C           01479     bcf TRISA,SYNC_OUT
0023   100C           01480     bcf TRISA,AUDIO
0024   0022           01481     banksel LATA
0025   160C           01482     bsf LATA, VIDEO_OUT
                      01483 ; PWM1 chroma signal on RA1
0026   003B           01484     banksel PWM1CON
0027   019F           01485     clrf PWM1LDCON
0028   0191           01486     clrf PWM1PHL
0029   0192           01487     clrf PWM1PHH
002A   0197           01488     clrf PWM1OFL
002B   0198           01489     clrf PWM1OFH
002C   0196           01490     clrf PWM1PRH
002D   3007           01491     movlw 7
002E   0095           01492     movwf PWM1PRL
002F   3004           01493     movlw 4
0030   0093           01494     movwf PWM1DCL
0031   0194           01495     clrf PWM1DCH
0032   179F           01496     bsf PWM1LDCON,7
0033   30C0           01497     movlw (1<<EN)|(1<<OE)
0034   009B           01498     movwf PWM1CON
                      01499 ; PWM2 sound
0035   003B           01500     banksel PWM2CON
0036   01A1           01501     clrf PWM2PHL
0037   01A2           01502     clrf PWM2PHH
0038   01A7           01503     clrf PWM2OFL
0039   01A8           01504     clrf PWM2OFH
003A   3030           01505     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01506     movwf PWM2CLKCON
003C   300D           01507     movlw high 3578;7
003D   00A6           01508     movwf PWM2PRH
003E   30FA           01509     movlw low 3578;7
003F   00A5           01510     movwf PWM2PRL
0040   3626           01511     lsrf PWM2PRH,W
0041   00A4           01512     movwf PWM2DCH
0042   0C25           01513     rrf PWM2PRL,W
0043   00A3           01514     movwf PWM2DCL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044   17AF           01515     bsf PWM2LDCON,LDA
                      01516 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01517     banksel PWM3CON
0046   01BF           01518     clrf PWM3LDCON
0047   01B1           01519     clrf PWM3PHL
0048   01B2           01520     clrf PWM3PHH
0049   01B7           01521     clrf PWM3OFL
004A   01B8           01522     clrf PWM3OFH
004B   301B           01523     movlw low HPERIOD
004C   00B5           01524     movwf PWM3PRL
004D   3007           01525     movlw high HPERIOD
004E   00B6           01526     movwf PWM3PRH
004F   3086           01527     movlw HSYNC
0050   00B3           01528     movwf PWM3DCL
0051   01B4           01529     clrf PWM3DCH
0052   30D0           01530     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01531     movwf PWM3CON
0054   17BF           01532     bsf PWM3LDCON,7
0055   143C           01533     bsf PWM3INTE,PRIE
                      01534 ; enbable interrupt    
0056   0020           01535     banksel PIR3
0057   1313           01536     bcf PIR3,PWM3IF
0058   0021           01537     banksel PIE3
0059   1713           01538     bsf PIE3,PWM3IE
005A   170B           01539     bsf INTCON,PEIE
005B   178B           01540     bsf INTCON,GIE
005C   01??           01541     clrf flags
005D   1500           01542     bsf flags, F_SYNC
                      01543 ; all processing done in ISR    
005E   2???           01544     goto $
                      01545 
                      01546 ; digits character table
005F                  01547 digits
005F   000B           01548     brw
0060   3440 34A0 34A0 01549     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01550     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01551     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01552     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01553     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01554     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01555     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01556     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01557     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01558     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3420 3460 
0092   0001           01559     reset
                      01560     
0093                  01561 frequency
0093   000B           01562     brw
0094   348B 34D3      01563     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01564     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01565     reset
                      01566     
                      01567 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01568 max_score 
                      01569  
3FA7 1EFF             01570     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000015
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LFSR_MASK                         7FFFF159
LWLO                              00000005
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_00DC                         000000DC
_ISR_00E1                         000000E1
_ISR_00E8                         000000E8
_ISR_0120                         00000120
_ISR_0123                         00000123
_ISR_0133                         00000133
_ISR_01E4                         000001E4
_ISR_01E8                         000001E8
_ISR_01E9                         000001E9
_ISR_01ED                         000001ED
_ISR_020C                         0000020C
_ISR_020D                         0000020D
_ISR_0215                         00000215
_ISR_0216                         00000216
_ISR_021B                         0000021B
_ISR_0236                         00000236
_ISR_0239                         00000239
_ISR_023F                         0000023F
_ISR_0246                         00000246
_ISR_0247                         00000247
_ISR_024D                         0000024D
_ISR_025F                         0000025F
_ISR_0263                         00000263
_ISR_0267                         00000267
_ISR_026B                         0000026B
_ISR_026C                         0000026C
_ISR_0271                         00000271
_ISR_0275                         00000275
_ISR_027B                         0000027B
_ISR_0280                         00000280
_ISR_0284                         00000284
_ISR_0285                         00000285
_ISR_028A                         0000028A
_ISR_0290                         00000290
_ISR_0295                         00000295
_ISR_029A                         0000029A
_ISR_029E                         0000029E
_ISR_02BC                         000002BC
_ISR_02CC                         000002CC
_ISR_02D4                         000002D4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_02E6                         000002E6
_ISR_02F6                         000002F6
_ISR_02FE                         000002FE
_ISR_0310                         00000310
_ISR_0320                         00000320
_ISR_0328                         00000328
_ISR_033A                         0000033A
_ISR_034A                         0000034A
_ISR_0352                         00000352
_ISR_0362                         00000362
_ISR_0363                         00000363
_ISR_0372                         00000372
_ISR_037A                         0000037A
_ISR_0389                         00000389
_ISR_038D                         0000038D
_ISR_038E                         0000038E
_ISR_039B                         0000039B
_ISR_039E                         0000039E
_ISR_03A0                         000003A0
_ISR_03A5                         000003A5
_ISR_03A6                         000003A6
_ISR_0446                         00000446
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      00000279
ball_at_right                     0000028E
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    00000258
ball_lost                         00000131
ball_speed                        0000000B
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000A8
bcd_add                           000003D1
between                           000001B3
between_exit                      000001BD
black                             
blue                              
bottom_bound                      0000010A
brick_bounce                      000001A7
case                              
check_paddle_bounce               00000142
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000113
collision_exit                    000001AF
d1                                000000A5
d2                                000000A6
d3                                000000A7
dark_green                        
digit_offset                      000003F7
digit_row                         000001FD
digit_version                     00000002
digits                            0000005F
draw_border                       
draw_brick                        
draw_empty                        00000387
draw_paddle                       00000399
draw_row1                         000002B5
draw_row2                         000002DF
draw_row3                         00000309
draw_row4                         00000333
draw_row5                         0000035D
draw_score                        000001C7
draw_top_wall                     00000210
draw_void                         00000228
draw_void_exit                    000002A1
draw_wall                         
dropn                             
eeprom                            00000780
even_field                        000003BF
field_end                         000003C9
flags                             00000000
frequency                         00000093
game_init                         00000430
game_over                         000000C1
game_running                      000000B8
gray                              white
hi_line                           000003B8
ibw                               00000404
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

inc_score                         000003DC
init_brick_wall                   000003FD
isr                               00000004
isr_exit                          00000029
lcount                            00000001
leave                             
lfsr_rand                         00000408
lfsr_rand_exit                    00000417
mauve                             
max_score                         00000780
move_ball                         000000EE
move_ball_exit                    00000110
move_y                            00000101
next_task                         
no_ball                           00000237
no_ball_dly                       00000234
no_wall_draw                      000002AB
paddle_pos                        00000006
pickn                             
pokew                             
pong                              00000098
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         0000002E
pushw                             
q                                 0000000A
r                                 00000002
read_button                       000000D0
read_paddle                       000000D4
right_bound                       000000FA
row1                              000000A0
row1_coll                         00000153
row2                              000000A1
row2_coll                         00000164
row3                              000000A2
row3_coll                         00000175
row3_exit                         00000329
row4                              000000A3
row4_coll                         00000186
row5                              000000A4
row5_coll                         00000197
score                             0000000C
score_exit                        000001F3
seed                              00000030
set_ball_dx                       0000041A
set_ball_dx_exit                  0000042E
set_presync                       0000003B
set_vsync                         00000053
skip_2_tasks                      000000C9
slice                             00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-14-2019  13:31:40         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

sound                             00000076
sound_fx1                         00000082
sound_fx2                         0000008D
sound_timer                       000000A9
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000442
task                              00000003
task_switch                       00000012
tdelay                            
temp                              00000004
temp2                             00000005
top_wall_exit                     0000021E
user_input                        000000AC
video_first                       000001BF
vsync                             00000046
vsync_end                         00000068
wait_field_end                    000003B2
wait_trigger                      000000BA
white                             
yellow                            
yes_ball                          00000251

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   343 suppressed

