MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, sound timer
                      00034 ;    12        |  1      | task 5, user input
                      00035 ;    13        |  1      | task 6, move ball
                      00036 ;    14        |  1      | task 7, collision control
                      00037 ;    15-30     |  26     | task 8, do nothing until first visible line    
                      00038 ;    31-50     |  20     | task 9, display score and balls count
                      00039 ;    51-58     |  8      | task 10, even field draw top wall, odd field do nothing
                      00040 ;    59-251    |  193    | task 11, even field draw sides line and ball skip to task 19, odd skip 16 lin
                            es
                      00041 ;    75-82     |  8      | task 12, odd field draw first bricks row, even field skipped
                      00042 ;    83-90     |  8      | task 13, odd field draw second bricks row, even field skipped
                      00043 ;    91-98     |  8      | task 14, odd field draw third bricks row, even field skipped
                      00044 ;    99-106    |  8      | task 15, odd field draw fourth bricks row, even field skipped
                      00045 ;    107-114   |  8      | task 16, odd field draw fifth bricks row, even field skipped
                      00046 ;    115-243   |  129    | task 17, odd field display game messages, even field skipped
                      00047 ;    244-251   |  8      | task 18, odd filed draw paddle, even field skipped
                      00048 ;    252-262/3 |  11/12  | task 19, wait end of field    
                      00049 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00050  
                      00051     
                      00052     include p12f1572.inc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00053     
8007   3FA7           00054     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00055     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00056     
                      00057     radix dec
                      00058 
                      00059 ; constants
  00000800            00060 PROG_SIZE equ 2048  ; program words
  00000080            00061 EEPROM_SIZE equ 128 ; high endurance flash words
                      00062  
  01B4F360            00063 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00064 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00065 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00066  
                      00067 ; NTSC signal 
  00003D76            00068 Fhorz equ 15734 ; horizontal frequency
  0000071B            00069 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00070 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00071 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00072 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00073 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00074 ; boolean flags 
  00000000            00075 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00076 F_EVEN equ 1    ; even field
  00000002            00077 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00078 F_SOUND equ 3   ; sound enabled 
  00000004            00079 F_START equ 4   ; game started 
  00000005            00080 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00081 F_OVER equ 6    ; game over
  00000007            00082 F_COOL equ 7    ; player got maximum score
                      00083  
                      00084 ;pins assignment
  00000000            00085 AUDIO EQU RA0
  00000000            00086 PADDLE equ RA0
  00000001            00087 CHROMA equ RA1
  00000002            00088 SYNC_OUT equ RA2
  00000003            00089 START_BTN equ RA3 
  00000004            00090 VIDEO_OUT equ RA4
  00000005            00091 CLKIN equ RA5
                      00092  
                      00093     ; constants used in video display
                      00094 ; values are in Tcy for x dimension.
                      00095 ; values are in scan lines for y dimension.    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001F            00096 FIRST_VIDEO_LINE equ 31 ; first video line displayed
  000000FB            00097 LAST_VIDEO_LINE  equ 251 ; last video line displayed
  00000036            00098 LEFT_MARGIN equ 54  ;  delay Tcy before any display
  00000100            00099 PLAY_WIDTH equ 256 ; Tcy
  00000008            00100 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00101 BRICK_WIDTH equ 16  ; Tcy
  00000004            00102 BORDER_WIDTH equ 4  ; Tcy
  00000020            00103 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00104 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00105 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00106 BALL_WIDTH equ 8 ; Tcy
  00000008            00107 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00108 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00109 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003B            00110 BALL_TOP_BOUND equ 59  ; scan lines
  000000FB            00111 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F4            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  00000005            00113 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00114 ROW1_Y equ 74
  00000052            00115 ROW2_Y equ 82
  0000005A            00116 ROW3_Y equ 90
  00000062            00117 ROW4_Y equ 98
  0000006A            00118 ROW5_Y equ 106
                      00119  
                      00120 
                      00121 ;;;;;;;;;;;;;;;;;;;;;;
                      00122 ;; assembler macros ;;
                      00123 ;;;;;;;;;;;;;;;;;;;;;;
                      00124 
                      00125 ; leave task 
                      00126 leave macro
                      00127     goto isr_exit
                      00128     endm
                      00129     
                      00130 ; move to next task on slice limit
                      00131 ; parameters:
                      00132 ;   s  nomber of slices used by the task    
                      00133 next_task macro s    
                      00134     incf slice
                      00135     movlw s
                      00136     subwf slice,W
                      00137     skpz
                      00138     leave
                      00139     clrf slice
                      00140     incf task
                      00141     leave
                      00142     endm
                      00143     
                      00144     
                      00145 ; swap variable with WREG    
                      00146 swap_var macro var
                      00147     xorwf var
                      00148     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00149     xorwf var
                      00150     endm
                      00151     
                      00152 
                      00153 ; delay in machine cycle T
                      00154 ; parameters:
                      00155 ;   mc   number of machine cycles    
                      00156 tdelay macro mc 
                      00157     if mc==0
                      00158     exitm
                      00159     endif
                      00160     if mc==1
                      00161     nop
                      00162     exitm
                      00163     endif
                      00164     if mc==2
                      00165     bra $+1
                      00166     exitm
                      00167     endif
                      00168     if mc==3
                      00169     nop
                      00170     bra $+1
                      00171     exitm
                      00172     endif
                      00173     if mc==4
                      00174     call _4tcy
                      00175     exitm
                      00176     endif
                      00177     if mc==5
                      00178     call _5tcy
                      00179     exitm
                      00180     endif
                      00181     if mc==6
                      00182     call _6tcy
                      00183     exitm
                      00184     endif
                      00185     if mc==7
                      00186     call _7tcy
                      00187     exitm
                      00188     endif
                      00189     if mc>7
                      00190     variable q=(mc-5)/3
                      00191     variable r=(mc-5)%3
                      00192     movlw q
                      00193     call _3ntcy
                      00194     if (r==2)
                      00195     bra $+1
                      00196     exitm
                      00197     endif 
                      00198     if (r==1)
                      00199     nop
                      00200     exitm
                      00201     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00202     endif
                      00203     endm
                      00204 
                      00205 ; enable weak pull on VIDEO_OUT
                      00206 ; to create a porch
                      00207 porch_on macro
                      00208     banksel WPUA
                      00209     bsf WPUA,VIDEO_OUT
                      00210     endm
                      00211     
                      00212 ; disable weak pull on VIDEO_OUT
                      00213 ; to remove porch
                      00214 porch_off macro
                      00215     banksel WPUA
                      00216     bcf WPUA,VIDEO_OUT
                      00217     endm
                      00218     
                      00219 ; enable chroma output
                      00220 chroma_on macro
                      00221     banksel TRISA
                      00222     bcf TRISA, CHROMA
                      00223     endm
                      00224     
                      00225 ;disable chroma output    
                      00226 chroma_off macro
                      00227     banksel TRISA
                      00228     bsf TRISA,CHROMA
                      00229     endm
                      00230     
                      00231 ; output chroma reference    
                      00232 chroma_ref macro
                      00233     banksel PWM1CON
                      00234     bcf PWM1CON,POL
                      00235     endm
                      00236     
                      00237 ; set chroma phase to 180 degree
                      00238 chroma_invert macro
                      00239     banksel PWM1CON
                      00240     bsf PWM1CON,POL
                      00241     endm
                      00242 
                      00243 ;;;;;;;;;;;;;;;;;;;;;;
                      00244 ;   colors macros
                      00245 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00246 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00247 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00248 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00249 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00250 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00251 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00252 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00253  
                      00254 ;set video output to black    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00255 black macro
                      00256     movlw BLACK
                      00257     movwf TRISA
                      00258     endm
                      00259     
                      00260 ; set video output to white    
                      00261 white macro    
                      00262     movlw WHITE
                      00263     movwf TRISA
                      00264     endm
                      00265 
                      00266 #define gray white
                      00267     
                      00268 ; set video output to mauve    
                      00269 mauve macro
                      00270     movlw MAUVE
                      00271     movwf TRISA
                      00272     endm
                      00273 
                      00274 ; set video output to yellow   
                      00275 yellow macro
                      00276     movlw YELLOW
                      00277     movwf TRISA
                      00278     endm
                      00279     
                      00280 ; set video output to blue
                      00281 blue macro
                      00282     movlw BLUE
                      00283     movwf TRISA
                      00284     endm
                      00285     
                      00286 ; set video output to dark blue    
                      00287 dark_green macro
                      00288     movlw DARK_GREEN
                      00289     movwf TRISA
                      00290     endm
                      00291 
                      00292     
                      00293     
                      00294     
                      00295 ; draw left and right borders
                      00296 ; parameters:
                      00297 ;   width delay determine width
                      00298 draw_border macro width
                      00299     banksel TRISA
                      00300     bsf TRISA,CHROMA
                      00301     bcf TRISA,VIDEO_OUT
                      00302     tdelay width
                      00303     bsf TRISA,VIDEO_OUT
                      00304     endm
                      00305     
                      00306 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00307 ;  stack manipulation macros
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00309 STACK_SIZE equ 16 ; size of argument stack
                      00310 #define T INDF0 ; indirect access to top of argument stack
                      00311 #define SP FSR0 ; use FSR0 as stack pointer 
                      00312 ; push WREG on T
                      00313 pushw  macro
                      00314     movwi --SP
                      00315     endm
                      00316   
                      00317 ; pop WREG from T
                      00318 popw macro
                      00319     moviw SP++
                      00320     endm
                      00321     
                      00322 ; swap WREG with 
                      00323 swapw  macro
                      00324     xorwf T
                      00325     xorwf T,W
                      00326     xorwf T
                      00327     endm
                      00328 
                      00329 ; drop n elements from stack
                      00330 dropn macro n
                      00331     addfsr T,n
                      00332     endm
                      00333 
                      00334 ; copy nth element of stack to WREG
                      00335 ;  n {0..31}, 0 is T   
                      00336 pickn macro n
                      00337     moviw n[SP]
                      00338     endm
                      00339    
                      00340 ; copy WREG to nth element of stack
                      00341 ; n {0..31}, 0 is T
                      00342 pokew macro n
                      00343     movwi n[SP]
                      00344     endm
                      00345     
                      00346     
                      00347 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00348 ;;    variables
                      00349 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00350  
                      00351     
                      00352     udata 0x20 ; bank 0
0020                  00353 stack res 16 ; arguments stack
0030                  00354 seed res 2 ; prng seed used by lfsr16
                      00355  
                      00356 ; video display manipulate TRISA register
                      00357 ; to avoid banksel during video update
                      00358 ; place variables related to video in same bank as TRISA 
                      00359 v_array   udata 0xA0 ; bank 1
00A0                  00360 row1 res 2; brick wall row1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2                  00361 row2 res 2
00A4                  00362 row3 res 2
00A6                  00363 row4 res 2
00A8                  00364 row5 res 2
00AA                  00365 row6 res 2
00AC                  00366 mask res 1 
00AD                  00367 pixels res 4
                      00368 ;d1 res 1 ; score msd digit pixels
                      00369 ;d2 res 1 ; score 2nd digit pixels
                      00370 ;d3 res 1 ; score lsd digit pixels
00B1                  00371 balls res 1 ; number of recking balls available 
00B2                  00372 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
                      00373  
                      00374 ; common 16 bytes RAM accessible whatever the selected bank 
                      00375     udata_shr 
0000                  00376 flags  res 1 ; boolean variables
0001                  00377 lcount res 1 ; video field line counter
0002                  00378 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00379 task res 1 ; where in video phase 
0004                  00380 temp1 res 1 ; temporary storage
0005                  00381 temp2 res 1 ; 
0006                  00382 paddle_pos res 1 
0007                  00383 ball_x res 1
0008                  00384 ball_y res 1
0009                  00385 ball_dx res 1
000A                  00386 ball_dy res 1
000B                  00387 ball_speed res 1
000C                  00388 score res 2 ; score stored in Binary Coded Decimal
000E                  00389 ball_timer res 1 
000F                  00390 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00391  
                      00392 ;; cpu reset entry point
                      00393 RES_VECT  CODE    0x0000            
0000   2???           00394     goto    initialize  ; go to beginning of program
0001   0001           00395     reset   
0002   0001           00396     reset
0003   0001           00397     reset
                      00398 
                      00399 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00400 ; interrupt service routine triggered by PWM3 period rollover
                      00401 ; after initialization is done all processing in done inside 
                      00402 ; this interrupt.
                      00403 ; It is designed as a round robin scheduler.    
                      00404 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00405 ISR CODE 0x0004
0004                  00406 isr
0004   0A??           00407     incf lcount
0005   1903           00408     skpnz
0006   1400           00409     bsf flags, F_BIT8
0007   1900           00410     btfsc flags, F_SYNC
0008   2???           00411     goto task_switch
                      00412  ; generate chroma sync
                      00413     tdelay 25
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 25==0
                          M     exitm
                          M     endif
                          M     if 25==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 25==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 25==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 25==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 25==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 25==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 25==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 25>7
  0006                    M     variable q=(25-5)/3
  0002                    M     variable r=(25-5)%3
0009   3006               M     movlw q
000A   2???               M     call _3ntcy
                          M     if (r==2)
000B   3???               M     bra $+1
                          M     exitm
                      00414     chroma_ref
000C   003B               M     banksel PWM1CON
000D   121B               M     bcf PWM1CON,POL
000E   0021           00415     banksel TRISA
000F   108C           00416     bcf TRISA,CHROMA
                      00417     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 16==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 16>7
  0003                    M     variable q=(16-5)/3
  0002                    M     variable r=(16-5)%3
0010   3003               M     movlw q
0011   2???               M     call _3ntcy
                          M     if (r==2)
0012   3???               M     bra $+1
                          M     exitm
0013   148C           00418     bsf TRISA,CHROMA
                      00419     porch_on
0014   0024               M     banksel WPUA
0015   160C               M     bsf WPUA,VIDEO_OUT
0016                  00420 task_switch ; round robin task scheduler   
0016   08??           00421     movfw task
0017   000B           00422     brw
0018   2???           00423     goto pre_vsync ;task 0, vertical pre-equalization pulses
0019   2???           00424     goto vsync ;task 1, vertical sync pulses
001A   2???           00425     goto post_vsync ;task 2, vertical post-equalization pulses
001B   2???           00426     goto vsync_end ;task 3, return to normal video line
001C   2???           00427     goto sound ;task 4, check sound timer expiration
001D   2???           00428     goto user_input ;task 5,  read button and paddle
001E   2???           00429     goto move_ball ;task 6, move recking ball.
001F   2???           00430     goto collision ; task 7, check for collision with brick wall and paddle
0020   2???           00431     goto video_first ; task 8, wait FIRST_VIDEO line.
0021   2???           00432     goto draw_score ;task 9,  draw score en ball count
0022   2???           00433     goto draw_top_wall ;task 10,  draw top wall
0023   2???           00434     goto draw_sides ;task 11, draw play space
0024   2???           00435     goto draw_row1 ;task 12, draw top bricks row
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   2???           00436     goto draw_row2 ;task 13, draw second bricks row
0026   2???           00437     goto draw_row3 ;task 14,  draw third bricks row
0027   2???           00438     goto draw_row4 ;task 15,  draw fourth bricks row
0028   2???           00439     goto draw_row5 ;task 16, draw fifth bricks row
0029   2???           00440     goto draw_empty;task 17, draw empty space down to bottom
002A   2???           00441     goto draw_paddle ;task 18, draw paddle
002B   2???           00442     goto wait_field_end ;task 19, idle to end of video field
002C   0001           00443     reset ; error trap, task out of range
002D                  00444 isr_exit  
                      00445     porch_off
002D   0024               M     banksel WPUA
002E   120C               M     bcf WPUA,VIDEO_OUT
002F   003B           00446     banksel PWM3INTF
0030   103D           00447     bcf PWM3INTF,PRIF
0031   0009           00448     retfie
                      00449 
                      00450 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00451 ;;  all tasks routine are here            ;;
                      00452 ;;  each must be terminate by leave macro ;;    
                      00453 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00454     
                      00455 ; task 0, vertical synchronization pre equalization
                      00456 ; 6 half horizontal scan lines    
0032                  00457 pre_vsync
0032   08??           00458     movfw slice
0033   1903           00459     skpnz
0034   2???           00460     goto set_presync
                      00461     next_task 6
0035   0A??               M     incf slice
0036   3006               M     movlw 6
0037   02??               M     subwf slice,W
0038   1D03               M     skpz
                          M     leave
0039   2???               M     goto isr_exit
003A   01??               M     clrf slice
003B   0A??               M     incf task
                          M     leave
003C   2???               M     goto isr_exit
003D                  00462 set_presync    
003D   003B           00463     banksel PWM3DC
003E   3041           00464     movlw HEQUAL
003F   00B3           00465     movwf PWM3DCL
0040   01B4           00466     clrf PWM3DCH
0041   3003           00467     movlw high HALF_LINE
0042   00B6           00468     movwf PWM3PRH
0043   308D           00469     movlw low HALF_LINE
0044   00B5           00470     movwf PWM3PRL
0045   17BF           00471     bsf PWM3LDCON,7
0046   0A??           00472     incf slice
                      00473     leave
0047   2???               M     goto isr_exit
                      00474     
                      00475 ; task 1, vertical synchronization pulses
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00476 ; 6 half horizontal scan lines    
0048                  00477 vsync 
0048   08??           00478     movfw slice
0049   1903           00479     skpnz
004A   2???           00480     goto set_vsync
                      00481     next_task 6
004B   0A??               M     incf slice
004C   3006               M     movlw 6
004D   02??               M     subwf slice,W
004E   1D03               M     skpz
                          M     leave
004F   2???               M     goto isr_exit
0050   01??               M     clrf slice
0051   0A??               M     incf task
                          M     leave
0052   2???               M     goto isr_exit
0053                  00482 set_vsync
0053   003B           00483     banksel PWM3DC
0054   3008           00484     movlw low VSYNC_PULSE
0055   00B3           00485     movwf PWM3DCL
0056   3003           00486     movlw high VSYNC_PULSE
0057   00B4           00487     movwf PWM3DCH
0058   17BF           00488     bsf PWM3LDCON,7
0059   0A??           00489     incf slice
                      00490     leave
005A   2???               M     goto isr_exit
                      00491     
                      00492 ; task 2, vertical synchronisation post equalization pulses
                      00493 ; 6 half horizontal scan lines    
005B                  00494 post_vsync
005B   08??           00495     movfw slice
005C   1903           00496     skpnz
005D   2???           00497     goto set_presync
005E   3006           00498     movlw 6
005F   02??           00499     subwf slice,W
0060   1903           00500     skpnz
0061   2???           00501     goto post_last
0062   0A??           00502     incf slice
                      00503     leave
0063   2???               M     goto isr_exit
0064                  00504 post_last    
0064   0A??           00505     incf task
0065   01??           00506     clrf slice
0066   1C80           00507     btfss flags, F_EVEN
                      00508     leave
0067   2???               M     goto isr_exit
                      00509     
                      00510 ; task 3, vertical synchronization completed, return to normal line
                      00511 ; rest horizonal line to its normal length.
                      00512 ; set lcount to 9.    
0068                  00513 vsync_end
0068   1100           00514     bcf flags, F_SYNC
0069   003B           00515     banksel PWM3DC
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   3086           00516     movlw HSYNC
006B   00B3           00517     movwf PWM3DCL
006C   01B4           00518     clrf PWM3DCH
006D   3007           00519     movlw high HPERIOD
006E   00B6           00520     movwf PWM3PRH
006F   301B           00521     movlw low HPERIOD
0070   00B5           00522     movwf PWM3PRL
0071   17BF           00523     bsf PWM3LDCON,7
0072   0A??           00524     incf task
0073   36??           00525     lsrf lcount
                      00526     leave
0074   2???               M     goto isr_exit
                      00527 
                      00528 ; task 4,  sound timer
                      00529 ; if sound active process it.    
0075                  00530 sound
0075   0A??           00531     incf task
0076   1D80           00532     btfss flags, F_SOUND
                      00533     leave
0077   2???               M     goto isr_exit
0078   1A80           00534     btfsc flags, F_PAUSE
0079   2???           00535     call sound_fx1
007A   002?           00536     banksel sound_timer
007B   0B??           00537     decfsz sound_timer
                      00538     leave
007C   2???               M     goto isr_exit
007D   1180           00539     bcf flags, F_SOUND
007E   003B           00540     banksel PWM2CON
007F   132B           00541     bcf PWM2CON,OE
0080   13AB           00542     bcf PWM2CON,EN
                      00543     leave
0081   2???               M     goto isr_exit
                      00544 
                      00545 ; sound effect, low pitch to high-pitch    
0082                  00546 sound_fx1
0082   1D80           00547     btfss flags, F_SOUND
0083   0008           00548     return
0084   1C80           00549     btfss flags, F_EVEN
0085   0008           00550     return
0086   003B           00551     banksel PWM2CON
0087   36A6           00552     lsrf PWM2PRH
0088   0CA5           00553     rrf PWM2PRL
0089   36A4           00554     lsrf PWM2DCH
008A   0CA3           00555     rrf PWM2DCL
008B   17AF           00556     bsf PWM2LDCON,LDA
008C   0008           00557     return
                      00558     
                      00559 ; sound effect, high pitch to low-pitch    
008D                  00560 sound_fx2
008D   1D80           00561     btfss flags, F_SOUND
008E   0008           00562     return
008F   1C80           00563     btfss flags, F_EVEN
0090   0008           00564     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0091   003B           00565     banksel PWM2CON
0092   35A5           00566     lslf PWM2PRL
0093   0DA6           00567     rlf PWM2PRH
0094   35A3           00568     lslf PWM2DCL
0095   0DA4           00569     rlf PWM2DCH
0096   17AF           00570     bsf PWM2LDCON,LDA
0097   0008           00571     return
                      00572     
                      00573 ; initialize sound generation.
                      00574 ; input:
                      00575 ;   T = duration
                      00576 ;   WREG = index in frequency table    
                      00577 ; outpout:
                      00578 ;   none    
0098                  00579 sound_init
                      00580     pushw  ; ( d i -- )
0098   0019               M     movwi --SP
0099   1580           00581     bsf flags, F_SOUND
009A   003B           00582     banksel PWM2CON
009B   0800           00583     movfw T
009C   2???           00584     call frequency
009D   00A6           00585     movwf PWM2PRH
009E   0A00           00586     incf T,W
009F   2???           00587     call frequency
00A0   00A5           00588     movwf PWM2PRL
00A1   3626           00589     lsrf PWM2PRH,W
00A2   00A4           00590     movwf PWM2DCH
00A3   0C25           00591     rrf PWM2PRL,W
00A4   00A3           00592     movwf PWM2DCL
00A5   17AF           00593     bsf PWM2LDCON,LDA
00A6   172B           00594     bsf PWM2CON,OE
00A7   17AB           00595     bsf PWM2CON,EN
00A8   002?           00596     banksel sound_timer
                      00597     pickn 1
00A9   3F01               M     moviw 1[SP]
00AA   00??           00598     movwf sound_timer
                      00599     dropn 2
00AB   3102               M     addfsr T,2
00AC   0008           00600     return
                      00601     
                      00602 ;task 5, read button and paddle position
00AD                  00603 user_input
00AD   0A??           00604     incf task
00AE   2???           00605     call read_paddle
00AF   1B00           00606     btfsc flags, F_OVER
00B0   3???           00607     bra game_over
00B1   1A00           00608     btfsc flags,F_START
00B2   3???           00609     bra game_running
                      00610 ; game not running
00B3   2???           00611     call read_button
00B4   1D03           00612     skpz
00B5   3???           00613     bra skip_2_tasks
                      00614 ; start game    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   2???           00615     call game_init
                      00616     leave
00B7   2???               M     goto isr_exit
00B8                  00617 game_running
00B8   1E80           00618     btfss flags, F_PAUSE
                      00619     leave
00B9   2???               M     goto isr_exit
                      00620 ; game on pause    
00BA                  00621 wait_trigger
00BA   2???           00622     call read_button
00BB   1D03           00623     skpz
00BC   3???           00624     bra skip_2_tasks
00BD   1280           00625     bcf flags,F_PAUSE
00BE   2???           00626     call set_ball_dx
                      00627     leave
00BF   2???               M     goto isr_exit
                      00628 ; game over
00C0                  00629 game_over
00C0   2???           00630     call read_button
00C1   1D03           00631     skpz
00C2   3???           00632     bra skip_2_tasks
00C3   1300           00633     bcf flags,F_OVER
00C4   2???           00634     call game_init
00C5   0A??           00635     incf task
                      00636     leave
00C6   2???               M     goto isr_exit
                      00637 ; while game not running skip 'move_ball' and 'collision' tasks    
00C7                  00638 skip_2_tasks
00C7   08??           00639     movfw paddle_pos
00C8   3E02           00640     addlw 2
00C9   00??           00641     movwf ball_x
00CA   0A??           00642     incf task
00CB   0A??           00643     incf task
00CC   2???           00644     call lfsr16
                      00645     leave
00CD   2???               M     goto isr_exit
                      00646 
                      00647     
00CE                  00648 read_button
00CE   0020           00649     banksel PORTA
00CF   080C           00650     movfw PORTA
00D0   3908           00651     andlw 1<<START_BTN
00D1   0008           00652     return
                      00653     
00D2                  00654 read_paddle
00D2   003B           00655     banksel PWM2CON
00D3   13AB           00656     bcf PWM2CON,EN
00D4   0021           00657     banksel TRISA
00D5   140C           00658     bsf TRISA, PADDLE
00D6   0021           00659     banksel ADCON0
00D7   3003           00660     movlw 3
00D8   009D           00661     movwf ADCON0
00D9   189D           00662     btfsc ADCON0,NOT_DONE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DA   2???           00663     goto $-1
00DB   3010           00664     movlw 4<<CHS0
00DC   009D           00665     movwf ADCON0
00DD   081C           00666     movfw ADRESH
00DE   1D80           00667     btfss flags, F_SOUND
00DF   3???           00668     bra $+3
00E0   003B           00669     banksel PWM2CON
00E1   17AB           00670     bsf PWM2CON,EN
00E2   00??           00671     movwf paddle_pos
00E3   304A           00672     movlw PADDLE_LIMIT
00E4   02??           00673     subwf paddle_pos,W
00E5   1C03           00674     skpc
00E6   3???           00675     bra $+3
00E7   304A           00676     movlw PADDLE_LIMIT
00E8   00??           00677     movwf paddle_pos
00E9   0021           00678     banksel TRISA
00EA   100C           00679     bcf TRISA, AUDIO
00EB   0008           00680     return
                      00681     
                      00682    
                      00683 ; task 6, move recking ball.   
00EC                  00684 move_ball
00EC   0B??           00685     decfsz ball_timer
00ED   3???           00686     bra move_ball_exit
00EE   08??           00687     movfw ball_speed
00EF   00??           00688     movwf ball_timer
00F0   08??           00689     movfw ball_dx
00F1   07??           00690     addwf ball_x
00F2   1F80           00691     btfss ball_dx,7
00F3   3???           00692     bra right_bound
00F4                  00693 left_bound
00F4   1903           00694     skpnz
00F5   3???           00695     bra $+3
00F6   1F80           00696     btfss ball_x,7
00F7   3???           00697     bra move_y
00F8   3001           00698     movlw 1
00F9   00??           00699     movwf ball_x
00FA   09??           00700     comf ball_dx
00FB   0A??           00701     incf ball_dx
00FC   3???           00702     bra move_y
00FD                  00703 right_bound    
00FD   08??           00704     movfw ball_x
00FE   3C52           00705     sublw BALL_RIGHT_BOUND
00FF   1803           00706     skpnc
0100   3???           00707     bra move_y
0101   03??           00708     decf ball_x
0102   09??           00709     comf ball_dx
0103   0A??           00710     incf ball_dx
0104                  00711 move_y
0104   08??           00712     movfw ball_dy
0105   07??           00713     addwf ball_y
0106   303B           00714     movlw BALL_TOP_BOUND
0107   02??           00715     subwf ball_y,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0108   1803           00716     skpnc
0109   3???           00717     bra bottom_bound
010A   09??           00718     comf ball_dy
010B   0A??           00719     incf ball_dy
010C   3???           00720     bra move_ball_exit
010D                  00721 bottom_bound
010D   08??           00722     movfw ball_y
010E   3CFB           00723     sublw BALL_BOTTOM_BOUND
010F   1803           00724     skpnc
0110   3???           00725     bra move_ball_exit
0111   09??           00726     comf ball_dy
0112   0A??           00727     incf ball_dy
0113                  00728 move_ball_exit    
0113   0A??           00729     incf task
                      00730     leave
0114   2???               M     goto isr_exit
                      00731 
                      00732 ; task 7, collision detection
0115                  00733 collision
0115   30??           00734     movlw high row1
0116   0087           00735     movwf FSR1H
0117   30??           00736     movlw low row1
0118   0086           00737     movwf FSR1L
0119   002?           00738     banksel mask
                      00739 ; pre-compute ball column and compute brick mask
                      00740 ; column = 3*ball_x/16
011A   35??           00741     lslf ball_x,W
011B   07??           00742     addwf ball_x,W
011C   0E89           00743     swapf WREG
011D   390F           00744     andlw 15
011E   00??           00745     movwf temp1
011F   3008           00746     movlw 8
0120   02??           00747     subwf temp1,W
0121   1C03           00748     skpc
0122   3???           00749     bra $+3
0123   00??           00750     movwf temp1
0124   3141           00751     addfsr FSR1,1
                      00752 ; create mask    
0125   3080           00753     movlw 0x80
0126   00??           00754     movwf mask
0127   08??           00755     movfw temp1
0128   1903           00756     skpnz
0129   3???           00757     bra $+4
012A   36??           00758     lsrf mask
012B   0B??           00759     decfsz temp1
012C   3???           00760     bra $-2
012D   1B80           00761     btfsc ball_dy,7
012E   3???           00762     bra wall_test ; ball going up
012F                  00763 fallout_test
                      00764 ; if ball_y > LAST_VIDEO_LINE-BALL_HEIGTH/2 then ball lost
012F   30F7           00765     movlw LAST_VIDEO_LINE-BALL_HEIGHT/2
0130   02??           00766     subwf ball_y,W
0131   1C03           00767     skpc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0132   3???           00768     bra paddle_test
0133                  00769 ball_lost    
0133   1680           00770     bsf flags, F_PAUSE ; pause game
0134   0B??           00771     decfsz balls
0135   3???           00772     bra $+3
0136   1200           00773     bcf flags, F_START
0137   1700           00774     bsf flags, F_OVER
0138   3002           00775     movlw 2
0139   07??           00776     addwf paddle_pos,W
013A   00??           00777     movwf ball_x
013B   30ED           00778     movlw PADDLE_Y-BALL_HEIGHT+1
013C   00??           00779     movwf ball_y
013D   30FC           00780     movlw -4
013E   00??           00781     movwf ball_dy
013F   3008           00782     movlw 8
                      00783     pushw
0140   0019               M     movwi --SP
0141   3002           00784     movlw 2
0142   2???           00785     call sound_init
0143   3???           00786     bra collision_exit
0144                  00787 paddle_test    
                      00788 ; paddle bounce test
0144   30ED           00789     movlw PADDLE_Y-BALL_HEIGHT+1
0145   02??           00790     subwf ball_y,W
0146   1C03           00791     skpc
0147   3???           00792     bra wall_test
                      00793 ; if ball_x over paddle bounce ball
0148                  00794 check_paddle_bounce
0148   3002           00795     movlw BALL_WIDTH/3
0149   02??           00796     subwf paddle_pos,W
                      00797     pushw
014A   0019               M     movwi --SP
014B   300A           00798     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+(BALL_WIDTH/3)
014C   07??           00799     addwf paddle_pos,W
                      00800     pushw
014D   0019               M     movwi --SP
014E   08??           00801     movfw ball_x
014F   2???           00802     call between
0150   1C03           00803     skpc
0151   3???           00804     bra collision_exit
0152                  00805 paddle_bounce 
0152   08??           00806     movfw ball_dx
0153   00??           00807     movwf old_dx
0154   08??           00808     movfw paddle_pos
0155   02??           00809     subwf ball_x,W
0156   3789           00810     asrf WREG
0157   3789           00811     asrf WREG
0158   3789           00812     asrf WREG
0159   00??           00813     movwf ball_dx
015A   06??           00814     xorwf old_dx,W
015B   1903           00815     skpnz
015C   2???           00816     call set_ball_dx
015D   30FC           00817     movlw -4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015E   00??           00818     movwf ball_dy
015F   3002           00819     movlw 2
                      00820     pushw
0160   0019               M     movwi --SP
0161   2???           00821     call sound_init
0162   3???           00822     bra collision_exit
                      00823 ; brick wall collision test    
0163                  00824 wall_test
0163   304A           00825     movlw ROW1_Y
0164   00??           00826     movwf temp1
0165   3072           00827     movlw ROW5_Y+BRICK_HEIGHT
0166   00??           00828     movwf temp2
0167   3007           00829     movlw BALL_HEIGHT-1
0168   1F80           00830     btfss ball_dy,7
0169   3???           00831     bra going_down
016A   07??           00832     addwf temp1
016B   07??           00833     addwf temp2
016C   3???           00834     bra $+3
016D                  00835 going_down
016D   02??           00836     subwf temp1
016E   02??           00837     subwf temp2
016F   08??           00838     movfw temp1
                      00839     pushw
0170   0019               M     movwi --SP
0171   08??           00840     movfw temp2
                      00841     pushw
0172   0019               M     movwi --SP
0173   08??           00842     movfw ball_y
0174   2???           00843     call between
0175   1C03           00844     skpc
0176   3???           00845     bra collision_exit
0177   08??           00846     movfw temp1
0178   02??           00847     subwf ball_y,W
0179   3689           00848     lsrf WREG
017A   3689           00849     lsrf WREG
017B   3689           00850     lsrf WREG
017C   000B           00851     brw
017D   3???           00852     bra row1_test
017E   3???           00853     bra row2_test
017F   3???           00854     bra row3_test
0180   3???           00855     bra row4_test
0181   3???           00856     bra row5_test
0182   0001           00857     reset
0183                  00858 row1_test
0183   08??           00859     movfw mask
0184   0501           00860     andwf INDF1,W
0185   1903           00861     skpnz
0186   3???           00862     bra collision_exit
0187   09??           00863     comf mask,W
0188   0581           00864     andwf INDF1
0189   3009           00865     movlw 9
018A   2???           00866     call inc_score
018B   3???           00867     bra brick_bounce
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018C                  00868 row2_test
018C   3142           00869     addfsr FSR1,2
018D   08??           00870     movfw mask
018E   0501           00871     andwf INDF1, W
018F   1903           00872     skpnz
0190   3???           00873     bra collision_exit
0191   09??           00874     comf mask,W
0192   0581           00875     andwf INDF1
0193   3006           00876     movlw 6
0194   2???           00877     call inc_score
0195   3???           00878     bra brick_bounce
0196                  00879 row3_test
0196   3144           00880     addfsr FSR1,4
0197   08??           00881     movfw mask
0198   0501           00882     andwf INDF1,W
0199   1903           00883     skpnz
019A   3???           00884     bra collision_exit
019B   09??           00885     comf mask,W
019C   0581           00886     andwf INDF1
019D   3003           00887     movlw 3
019E   2???           00888     call inc_score
019F   3???           00889     bra brick_bounce
01A0                  00890 row4_test
01A0   3146           00891     addfsr FSR1,6
01A1   08??           00892     movfw mask
01A2   0501           00893     andwf INDF1,W
01A3   1903           00894     skpnz
01A4   3???           00895     bra collision_exit
01A5   09??           00896     comf mask,W
01A6   0581           00897     andwf INDF1
01A7   3002           00898     movlw 2
01A8   2???           00899     call inc_score
01A9   3???           00900     bra brick_bounce
01AA                  00901 row5_test    
01AA   3148           00902     addfsr FSR1,8
01AB   08??           00903     movfw mask
01AC   0501           00904     andwf INDF1,W
01AD   1903           00905     skpnz
01AE   3???           00906     bra collision_exit
01AF   09??           00907     comf mask,W
01B0   0581           00908     andwf INDF1
01B1   3001           00909     movlw 1
01B2   2???           00910     call inc_score
01B3                  00911 brick_bounce
01B3   09??           00912     comf ball_dy
01B4   0A??           00913     incf ball_dy
                      00914     ;call set_ball_dx
01B5   3001           00915     movlw 1
                      00916     pushw
01B6   0019               M     movwi --SP
01B7   3000           00917     movlw 0
01B8   2???           00918     call sound_init
01B9                  00919 collision_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B9   0A??           00920     incf task
                      00921     leave
01BA   2???               M     goto isr_exit
                      00922 
                      00923 ; check if  lb <= x < hb
                      00924 ; input:
                      00925 ;    WREG  x
                      00926 ;    stack ( lb hb -- )     
                      00927 ; output:
                      00928 ;   Carry bit set if true    
01BB                  00929 between
01BB   00??           00930     movwf temp2
                      00931     pickn 1
01BC   3F01               M     moviw 1[SP]
01BD   02??           00932     subwf temp2,W
01BE   1C03           00933     skpc
01BF   3???           00934     bra between_exit2
01C0   0800           00935     movfw T
01C1   02??           00936     subwf temp2
01C2   0803           00937     movfw STATUS
01C3   3A01           00938     xorlw 1
01C4   0083           00939     movwf STATUS
01C5                  00940 between_exit    
                      00941     dropn 2
01C5   3102               M     addfsr T,2
01C6   0008           00942     return
                      00943 ; add tcy to have constant tcy for this routine whatever the path    
01C7                  00944 between_exit2
01C7   3???           00945     bra $+1
01C8   3???           00946     bra between_exit
                      00947     
                      00948 ; task 8, wait for first video line
01C9                  00949 video_first
01C9   301F           00950     movlw FIRST_VIDEO_LINE
01CA   02??           00951     subwf lcount,W
01CB   1D03           00952     skpz
                      00953     leave
01CC   2???               M     goto isr_exit
01CD   01??           00954     clrf slice
01CE   0A??           00955     incf task
                      00956     leave
01CF   2???               M     goto isr_exit
                      00957    
                      00958 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00959 ; The following tasks are responsible to render video display.
                      00960 ; Each video line must be completed by setting color to black.
                      00961 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00962     
                      00963  
                      00964 ; task 9, draw score en ball count
01D0                  00965 draw_score 
01D0   0021           00966     banksel TRISA
01D1   08??           00967     movfw slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D2   3689           00968     lsrf WREG
01D3   3689           00969     lsrf WREG
                      00970     pushw
01D4   0019               M     movwi --SP
01D5   300F           00971     movlw 0xf
01D6   05??           00972     andwf score+1,W
01D7   2???           00973     call digit_offset
01D8   0700           00974     addwf T,W
01D9   2???           00975     call digits
01DA   00??           00976     movwf pixels+2
01DB   0E??           00977     swapf score+1,W
01DC   390F           00978     andlw 0xf
01DD   2???           00979     call digit_offset
01DE   0700           00980     addwf T,W
01DF   2???           00981     call digits
01E0   00??           00982     movwf pixels+1
01E1   300F           00983     movlw 0xf
01E2   05??           00984     andwf score,W
01E3   2???           00985     call digit_offset
01E4   0700           00986     addwf T,W
01E5   2???           00987     call digits
01E6   2???           00988     call digit_row
01E7   08??           00989     movfw pixels+1
01E8   2???           00990     call digit_row
01E9   08??           00991     movfw pixels+2
01EA   2???           00992     call digit_row
                      00993     tdelay 60
                          M     if 60==0
                          M     exitm
                          M     endif
                          M     if 60==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 60==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 60==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 60==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 60==6
                          M     call _6tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 60==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 60>7
  0012                    M     variable q=(60-5)/3
  0001                    M     variable r=(60-5)%3
01EB   3012               M     movlw q
01EC   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01ED   0000               M     nop
                          M     exitm
01EE   120C           00994     bcf TRISA,VIDEO_OUT
                      00995     tdelay 5
                          M     if 5==0
                          M     exitm
                          M     endif
                          M     if 5==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 5==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 5==5
01EF   2???               M     call _5tcy
                          M     exitm
01F0   160C           00996     bsf TRISA,VIDEO_OUT
                      00997     tdelay 30
                          M     if 30==0
                          M     exitm
                          M     endif
                          M     if 30==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 30==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 30==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 30==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 30==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 30>7
  0008                    M     variable q=(30-5)/3
  0001                    M     variable r=(30-5)%3
01F1   3008               M     movlw q
01F2   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
01F3   0000               M     nop
                          M     exitm
01F4   08??           00998     movfw balls
01F5   2???           00999     call digit_offset
01F6   0700           01000     addwf T,W
01F7   2???           01001     call digits
01F8   2???           01002     call digit_row
01F9                  01003 score_exit
                      01004     next_task 5*4
01F9   0A??               M     incf slice
01FA   3014               M     movlw 5*4
01FB   02??               M     subwf slice,W
01FC   1D03               M     skpz
                          M     leave
01FD   2???               M     goto isr_exit
01FE   01??               M     clrf slice
01FF   0A??               M     incf task
                          M     leave
0200   2???               M     goto isr_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01005 
                      01006 ; display digit row pixels   
0201                  01007 digit_row
                      01008     pushw
0201   0019               M     movwi --SP
0202   0D80           01009     rlf T
0203   301A           01010     movlw BLACK
0204   1803           01011     skpnc
0205   300A           01012     movlw WHITE
0206   008C           01013     movwf TRISA
0207   0D80           01014     rlf T
0208   301A           01015     movlw BLACK
0209   1803           01016     skpnc
020A   300A           01017     movlw WHITE
020B   008C           01018     movwf TRISA
020C   0D80           01019     rlf T
020D   301A           01020     movlw BLACK
020E   1803           01021     skpnc
020F   300A           01022     movlw WHITE
0210   008C           01023     movwf TRISA
                      01024     tdelay 3
                          M     if 3==0
                          M     exitm
                          M     endif
                          M     if 3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 3==3
0211   0000               M     nop
0212   3???               M     bra $+1
                          M     exitm
                      01025     dropn 1
0213   3101               M     addfsr T,1
0214   160C           01026     bsf TRISA,VIDEO_OUT
0215   0008           01027     return
                      01028     
                      01029 ; task 10,  draw top wall, 8 screen lines    
0216                  01030 draw_top_wall 
0216   1C80           01031     btfss flags, F_EVEN
0217   3???           01032     bra top_wall_exit
0218   0021           01033     banksel TRISA
                      01034     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>7
  0010                    M     variable q=(LEFT_MARGIN-5)/3
  0001                    M     variable r=(LEFT_MARGIN-5)%3
0219   3010               M     movlw q
021A   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
021B   0000               M     nop
                          M     exitm
                      01035     white
021C   300A               M     movlw WHITE
021D   008C               M     movwf TRISA
                      01036     tdelay PLAY_WIDTH+2*BORDER_WIDTH
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if PLAY_WIDTH+2*BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if PLAY_WIDTH+2*BORDER_WIDTH>7
  0056                    M     variable q=(PLAY_WIDTH+2*BORDER_WIDTH-5)/3
  0001                    M     variable r=(PLAY_WIDTH+2*BORDER_WIDTH-5)%3
021E   3056               M     movlw q
021F   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0220   0000               M     nop
                          M     exitm
                      01037     black
0221   301A               M     movlw BLACK
0222   008C               M     movwf TRISA
0223                  01038 top_wall_exit
                      01039     next_task BRICK_HEIGHT
0223   0A??               M     incf slice
0224   3008               M     movlw BRICK_HEIGHT
0225   02??               M     subwf slice,W
0226   1D03               M     skpz
                          M     leave
0227   2???               M     goto isr_exit
0228   01??               M     clrf slice
0229   0A??               M     incf task
                          M     leave
022A   2???               M     goto isr_exit
                      01040 
                      01041 ; task 11,  only on even field draw vertical sides and ball.    
022B                  01042 draw_sides 
022B   0021           01043     banksel TRISA
022C   1C80           01044     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D   3???           01045     bra right_side
022E                  01046 left_side 
                      01047 ; compute zones parameters and put them on stack
                      01048     ; is there a ball?
022E   08??           01049     movfw ball_y
                      01050     pushw
022F   0019               M     movwi --SP
0230   3E08           01051     addlw BALL_HEIGHT
                      01052     pushw
0231   0019               M     movwi --SP
0232   08??           01053     movfw lcount
0233   2???           01054     call between
0234   300A           01055     movlw WHITE
0235   1C03           01056     skpc
0236   301A           01057     movlw BLACK
                      01058     ; ball color on stack
                      01059     pushw  ; ( c -- )
0237   0019               M     movwi --SP
                      01060     ; left margin
                      01061     tdelay 30
                          M     if 30==0
                          M     exitm
                          M     endif
                          M     if 30==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 30==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 30==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 30==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 30==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if 30==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if 30>7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0008                    M     variable q=(30-5)/3
  0001                    M     variable r=(30-5)%3
0238   3008               M     movlw q
0239   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
023A   0000               M     nop
                          M     exitm
                      01062     ; draw left border
023B   300A           01063     movlw WHITE
023C   008C           01064     movwf TRISA
023D   0000           01065     nop
023E   08??           01066     movfw ball_x
                      01067     pushw
023F   0019               M     movwi --SP
                      01068     black
0240   301A               M     movlw BLACK
0241   008C               M     movwf TRISA
0242   0B80           01069     decfsz T
0243   3???           01070     bra $-1
                      01071 ;    skpz
                      01072 ;    bra $+6
                      01073 ;    movlw BLACK
                      01074 ;    movwf TRISA
                      01075 ;    movfw ball_x
                      01076 ;    decfsz WREG
                      01077 ;    bra $-1
                      01078     pickn 1 
0244   3F01               M     moviw 1[SP]
0245   008C           01079     movwf TRISA
                      01080     dropn 2
0246   3102               M     addfsr T,2
                      01081     tdelay 5
                          M     if 5==0
                          M     exitm
                          M     endif
                          M     if 5==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 5==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 5==4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 5==5
0247   2???               M     call _5tcy
                          M     exitm
                      01082     ; draw black zone after ball
0248   301A           01083     movlw BLACK
0249   008C           01084     movwf TRISA
024A                  01085 draw_sides_exit    
024A   0A??           01086     incf slice
024B   30F3           01087     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS
024C   02??           01088     subwf lcount,W
024D   1D03           01089     skpz
                      01090     leave
024E   2???               M     goto isr_exit
024F   01??           01091     clrf slice
0250   3013           01092     movlw 19
0251   00??           01093     movwf task
                      01094     leave
0252   2???               M     goto isr_exit
0253                  01095 right_side
0253   3067           01096     movlw LEFT_MARGIN/3+85
0254   0B89           01097     decfsz WREG
0255   3???           01098     bra $-1
                      01099     tdelay 2
                          M     if 2==0
                          M     exitm
                          M     endif
                          M     if 2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 2==2
0256   3???               M     bra $+1
                          M     exitm
                      01100     white
0257   300A               M     movlw WHITE
0258   008C               M     movwf TRISA
                      01101     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0259   2???               M     call _4tcy
                          M     exitm
                      01102     black
025A   301A               M     movlw BLACK
025B   008C               M     movwf TRISA
                      01103     next_task 2*BRICK_HEIGHT
025C   0A??               M     incf slice
025D   3010               M     movlw 2*BRICK_HEIGHT
025E   02??               M     subwf slice,W
025F   1D03               M     skpz
                          M     leave
0260   2???               M     goto isr_exit
0261   01??               M     clrf slice
0262   0A??               M     incf task
                          M     leave
0263   2???               M     goto isr_exit
                      01104 
                      01105 ; draw 16 bricks wall
                      01106 ; input:
                      01107 ;   row in temp1,temp2
                      01108 ;   color in WREG
                      01109 ; output:
                      01110 ;   none    
0264                  01111 draw_bricks; macro color
                      01112     pushw
0264   0019               M     movwi --SP
0265   3010           01113     movlw 16
                      01114     pushw
0266   0019               M     movwi --SP
0267                  01115 next_brick
0267   35??           01116     lslf temp2
0268   0D??           01117     rlf temp1
0269   301A           01118     movlw BLACK
026A   1803           01119     skpnc
                      01120     pickn 1 ;movlw color
026B   3F01               M     moviw 1[SP]
026C   008C           01121     movwf TRISA
                      01122     tdelay BRICK_WIDTH-9
                          M     if BRICK_WIDTH-9==0
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if BRICK_WIDTH-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if BRICK_WIDTH-9==7
026D   2???               M     call _7tcy
                          M     exitm
026E   0B80           01123     decfsz T
026F   3???           01124     bra next_brick
                      01125     dropn 2
0270   3102               M     addfsr T,2
0271   0008           01126     return
                      01127     
                      01128 ; task 12, draw top brick row
0272                  01129 draw_row1
                      01130     chroma_ref
0272   003B               M     banksel PWM1CON
0273   121B               M     bcf PWM1CON,POL
0274   0021           01131     banksel TRISA
0275   08??           01132     movfw row1
0276   00??           01133     movwf temp1
0277   08??           01134     movfw row1+1
0278   00??           01135     movwf temp2
                      01136     tdelay LEFT_MARGIN-9
                          M     if LEFT_MARGIN-9==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9>7
  000D                    M     variable q=(LEFT_MARGIN-9-5)/3
  0001                    M     variable r=(LEFT_MARGIN-9-5)%3
0279   300D               M     movlw q
027A   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
027B   0000               M     nop
                          M     exitm
027C   3008           01137     movlw YELLOW
027D   2???           01138     call draw_bricks
                      01139     white
027E   300A               M     movlw WHITE
027F   008C               M     movwf TRISA
                      01140     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0280   2???               M     call _4tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01141     black
0281   301A               M     movlw BLACK
0282   008C               M     movwf TRISA
                      01142     next_task BRICK_HEIGHT
0283   0A??               M     incf slice
0284   3008               M     movlw BRICK_HEIGHT
0285   02??               M     subwf slice,W
0286   1D03               M     skpz
                          M     leave
0287   2???               M     goto isr_exit
0288   01??               M     clrf slice
0289   0A??               M     incf task
                          M     leave
028A   2???               M     goto isr_exit
                      01143     
                      01144 ; task 13, draw 2nd brick row    
028B                  01145 draw_row2 
                      01146     chroma_invert
028B   003B               M     banksel PWM1CON
028C   161B               M     bsf PWM1CON,POL
028D   0021           01147     banksel TRISA
028E   08??           01148     movfw row2
028F   00??           01149     movwf temp1
0290   08??           01150     movfw row2+1
0291   00??           01151     movwf temp2
                      01152     tdelay LEFT_MARGIN-9
                          M     if LEFT_MARGIN-9==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==6
                          M     call _6tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9>7
  000D                    M     variable q=(LEFT_MARGIN-9-5)/3
  0001                    M     variable r=(LEFT_MARGIN-9-5)%3
0292   300D               M     movlw q
0293   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0294   0000               M     nop
                          M     exitm
0295   3008           01153     movlw MAUVE
0296   2???           01154     call draw_bricks
                      01155     white 
0297   300A               M     movlw WHITE
0298   008C               M     movwf TRISA
                      01156     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0299   2???               M     call _4tcy
                          M     exitm
                      01157     black
029A   301A               M     movlw BLACK
029B   008C               M     movwf TRISA
                      01158     next_task BRICK_HEIGHT
029C   0A??               M     incf slice
029D   3008               M     movlw BRICK_HEIGHT
029E   02??               M     subwf slice,W
029F   1D03               M     skpz
                          M     leave
02A0   2???               M     goto isr_exit
02A1   01??               M     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A2   0A??               M     incf task
                          M     leave
02A3   2???               M     goto isr_exit
                      01159 
                      01160 ; task 14, draw 3rd brick row    
02A4                  01161 draw_row3 
                      01162     chroma_invert
02A4   003B               M     banksel PWM1CON
02A5   161B               M     bsf PWM1CON,POL
02A6   0021           01163     banksel TRISA
02A7   08??           01164     movfw row3
02A8   00??           01165     movwf temp1
02A9   08??           01166     movfw row3+1
02AA   00??           01167     movwf temp2
                      01168     tdelay LEFT_MARGIN-9
                          M     if LEFT_MARGIN-9==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9>7
  000D                    M     variable q=(LEFT_MARGIN-9-5)/3
  0001                    M     variable r=(LEFT_MARGIN-9-5)%3
02AB   300D               M     movlw q
02AC   2???               M     call _3ntcy
                          M     if (r==2)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02AD   0000               M     nop
                          M     exitm
02AE   3018           01169     movlw BLUE
02AF   2???           01170     call draw_bricks
                      01171     white 
02B0   300A               M     movlw WHITE
02B1   008C               M     movwf TRISA
                      01172     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02B2   2???               M     call _4tcy
                          M     exitm
                      01173     black
02B3   301A               M     movlw BLACK
02B4   008C               M     movwf TRISA
02B5                  01174 row3_exit
                      01175     next_task BRICK_HEIGHT
02B5   0A??               M     incf slice
02B6   3008               M     movlw BRICK_HEIGHT
02B7   02??               M     subwf slice,W
02B8   1D03               M     skpz
                          M     leave
02B9   2???               M     goto isr_exit
02BA   01??               M     clrf slice
02BB   0A??               M     incf task
                          M     leave
02BC   2???               M     goto isr_exit
                      01176     
                      01177 ; task 15, draw 4th brick row    
02BD                  01178 draw_row4 
                      01179     chroma_ref
02BD   003B               M     banksel PWM1CON
02BE   121B               M     bcf PWM1CON,POL
02BF   0021           01180     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C0   08??           01181     movfw row4
02C1   00??           01182     movwf temp1
02C2   08??           01183     movfw row4+1
02C3   00??           01184     movwf temp2
                      01185     tdelay LEFT_MARGIN-9
                          M     if LEFT_MARGIN-9==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9>7
  000D                    M     variable q=(LEFT_MARGIN-9-5)/3
  0001                    M     variable r=(LEFT_MARGIN-9-5)%3
02C4   300D               M     movlw q
02C5   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02C6   0000               M     nop
                          M     exitm
02C7   3008           01186     movlw YELLOW
02C8   2???           01187     call draw_bricks
                      01188     white 
02C9   300A               M     movlw WHITE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CA   008C               M     movwf TRISA
                      01189     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02CB   2???               M     call _4tcy
                          M     exitm
                      01190     black
02CC   301A               M     movlw BLACK
02CD   008C               M     movwf TRISA
                      01191     next_task BRICK_HEIGHT
02CE   0A??               M     incf slice
02CF   3008               M     movlw BRICK_HEIGHT
02D0   02??               M     subwf slice,W
02D1   1D03               M     skpz
                          M     leave
02D2   2???               M     goto isr_exit
02D3   01??               M     clrf slice
02D4   0A??               M     incf task
                          M     leave
02D5   2???               M     goto isr_exit
                      01192 
                      01193 ; task 16, draw 5th brick row    
02D6                  01194 draw_row5 
                      01195     chroma_invert
02D6   003B               M     banksel PWM1CON
02D7   161B               M     bsf PWM1CON,POL
02D8   0021           01196     banksel TRISA
02D9   08??           01197     movfw row5
02DA   00??           01198     movwf temp1
02DB   08??           01199     movfw row5+1
02DC   00??           01200     movwf temp2
                      01201     tdelay LEFT_MARGIN-9
                          M     if LEFT_MARGIN-9==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-9>7
  000D                    M     variable q=(LEFT_MARGIN-9-5)/3
  0001                    M     variable r=(LEFT_MARGIN-9-5)%3
02DD   300D               M     movlw q
02DE   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02DF   0000               M     nop
                          M     exitm
02E0   3008           01202     movlw MAUVE
02E1   2???           01203     call draw_bricks
                      01204     white 
02E2   300A               M     movlw WHITE
02E3   008C               M     movwf TRISA
                      01205     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02E4   2???               M     call _4tcy
                          M     exitm
                      01206     black
02E5   301A               M     movlw BLACK
02E6   008C               M     movwf TRISA
                      01207     next_task BRICK_HEIGHT
02E7   0A??               M     incf slice
02E8   3008               M     movlw BRICK_HEIGHT
02E9   02??               M     subwf slice,W
02EA   1D03               M     skpz
                          M     leave
02EB   2???               M     goto isr_exit
02EC   01??               M     clrf slice
02ED   0A??               M     incf task
                          M     leave
02EE   2???               M     goto isr_exit
                      01208 
  00000028            01209 MSG_FIRST equ 40
  00000028            01210 MSG_HEIGHT equ 40
  00000010            01211 MSG_PIXELS_COUNT equ 16 
                      01212 ; task 17
                      01213 ; draw all rows between paddle and lower brick row    
02EF                  01214 draw_empty
02EF   0021           01215     banksel TRISA
02F0   3028           01216     movlw MSG_FIRST
                      01217     pushw
02F1   0019               M     movwi --SP
02F2   3050           01218     movlw MSG_FIRST+MSG_HEIGHT
                      01219     pushw
02F3   0019               M     movwi --SP
02F4   08??           01220     movfw slice
02F5   2???           01221     call between
02F6   1C03           01222     skpc
02F7   3???           01223     bra no_msg
02F8   1F00           01224     btfss flags, F_OVER
02F9   3???           01225     bra no_msg+1
02FA   3008           01226     movlw YELLOW ; message color
                      01227     pushw
02FB   0019               M     movwi --SP
02FC   3010           01228     movlw MSG_PIXELS_COUNT
                      01229     pushw
02FD   0019               M     movwi --SP
02FE   1F80           01230     btfss flags, F_COOL
02FF   3???           01231     bra display_end
                      01232 ; perfect score display 'COOL' message
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0300   30??           01233     movlw high cool_msg
0301   0087           01234     movwf FSR1H
0302   30??           01235     movlw low cool_msg
0303   0086           01236     movwf FSR1L
0304   2???           01237     call display_msg
0305   301E           01238     movlw 30
0306   0000           01239     nop
0307   3???           01240     bra after_msg_dly
                      01241 ; display 'END!' message    
0308                  01242 display_end
0308   30??           01243     movlw high end_msg
0309   0087           01244     movwf FSR1H
030A   30??           01245     movlw low end_msg
030B   0086           01246     movwf FSR1L
030C   2???           01247     call display_msg
030D   301E           01248     movlw 30
030E   3???           01249     bra after_msg_dly
030F                  01250 no_msg
030F   3???           01251     bra $+1
                      01252     tdelay LEFT_MARGIN+2
                          M     if LEFT_MARGIN+2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2>7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0011                    M     variable q=(LEFT_MARGIN+2-5)/3
  0000                    M     variable r=(LEFT_MARGIN+2-5)%3
0310   3011               M     movlw q
0311   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0312   304E           01253     movlw 78
0313                  01254 after_msg_dly
0313   0B89           01255     decfsz WREG
0314   3???           01256     bra $-1
                      01257     white
0315   300A               M     movlw WHITE
0316   008C               M     movwf TRISA
                      01258     tdelay 4
                          M     if 4==0
                          M     exitm
                          M     endif
                          M     if 4==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 4==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 4==4
0317   2???               M     call _4tcy
                          M     exitm
                      01259     black
0318   301A               M     movlw BLACK
0319   008C               M     movwf TRISA
031A                  01260 draw_empty_exit    
031A   0A??           01261     incf slice
031B   30F4           01262     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
031C   02??           01263     subwf lcount,W
031D   1D03           01264     skpz
                      01265     leave
031E   2???               M     goto isr_exit
031F   01??           01266     clrf slice
0320   0A??           01267     incf task
                      01268     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0321   2???               M     goto isr_exit
                      01269 
                      01270 ; display end message
                      01271 ; message as a maximum of 24 pixels    
0322                  01272 display_msg
                      01273 ;    tdelay 8
0322   0021           01274     banksel TRISA
0323   3028           01275     movlw MSG_FIRST
0324   02??           01276     subwf slice,W
0325   3689           01277     lsrf WREG
0326   3689           01278     lsrf WREG
0327   3689           01279     lsrf WREG
0328   00??           01280     movwf temp1
0329   3589           01281     lslf WREG
032A   07??           01282     addwf temp1,W
032B   0786           01283     addwf FSR1L
032C   1803           01284     skpnc
032D   0A87           01285     incf FSR1H
032E   0016           01286     moviw FSR1++
032F   00??           01287     movwf pixels
0330   0016           01288     moviw FSR1++
0331   00??           01289     movwf pixels+1
0332   0016           01290     moviw FSR1++
0333   00??           01291     movwf pixels+2
0334                  01292 next_pixel
0334   35??           01293     lslf pixels+2
0335   0D??           01294     rlf pixels+1
0336   0D??           01295     rlf pixels
0337   301A           01296     movlw BLACK
0338   1803           01297     skpnc
                      01298     pickn 1 ;movlw color
0339   3F01               M     moviw 1[SP]
033A   008C           01299     movwf TRISA
033B   0B80           01300     decfsz T
033C   3???           01301     bra next_pixel
                      01302     dropn 2
033D   3102               M     addfsr T,2
                      01303     black
033E   301A               M     movlw BLACK
033F   008C               M     movwf TRISA
0340   0008           01304     return
                      01305     
                      01306 ; task 18, draw paddle at bottom screen    
0341                  01307 draw_paddle
                      01308     tdelay LEFT_MARGIN+2
                          M     if LEFT_MARGIN+2==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN+2>7
  0011                    M     variable q=(LEFT_MARGIN+2-5)/3
  0000                    M     variable r=(LEFT_MARGIN+2-5)%3
0341   3011               M     movlw q
0342   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0343   08??           01309     movfw paddle_pos
0344   1903           01310     skpnz
0345   3???           01311     bra $+3
0346   0B89           01312     decfsz WREG
0347   3???           01313     bra $-1
0348   0021           01314     banksel TRISA
0349   120C           01315     bcf TRISA,VIDEO_OUT
                      01316     tdelay PADDLE_WIDTH
                          M     if PADDLE_WIDTH==0
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if PADDLE_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==6
                          M     call _6tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH==7
                          M     call _7tcy
                          M     exitm
                          M     endif
                          M     if PADDLE_WIDTH>7
  0009                    M     variable q=(PADDLE_WIDTH-5)/3
  0000                    M     variable r=(PADDLE_WIDTH-5)%3
034A   3009               M     movlw q
034B   2???               M     call _3ntcy
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
034C   160C           01317     bsf TRISA,VIDEO_OUT
                      01318     next_task PADDLE_THICKNESS
034D   0A??               M     incf slice
034E   3008               M     movlw PADDLE_THICKNESS
034F   02??               M     subwf slice,W
0350   1D03               M     skpz
                          M     leave
0351   2???               M     goto isr_exit
0352   01??               M     clrf slice
0353   0A??               M     incf task
                          M     leave
0354   2???               M     goto isr_exit
                      01319 
                      01320 ; task 19,  wait end of this field, reset task to zero    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0355                  01321 wait_field_end
0355   1800           01322     btfsc flags, F_BIT8
0356   2???           01323     goto hi_line
                      01324     leave
0357   2???               M     goto isr_exit
0358                  01325 hi_line
0358   1880           01326     btfsc flags,F_EVEN
0359   2???           01327     goto even_field
035A   3005           01328     movlw 5
035B   02??           01329     subwf lcount,W
035C   1D03           01330     skpz
                      01331     leave
035D   2???               M     goto isr_exit
035E   2???           01332     goto field_end
035F                  01333 even_field
035F   3006           01334     movlw 6
0360   02??           01335     subwf lcount,W
0361   1D03           01336     skpz
                      01337     leave
0362   2???               M     goto isr_exit
                      01338 ; even field last line is half_line    
                      01339 ; set PWM3 for line 263 half-line
0363   003B           01340     banksel PWM3DC
0364   3003           01341     movlw high HALF_LINE
0365   00B6           01342     movwf PWM3PRH
0366   308D           01343     movlw low HALF_LINE
0367   00B5           01344     movwf PWM3PRL
0368   17BF           01345     bsf PWM3LDCON,7
0369                  01346 field_end
0369   01??           01347     clrf task
036A   01??           01348     clrf slice
036B   01??           01349     clrf lcount
036C   1000           01350     bcf flags, F_BIT8
036D   1500           01351     bsf flags, F_SYNC
                      01352 ; toggle odd/even field flag    
036E   3002           01353     movlw 1<<F_EVEN
036F   06??           01354     xorwf flags
                      01355     leave
0370   2???               M     goto isr_exit
                      01356 
                      01357 ; helper functions
                      01358 
                      01359 ; delay = (3*n+5)*tcy    
                      01360 ;input:
                      01361 ;   WREG <- n    
0371                  01362 _3ntcy
0371   0B89           01363     decfsz WREG
0372   3???           01364     bra $-1
0373   0008           01365     return
                      01366     
0374                  01367 _7tcy ; call here for 7*tcy delay using a single instruction
0374   0000           01368     nop
0375                  01369 _6tcy ; call here for 6*tcy delay using a single instruction
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0375   0000           01370     nop
0376                  01371 _5tcy ; call here for 5*tcy delay using a single instruction
0376   0000           01372     nop
0377                  01373 _4tcy ; call here for 4*Tcy delay using a single instruction    
0377   0008           01374     return
                      01375 
                      01376 ;division by 3
                      01377 ; input:
                      01378 ;   WREG value to divide
                      01379 ; output:
                      01380 ;   WREG  quotient
                      01381 ;   temp1  remainder    
0378                  01382 div3
0378   00??           01383     movwf temp1
0379   01??           01384     clrf temp2
037A   30C0           01385     movlw 0xc0
                      01386     pushw
037B   0019               M     movwi --SP
037C                  01387 div3_loop
037C   0800           01388     movfw T
037D   02??           01389     subwf temp1,W
037E   1803           01390     skpnc
037F   00??           01391     movwf temp1
0380   0D??           01392     rlf temp2
0381   3680           01393     lsrf T
0382   1C03           01394     skpc
0383   3???           01395     bra div3_loop
                      01396     dropn 1
0384   3101               M     addfsr T,1
0385   08??           01397     movfw temp2
0386   0008           01398     return
                      01399     
                      01400     
                      01401 ; increment user score
                      01402 ; This is a BCD addition where a single digit is added to score.   
                      01403 ; score is stored as big indian
                      01404 ; argument: 
                      01405 ;   WREG ->  bdc digit to add to score variable
0387                  01406 inc_score
0387   07??           01407     addwf score+1
0388   1883           01408     btfsc STATUS,DC
0389   3???           01409     bra $+6
038A   300F           01410     movlw 15
038B   05??           01411     andwf score+1,W
038C   3C09           01412     sublw 9
038D   1803           01413     skpnc
038E   3???           01414     bra $+3
038F   3006           01415     movlw 6
0390   07??           01416     addwf score+1
0391   0E??           01417     swapf score+1,W
0392   390F           01418     andlw 15
0393   3C09           01419     sublw 9
0394   1803           01420     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0395   3???           01421     bra game_over_test
0396   3060           01422     movlw 0x60
0397   07??           01423     addwf score+1
0398   0A??           01424     incf score
0399   3001           01425     movlw 1
039A   00??           01426     movwf ball_speed
039B                  01427 game_over_test ; all bricks destroyed?
039B   3003           01428     movlw 3
039C   02??           01429     subwf score,W
039D   1D03           01430     skpz
039E   0008           01431     return
039F   3036           01432     movlw 0x36
03A0   02??           01433     subwf score+1,W
03A1   1D03           01434     skpz
03A2   0008           01435     return
03A3   1700           01436     bsf flags,F_OVER ; game over
03A4   1780           01437     bsf flags,F_COOL ; with maximum score.
03A5   0008           01438     return
                      01439     
                      01440 ;***********************************
                      01441 ; digit_offset, compute digit position in 'digits' table
                      01442 ;   position = digit * 5
                      01443 ; 
                      01444 ; input: WREG -> digit value {0..9}
                      01445 ;         
                      01446 ; output: WREG -> displacement in table
                      01447 ;***********************************
03A6                  01448 digit_offset    
                      01449     pushw 
03A6   0019               M     movwi --SP
03A7   3589           01450     lslf WREG
03A8   3589           01451     lslf WREG
03A9   0780           01452     addwf T
                      01453     popw
03AA   0012               M     moviw SP++
03AB   0008           01454     return
                      01455     
03AC                  01456 brick_wall_init
03AC   30??           01457     movlw high row1
03AD   0087           01458     movwf FSR1H
03AE   30??           01459     movlw low row1
03AF   0086           01460     movwf FSR1L
03B0   300C           01461     movlw 12
03B1   00??           01462     movwf temp1
03B2   30FF           01463     movlw 0xff
03B3                  01464 bw_init
03B3   001E           01465     movwi FSR1++
03B4   0B??           01466     decfsz temp1
03B5   3???           01467     bra bw_init
03B6   0008           01468     return
                      01469 
                      01470 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
03B7                  01471 lfsr16
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B7   002?           01472     banksel seed
03B8   08??           01473     movfw seed+1
03B9   00??           01474     movwf temp1
03BA   3589           01475     lslf WREG
03BB   3589           01476     lslf WREG
03BC   00??           01477     movwf temp2
03BD   06??           01478     xorwf temp1
03BE   35??           01479     lslf temp2
03BF   08??           01480     movfw temp2
03C0   06??           01481     xorwf temp1
03C1   35??           01482     lslf temp2
03C2   35??           01483     lslf temp2,W
03C3   06??           01484     xorwf temp1
03C4   35??           01485     lslf temp1
03C5   0D??           01486     rlf seed
03C6   0D??           01487     rlf seed+1
03C7   08??           01488     movfw seed
03C8   0008           01489     return
                      01490     
                      01491 
03C9                  01492 set_ball_dx
03C9   2???           01493     call lfsr16 ;random
03CA   3007           01494     movlw 7
03CB   05??           01495     andwf seed,W
03CC   3589           01496     lslf WREG
03CD   000B           01497     brw
03CE   3000           01498     movlw 0
03CF   3???           01499     bra set_ball_dx_exit
03D0   3001           01500     movlw 1
03D1   3???           01501     bra set_ball_dx_exit
03D2   30FF           01502     movlw -1
03D3   3???           01503     bra set_ball_dx_exit
03D4   3000           01504     movlw 0
03D5   3???           01505     bra set_ball_dx_exit
03D6   3001           01506     movlw 1
03D7   3???           01507     bra set_ball_dx_exit
03D8   30FF           01508     movlw -1
03D9   3???           01509     bra set_ball_dx_exit
03DA   30FF           01510     movlw -1
03DB   3???           01511     bra set_ball_dx_exit
03DC   3001           01512     movlw 1
03DD                  01513 set_ball_dx_exit
03DD   00??           01514     movwf ball_dx
03DE   0008           01515     return
                      01516     
03DF                  01517 game_init
03DF   01??           01518     clrf score
03E0   01??           01519     clrf score+1
03E1   2???           01520     call brick_wall_init
03E2   002?           01521     banksel balls
03E3   3003           01522     movlw 3
03E4   00??           01523     movwf balls
03E5   01??           01524     clrf ball_timer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E6   0A??           01525     incf ball_timer
03E7   30EC           01526     movlw PADDLE_Y-BRICK_HEIGHT
03E8   00??           01527     movwf ball_y
03E9   2???           01528     call set_ball_dx
03EA   30FC           01529     movlw -4
03EB   00??           01530     movwf ball_dy
03EC   3002           01531     movlw 2
03ED   00??           01532     movwf ball_speed
03EE   01??           01533     clrf flags
03EF   1600           01534     bsf flags, F_START
03F0   0008           01535     return
                      01536     
                      01537 ; delay by TIMER0
                      01538 ; parameter
                      01539 ;   WREG -> 2*Tcy+7cy    
03F1                  01540 t0delay 
03F1   0989           01541     comf WREG
03F2   0095           01542     movwf TMR0
03F3   110B           01543     bcf INTCON,T0IF
03F4   1D0B           01544     btfss INTCON,T0IF
03F5   3???           01545     bra $-1
03F6   0008           01546     return
                      01547     
                      01548 MAIN_PROG CODE                      ; let linker place main program
                      01549 
0000                  01550 initialize
                      01551 ; clear common RAM
0000   0185           01552     clrf FSR0H
0001   3070           01553     movlw 0x70
0002   0084           01554     movwf FSR0L
0003   0103           01555     clrw
0004   001A           01556     movwi FSR0++
0005   1F84           01557     btfss FSR0L,7
0006   3???           01558     bra $-2
                      01559 ; clear banked RAM
0007   0184           01560     clrf FSR0L
0008   3020           01561     movlw 0x20
0009   0085           01562     movwf FSR0H
000A   0103           01563     clrw 
000B   001A           01564     movwi FSR0++
000C   1C05           01565     btfss FSR0H,0
000D   3???           01566     bra $-2
                      01567 ; initialize LFSR seed
000E   002?           01568     banksel seed
000F   09??           01569     comf seed
0010   09??           01570     comf seed+1
0011   09??           01571     comf seed+2
0012   09??           01572     comf seed+3
                      01573 ;   setup arguments stack pointer
0013   30??           01574     movlw high (stack+STACK_SIZE)
0014   0085           01575     movwf FSR0H
0015   30??           01576     movlw low (stack+STACK_SIZE)
0016   0084           01577     movwf FSR0L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01578 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01579 ; TIMER0 prescale 1:2
0017   3050           01580     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01581     movwf OPTION_REG
                      01582 ; disable analog inputs, except AN0
0019   0023           01583     banksel ANSELA
001A   018C           01584     clrf ANSELA
                      01585 ; paddle potentiometer input     
001B   140C           01586     bsf ANSELA,PADDLE
001C   0021           01587     banksel ADCON1
001D   3020           01588     movlw (2<<ADCS0)
001E   009E           01589     movwf ADCON1
                      01590 ; pin setup
001F   0024           01591     banksel WPUA
0020   018C           01592     clrf WPUA
0021   0021           01593     banksel TRISA
0022   110C           01594     bcf TRISA,SYNC_OUT
0023   100C           01595     bcf TRISA,AUDIO
0024   0022           01596     banksel LATA
0025   160C           01597     bsf LATA, VIDEO_OUT
                      01598 ; PWM1 chroma signal on RA1
0026   003B           01599     banksel PWM1CON
0027   019F           01600     clrf PWM1LDCON
0028   0191           01601     clrf PWM1PHL
0029   0192           01602     clrf PWM1PHH
002A   0197           01603     clrf PWM1OFL
002B   0198           01604     clrf PWM1OFH
002C   0196           01605     clrf PWM1PRH
002D   3007           01606     movlw 7
002E   0095           01607     movwf PWM1PRL
002F   3004           01608     movlw 4
0030   0093           01609     movwf PWM1DCL
0031   0194           01610     clrf PWM1DCH
0032   179F           01611     bsf PWM1LDCON,7
0033   30C0           01612     movlw (1<<EN)|(1<<OE)
0034   009B           01613     movwf PWM1CON
                      01614 ; PWM2 sound
0035   003B           01615     banksel PWM2CON
0036   01A1           01616     clrf PWM2PHL
0037   01A2           01617     clrf PWM2PHH
0038   01A7           01618     clrf PWM2OFL
0039   01A8           01619     clrf PWM2OFH
003A   3030           01620     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01621     movwf PWM2CLKCON
003C   300D           01622     movlw high 3578;7
003D   00A6           01623     movwf PWM2PRH
003E   30FA           01624     movlw low 3578;7
003F   00A5           01625     movwf PWM2PRL
0040   3626           01626     lsrf PWM2PRH,W
0041   00A4           01627     movwf PWM2DCH
0042   0C25           01628     rrf PWM2PRL,W
0043   00A3           01629     movwf PWM2DCL
0044   17AF           01630     bsf PWM2LDCON,LDA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01631 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01632     banksel PWM3CON
0046   01BF           01633     clrf PWM3LDCON
0047   01B1           01634     clrf PWM3PHL
0048   01B2           01635     clrf PWM3PHH
0049   01B7           01636     clrf PWM3OFL
004A   01B8           01637     clrf PWM3OFH
004B   301B           01638     movlw low HPERIOD
004C   00B5           01639     movwf PWM3PRL
004D   3007           01640     movlw high HPERIOD
004E   00B6           01641     movwf PWM3PRH
004F   3086           01642     movlw HSYNC
0050   00B3           01643     movwf PWM3DCL
0051   01B4           01644     clrf PWM3DCH
0052   30D0           01645     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01646     movwf PWM3CON
0054   17BF           01647     bsf PWM3LDCON,7
0055   143C           01648     bsf PWM3INTE,PRIE
                      01649 ; enbable interrupt    
0056   0020           01650     banksel PIR3
0057   1313           01651     bcf PIR3,PWM3IF
0058   0021           01652     banksel PIE3
0059   1713           01653     bsf PIE3,PWM3IE
005A   170B           01654     bsf INTCON,PEIE
005B   178B           01655     bsf INTCON,GIE
005C   01??           01656     clrf flags
005D   1500           01657     bsf flags, F_SYNC
                      01658 ; test code
                      01659     
                      01660 ; all processing done in ISR    
005E   2???           01661     goto $
                      01662 
                      01663 ; digits character table
005F                  01664 digits
005F   000B           01665     brw
0060   3440 34A0 34A0 01666     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01667     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01668     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01669     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01670     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01671     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01672     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01673     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01674     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008D   34E0 34A0 34E0 01675     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01676     reset
                      01677     
0093                  01678 frequency
0093   000B           01679     brw
0094   348B 34D3      01680     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01681     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01682     reset
                      01683   
                      01684 ;display END! when game is over    
0099                  01685 end_msg
                      01686 ;    brw
0099   00E8 00C8 0000 01687     data 0xe8,0xc8,0
009C   008E 00A8 0000 01688     data 0x8e,0xa8,0
009F   00EA 00A8 0000 01689     data 0xea,0xa8,0
00A2   008A 00A0 0000 01690     data 0x8a,0xa0,0
00A5   00EA 00C8 0000 01691     data 0xea,0xc8,0
                      01692   
00A8                  01693 cool_msg
                      01694 ;    brw
00A8   00EE 00E8 0000 01695     data 0xee,0xe8,0
00AB   008A 00A8 0000 01696     data 0x8a,0xa8,0
00AE   008A 00A8 0000 01697     data 0x8a,0xa8,0
00B1   008A 00A8 0000 01698     data 0x8a,0xa8,0
00B4   00EE 00EE 0000 01699     data 0xee,0xee,0
                      01700     
                      01701 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01702 max_score 
                      01703  
3FA7 1EFF             01704     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FB
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003B
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001F
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FB
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000036
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F4
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLAY_WIDTH                        00000100
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_000B                         0000000B
_ISR_0012                         00000012
_ISR_00DA                         000000DA
_ISR_00DF                         000000DF
_ISR_00E6                         000000E6
_ISR_00F5                         000000F5
_ISR_0122                         00000122
_ISR_0129                         00000129
_ISR_012C                         0000012C
_ISR_0135                         00000135
_ISR_016C                         0000016C
_ISR_01C7                         000001C7
_ISR_0212                         00000212
_ISR_0243                         00000243
_ISR_0255                         00000255
_ISR_0256                         00000256
_ISR_030F                         0000030F
_ISR_0314                         00000314
_ISR_0345                         00000345
_ISR_0347                         00000347
_ISR_0372                         00000372
_ISR_0389                         00000389
_ISR_038E                         0000038E
_ISR_03F5                         000003F5
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
after_msg_dly                     00000313
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000133
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B1
between                           000001BB
between_exit                      000001C5
between_exit2                     000001C7
black                             
blue                              
bottom_bound                      0000010D
brick_bounce                      000001B3
brick_wall_init                   000003AC
bw_init                           000003B3
check_paddle_bounce               00000148
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000115
collision_exit                    000001B9
cool_msg                          000000A8
dark_green                        
digit_offset                      000003A6
digit_row                         00000201
digits                            0000005F
display_end                       00000308
display_msg                       00000322
div3                              00000378
div3_loop                         0000037C
draw_border                       
draw_bricks                       00000264
draw_empty                        000002EF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

draw_empty_exit                   0000031A
draw_paddle                       00000341
draw_row1                         00000272
draw_row2                         0000028B
draw_row3                         000002A4
draw_row4                         000002BD
draw_row5                         000002D6
draw_score                        000001D0
draw_sides                        0000022B
draw_sides_exit                   0000024A
draw_top_wall                     00000216
dropn                             
eeprom                            00000780
end_msg                           00000099
even_field                        0000035F
fallout_test                      0000012F
field_end                         00000369
flags                             00000000
frequency                         00000093
game_init                         000003DF
game_over                         000000C0
game_over_test                    0000039B
game_running                      000000B8
going_down                        0000016D
gray                              white
hi_line                           00000358
inc_score                         00000387
initialize                        00000000
isr                               00000004
isr_exit                          0000002D
lcount                            00000001
leave                             
left_bound                        000000F4
left_side                         0000022E
lfsr16                            000003B7
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000EC
move_ball_exit                    00000113
move_y                            00000104
next_brick                        00000267
next_pixel                        00000334
next_task                         
no_msg                            0000030F
old_dx                            0000000F
paddle_bounce                     00000152
paddle_pos                        00000006
paddle_test                       00000144
pickn                             
pixels                            000000AD
pokew                             
popw                              
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         00000032
pushw                             
q                                 00000009
r                                 00000000
read_button                       000000CE
read_paddle                       000000D2
right_bound                       000000FD
right_side                        00000253
row1                              000000A0
row1_test                         00000183
row2                              000000A2
row2_test                         0000018C
row3                              000000A4
row3_exit                         000002B5
row3_test                         00000196
row4                              000000A6
row4_test                         000001A0
row5                              000000A8
row5_test                         000001AA
row6                              000000AA
score                             0000000C
score_exit                        000001F9
seed                              00000030
set_ball_dx                       000003C9
set_ball_dx_exit                  000003DD
set_presync                       0000003D
set_vsync                         00000053
skip_2_tasks                      000000C7
slice                             00000002
sound                             00000075
sound_fx1                         00000082
sound_fx2                         0000008D
sound_init                        00000098
sound_timer                       000000B2
stack                             00000020
swap_var                          
swapw                             
t0delay                           000003F1
task                              00000003
task_switch                       00000016
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     00000223
user_input                        000000AD
video_first                       000001C9
vsync                             00000048
vsync_end                         00000068
wait_field_end                    00000355
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-19-2019  20:49:13         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

wait_trigger                      000000BA
wall_test                         00000163
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   265 suppressed

