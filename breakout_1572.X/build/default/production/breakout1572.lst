MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  VIDEO DISPLAY ZONES
                      00027 ;  scan lines     display
                      00028 ;  =======================    
                      00029 ;    30-49     |   score and balls count
                      00030 ;    50-57     |   top wall
                      00031 ;    58-250    |   play ground
                      00032 ;    58-73     |   empty zone
                      00033 ;    74-81     |   mauve bricks
                      00034 ;    82-89     |   yellow bricks
                      00035 ;    90-97     |   blue bricks
                      00036 ;    98-105    |   dark green bricks
                      00037 ;    106-113   |   gray bricks
                      00038 ;    114-250   |   empty zone
                      00039 ;    243-250   |   paddle zone    
                      00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00041  
                      00042     
                      00043     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044     
8007   3FA7           00045     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00046     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00047     
                      00048     radix dec
                      00049 
                      00050 ; constants
  00000800            00051 PROG_SIZE equ 2048  ; program words
  00000080            00052 EEPROM_SIZE equ 128 ; high endurance flash words
                      00053  
  01B4F360            00054 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00055 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00056 Tcy equ 140 ; CPU cycle in nanoseconds (139.683nS)
                      00057  
                      00058 ; NTSC signal 
  00003D76            00059 Fhorz equ 15734 ; horizontal frequency
  0000071B            00060 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00061 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00062 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00063 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00064 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00065 ; boolean flags 
  00000000            00066 F_HI_LINE equ 0 ; lcount > 255
  00000001            00067 F_EVEN equ 1    ; even field
  00000002            00068 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00069 F_SOUND equ 3   ; sound enabled 
  00000004            00070 F_START equ 4   ; game started 
  00000005            00071 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00072 F_OVER equ 6    ; game over
                      00073  
                      00074  
                      00075 ;pins assignment
  00000000            00076 AUDIO EQU RA0
  00000000            00077 PADDLE equ RA0
  00000001            00078 CHROMA equ RA1
  00000002            00079 SYNC_OUT equ RA2
  00000003            00080 START_BTN equ RA3 
  00000004            00081 VIDEO_OUT equ RA4
  00000005            00082 CLKIN equ RA5
                      00083  
                      00084     ; constants used in video display
                      00085 ; values are in Tcy for x dimension.
                      00086 ; values are in scan lines for y dimension.    
  0000001E            00087 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00088 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00089 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00090 COURT_WIDTH equ 248 ; Tcy
  00000008            00091 BRICK_HEIGHT equ 8  ; scan lines
  0000000E            00092 BRICK_WIDTH equ 14  ; Tcy
  00000004            00093 BORDER_WIDTH equ 4  ; Tcy
  00000020            00094 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00095 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00096 PADDLE_LIMIT equ 74 ; Tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00097 BALL_WIDTH equ 8 ; Tcy
  00000008            00098 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00099 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00100 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00101 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00102 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00103 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  0000004A            00104 ROW1_Y equ 74
  00000052            00105 ROW2_Y equ 82
  0000005A            00106 ROW3_Y equ 90
  00000062            00107 ROW4_Y equ 98
  0000006A            00108 ROW5_Y equ 106
                      00109  
                      00110 
                      00111 ;;;;;;;;;;;;;;;;;;;;;;
                      00112 ;; assembler macros ;;
                      00113 ;;;;;;;;;;;;;;;;;;;;;;
                      00114 
                      00115 ; leave task 
                      00116 leave macro
                      00117     goto isr_exit
                      00118     endm
                      00119     
                      00120 ; move to next task on slice limit
                      00121 ; parameters:
                      00122 ;   s  nomber of slices used by the task    
                      00123 next_task macro s    
                      00124     incf slice
                      00125     movlw s
                      00126     subwf slice,W
                      00127     skpz
                      00128     leave
                      00129     clrf slice
                      00130     incf task
                      00131     movlw s
                      00132     addwf lcount
                      00133     leave
                      00134     endm
                      00135     
                      00136     
                      00137 ; case switch
                      00138 ; parameters:
                      00139 ;   var is control variable
                      00140 ;   n  is constant to compare to var
                      00141 ;   adr  is goto address if var==n 
                      00142 case macro var, n, adr
                      00143     movlw n
                      00144     subwf var,W
                      00145     skpnz
                      00146     goto adr
                      00147     endm
                      00148 
                      00149 ; swap variable with WREG    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150 swap_var macro var
                      00151     xorwf var
                      00152     xorwf var,W
                      00153     xorwf var
                      00154     endm
                      00155     
                      00156 
                      00157 ; delay in machine cycle T
                      00158 ; parameters:
                      00159 ;   T   number of machine cycles    
                      00160 tdelay macro T
                      00161     variable q=(T)/3
                      00162     variable r=(T)%3
                      00163     if (q)
                      00164     movlw q
                      00165     decfsz WREG
                      00166     goto $-1
                      00167     endif
                      00168     if (r==2)
                      00169     goto $+1
                      00170     endif 
                      00171     if (r==1)
                      00172     nop
                      00173     endif
                      00174     endm
                      00175 
                      00176 ; enable weak pull on VIDEO_OUT
                      00177 ; to create a porch
                      00178 porch_on macro
                      00179     banksel WPUA
                      00180     bsf WPUA,VIDEO_OUT
                      00181     endm
                      00182     
                      00183 ; disable weak pull on VIDEO_OUT
                      00184 ; to remove porch
                      00185 porch_off macro
                      00186     banksel WPUA
                      00187     bcf WPUA,VIDEO_OUT
                      00188     endm
                      00189     
                      00190 ; enable chroma output
                      00191 chroma_on macro
                      00192     banksel TRISA
                      00193     bcf TRISA, CHROMA
                      00194     endm
                      00195     
                      00196 ;disable chroma output    
                      00197 chroma_off macro
                      00198     banksel TRISA
                      00199     bsf TRISA,CHROMA
                      00200     endm
                      00201     
                      00202 ; output chroma reference    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 chroma_ref macro
                      00204     banksel PWM1CON
                      00205     bcf PWM1CON,POL
                      00206     endm
                      00207     
                      00208 ; set chroma phase to 180 degree
                      00209 chroma_invert macro
                      00210     banksel PWM1CON
                      00211     bsf PWM1CON,POL
                      00212     endm
                      00213 
                      00214 ;;;;;;;;;;;;;;;;;;;;;;
                      00215 ;   colors macros
                      00216 ; each one take 5 T 
                      00217 ;;;;;;;;;;;;;;;;;;;;;;
  00000008            00218 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00219 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00220 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00221 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00222 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00223 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00224 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00225  
                      00226 ;set video output to black    
                      00227 black macro
                      00228     movlw BLACK
                      00229     movwf TRISA
                      00230 ;    goto $+1
                      00231     endm
                      00232     
                      00233 ; set video output to white    
                      00234 white macro    
                      00235     movlw WHITE
                      00236     movwf TRISA
                      00237     endm
                      00238 
                      00239 #define gray white
                      00240     
                      00241 ; set video output to mauve    
                      00242 mauve macro
                      00243 ;    chroma_ref
                      00244 ;    banksel TRISA
                      00245     movlw MAUVE
                      00246     movwf TRISA
                      00247     endm
                      00248 
                      00249 ; set video output to yellow   
                      00250 yellow macro
                      00251     movlw YELLOW
                      00252     movwf TRISA
                      00253     endm
                      00254     
                      00255 ; set video output to blue
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 blue macro
                      00257     movlw BLUE
                      00258     movwf TRISA
                      00259     endm
                      00260     
                      00261 ; set video output to dark blue    
                      00262 dark_green macro
                      00263     movlw DARK_GREEN
                      00264     movwf TRISA
                      00265     endm
                      00266 
                      00267     
                      00268 ; draw 8 bricks wall
                      00269 ; input in temp1
                      00270 draw_wall macro color
                      00271     local next_brick
                      00272     movlw 14
                      00273     pushw
                      00274 next_brick
                      00275     lslf temp1
                      00276     rlf temp2
                      00277     movlw BLACK
                      00278     skpnc
                      00279     movlw color
                      00280     movwf TRISA
                      00281     tdelay BRICK_WIDTH-9
                      00282     decfsz T
                      00283     bra next_brick
                      00284     dropn 1
                      00285     endm
                      00286     
                      00287     
                      00288 ; draw left and right borders
                      00289 ; parameters:
                      00290 ;   width delay determine width
                      00291 ;   width 5T+nT    
                      00292 draw_border macro width
                      00293     banksel TRISA
                      00294     bsf TRISA,CHROMA
                      00295     bcf TRISA,VIDEO_OUT
                      00296     tdelay width
                      00297     bsf TRISA,VIDEO_OUT
                      00298     endm
                      00299     
                      00300 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00301 ;  stack manipulation macros
                      00302 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00303 STACK_SIZE equ 16 ; size of argument stack
                      00304 #define T INDF0 ; top of argument stack
                      00305 #define SP FSR0 ; use FSR0 as stack pointer 
                      00306 ; push WREG on T
                      00307 pushw  macro
                      00308     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309     endm
                      00310   
                      00311 ; pop WREG from T
                      00312 popw macro
                      00313     moviw SP++
                      00314     endm
                      00315     
                      00316 ; swap WREG with 
                      00317 swapw  macro
                      00318     xorwf T
                      00319     xorwf T,W
                      00320     xorwf T
                      00321     endm
                      00322 
                      00323 ; drop n elements from stack
                      00324 dropn macro n
                      00325     addfsr T,n
                      00326     endm
                      00327 
                      00328 ; copy nth element of stack to WREG
                      00329 ;  n {0..31}    
                      00330 pickn macro n
                      00331     moviw n[SP]
                      00332     endm
                      00333    
                      00334 ; copy WREG to nth element of stack
                      00335 ; n {0..31}
                      00336 pokew macro n
                      00337     movwi n[SP]
                      00338     endm
                      00339     
                      00340     
                      00341 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00342 ;;    variables
                      00343 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00344     
                      00345     udata 0x20
0020                  00346 stack res 16 ; arguments stack
0030                  00347 seed res 4 ; prng seed
                      00348  
                      00349 v_array   udata 0xA0
00A0                  00350 row1 res 2; brick wall row1
00A2                  00351 row2 res 2
00A4                  00352 row3 res 2
00A6                  00353 row4 res 2
00A8                  00354 row5 res 2
00AA                  00355 row6 res 2
00AC                  00356 d1 res 1 ; score msd digit pixels
00AD                  00357 d2 res 1 ; score 2nd digit pixels
00AE                  00358 d3 res 1 ; score lsd digit pixels
00AF                  00359 balls res 1 ; number of recking balls available 
00B0                  00360 sound_timer res 1 ; duration in multiple of 16.7msec. 
                      00361   
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362     udata_shr
0000                  00363 flags  res 1 ; boolean variables
0001                  00364 lcount res 1 ; video field line counter
0002                  00365 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00366 task res 1 ; where in video phase 
0004                  00367 temp1 res 1 ; temporary storage
0005                  00368 temp2 res 1 ; 
0006                  00369 paddle_pos res 1 
0007                  00370 ball_x res 1
0008                  00371 ball_y res 1
0009                  00372 ball_dx res 1
000A                  00373 ball_dy res 1
000B                  00374 ball_speed res 1
000C                  00375 score res 2 ; score stored in Binary Coded Decimal
000E                  00376 ball_timer res 1 
                      00377 ;heading res 1 ; ball direction:0=N,2=NW,3=NE,4=S,6=SW,7=SE 
                      00378  
                      00379 ;; code 
                      00380 RES_VECT  CODE    0x0000            ; processor reset vector
0000   2???           00381     GOTO    START                   ; go to beginning of program
0001   0001           00382     reset
0002   0001           00383     reset
0003   0001           00384     reset
                      00385 
                      00386 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00387 ; interrupt service routine triggered by PWM3 period rollover
                      00388 ISR CODE 0x0004
0004                  00389 isr
0004   1900           00390     btfsc flags, F_SYNC
0005   2???           00391     goto task_switch
                      00392  ; chroma sync
                      00393     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
0006   300A               M     movlw q
0007   0B89               M     decfsz WREG
0008   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0009   0021           00394     banksel TRISA
000A   108C           00395     bcf TRISA,CHROMA
                      00396     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000B   3005               M     movlw q
000C   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
000E   0000               M     nop
                          M     endif
000F   148C           00397     bsf TRISA,CHROMA
                      00398     porch_on
0010   0024               M     banksel WPUA
0011   160C               M     bsf WPUA,VIDEO_OUT
0012                  00399 task_switch ; horizontal scan line used as round robin task scheduler   
0012   08??           00400     movfw task
0013   000B           00401     brw
0014   2???           00402     goto pre_vsync ;task 0, vertical pre-equalization pulses
0015   2???           00403     goto vsync ;task 1, vertical sync pulses
0016   2???           00404     goto post_vsync ;task 2, vertical post-equalization pulses
0017   2???           00405     goto vsync_end ;task 3, return to normal video line
0018   2???           00406     goto sound ;task 4, check sound timer expiration
0019   2???           00407     goto user_input ;task 5,  read button and paddle
001A   2???           00408     goto move_ball ;task 6, move recking ball.
001B   2???           00409     goto collision ; task 7, check for collision with brick wall and paddle
001C   2???           00410     goto video_first ; task 8, wait FIRST_VIDEO line.
001D   2???           00411     goto draw_score ;task 9,  draw score en ball count
001E   2???           00412     goto draw_top_wall ;task 10,  draw top wall
001F   2???           00413     goto draw_void ;task 11, draw play space
0020   2???           00414     goto draw_row1 ;task 12, draw top bricks row
0021   2???           00415     goto draw_row2 ;task 13, draw second bricks row
0022   2???           00416     goto draw_row3 ;task 14,  draw third bricks row
0023   2???           00417     goto draw_row4 ;task 15,  draw fourth bricks row
0024   2???           00418     goto draw_row5 ;task 16, draw fifth bricks row
0025   2???           00419     goto draw_empty;task 17, draw empty space down to bottom
0026   2???           00420     goto draw_paddle ;task 18, draw paddle
0027   2???           00421     goto wait_field_end ;task 19, idle to end of video field
0028   0001           00422     reset ; error trap, task out of range
0029                  00423 isr_exit  
                      00424     porch_off
0029   0024               M     banksel WPUA
002A   120C               M     bcf WPUA,VIDEO_OUT
002B   003B           00425     banksel PWM3INTF
002C   103D           00426     bcf PWM3INTF,PRIF
002D   0009           00427     retfie
                      00428 
                      00429 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00430 ;;  all tasks routine are here            ;;
                      00431 ;;  each must be terminate by leave macro ;;    
                      00432 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00433     
                      00434 ; task 0, vertical synchronization pre equalization
002E                  00435 pre_vsync
002E   08??           00436     movfw slice
002F   1903           00437     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   2???           00438     goto set_presync
                      00439     next_task 6
0031   0A??               M     incf slice
0032   3006               M     movlw 6
0033   02??               M     subwf slice,W
0034   1D03               M     skpz
                          M     leave
0035   2???               M     goto isr_exit
0036   01??               M     clrf slice
0037   0A??               M     incf task
0038   3006               M     movlw 6
0039   07??               M     addwf lcount
                          M     leave
003A   2???               M     goto isr_exit
003B                  00440 set_presync    
003B   003B           00441     banksel PWM3DC
003C   3041           00442     movlw HEQUAL
003D   00B3           00443     movwf PWM3DCL
003E   01B4           00444     clrf PWM3DCH
003F   3003           00445     movlw high HALF_LINE
0040   00B6           00446     movwf PWM3PRH
0041   308D           00447     movlw low HALF_LINE
0042   00B5           00448     movwf PWM3PRL
0043   17BF           00449     bsf PWM3LDCON,7
0044   0A??           00450     incf slice
                      00451     leave
0045   2???               M     goto isr_exit
                      00452     
                      00453 ; task 1, vertical synchronization pulses
0046                  00454 vsync 
0046   08??           00455     movfw slice
0047   1903           00456     skpnz
0048   2???           00457     goto set_vsync
                      00458     next_task 6
0049   0A??               M     incf slice
004A   3006               M     movlw 6
004B   02??               M     subwf slice,W
004C   1D03               M     skpz
                          M     leave
004D   2???               M     goto isr_exit
004E   01??               M     clrf slice
004F   0A??               M     incf task
0050   3006               M     movlw 6
0051   07??               M     addwf lcount
                          M     leave
0052   2???               M     goto isr_exit
0053                  00459 set_vsync
0053   003B           00460     banksel PWM3DC
0054   3008           00461     movlw low VSYNC_PULSE
0055   00B3           00462     movwf PWM3DCL
0056   3003           00463     movlw high VSYNC_PULSE
0057   00B4           00464     movwf PWM3DCH
0058   17BF           00465     bsf PWM3LDCON,7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   0A??           00466     incf slice
                      00467     leave
005A   2???               M     goto isr_exit
                      00468     
                      00469 ; task 2, vertical synchronisation post equalization pulses
005B                  00470 post_vsync
005B   08??           00471     movfw slice
005C   1903           00472     skpnz
005D   2???           00473     goto set_presync
005E   3006           00474     movlw 6
005F   02??           00475     subwf slice,W
0060   1903           00476     skpnz
0061   2???           00477     goto post_last
0062   0A??           00478     incf slice
                      00479     leave
0063   2???               M     goto isr_exit
0064                  00480 post_last    
0064   0A??           00481     incf task
0065   01??           00482     clrf slice
0066   1C80           00483     btfss flags, F_EVEN
                      00484     leave
0067   2???               M     goto isr_exit
                      00485     
                      00486 ; task 3, vertical synchronization completed, return to normal line
0068                  00487 vsync_end
0068   1100           00488     bcf flags, F_SYNC
0069   003B           00489     banksel PWM3DC
006A   3086           00490     movlw HSYNC
006B   00B3           00491     movwf PWM3DCL
006C   01B4           00492     clrf PWM3DCH
006D   3007           00493     movlw high HPERIOD
006E   00B6           00494     movwf PWM3PRH
006F   301B           00495     movlw low HPERIOD
0070   00B5           00496     movwf PWM3PRL
0071   17BF           00497     bsf PWM3LDCON,7
0072   0A??           00498     incf task
0073   3009           00499     movlw 9
0074   00??           00500     movwf lcount
                      00501     leave
0075   2???               M     goto isr_exit
                      00502 
                      00503 ; task 4,  sound timer
0076                  00504 sound
0076   0A??           00505     incf task
0077   0A??           00506     incf lcount
0078   1D80           00507     btfss flags, F_SOUND
                      00508     leave
0079   2???               M     goto isr_exit
007A   1A80           00509     btfsc flags, F_PAUSE
007B   2???           00510     call sound_fx1
007C   002?           00511     banksel sound_timer
007D   0B??           00512     decfsz sound_timer
                      00513     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   2???               M     goto isr_exit
007F   1180           00514     bcf flags, F_SOUND
0080   003B           00515     banksel PWM2CON
0081   132B           00516     bcf PWM2CON,OE
0082   13AB           00517     bcf PWM2CON,EN
                      00518     leave
0083   2???               M     goto isr_exit
                      00519 
                      00520 ; low pitch to high-pitch    
0084                  00521 sound_fx1
0084   1D80           00522     btfss flags, F_SOUND
0085   0008           00523     return
0086   1C80           00524     btfss flags, F_EVEN
0087   0008           00525     return
0088   003B           00526     banksel PWM2CON
0089   36A6           00527     lsrf PWM2PRH
008A   0CA5           00528     rrf PWM2PRL
008B   36A4           00529     lsrf PWM2DCH
008C   0CA3           00530     rrf PWM2DCL
008D   17AF           00531     bsf PWM2LDCON,LDA
008E   0008           00532     return
                      00533     
                      00534 ; high pitch to low-pitch    
008F                  00535 sound_fx2
008F   1D80           00536     btfss flags, F_SOUND
0090   0008           00537     return
0091   1C80           00538     btfss flags, F_EVEN
0092   0008           00539     return
0093   003B           00540     banksel PWM2CON
0094   35A5           00541     lslf PWM2PRL
0095   0DA6           00542     rlf PWM2PRH
0096   35A3           00543     lslf PWM2DCL
0097   0DA4           00544     rlf PWM2DCH
0098   17AF           00545     bsf PWM2LDCON,LDA
0099   0008           00546     return
                      00547     
                      00548 ; produce a pong sound
                      00549 ; input: ( d i -- )
                      00550 ;   d duration
                      00551 ;   i index frequency table    
009A                  00552 pong
009A   1580           00553     bsf flags, F_SOUND
009B   003B           00554     banksel PWM2CON
009C   0800           00555     movfw T
009D   2???           00556     call frequency
009E   00A6           00557     movwf PWM2PRH
009F   0A00           00558     incf T,W
00A0   2???           00559     call frequency
00A1   00A5           00560     movwf PWM2PRL
00A2   3626           00561     lsrf PWM2PRH,W
00A3   00A4           00562     movwf PWM2DCH
00A4   0C25           00563     rrf PWM2PRL,W
00A5   00A3           00564     movwf PWM2DCL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A6   17AF           00565     bsf PWM2LDCON,LDA
00A7   172B           00566     bsf PWM2CON,OE
00A8   17AB           00567     bsf PWM2CON,EN
00A9   002?           00568     banksel sound_timer
                      00569     pickn 1
00AA   3F01               M     moviw 1[SP]
00AB   00??           00570     movwf sound_timer
                      00571     dropn 2
00AC   3102               M     addfsr T,2
00AD   0008           00572     return
                      00573     
                      00574 ;task 5, read button and paddle position
00AE                  00575 user_input
00AE   0A??           00576     incf task
00AF   0A??           00577     incf lcount
00B0   2???           00578     call read_paddle
00B1   1B00           00579     btfsc flags, F_OVER
00B2   3???           00580     bra game_over
00B3   1A00           00581     btfsc flags,F_START
00B4   3???           00582     bra game_running
                      00583 ; game not running
00B5   2???           00584     call read_button
00B6   1D03           00585     skpz
00B7   3???           00586     bra skip_2_tasks
                      00587 ; start game    
00B8   2???           00588     call game_init
                      00589     leave
00B9   2???               M     goto isr_exit
00BA                  00590 game_running
00BA   1E80           00591     btfss flags, F_PAUSE
                      00592     leave
00BB   2???               M     goto isr_exit
                      00593 ; game on pause    
00BC                  00594 wait_trigger
00BC   2???           00595     call read_button
00BD   1D03           00596     skpz
00BE   3???           00597     bra skip_2_tasks
00BF   1280           00598     bcf flags,F_PAUSE
00C0   2???           00599     call set_ball_dx
                      00600     leave
00C1   2???               M     goto isr_exit
                      00601 ; game over
00C2                  00602 game_over
00C2   2???           00603     call read_button
00C3   1D03           00604     skpz
00C4   3???           00605     bra skip_2_tasks
00C5   1300           00606     bcf flags,F_OVER
00C6   2???           00607     call game_init
00C7   0A??           00608     incf task
00C8   0A??           00609     incf lcount
                      00610     leave
00C9   2???               M     goto isr_exit
                      00611 ; while game not running skip 'move_ball' and 'collision' tasks    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA                  00612 skip_2_tasks
00CA   08??           00613     movfw paddle_pos
00CB   3E04           00614     addlw 4
00CC   00??           00615     movwf ball_x
00CD   0A??           00616     incf task
00CE   0A??           00617     incf task
00CF   2???           00618     call lfsr_rand
                      00619     leave
00D0   2???               M     goto isr_exit
                      00620 
                      00621     
00D1                  00622 read_button
00D1   0020           00623     banksel PORTA
00D2   080C           00624     movfw PORTA
00D3   3908           00625     andlw 1<<START_BTN
00D4   0008           00626     return
                      00627     
00D5                  00628 read_paddle
00D5   003B           00629     banksel PWM2CON
00D6   13AB           00630     bcf PWM2CON,EN
00D7   0021           00631     banksel TRISA
00D8   140C           00632     bsf TRISA, PADDLE
00D9   0021           00633     banksel ADCON0
00DA   3003           00634     movlw 3
00DB   009D           00635     movwf ADCON0
00DC   189D           00636     btfsc ADCON0,NOT_DONE
00DD   2???           00637     goto $-1
00DE   3010           00638     movlw 4<<CHS0
00DF   009D           00639     movwf ADCON0
00E0   081C           00640     movfw ADRESH
00E1   1D80           00641     btfss flags, F_SOUND
00E2   3???           00642     bra $+3
00E3   003B           00643     banksel PWM2CON
00E4   17AB           00644     bsf PWM2CON,EN
00E5   00??           00645     movwf paddle_pos
00E6   304A           00646     movlw PADDLE_LIMIT
00E7   02??           00647     subwf paddle_pos,W
00E8   1C03           00648     skpc
00E9   3???           00649     bra $+3
00EA   304A           00650     movlw PADDLE_LIMIT
00EB   00??           00651     movwf paddle_pos
00EC   0021           00652     banksel TRISA
00ED   100C           00653     bcf TRISA, AUDIO
00EE   0008           00654     return
                      00655     
                      00656    
                      00657 ; task 6, move recking ball.   
00EF                  00658 move_ball
00EF   0B??           00659     decfsz ball_timer
00F0   3???           00660     bra move_ball_exit
00F1   08??           00661     movfw ball_speed
00F2   00??           00662     movwf ball_timer
00F3   08??           00663     movfw ball_dx
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   07??           00664     addwf ball_x
00F5   1D03           00665     skpz
00F6   3???           00666     bra right_bound
00F7   0A??           00667     incf ball_x
00F8   09??           00668     comf ball_dx
00F9   0A??           00669     incf ball_dx
00FA   3???           00670     bra move_y
00FB                  00671 right_bound    
00FB   08??           00672     movfw ball_x
00FC   3C52           00673     sublw BALL_RIGHT_BOUND
00FD   1803           00674     skpnc
00FE   3???           00675     bra move_y
00FF   03??           00676     decf ball_x
0100   09??           00677     comf ball_dx
0101   0A??           00678     incf ball_dx
0102                  00679 move_y
0102   08??           00680     movfw ball_dy
0103   07??           00681     addwf ball_y
0104   303A           00682     movlw BALL_TOP_BOUND
0105   02??           00683     subwf ball_y,W
0106   1803           00684     skpnc
0107   3???           00685     bra bottom_bound
0108   09??           00686     comf ball_dy
0109   0A??           00687     incf ball_dy
010A   3???           00688     bra move_ball_exit
010B                  00689 bottom_bound
010B   08??           00690     movfw ball_y
010C   3CFA           00691     sublw BALL_BOTTOM_BOUND
010D   1803           00692     skpnc
010E   3???           00693     bra move_ball_exit
010F   09??           00694     comf ball_dy
0110   0A??           00695     incf ball_dy
0111                  00696 move_ball_exit    
0111   0A??           00697     incf task
0112   0A??           00698     incf lcount
                      00699     leave
0113   2???               M     goto isr_exit
                      00700 
                      00701 ; task 7, collision detection
0114                  00702 collision
0114   002?           00703     banksel row1
                      00704 ; pre-compute x column (brick bit mask)    
                      00705 ; column = 7-(3*ball_x/32)
0115   35??           00706     lslf ball_x,W
0116   07??           00707     addwf ball_x,W
                      00708     pushw
0117   0019               M     movwi --SP
0118   3689           00709     lsrf WREG
0119   0E89           00710     swapf WREG
011A   390F           00711     andlw 15
011B   3C07           00712     sublw 7
                      00713 ; create mask    
011C   00??           00714     movwf temp1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011D   3001           00715     movlw 1
                      00716     pushw
011E   0019               M     movwi --SP
011F   08??           00717     movfw temp1
0120   1903           00718     skpnz
0121   3???           00719     bra $+4
0122   3580           00720     lslf T
0123   0B89           00721     decfsz WREG
0124   3???           00722     bra $-2
                      00723 ; ball/paddle test
0125   30EC           00724     movlw PADDLE_Y-BALL_HEIGHT+1
                      00725     pushw
0126   0019               M     movwi --SP
0127   30FB           00726     movlw PADDLE_Y+PADDLE_THICKNESS
                      00727     pushw
0128   0019               M     movwi --SP
0129   08??           00728     movfw ball_y
012A   2???           00729     call between
012B   1803           00730     skpnc
012C   3???           00731     bra check_paddle_bounce
012D   08??           00732     movfw ball_y
012E   3CF3           00733     sublw PADDLE_Y
012F   1C03           00734     skpc
0130   3???           00735     bra ball_lost
0131   3???           00736     bra row1_coll
0132                  00737 ball_lost    
0132   1680           00738     bsf flags, F_PAUSE ; pause game
0133   0B??           00739     decfsz balls
0134   3???           00740     bra $+2
0135   1200           00741     bcf flags, F_START
0136   3004           00742     movlw 4
0137   07??           00743     addwf paddle_pos,W
0138   00??           00744     movwf ball_x
0139   30EB           00745     movlw PADDLE_Y-BRICK_HEIGHT
013A   00??           00746     movwf ball_y
013B   30FC           00747     movlw -4
013C   00??           00748     movwf ball_dy
013D   3008           00749     movlw 8
                      00750     pushw
013E   0019               M     movwi --SP
013F   3002           00751     movlw 2
                      00752     pushw
0140   0019               M     movwi --SP
0141   2???           00753     call pong
0142   3???           00754     bra collision_exit
                      00755 ; if ball_x over paddle bounce ball
0143                  00756 check_paddle_bounce
0143   08??           00757     movfw paddle_pos
                      00758     pushw
0144   0019               M     movwi --SP
0145   300A           00759     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+2
0146   07??           00760     addwf paddle_pos,W
                      00761     pushw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   0019               M     movwi --SP
0148   08??           00762     movfw ball_x
0149   2???           00763     call between
014A   1C03           00764     skpc
014B   3???           00765     bra collision_exit
014C   30FC           00766     movlw -4
014D   00??           00767     movwf ball_dy
014E   2???           00768     call set_ball_dx
014F   3002           00769     movlw 2
                      00770     pushw
0150   0019               M     movwi --SP
                      00771     pushw
0151   0019               M     movwi --SP
0152   2???           00772     call pong
0153   3???           00773     bra collision_exit
                      00774 ; row1 collision?    
0154                  00775 row1_coll    
0154   3043           00776     movlw ROW1_Y-BRICK_HEIGHT+1
                      00777     pushw
0155   0019               M     movwi --SP
0156   3052           00778     movlw ROW1_Y+BRICK_HEIGHT
                      00779     pushw
0157   0019               M     movwi --SP
0158   08??           00780     movfw ball_y
0159   2???           00781     call between
015A   1C03           00782     skpc
015B   3???           00783     bra row2_coll
                      00784 ; ball inside row1 bounds
015C   0800           00785     movfw T
015D   05??           00786     andwf row1, W
015E   1903           00787     skpnz
015F   3???           00788     bra collision_exit
0160   0900           00789     comf T,W
0161   05??           00790     andwf row1
0162   3009           00791     movlw 9
0163   2???           00792     call inc_score
0164   3???           00793     bra brick_bounce
                      00794 ; row2 collision?    
0165                  00795 row2_coll
0165   304B           00796     movlw ROW2_Y-BRICK_HEIGHT+1
                      00797     pushw
0166   0019               M     movwi --SP
0167   305A           00798     movlw ROW2_Y+BRICK_HEIGHT
                      00799     pushw
0168   0019               M     movwi --SP
0169   08??           00800     movfw ball_y
016A   2???           00801     call between
016B   1C03           00802     skpc
016C   3???           00803     bra row3_coll
016D   0800           00804     movfw T
016E   05??           00805     andwf row2, W
016F   1903           00806     skpnz
0170   3???           00807     bra collision_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0171   0900           00808     comf T,W
0172   05??           00809     andwf row2
0173   3006           00810     movlw 6
0174   2???           00811     call inc_score
0175   3???           00812     bra brick_bounce
                      00813 ; row3 collision?    
0176                  00814 row3_coll
0176   3053           00815     movlw ROW3_Y-BRICK_HEIGHT+1
                      00816     pushw
0177   0019               M     movwi --SP
0178   3062           00817     movlw ROW3_Y+BRICK_HEIGHT
                      00818     pushw
0179   0019               M     movwi --SP
017A   08??           00819     movfw ball_y
017B   2???           00820     call between
017C   1C03           00821     skpc
017D   3???           00822     bra row4_coll
017E   0800           00823     movfw T
017F   05??           00824     andwf row3,W
0180   1903           00825     skpnz
0181   3???           00826     bra collision_exit
0182   0900           00827     comf T,W
0183   05??           00828     andwf row3
0184   3003           00829     movlw 3
0185   2???           00830     call inc_score
0186   3???           00831     bra brick_bounce
                      00832 ; row4 collision?    
0187                  00833 row4_coll
0187   305B           00834     movlw ROW4_Y-BRICK_HEIGHT+1
                      00835     pushw
0188   0019               M     movwi --SP
0189   306A           00836     movlw ROW4_Y+BRICK_HEIGHT
                      00837     pushw
018A   0019               M     movwi --SP
018B   08??           00838     movfw ball_y
018C   2???           00839     call between
018D   1C03           00840     skpc
018E   3???           00841     bra row5_coll
018F   0800           00842     movfw T
0190   05??           00843     andwf row4,W
0191   1903           00844     skpnz
0192   3???           00845     bra collision_exit
0193   0900           00846     comf T,W
0194   05??           00847     andwf row4
0195   3002           00848     movlw 2
0196   2???           00849     call inc_score
0197   3???           00850     bra brick_bounce
                      00851 ; row5 collision?    
0198                  00852 row5_coll    
0198   3063           00853     movlw ROW5_Y-BRICK_HEIGHT+1
                      00854     pushw
0199   0019               M     movwi --SP
019A   3072           00855     movlw ROW5_Y+BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00856     pushw
019B   0019               M     movwi --SP
019C   08??           00857     movfw ball_y
019D   2???           00858     call between
019E   1C03           00859     skpc
019F   3???           00860     bra collision_exit
01A0   0800           00861     movfw T
01A1   05??           00862     andwf row5,W
01A2   1903           00863     skpnz
01A3   3???           00864     bra collision_exit
01A4   0900           00865     comf T,W
01A5   05??           00866     andwf row5
01A6   3001           00867     movlw 1
01A7   2???           00868     call inc_score
01A8                  00869 brick_bounce
01A8   09??           00870     comf ball_dy
01A9   0A??           00871     incf ball_dy
01AA   2???           00872     call set_ball_dx
01AB   3001           00873     movlw 1
                      00874     pushw
01AC   0019               M     movwi --SP
01AD   3000           00875     movlw 0
                      00876     pushw
01AE   0019               M     movwi --SP
01AF   2???           00877     call pong
01B0                  00878 collision_exit
                      00879     dropn 2
01B0   3102               M     addfsr T,2
01B1   0A??           00880     incf task
01B2   0A??           00881     incf lcount
                      00882     leave
01B3   2???               M     goto isr_exit
                      00883 
                      00884 ; check if  lb <= x < hb
                      00885 ; input:
                      00886 ;    WREG  x
                      00887 ;    stack ( lb hb -- )     
                      00888 ; output:
                      00889 ;   Carry bit set if true    
01B4                  00890 between
01B4   00??           00891     movwf temp1
                      00892     pickn 1
01B5   3F01               M     moviw 1[SP]
01B6   02??           00893     subwf temp1,W
01B7   1C03           00894     skpc
01B8   3???           00895     bra between_exit
01B9   0800           00896     movfw T
01BA   02??           00897     subwf temp1
01BB   0803           00898     movfw STATUS
01BC   3A01           00899     xorlw 1
01BD   0083           00900     movwf STATUS
01BE                  00901 between_exit    
                      00902     dropn 2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BE   3102               M     addfsr T,2
01BF   0008           00903     return
                      00904     
                      00905 ; task 8, wait for first video line
01C0                  00906 video_first
01C0   0A??           00907     incf lcount
01C1   301E           00908     movlw FIRST_VIDEO_LINE
01C2   02??           00909     subwf lcount,W
01C3   1D03           00910     skpz
                      00911     leave
01C4   2???               M     goto isr_exit
01C5   01??           00912     clrf slice
01C6   0A??           00913     incf task
                      00914     leave
01C7   2???               M     goto isr_exit
                      00915    
                      00916 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00917 ; The following tasks are responsible to render video display.
                      00918 ; Each video line must be completed by setting color to black.
                      00919 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00920     
                      00921  
                      00922 ; task 9, draw score en ball count
01C8                  00923 draw_score ; lcount enter at 30 leave at 50
01C8   0021           00924     banksel TRISA
01C9   08??           00925     movfw slice
01CA   3689           00926     lsrf WREG
01CB   3689           00927     lsrf WREG
                      00928     pushw
01CC   0019               M     movwi --SP
01CD   300F           00929     movlw 0xf
01CE   05??           00930     andwf score+1,W
01CF   2???           00931     call digit_offset
01D0   0700           00932     addwf T,W
01D1   2???           00933     call digits
01D2   00??           00934     movwf d3
01D3   0E??           00935     swapf score+1,W
01D4   390F           00936     andlw 0xf
01D5   2???           00937     call digit_offset
01D6   0700           00938     addwf T,W
01D7   2???           00939     call digits
01D8   00??           00940     movwf d2
01D9   300F           00941     movlw 0xf
01DA   05??           00942     andwf score,W
01DB   2???           00943     call digit_offset
01DC   0700           00944     addwf T,W
01DD   2???           00945     call digits
01DE   2???           00946     call digit_row
01DF   08??           00947     movfw d2
01E0   2???           00948     call digit_row
01E1   08??           00949     movfw d3
01E2   2???           00950     call digit_row
                      00951     tdelay 60
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
01E3   3014               M     movlw q
01E4   0B89               M     decfsz WREG
01E5   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01E6   120C           00952     bcf TRISA,VIDEO_OUT
                      00953     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
01E7   3001               M     movlw q
01E8   0B89               M     decfsz WREG
01E9   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
01EA   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01EB   160C           00954     bsf TRISA,VIDEO_OUT
                      00955     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
01EC   300A               M     movlw q
01ED   0B89               M     decfsz WREG
01EE   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01EF   08??           00956     movfw balls
01F0   2???           00957     call digit_offset
01F1   0700           00958     addwf T,W
01F2   2???           00959     call digits
01F3   2???           00960     call digit_row
01F4                  00961 score_exit
                      00962     next_task 5*4
01F4   0A??               M     incf slice
01F5   3014               M     movlw 5*4
01F6   02??               M     subwf slice,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F7   1D03               M     skpz
                          M     leave
01F8   2???               M     goto isr_exit
01F9   01??               M     clrf slice
01FA   0A??               M     incf task
01FB   3014               M     movlw 5*4
01FC   07??               M     addwf lcount
                          M     leave
01FD   2???               M     goto isr_exit
                      00963 
                      00964 ; display digit row pixels   
01FE                  00965 digit_row
                      00966     pushw
01FE   0019               M     movwi --SP
01FF   0D80           00967     rlf T
0200   301A           00968     movlw BLACK
0201   1803           00969     skpnc
0202   300A           00970     movlw WHITE
0203   008C           00971     movwf TRISA
0204   0D80           00972     rlf T
0205   301A           00973     movlw BLACK
0206   1803           00974     skpnc
0207   300A           00975     movlw WHITE
0208   008C           00976     movwf TRISA
0209   0D80           00977     rlf T
020A   301A           00978     movlw BLACK
020B   1803           00979     skpnc
020C   300A           00980     movlw WHITE
020D   008C           00981     movwf TRISA
                      00982     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
020E   3001               M     movlw q
020F   0B89               M     decfsz WREG
0210   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00983     dropn 1
0211   3101               M     addfsr T,1
0212   160C           00984     bsf TRISA,VIDEO_OUT
0213   0008           00985     return
                      00986     
                      00987 ; task 10,  draw top wall, 8 screen lines    
0214                  00988 draw_top_wall ;lcount enter at 50 leave at 58
0214   1C80           00989     btfss flags, F_EVEN
0215   3???           00990     bra top_wall_exit
0216   0021           00991     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00992     tdelay LEFT_MARGIN -2
  0010                    M     variable q=(LEFT_MARGIN -2)/3
  0002                    M     variable r=(LEFT_MARGIN -2)%3
                          M     if (q)
0217   3010               M     movlw q
0218   0B89               M     decfsz WREG
0219   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
021A   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00993     white
021B   300A               M     movlw WHITE
021C   008C               M     movwf TRISA
                      00994     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
021D   3057               M     movlw q
021E   0B89               M     decfsz WREG
021F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00995     black
0220   301A               M     movlw BLACK
0221   008C               M     movwf TRISA
                          M ;    goto $+1
0222                  00996 top_wall_exit
                      00997     next_task BRICK_HEIGHT
0222   0A??               M     incf slice
0223   3008               M     movlw BRICK_HEIGHT
0224   02??               M     subwf slice,W
0225   1D03               M     skpz
                          M     leave
0226   2???               M     goto isr_exit
0227   01??               M     clrf slice
0228   0A??               M     incf task
0229   3008               M     movlw BRICK_HEIGHT
022A   07??               M     addwf lcount
                          M     leave
022B   2???               M     goto isr_exit
                      00998 
                      00999 ; task 11,  only on even field draw vertical side bands.    
022C                  01000 draw_void ;enter at 58 leave at 74| 255-58
022C   1C80           01001     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022D   3???           01002     bra no_wall_draw
022E   08??           01003     movfw ball_y
022F   02??           01004     subwf lcount,W
0230   1C03           01005     skpc
0231   3???           01006     bra no_ball_dly
0232   3008           01007     movlw BALL_HEIGHT
0233   07??           01008     addwf ball_y,W
0234   02??           01009     subwf lcount,W
0235   1C03           01010     skpc
0236   3???           01011     bra yes_ball
0237   3???           01012     bra no_ball
0238                  01013 no_ball_dly
                      01014     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0238   3002               M     movlw q
0239   0B89               M     decfsz WREG
023A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
023B                  01015 no_ball    
                      01016     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
023B   300D               M     movlw q
023C   0B89               M     decfsz WREG
023D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01017     draw_border BORDER_WIDTH
023E   0021               M     banksel TRISA
023F   148C               M     bsf TRISA,CHROMA
0240   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
0241   3001               M     movlw q
0242   0B89               M     decfsz WREG
0243   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0244   0000               M     nop
                          M     endif
0245   160C               M     bsf TRISA,VIDEO_OUT
                      01018     black
0246   301A               M     movlw BLACK
0247   008C               M     movwf TRISA
                          M ;    goto $+1
                      01019     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0248   3052               M     movlw q
0249   0B89               M     decfsz WREG
024A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
024B   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01020     draw_border BORDER_WIDTH
024C   0021               M     banksel TRISA
024D   148C               M     bsf TRISA,CHROMA
024E   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
024F   3001               M     movlw q
0250   0B89               M     decfsz WREG
0251   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0252   0000               M     nop
                          M     endif
0253   160C               M     bsf TRISA,VIDEO_OUT
0254   3???           01021     bra draw_void_exit
0255                  01022 yes_ball
0255   0021           01023     banksel TRISA
0256   08??           01024     movfw ball_x
0257   1903           01025     skpnz
0258   3???           01026     bra ball_at_left
0259   3C52           01027     sublw BALL_RIGHT_BOUND
025A   1903           01028     skpnz
025B   3???           01029     bra ball_at_right
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025C                  01030 ball_in_middle    
025C   3001           01031     movlw 1
025D   02??           01032     subwf ball_x,W
025E   1903           01033     skpnz
025F   3E01           01034     addlw 1
0260   00??           01035     movwf temp1
                      01036     tdelay LEFT_MARGIN-22
  000A                    M     variable q=(LEFT_MARGIN-22)/3
  0000                    M     variable r=(LEFT_MARGIN-22)%3
                          M     if (q)
0261   300A               M     movlw q
0262   0B89               M     decfsz WREG
0263   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0264   120C           01037     bcf TRISA,VIDEO_OUT
                      01038     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0265   3001               M     movlw q
0266   0B89               M     decfsz WREG
0267   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0268   08??           01039     movfw temp1
0269   160C           01040     bsf TRISA,VIDEO_OUT
026A   0B89           01041     decfsz WREG
026B   3???           01042     bra $-1
026C   120C           01043     bcf TRISA, VIDEO_OUT
                      01044     tdelay BALL_WIDTH-1
  0002                    M     variable q=(BALL_WIDTH-1)/3
  0001                    M     variable r=(BALL_WIDTH-1)%3
                          M     if (q)
026D   3002               M     movlw q
026E   0B89               M     decfsz WREG
026F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0270   0000               M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
0271   08??           01045     movfw ball_x
0272   160C           01046     bsf TRISA,VIDEO_OUT
0273   3C52           01047     sublw BALL_RIGHT_BOUND
0274   0B89           01048     decfsz WREG
0275   3???           01049     bra $-1
0276   120C           01050     bcf TRISA,VIDEO_OUT
                      01051     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0277   3001               M     movlw q
0278   0B89               M     decfsz WREG
0279   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
027A   0000               M     nop
                          M     endif
027B   160C           01052     bsf TRISA,VIDEO_OUT
027C   3???           01053     bra draw_void_exit
027D                  01054 ball_at_left
                      01055     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
027D   300C               M     movlw q
027E   0B89               M     decfsz WREG
027F   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0280   0000               M     nop
                          M     endif
0281   120C           01056     bcf TRISA,VIDEO_OUT
                      01057     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
0282   3004               M     movlw q
0283   0B89               M     decfsz WREG
0284   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0285   160C           01058     bsf TRISA,VIDEO_OUT
                      01059     tdelay COURT_WIDTH-6
  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
0286   3050               M     movlw q
0287   0B89               M     decfsz WREG
0288   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0289   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
028A   0000           01060     nop
028B   120C           01061     bcf TRISA,VIDEO_OUT
                      01062     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
028C   3001               M     movlw q
028D   0B89               M     decfsz WREG
028E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
028F   0000               M     nop
                          M     endif
0290   160C           01063     bsf TRISA,VIDEO_OUT
0291   3???           01064     bra draw_void_exit
0292                  01065 ball_at_right
                      01066     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
0292   300B               M     movlw q
0293   0B89               M     decfsz WREG
0294   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
0295   0000               M     nop
                          M     endif
0296   120C           01067     bcf TRISA,VIDEO_OUT
                      01068     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0297   3001               M     movlw q
0298   0B89               M     decfsz WREG
0299   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
029A   0000               M     nop
                          M     endif
029B   160C           01069     bsf TRISA,VIDEO_OUT
                      01070     tdelay COURT_WIDTH-2
  0052                    M     variable q=(COURT_WIDTH-2)/3
  0000                    M     variable r=(COURT_WIDTH-2)%3
                          M     if (q)
029C   3052               M     movlw q
029D   0B89               M     decfsz WREG
029E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
029F   120C           01071     bcf TRISA,VIDEO_OUT
                      01072     tdelay 10
  0003                    M     variable q=(10)/3
  0001                    M     variable r=(10)%3
                          M     if (q)
02A0   3003               M     movlw q
02A1   0B89               M     decfsz WREG
02A2   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
02A3   0000               M     nop
                          M     endif
02A4   160C           01073     bsf TRISA,VIDEO_OUT
02A5                  01074 draw_void_exit    
02A5   0A??           01075     incf slice
02A6   0A??           01076     incf lcount
02A7   30FB           01077     movlw LAST_VIDEO_LINE+1
02A8   02??           01078     subwf lcount,W
02A9   1D03           01079     skpz
                      01080     leave
02AA   2???               M     goto isr_exit
02AB   01??           01081     clrf slice
02AC   3013           01082     movlw 19
02AD   00??           01083     movwf task
                      01084     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02AE   2???               M     goto isr_exit
02AF                  01085 no_wall_draw
                      01086     next_task 2*BRICK_HEIGHT
02AF   0A??               M     incf slice
02B0   3010               M     movlw 2*BRICK_HEIGHT
02B1   02??               M     subwf slice,W
02B2   1D03               M     skpz
                          M     leave
02B3   2???               M     goto isr_exit
02B4   01??               M     clrf slice
02B5   0A??               M     incf task
02B6   3010               M     movlw 2*BRICK_HEIGHT
02B7   07??               M     addwf lcount
                          M     leave
02B8   2???               M     goto isr_exit
                      01087     
                      01088 ; task 12, draw top brick row
02B9                  01089 draw_row1 ; lcount enter at 74 leave at 82
                      01090     chroma_ref
02B9   003B               M     banksel PWM1CON
02BA   121B               M     bcf PWM1CON,POL
02BB   0021           01091     banksel TRISA
02BC   08??           01092     movfw row1
02BD   00??           01093     movwf temp1
                      01094     tdelay LEFT_MARGIN-4
  0010                    M     variable q=(LEFT_MARGIN-4)/3
  0000                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
02BE   3010               M     movlw q
02BF   0B89               M     decfsz WREG
02C0   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01095 ;    draw_border BORDER_WIDTH
                      01096     draw_wall MAUVE
  0000                    M     local next_brick
02C1   300E               M     movlw 14
                          M     pushw
02C2   0019               M     movwi --SP
02C3                      M next_brick
02C3   35??               M     lslf temp1
02C4   0D??               M     rlf temp2
02C5   301A               M     movlw BLACK
02C6   1803               M     skpnc
02C7   3008               M     movlw MAUVE
02C8   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0001                    M     variable q=(BRICK_WIDTH-9)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0002                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02C9   3001               M     movlw q
02CA   0B89               M     decfsz WREG
02CB   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
02CC   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02CD   0B80               M     decfsz T
02CE   3???               M     bra next_brick
                          M     dropn 1
02CF   3101               M     addfsr T,1
                      01097     black
02D0   301A               M     movlw BLACK
02D1   008C               M     movwf TRISA
                          M ;    goto $+1
                      01098     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02D2   3001               M     movlw q
02D3   0B89               M     decfsz WREG
02D4   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01099 ;    draw_border BORDER_WIDTH
                      01100     next_task BRICK_HEIGHT
02D5   0A??               M     incf slice
02D6   3008               M     movlw BRICK_HEIGHT
02D7   02??               M     subwf slice,W
02D8   1D03               M     skpz
                          M     leave
02D9   2???               M     goto isr_exit
02DA   01??               M     clrf slice
02DB   0A??               M     incf task
02DC   3008               M     movlw BRICK_HEIGHT
02DD   07??               M     addwf lcount
                          M     leave
02DE   2???               M     goto isr_exit
                      01101     
                      01102 ; task 13, draw 2nd brick row    
02DF                  01103 draw_row2 ;lcount enter at 82 leave at 90
                      01104     chroma_invert
02DF   003B               M     banksel PWM1CON
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E0   161B               M     bsf PWM1CON,POL
02E1   002?           01105     banksel row2
02E2   08??           01106     movfw row2
02E3   00??           01107     movwf temp1
                      01108     tdelay LEFT_MARGIN-4
  0010                    M     variable q=(LEFT_MARGIN-4)/3
  0000                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
02E4   3010               M     movlw q
02E5   0B89               M     decfsz WREG
02E6   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01109 ;    draw_border BORDER_WIDTH
                      01110     draw_wall YELLOW
  0000                    M     local next_brick
02E7   300E               M     movlw 14
                          M     pushw
02E8   0019               M     movwi --SP
02E9                      M next_brick
02E9   35??               M     lslf temp1
02EA   0D??               M     rlf temp2
02EB   301A               M     movlw BLACK
02EC   1803               M     skpnc
02ED   3008               M     movlw YELLOW
02EE   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0001                    M     variable q=(BRICK_WIDTH-9)/3
  0002                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02EF   3001               M     movlw q
02F0   0B89               M     decfsz WREG
02F1   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
02F2   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02F3   0B80               M     decfsz T
02F4   3???               M     bra next_brick
                          M     dropn 1
02F5   3101               M     addfsr T,1
                      01111     black
02F6   301A               M     movlw BLACK
02F7   008C               M     movwf TRISA
                          M ;    goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01112     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
02F8   3001               M     movlw q
02F9   0B89               M     decfsz WREG
02FA   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01113 ;    draw_border BORDER_WIDTH
                      01114     next_task BRICK_HEIGHT
02FB   0A??               M     incf slice
02FC   3008               M     movlw BRICK_HEIGHT
02FD   02??               M     subwf slice,W
02FE   1D03               M     skpz
                          M     leave
02FF   2???               M     goto isr_exit
0300   01??               M     clrf slice
0301   0A??               M     incf task
0302   3008               M     movlw BRICK_HEIGHT
0303   07??               M     addwf lcount
                          M     leave
0304   2???               M     goto isr_exit
                      01115 
                      01116 ; task 14, draw 3rd brick row    
0305                  01117 draw_row3 ; lcount enter at 90 leave at 98
                      01118 ;    btfss flags, F_EVEN
                      01119 ;    bra row3_exit
                      01120     chroma_ref
0305   003B               M     banksel PWM1CON
0306   121B               M     bcf PWM1CON,POL
0307   002?           01121     banksel row3
0308   08??           01122     movfw row3
0309   00??           01123     movwf temp1
                      01124     tdelay LEFT_MARGIN-4
  0010                    M     variable q=(LEFT_MARGIN-4)/3
  0000                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
030A   3010               M     movlw q
030B   0B89               M     decfsz WREG
030C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01125 ;    draw_border BORDER_WIDTH
                      01126     draw_wall BLUE
  0000                    M     local next_brick
030D   300E               M     movlw 14
                          M     pushw
030E   0019               M     movwi --SP
030F                      M next_brick
030F   35??               M     lslf temp1
0310   0D??               M     rlf temp2
0311   301A               M     movlw BLACK
0312   1803               M     skpnc
0313   3018               M     movlw BLUE
0314   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0001                    M     variable q=(BRICK_WIDTH-9)/3
  0002                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
0315   3001               M     movlw q
0316   0B89               M     decfsz WREG
0317   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0318   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0319   0B80               M     decfsz T
031A   3???               M     bra next_brick
                          M     dropn 1
031B   3101               M     addfsr T,1
                      01127     black
031C   301A               M     movlw BLACK
031D   008C               M     movwf TRISA
                          M ;    goto $+1
                      01128     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
031E   3001               M     movlw q
031F   0B89               M     decfsz WREG
0320   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01129 ;    draw_border BORDER_WIDTH
0321                  01130 row3_exit    
                      01131     next_task BRICK_HEIGHT
0321   0A??               M     incf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0322   3008               M     movlw BRICK_HEIGHT
0323   02??               M     subwf slice,W
0324   1D03               M     skpz
                          M     leave
0325   2???               M     goto isr_exit
0326   01??               M     clrf slice
0327   0A??               M     incf task
0328   3008               M     movlw BRICK_HEIGHT
0329   07??               M     addwf lcount
                          M     leave
032A   2???               M     goto isr_exit
                      01132     
                      01133 ; task 15, draw 4th brick row    
032B                  01134 draw_row4 ; lcount enter at 98 leave at 106
                      01135     chroma_invert
032B   003B               M     banksel PWM1CON
032C   161B               M     bsf PWM1CON,POL
032D   002?           01136     banksel row4
032E   08??           01137     movfw row4
032F   00??           01138     movwf temp1
                      01139     tdelay LEFT_MARGIN-4
  0010                    M     variable q=(LEFT_MARGIN-4)/3
  0000                    M     variable r=(LEFT_MARGIN-4)%3
                          M     if (q)
0330   3010               M     movlw q
0331   0B89               M     decfsz WREG
0332   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01140 ;    draw_border BORDER_WIDTH
                      01141     draw_wall MAUVE
  0000                    M     local next_brick
0333   300E               M     movlw 14
                          M     pushw
0334   0019               M     movwi --SP
0335                      M next_brick
0335   35??               M     lslf temp1
0336   0D??               M     rlf temp2
0337   301A               M     movlw BLACK
0338   1803               M     skpnc
0339   3008               M     movlw MAUVE
033A   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0001                    M     variable q=(BRICK_WIDTH-9)/3
  0002                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
033B   3001               M     movlw q
033C   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033D   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
033E   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
033F   0B80               M     decfsz T
0340   3???               M     bra next_brick
                          M     dropn 1
0341   3101               M     addfsr T,1
                      01142     black
0342   301A               M     movlw BLACK
0343   008C               M     movwf TRISA
                          M ;    goto $+1
                      01143     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0344   3001               M     movlw q
0345   0B89               M     decfsz WREG
0346   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01144 ;    draw_border BORDER_WIDTH
                      01145     next_task BRICK_HEIGHT
0347   0A??               M     incf slice
0348   3008               M     movlw BRICK_HEIGHT
0349   02??               M     subwf slice,W
034A   1D03               M     skpz
                          M     leave
034B   2???               M     goto isr_exit
034C   01??               M     clrf slice
034D   0A??               M     incf task
034E   3008               M     movlw BRICK_HEIGHT
034F   07??               M     addwf lcount
                          M     leave
0350   2???               M     goto isr_exit
                      01146 
                      01147 ; task 16, draw 5th brick row    
0351                  01148 draw_row5 ; lcount enter at 106 leave at 114
0351   002?           01149     banksel row5
0352   08??           01150     movfw row5
0353   00??           01151     movwf temp1
                      01152     tdelay LEFT_MARGIN-2
  0010                    M     variable q=(LEFT_MARGIN-2)/3
  0002                    M     variable r=(LEFT_MARGIN-2)%3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (q)
0354   3010               M     movlw q
0355   0B89               M     decfsz WREG
0356   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0357   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01153 ;    draw_border BORDER_WIDTH
                      01154     draw_wall WHITE
  0000                    M     local next_brick
0358   300E               M     movlw 14
                          M     pushw
0359   0019               M     movwi --SP
035A                      M next_brick
035A   35??               M     lslf temp1
035B   0D??               M     rlf temp2
035C   301A               M     movlw BLACK
035D   1803               M     skpnc
035E   300A               M     movlw WHITE
035F   008C               M     movwf TRISA
                          M     tdelay BRICK_WIDTH-9
  0001                    M     variable q=(BRICK_WIDTH-9)/3
  0002                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
0360   3001               M     movlw q
0361   0B89               M     decfsz WREG
0362   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
0363   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0364   0B80               M     decfsz T
0365   3???               M     bra next_brick
                          M     dropn 1
0366   3101               M     addfsr T,1
                      01155     black
0367   301A               M     movlw BLACK
0368   008C               M     movwf TRISA
                          M ;    goto $+1
                      01156     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0369   3001               M     movlw q
036A   0B89               M     decfsz WREG
036B   2???               M     goto $-1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01157 ;    draw_border BORDER_WIDTH
                      01158     black
036C   301A               M     movlw BLACK
036D   008C               M     movwf TRISA
                          M ;    goto $+1
                      01159     next_task BRICK_HEIGHT
036E   0A??               M     incf slice
036F   3008               M     movlw BRICK_HEIGHT
0370   02??               M     subwf slice,W
0371   1D03               M     skpz
                          M     leave
0372   2???               M     goto isr_exit
0373   01??               M     clrf slice
0374   0A??               M     incf task
0375   3008               M     movlw BRICK_HEIGHT
0376   07??               M     addwf lcount
                          M     leave
0377   2???               M     goto isr_exit
                      01160 
                      01161 ; task 17,draw all rows between paddle and lower brick row    
0378                  01162 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01163     tdelay LEFT_MARGIN
  0011                    M     variable q=(LEFT_MARGIN)/3
  0001                    M     variable r=(LEFT_MARGIN)%3
                          M     if (q)
0378   3011               M     movlw q
0379   0B89               M     decfsz WREG
037A   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
037B   0000               M     nop
                          M     endif
                      01164 ;    draw_border BORDER_WIDTH
                      01165     tdelay 320
  006A                    M     variable q=(320)/3
  0002                    M     variable r=(320)%3
                          M     if (q)
037C   306A               M     movlw q
037D   0B89               M     decfsz WREG
037E   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
037F   2???               M     goto $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01166 ;    draw_border BORDER_WIDTH
                      01167     black
0380   301A               M     movlw BLACK
0381   008C               M     movwf TRISA
                          M ;    goto $+1
0382   0A??           01168     incf lcount
0383   30F3           01169     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0384   02??           01170     subwf lcount,W
0385   1D03           01171     skpz
                      01172     leave
0386   2???               M     goto isr_exit
0387   01??           01173     clrf slice
0388   0A??           01174     incf task
                      01175     leave
0389   2???               M     goto isr_exit
                      01176 ;    next_task LAST_VIDEO_LINE-114-BRICK_HEIGHT
                      01177 
                      01178     
                      01179 ; task 18, draw paddle at bottom screen    
038A                  01180 draw_paddle
                      01181     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
038A   3012               M     movlw q
038B   0B89               M     decfsz WREG
038C   2???               M     goto $-1
                          M     endif
                          M     if (r==2)
                          M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
038D   08??           01182     movfw paddle_pos
038E   1903           01183     skpnz
038F   3???           01184     bra $+3
0390   0B89           01185     decfsz WREG
0391   3???           01186     bra $-1
0392   0021           01187     banksel TRISA
0393   120C           01188     bcf TRISA,VIDEO_OUT
                      01189     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
0394   300A               M     movlw q
0395   0B89               M     decfsz WREG
0396   2???               M     goto $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
0397   2???               M     goto $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0398   160C           01190     bsf TRISA,VIDEO_OUT
                      01191     next_task PADDLE_THICKNESS
0399   0A??               M     incf slice
039A   3008               M     movlw PADDLE_THICKNESS
039B   02??               M     subwf slice,W
039C   1D03               M     skpz
                          M     leave
039D   2???               M     goto isr_exit
039E   01??               M     clrf slice
039F   0A??               M     incf task
03A0   3008               M     movlw PADDLE_THICKNESS
03A1   07??               M     addwf lcount
                          M     leave
03A2   2???               M     goto isr_exit
                      01192 
                      01193 ; task 19,  wait end of this field, reset task to zero    
03A3                  01194 wait_field_end
03A3   0A??           01195     incf lcount
03A4   1903           01196     skpnz
03A5   1400           01197     bsf flags, F_HI_LINE
03A6   1800           01198     btfsc flags, F_HI_LINE
03A7   2???           01199     goto hi_line
                      01200     leave
03A8   2???               M     goto isr_exit
03A9                  01201 hi_line
03A9   1880           01202     btfsc flags,F_EVEN
03AA   2???           01203     goto even_field
03AB   3005           01204     movlw 5
03AC   02??           01205     subwf lcount,W
03AD   1D03           01206     skpz
                      01207     leave
03AE   2???               M     goto isr_exit
03AF   2???           01208     goto field_end
03B0                  01209 even_field
03B0   3006           01210     movlw 6
03B1   02??           01211     subwf lcount,W
03B2   1D03           01212     skpz
                      01213     leave
03B3   2???               M     goto isr_exit
                      01214 ; even field last line is half_line    
                      01215 ; set PWM3 for line 263 half-line
03B4   003B           01216     banksel PWM3DC
03B5   3003           01217     movlw high HALF_LINE
03B6   00B6           01218     movwf PWM3PRH
03B7   308D           01219     movlw low HALF_LINE
03B8   00B5           01220     movwf PWM3PRL
03B9   17BF           01221     bsf PWM3LDCON,7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BA                  01222 field_end
03BA   01??           01223     clrf task
03BB   01??           01224     clrf slice
03BC   01??           01225     clrf lcount
03BD   1000           01226     bcf flags, F_HI_LINE
03BE   1500           01227     bsf flags, F_SYNC
                      01228 ; toggle odd/even field flag    
03BF   3002           01229     movlw 1<<F_EVEN
03C0   06??           01230     xorwf flags
                      01231     leave
03C1   2???               M     goto isr_exit
                      01232 
                      01233 ; helper functions
                      01234 
                      01235     
                      01236 ; increment user score
                      01237 ; This is a BCD addition where a single digit is added to score.   
                      01238 ; score is stored as big indian
                      01239 ; argument: 
                      01240 ;   WREG ->  bdc digit to add to score variable
03C2                  01241 inc_score
03C2   07??           01242     addwf score+1
03C3   1883           01243     btfsc STATUS,DC
03C4   3???           01244     bra $+6
03C5   300F           01245     movlw 15
03C6   05??           01246     andwf score+1,W
03C7   3C09           01247     sublw 9
03C8   1803           01248     skpnc
03C9   3???           01249     bra $+3
03CA   3006           01250     movlw 6
03CB   07??           01251     addwf score+1
03CC   0E??           01252     swapf score+1,W
03CD   390F           01253     andlw 15
03CE   3C09           01254     sublw 9
03CF   1803           01255     skpnc
03D0   3???           01256     bra game_over_test
03D1   3060           01257     movlw 0x60
03D2   07??           01258     addwf score+1
03D3   0A??           01259     incf score
03D4   3001           01260     movlw 1
03D5   00??           01261     movwf ball_speed
03D6                  01262 game_over_test ; all bricks destroyed?
03D6   1C00           01263     btfss score,0
03D7   0008           01264     return
03D8   3068           01265     movlw 0x68
03D9   02??           01266     subwf score+1,W
03DA   1903           01267     skpnz
03DB   1700           01268     bsf flags,F_OVER
03DC   0008           01269     return
                      01270     
                      01271 ;***********************************
                      01272 ; digit_offset, compute digit position in 'digits' table
                      01273 ;   position = digit * 5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01274 ; 
                      01275 ; input: WREG -> digit value {0..9}
                      01276 ;         
                      01277 ; output: WREG -> displacement in table
                      01278 ;***********************************
03DD                  01279 digit_offset    
                      01280     pushw 
03DD   0019               M     movwi --SP
03DE   3589           01281     lslf WREG
03DF   3589           01282     lslf WREG
03E0   0780           01283     addwf T
                      01284     popw
03E1   0012               M     moviw SP++
03E2   0008           01285     return
                      01286     
03E3                  01287 brick_wall_init
03E3   30??           01288     movlw high row1
03E4   0087           01289     movwf FSR1H
03E5   30??           01290     movlw low row1
03E6   0086           01291     movwf FSR1L
03E7   300C           01292     movlw 12
03E8   00??           01293     movwf temp1
03E9   30FF           01294     movlw 0xff
03EA                  01295 ibw    
03EA   001E           01296     movwi FSR1++
03EB   0B??           01297     decfsz temp1
03EC   3???           01298     bra ibw
03ED   0008           01299     return
                      01300 
                      01301 ;    LFSR 32 bits
                      01302 ;    REF:  http://www.ece.cmu.edu/~koopman/lfsr/index.html
                      01303 ;    must be initialized with 0xFFFFFFFF
  7FFFF159            01304 LFSR_MASK equ 0x7FFFF159
03EE                  01305 lfsr_rand
03EE   0C??           01306     rrf seed+3,W   ; rotation du LFSR 1 bit vers la droite
03EF   0C??           01307     rrf seed, F
03F0   0C??           01308     rrf seed+1,F
03F1   0C??           01309     rrf seed+2,F
03F2   0C??           01310     rrf seed+3,F
03F3   1B80           01311     btfsc seed+3,7
03F4   2???           01312     goto lfsr_rand_exit
03F5   3059           01313     movlw LFSR_MASK & 0xFF
03F6   06??           01314     xorwf seed
03F7   30F1           01315     movlw (LFSR_MASK>>8) & 0xFF
03F8   06??           01316     xorwf seed+1
03F9   30FF           01317     movlw (LFSR_MASK>>16) & 0xFF
03FA   06??           01318     xorwf seed+2
03FB   307F           01319     movlw (LFSR_MASK>>24) & 0xFF
03FC   06??           01320     xorwf seed+3
03FD                  01321 lfsr_rand_exit
03FD   301F           01322     movlw 0x1F
03FE   05??           01323     andwf seed,W  ; modulo 32
03FF   0008           01324     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01325     
0400                  01326 set_ball_dx
0400   2???           01327     call lfsr_rand ;random
0401   3007           01328     movlw 7
0402   05??           01329     andwf seed,W
0403   3589           01330     lslf WREG
0404   000B           01331     brw
0405   3000           01332     movlw 0
0406   3???           01333     bra set_ball_dx_exit
0407   3001           01334     movlw 1
0408   3???           01335     bra set_ball_dx_exit
0409   30FF           01336     movlw -1
040A   3???           01337     bra set_ball_dx_exit
040B   3000           01338     movlw 0
040C   3???           01339     bra set_ball_dx_exit
040D   3001           01340     movlw 1
040E   3???           01341     bra set_ball_dx_exit
040F   30FF           01342     movlw -1
0410   3???           01343     bra set_ball_dx_exit
0411   30FF           01344     movlw -1
0412   3???           01345     bra set_ball_dx_exit
0413   3001           01346     movlw 1
0414                  01347 set_ball_dx_exit
0414   00??           01348     movwf ball_dx
0415   0008           01349     return
                      01350     
0416                  01351 game_init
0416   01??           01352     clrf score
0417   01??           01353     clrf score+1
0418   2???           01354     call brick_wall_init
0419   002?           01355     banksel balls
041A   3003           01356     movlw 3
041B   00??           01357     movwf balls
041C   01??           01358     clrf ball_timer
041D   0A??           01359     incf ball_timer
041E   30EB           01360     movlw PADDLE_Y-BRICK_HEIGHT
041F   00??           01361     movwf ball_y
0420   2???           01362     call set_ball_dx
0421   30FC           01363     movlw -4
0422   00??           01364     movwf ball_dy
0423   3002           01365     movlw 2
0424   00??           01366     movwf ball_speed
0425   1600           01367     bsf flags, F_START
0426   1280           01368     bcf flags, F_PAUSE
0427   0008           01369     return
                      01370     
                      01371 ; delay by TIMER0
                      01372 ; parameter
                      01373 ;   WREG -> 2*Tcy+7cy    
0428                  01374 t0delay 
0428   0989           01375     comf WREG
0429   0095           01376     movwf TMR0
042A   110B           01377     bcf INTCON,T0IF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042B   1D0B           01378     btfss INTCON,T0IF
042C   3???           01379     bra $-1
042D   0008           01380     return
                      01381     
                      01382 MAIN_PROG CODE                      ; let linker place main program
                      01383 
0000                  01384 START
                      01385 ; clear common RAM
0000   0185           01386     clrf FSR0H
0001   3070           01387     movlw 0x70
0002   0084           01388     movwf FSR0L
0003   0103           01389     clrw
0004   001A           01390     movwi FSR0++
0005   1F84           01391     btfss FSR0L,7
0006   3???           01392     bra $-2
                      01393 ; clear banked RAM
0007   0184           01394     clrf FSR0L
0008   3020           01395     movlw 0x20
0009   0085           01396     movwf FSR0H
000A   0103           01397     clrw 
000B   001A           01398     movwi FSR0++
000C   1C05           01399     btfss FSR0H,0
000D   3???           01400     bra $-2
                      01401 ; initialize LFSR seed
000E   002?           01402     banksel seed
000F   09??           01403     comf seed
0010   09??           01404     comf seed+1
0011   09??           01405     comf seed+2
0012   09??           01406     comf seed+3
                      01407 ;   setup arguments stack pointer
0013   30??           01408     movlw high (stack+STACK_SIZE)
0014   0085           01409     movwf FSR0H
0015   30??           01410     movlw low (stack+STACK_SIZE)
0016   0084           01411     movwf FSR0L
                      01412 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01413 ; TIMER0 prescale 1:2
0017   3050           01414     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01415     movwf OPTION_REG
                      01416 ; disable analog inputs, except AN0
0019   0023           01417     banksel ANSELA
001A   018C           01418     clrf ANSELA
                      01419 ; paddle potentiometer input     
001B   140C           01420     bsf ANSELA,PADDLE
001C   0021           01421     banksel ADCON1
001D   3020           01422     movlw (2<<ADCS0)
001E   009E           01423     movwf ADCON1
                      01424 ; pin setup
001F   0024           01425     banksel WPUA
0020   018C           01426     clrf WPUA
0021   0021           01427     banksel TRISA
0022   110C           01428     bcf TRISA,SYNC_OUT
0023   100C           01429     bcf TRISA,AUDIO
0024   0022           01430     banksel LATA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   160C           01431     bsf LATA, VIDEO_OUT
                      01432 ; PWM1 chroma signal on RA1
0026   003B           01433     banksel PWM1CON
0027   019F           01434     clrf PWM1LDCON
0028   0191           01435     clrf PWM1PHL
0029   0192           01436     clrf PWM1PHH
002A   0197           01437     clrf PWM1OFL
002B   0198           01438     clrf PWM1OFH
002C   0196           01439     clrf PWM1PRH
002D   3007           01440     movlw 7
002E   0095           01441     movwf PWM1PRL
002F   3004           01442     movlw 4
0030   0093           01443     movwf PWM1DCL
0031   0194           01444     clrf PWM1DCH
0032   179F           01445     bsf PWM1LDCON,7
0033   30C0           01446     movlw (1<<EN)|(1<<OE)
0034   009B           01447     movwf PWM1CON
                      01448 ; PWM2 sound
0035   003B           01449     banksel PWM2CON
0036   01A1           01450     clrf PWM2PHL
0037   01A2           01451     clrf PWM2PHH
0038   01A7           01452     clrf PWM2OFL
0039   01A8           01453     clrf PWM2OFH
003A   3030           01454     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01455     movwf PWM2CLKCON
003C   300D           01456     movlw high 3578;7
003D   00A6           01457     movwf PWM2PRH
003E   30FA           01458     movlw low 3578;7
003F   00A5           01459     movwf PWM2PRL
0040   3626           01460     lsrf PWM2PRH,W
0041   00A4           01461     movwf PWM2DCH
0042   0C25           01462     rrf PWM2PRL,W
0043   00A3           01463     movwf PWM2DCL
0044   17AF           01464     bsf PWM2LDCON,LDA
                      01465 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01466     banksel PWM3CON
0046   01BF           01467     clrf PWM3LDCON
0047   01B1           01468     clrf PWM3PHL
0048   01B2           01469     clrf PWM3PHH
0049   01B7           01470     clrf PWM3OFL
004A   01B8           01471     clrf PWM3OFH
004B   301B           01472     movlw low HPERIOD
004C   00B5           01473     movwf PWM3PRL
004D   3007           01474     movlw high HPERIOD
004E   00B6           01475     movwf PWM3PRH
004F   3086           01476     movlw HSYNC
0050   00B3           01477     movwf PWM3DCL
0051   01B4           01478     clrf PWM3DCH
0052   30D0           01479     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01480     movwf PWM3CON
0054   17BF           01481     bsf PWM3LDCON,7
0055   143C           01482     bsf PWM3INTE,PRIE
                      01483 ; enbable interrupt    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   0020           01484     banksel PIR3
0057   1313           01485     bcf PIR3,PWM3IF
0058   0021           01486     banksel PIE3
0059   1713           01487     bsf PIE3,PWM3IE
005A   170B           01488     bsf INTCON,PEIE
005B   178B           01489     bsf INTCON,GIE
005C   01??           01490     clrf flags
005D   1500           01491     bsf flags, F_SYNC
                      01492 ; all processing done in ISR    
005E   2???           01493     goto $
                      01494 
                      01495 ; digits character table
005F                  01496 digits
005F   000B           01497     brw
0060   3440 34A0 34A0 01498     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01499     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01500     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01501     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01502     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01503     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01504     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01505     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01506     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01507     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01508     reset
                      01509     
0093                  01510 frequency
0093   000B           01511     brw
0094   348B 34D3      01512     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01513     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01514     reset
                      01515     
                      01516 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01517 max_score 
                      01518  
3FA7 1EFF             01519     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       0000000E
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
CWGASEL                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LFSR_MASK                         7FFFF159
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START                             00000000
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_000D                         0000000D
_ISR_00DD                         000000DD
_ISR_00E2                         000000E2
_ISR_00E9                         000000E9
_ISR_0121                         00000121
_ISR_0124                         00000124
_ISR_0134                         00000134
_ISR_01E5                         000001E5
_ISR_01E9                         000001E9
_ISR_01EA                         000001EA
_ISR_01EE                         000001EE
_ISR_0210                         00000210
_ISR_0219                         00000219
_ISR_021A                         0000021A
_ISR_021F                         0000021F
_ISR_023A                         0000023A
_ISR_023D                         0000023D
_ISR_0243                         00000243
_ISR_024A                         0000024A
_ISR_024B                         0000024B
_ISR_0251                         00000251
_ISR_0263                         00000263
_ISR_0267                         00000267
_ISR_026B                         0000026B
_ISR_026F                         0000026F
_ISR_0275                         00000275
_ISR_0279                         00000279
_ISR_027F                         0000027F
_ISR_0284                         00000284
_ISR_0288                         00000288
_ISR_0289                         00000289
_ISR_028E                         0000028E
_ISR_0294                         00000294
_ISR_0299                         00000299
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_029E                         0000029E
_ISR_02A2                         000002A2
_ISR_02C0                         000002C0
_ISR_02CB                         000002CB
_ISR_02CC                         000002CC
_ISR_02D4                         000002D4
_ISR_02E6                         000002E6
_ISR_02F1                         000002F1
_ISR_02F2                         000002F2
_ISR_02FA                         000002FA
_ISR_030C                         0000030C
_ISR_0317                         00000317
_ISR_0318                         00000318
_ISR_0320                         00000320
_ISR_0332                         00000332
_ISR_033D                         0000033D
_ISR_033E                         0000033E
_ISR_0346                         00000346
_ISR_0356                         00000356
_ISR_0357                         00000357
_ISR_0362                         00000362
_ISR_0363                         00000363
_ISR_036B                         0000036B
_ISR_037A                         0000037A
_ISR_037E                         0000037E
_ISR_037F                         0000037F
_ISR_038C                         0000038C
_ISR_038F                         0000038F
_ISR_0391                         00000391
_ISR_0396                         00000396
_ISR_0397                         00000397
_ISR_03C4                         000003C4
_ISR_03C9                         000003C9
_ISR_042C                         0000042C
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      0000027D
ball_at_right                     00000292
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    0000025C
ball_lost                         00000132
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000AF
between                           000001B4
between_exit                      000001BE
black                             
blue                              
bottom_bound                      0000010B
brick_bounce                      000001A8
brick_wall_init                   000003E3
case                              
check_paddle_bounce               00000143
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000114
collision_exit                    000001B0
d1                                000000AC
d2                                000000AD
d3                                000000AE
dark_green                        
digit_offset                      000003DD
digit_row                         000001FE
digits                            0000005F
draw_border                       
draw_empty                        00000378
draw_paddle                       0000038A
draw_row1                         000002B9
draw_row2                         000002DF
draw_row3                         00000305
draw_row4                         0000032B
draw_row5                         00000351
draw_score                        000001C8
draw_top_wall                     00000214
draw_void                         0000022C
draw_void_exit                    000002A5
draw_wall                         
dropn                             
eeprom                            00000780
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

even_field                        000003B0
field_end                         000003BA
flags                             00000000
frequency                         00000093
game_init                         00000416
game_over                         000000C2
game_over_test                    000003D6
game_running                      000000BA
gray                              white
hi_line                           000003A9
ibw                               000003EA
inc_score                         000003C2
isr                               00000004
isr_exit                          00000029
lcount                            00000001
leave                             
lfsr_rand                         000003EE
lfsr_rand_exit                    000003FD
mauve                             
max_score                         00000780
move_ball                         000000EF
move_ball_exit                    00000111
move_y                            00000102
next_task                         
no_ball                           0000023B
no_ball_dly                       00000238
no_wall_draw                      000002AF
paddle_pos                        00000006
pickn                             
pokew                             
pong                              0000009A
popw                              
porch_off                         
porch_on                          
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         0000002E
pushw                             
q                                 0000000A
r                                 00000002
read_button                       000000D1
read_paddle                       000000D5
right_bound                       000000FB
row1                              000000A0
row1_coll                         00000154
row2                              000000A2
row2_coll                         00000165
row3                              000000A4
row3_coll                         00000176
row3_exit                         00000321
row4                              000000A6
row4_coll                         00000187
row5                              000000A8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-15-2019  15:13:01         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

row5_coll                         00000198
row6                              000000AA
score                             0000000C
score_exit                        000001F4
seed                              00000030
set_ball_dx                       00000400
set_ball_dx_exit                  00000414
set_presync                       0000003B
set_vsync                         00000053
skip_2_tasks                      000000CA
slice                             00000002
sound                             00000076
sound_fx1                         00000084
sound_fx2                         0000008F
sound_timer                       000000B0
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000428
task                              00000003
task_switch                       00000012
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     00000222
user_input                        000000AE
video_first                       000001C0
vsync                             00000046
vsync_end                         00000068
wait_field_end                    000003A3
wait_trigger                      000000BC
white                             
yellow                            
yes_ball                          00000255

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   320 suppressed

