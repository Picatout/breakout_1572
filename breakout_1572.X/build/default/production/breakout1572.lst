MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  VIDEO DISPLAY ZONES
                      00027 ;  scan lines     display
                      00028 ;  =======================    
                      00029 ;    30-49     |   score and balls count
                      00030 ;    50-57     |   top wall
                      00031 ;    58-250    |   play ground
                      00032 ;    58-73     |   empty zone
                      00033 ;    74-81     |   first bricks row
                      00034 ;    82-89     |   second bricks row
                      00035 ;    90-97     |   third bricks row
                      00036 ;    98-105    |   fourth bricks row
                      00037 ;    106-113   |   fifth bricks row
                      00038 ;    114-250   |   empty zone
                      00039 ;    243-250   |   paddle zone    
                      00040 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00041  
                      00042     
                      00043     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044     
8007   3FA7           00045     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00046     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00047     
                      00048     radix dec
                      00049 
                      00050 ; constants
  00000800            00051 PROG_SIZE equ 2048  ; program words
  00000080            00052 EEPROM_SIZE equ 128 ; high endurance flash words
                      00053  
  01B4F360            00054 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00055 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00056 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00057  
                      00058 ; NTSC signal 
  00003D76            00059 Fhorz equ 15734 ; horizontal frequency
  0000071B            00060 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00061 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00062 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00063 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00064 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00065 ; boolean flags 
  00000000            00066 F_HI_LINE equ 0 ; lcount > 255
  00000001            00067 F_EVEN equ 1    ; even field
  00000002            00068 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00069 F_SOUND equ 3   ; sound enabled 
  00000004            00070 F_START equ 4   ; game started 
  00000005            00071 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00072 F_OVER equ 6    ; game over
                      00073  
                      00074 ;pins assignment
  00000000            00075 AUDIO EQU RA0
  00000000            00076 PADDLE equ RA0
  00000001            00077 CHROMA equ RA1
  00000002            00078 SYNC_OUT equ RA2
  00000003            00079 START_BTN equ RA3 
  00000004            00080 VIDEO_OUT equ RA4
  00000005            00081 CLKIN equ RA5
                      00082  
                      00083     ; constants used in video display
                      00084 ; values are in Tcy for x dimension.
                      00085 ; values are in scan lines for y dimension.    
  0000001E            00086 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  000000FA            00087 LAST_VIDEO_LINE  equ 250 ; last video line displayed
  00000034            00088 LEFT_MARGIN equ 52  ;  delay Tcy before any display
  000000F8            00089 COURT_WIDTH equ 248 ; Tcy
  00000008            00090 BRICK_HEIGHT equ 8  ; scan lines
  00000010            00091 BRICK_WIDTH equ 16  ; Tcy
  00000004            00092 BORDER_WIDTH equ 4  ; Tcy
  00000020            00093 PADDLE_WIDTH equ 32 ; Tcy
  00000008            00094 PADDLE_THICKNESS equ 8 ; scan lines
  0000004A            00095 PADDLE_LIMIT equ 74 ; Tcy
  00000008            00096 BALL_WIDTH equ 8 ; Tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000008            00097 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00098 BALL_LEFT_BOUND equ 0 ; Tcy
  00000052            00099 BALL_RIGHT_BOUND equ 82 ; Tcy
  0000003A            00100 BALL_TOP_BOUND equ 58  ; scan lines
  000000FA            00101 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE;-BRICK_HEIGHT ;
  000000F3            00102 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  00000005            00103 BRICKS_ROWS equ 5 ; number of bricks rows
  0000004A            00104 ROW1_Y equ 74
  00000052            00105 ROW2_Y equ 82
  0000005A            00106 ROW3_Y equ 90
  00000062            00107 ROW4_Y equ 98
  0000006A            00108 ROW5_Y equ 106
                      00109  
                      00110 
                      00111 ;;;;;;;;;;;;;;;;;;;;;;
                      00112 ;; assembler macros ;;
                      00113 ;;;;;;;;;;;;;;;;;;;;;;
                      00114 
                      00115 ; leave task 
                      00116 leave macro
                      00117     goto isr_exit
                      00118     endm
                      00119     
                      00120 ; move to next task on slice limit
                      00121 ; parameters:
                      00122 ;   s  nomber of slices used by the task    
                      00123 next_task macro s    
                      00124     incf slice
                      00125     movlw s
                      00126     subwf slice,W
                      00127     skpz
                      00128     leave
                      00129     clrf slice
                      00130     incf task
                      00131     movlw s
                      00132     addwf lcount
                      00133     leave
                      00134     endm
                      00135     
                      00136     
                      00137 ; swap variable with WREG    
                      00138 swap_var macro var
                      00139     xorwf var
                      00140     xorwf var,W
                      00141     xorwf var
                      00142     endm
                      00143     
                      00144 
                      00145 ; delay in machine cycle T
                      00146 ; parameters:
                      00147 ;   T   number of machine cycles    
                      00148 tdelay macro T
                      00149     variable q=(T)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     variable r=(T)%3
                      00151     if (q)
                      00152     movlw q
                      00153     decfsz WREG
                      00154     bra $-1
                      00155     endif
                      00156     if (r==2)
                      00157     bra $+1
                      00158     endif 
                      00159     if (r==1)
                      00160     nop
                      00161     endif
                      00162     endm
                      00163 
                      00164 ; enable weak pull on VIDEO_OUT
                      00165 ; to create a porch
                      00166 porch_on macro
                      00167     banksel WPUA
                      00168     bsf WPUA,VIDEO_OUT
                      00169     endm
                      00170     
                      00171 ; disable weak pull on VIDEO_OUT
                      00172 ; to remove porch
                      00173 porch_off macro
                      00174     banksel WPUA
                      00175     bcf WPUA,VIDEO_OUT
                      00176     endm
                      00177     
                      00178 ; enable chroma output
                      00179 chroma_on macro
                      00180     banksel TRISA
                      00181     bcf TRISA, CHROMA
                      00182     endm
                      00183     
                      00184 ;disable chroma output    
                      00185 chroma_off macro
                      00186     banksel TRISA
                      00187     bsf TRISA,CHROMA
                      00188     endm
                      00189     
                      00190 ; output chroma reference    
                      00191 chroma_ref macro
                      00192     banksel PWM1CON
                      00193     bcf PWM1CON,POL
                      00194     endm
                      00195     
                      00196 ; set chroma phase to 180 degree
                      00197 chroma_invert macro
                      00198     banksel PWM1CON
                      00199     bsf PWM1CON,POL
                      00200     endm
                      00201 
                      00202 ;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203 ;   colors macros
                      00204 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00205 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00206 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00207 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00208 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00209 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00210 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00211 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00212  
                      00213 ;set video output to black    
                      00214 black macro
                      00215     movlw BLACK
                      00216     movwf TRISA
                      00217     endm
                      00218     
                      00219 ; set video output to white    
                      00220 white macro    
                      00221     movlw WHITE
                      00222     movwf TRISA
                      00223     endm
                      00224 
                      00225 #define gray white
                      00226     
                      00227 ; set video output to mauve    
                      00228 mauve macro
                      00229     movlw MAUVE
                      00230     movwf TRISA
                      00231     endm
                      00232 
                      00233 ; set video output to yellow   
                      00234 yellow macro
                      00235     movlw YELLOW
                      00236     movwf TRISA
                      00237     endm
                      00238     
                      00239 ; set video output to blue
                      00240 blue macro
                      00241     movlw BLUE
                      00242     movwf TRISA
                      00243     endm
                      00244     
                      00245 ; set video output to dark blue    
                      00246 dark_green macro
                      00247     movlw DARK_GREEN
                      00248     movwf TRISA
                      00249     endm
                      00250 
                      00251     
                      00252     
                      00253     
                      00254 ; draw left and right borders
                      00255 ; parameters:
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 ;   width delay determine width
                      00257 draw_border macro width
                      00258     banksel TRISA
                      00259     bsf TRISA,CHROMA
                      00260     bcf TRISA,VIDEO_OUT
                      00261     tdelay width
                      00262     bsf TRISA,VIDEO_OUT
                      00263     endm
                      00264     
                      00265 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00266 ;  stack manipulation macros
                      00267 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00268 STACK_SIZE equ 16 ; size of argument stack
                      00269 #define T INDF0 ; indirect access to top of argument stack
                      00270 #define SP FSR0 ; use FSR0 as stack pointer 
                      00271 ; push WREG on T
                      00272 pushw  macro
                      00273     movwi --SP
                      00274     endm
                      00275   
                      00276 ; pop WREG from T
                      00277 popw macro
                      00278     moviw SP++
                      00279     endm
                      00280     
                      00281 ; swap WREG with 
                      00282 swapw  macro
                      00283     xorwf T
                      00284     xorwf T,W
                      00285     xorwf T
                      00286     endm
                      00287 
                      00288 ; drop n elements from stack
                      00289 dropn macro n
                      00290     addfsr T,n
                      00291     endm
                      00292 
                      00293 ; copy nth element of stack to WREG
                      00294 ;  n {0..31}, 0 is T   
                      00295 pickn macro n
                      00296     moviw n[SP]
                      00297     endm
                      00298    
                      00299 ; copy WREG to nth element of stack
                      00300 ; n {0..31}, 0 is T
                      00301 pokew macro n
                      00302     movwi n[SP]
                      00303     endm
                      00304     
                      00305     
                      00306 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00307 ;;    variables
                      00308 ;;;;;;;;;;;;;;;;;;;;;;;;;;
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309  
                      00310     
                      00311     udata 0x20 ; bank 0
0020                  00312 stack res 16 ; arguments stack
0030                  00313 seed res 2 ; prng seed used by lfsr16
                      00314  
                      00315 ; video display manipulate TRISA register
                      00316 ; to avoid banksel during video update
                      00317 ; place variables related to video in same bank as TRISA 
                      00318 v_array   udata 0xA0 ; bank 1
00A0                  00319 row1 res 2; brick wall row1
00A2                  00320 row2 res 2
00A4                  00321 row3 res 2
00A6                  00322 row4 res 2
00A8                  00323 row5 res 2
00AA                  00324 row6 res 2
00AC                  00325 mask res 1 
00AD                  00326 d1 res 1 ; score msd digit pixels
00AE                  00327 d2 res 1 ; score 2nd digit pixels
00AF                  00328 d3 res 1 ; score lsd digit pixels
00B0                  00329 balls res 1 ; number of recking balls available 
00B1                  00330 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
                      00331  
                      00332 ; common 16 bytes RAM accessible whatever the selected bank 
                      00333     udata_shr 
0000                  00334 flags  res 1 ; boolean variables
0001                  00335 lcount res 1 ; video field line counter
0002                  00336 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00337 task res 1 ; where in video phase 
0004                  00338 temp1 res 1 ; temporary storage
0005                  00339 temp2 res 1 ; 
0006                  00340 paddle_pos res 1 
0007                  00341 ball_x res 1
0008                  00342 ball_y res 1
0009                  00343 ball_dx res 1
000A                  00344 ball_dy res 1
000B                  00345 ball_speed res 1
000C                  00346 score res 2 ; score stored in Binary Coded Decimal
000E                  00347 ball_timer res 1 
000F                  00348 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00349  
                      00350 ;; cpu reset entry point
                      00351 RES_VECT  CODE    0x0000            
0000   2???           00352     goto    initialize  ; go to beginning of program
0001   0001           00353     reset   
0002   0001           00354     reset
0003   0001           00355     reset
                      00356 
                      00357 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00358 ; interrupt service routine triggered by PWM3 period rollover
                      00359 ; after initialization is done all processing in done inside 
                      00360 ; this interrupt.
                      00361 ; It is designed as a round robin scheduler.    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00363 ISR CODE 0x0004
0004                  00364 isr
0004   1900           00365     btfsc flags, F_SYNC
0005   2???           00366     goto task_switch
                      00367  ; generate chroma sync
                      00368     tdelay 28
  0009                    M     variable q=(28)/3
  0001                    M     variable r=(28)%3
                          M     if (q)
0006   3009               M     movlw q
0007   0B89               M     decfsz WREG
0008   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
0009   0000               M     nop
                          M     endif
                      00369     chroma_ref
000A   003B               M     banksel PWM1CON
000B   121B               M     bcf PWM1CON,POL
000C   0021           00370     banksel TRISA
000D   108C           00371     bcf TRISA,CHROMA
                      00372     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
000E   3005               M     movlw q
000F   0B89               M     decfsz WREG
0010   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
0011   0000               M     nop
                          M     endif
0012   148C           00373     bsf TRISA,CHROMA
                      00374     porch_on
0013   0024               M     banksel WPUA
0014   160C               M     bsf WPUA,VIDEO_OUT
0015                  00375 task_switch ; round robin task scheduler   
0015   08??           00376     movfw task
0016   000B           00377     brw
0017   2???           00378     goto pre_vsync ;task 0, vertical pre-equalization pulses
0018   2???           00379     goto vsync ;task 1, vertical sync pulses
0019   2???           00380     goto post_vsync ;task 2, vertical post-equalization pulses
001A   2???           00381     goto vsync_end ;task 3, return to normal video line
001B   2???           00382     goto sound ;task 4, check sound timer expiration
001C   2???           00383     goto user_input ;task 5,  read button and paddle
001D   2???           00384     goto move_ball ;task 6, move recking ball.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001E   2???           00385     goto collision ; task 7, check for collision with brick wall and paddle
001F   2???           00386     goto video_first ; task 8, wait FIRST_VIDEO line.
0020   2???           00387     goto draw_score ;task 9,  draw score en ball count
0021   2???           00388     goto draw_top_wall ;task 10,  draw top wall
0022   2???           00389     goto draw_void ;task 11, draw play space
0023   2???           00390     goto draw_row1 ;task 12, draw top bricks row
0024   2???           00391     goto draw_row2 ;task 13, draw second bricks row
0025   2???           00392     goto draw_row3 ;task 14,  draw third bricks row
0026   2???           00393     goto draw_row4 ;task 15,  draw fourth bricks row
0027   2???           00394     goto draw_row5 ;task 16, draw fifth bricks row
0028   2???           00395     goto draw_empty;task 17, draw empty space down to bottom
0029   2???           00396     goto draw_paddle ;task 18, draw paddle
002A   2???           00397     goto wait_field_end ;task 19, idle to end of video field
002B   0001           00398     reset ; error trap, task out of range
002C                  00399 isr_exit  
                      00400     porch_off
002C   0024               M     banksel WPUA
002D   120C               M     bcf WPUA,VIDEO_OUT
002E   003B           00401     banksel PWM3INTF
002F   103D           00402     bcf PWM3INTF,PRIF
0030   0009           00403     retfie
                      00404 
                      00405 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00406 ;;  all tasks routine are here            ;;
                      00407 ;;  each must be terminate by leave macro ;;    
                      00408 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00409     
                      00410 ; task 0, vertical synchronization pre equalization
                      00411 ; 6 half horizontal scan lines    
0031                  00412 pre_vsync
0031   08??           00413     movfw slice
0032   1903           00414     skpnz
0033   2???           00415     goto set_presync
                      00416     next_task 6
0034   0A??               M     incf slice
0035   3006               M     movlw 6
0036   02??               M     subwf slice,W
0037   1D03               M     skpz
                          M     leave
0038   2???               M     goto isr_exit
0039   01??               M     clrf slice
003A   0A??               M     incf task
003B   3006               M     movlw 6
003C   07??               M     addwf lcount
                          M     leave
003D   2???               M     goto isr_exit
003E                  00417 set_presync    
003E   003B           00418     banksel PWM3DC
003F   3041           00419     movlw HEQUAL
0040   00B3           00420     movwf PWM3DCL
0041   01B4           00421     clrf PWM3DCH
0042   3003           00422     movlw high HALF_LINE
0043   00B6           00423     movwf PWM3PRH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044   308D           00424     movlw low HALF_LINE
0045   00B5           00425     movwf PWM3PRL
0046   17BF           00426     bsf PWM3LDCON,7
0047   0A??           00427     incf slice
                      00428     leave
0048   2???               M     goto isr_exit
                      00429     
                      00430 ; task 1, vertical synchronization pulses
                      00431 ; 6 half horizontal scan lines    
0049                  00432 vsync 
0049   08??           00433     movfw slice
004A   1903           00434     skpnz
004B   2???           00435     goto set_vsync
                      00436     next_task 6
004C   0A??               M     incf slice
004D   3006               M     movlw 6
004E   02??               M     subwf slice,W
004F   1D03               M     skpz
                          M     leave
0050   2???               M     goto isr_exit
0051   01??               M     clrf slice
0052   0A??               M     incf task
0053   3006               M     movlw 6
0054   07??               M     addwf lcount
                          M     leave
0055   2???               M     goto isr_exit
0056                  00437 set_vsync
0056   003B           00438     banksel PWM3DC
0057   3008           00439     movlw low VSYNC_PULSE
0058   00B3           00440     movwf PWM3DCL
0059   3003           00441     movlw high VSYNC_PULSE
005A   00B4           00442     movwf PWM3DCH
005B   17BF           00443     bsf PWM3LDCON,7
005C   0A??           00444     incf slice
                      00445     leave
005D   2???               M     goto isr_exit
                      00446     
                      00447 ; task 2, vertical synchronisation post equalization pulses
                      00448 ; 6 half horizontal scan lines    
005E                  00449 post_vsync
005E   08??           00450     movfw slice
005F   1903           00451     skpnz
0060   2???           00452     goto set_presync
0061   3006           00453     movlw 6
0062   02??           00454     subwf slice,W
0063   1903           00455     skpnz
0064   2???           00456     goto post_last
0065   0A??           00457     incf slice
                      00458     leave
0066   2???               M     goto isr_exit
0067                  00459 post_last    
0067   0A??           00460     incf task
0068   01??           00461     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0069   1C80           00462     btfss flags, F_EVEN
                      00463     leave
006A   2???               M     goto isr_exit
                      00464     
                      00465 ; task 3, vertical synchronization completed, return to normal line
                      00466 ; rest horizonal line to its normal length.
                      00467 ; set lcount to 9.    
006B                  00468 vsync_end
006B   1100           00469     bcf flags, F_SYNC
006C   003B           00470     banksel PWM3DC
006D   3086           00471     movlw HSYNC
006E   00B3           00472     movwf PWM3DCL
006F   01B4           00473     clrf PWM3DCH
0070   3007           00474     movlw high HPERIOD
0071   00B6           00475     movwf PWM3PRH
0072   301B           00476     movlw low HPERIOD
0073   00B5           00477     movwf PWM3PRL
0074   17BF           00478     bsf PWM3LDCON,7
0075   0A??           00479     incf task
0076   3009           00480     movlw 9
0077   00??           00481     movwf lcount
                      00482     leave
0078   2???               M     goto isr_exit
                      00483 
                      00484 ; task 4,  sound timer
                      00485 ; if sound active process it.    
0079                  00486 sound
0079   0A??           00487     incf task
007A   0A??           00488     incf lcount
007B   1D80           00489     btfss flags, F_SOUND
                      00490     leave
007C   2???               M     goto isr_exit
007D   1A80           00491     btfsc flags, F_PAUSE
007E   2???           00492     call sound_fx1
007F   002?           00493     banksel sound_timer
0080   0B??           00494     decfsz sound_timer
                      00495     leave
0081   2???               M     goto isr_exit
0082   1180           00496     bcf flags, F_SOUND
0083   003B           00497     banksel PWM2CON
0084   132B           00498     bcf PWM2CON,OE
0085   13AB           00499     bcf PWM2CON,EN
                      00500     leave
0086   2???               M     goto isr_exit
                      00501 
                      00502 ; sound effect, low pitch to high-pitch    
0087                  00503 sound_fx1
0087   1D80           00504     btfss flags, F_SOUND
0088   0008           00505     return
0089   1C80           00506     btfss flags, F_EVEN
008A   0008           00507     return
008B   003B           00508     banksel PWM2CON
008C   36A6           00509     lsrf PWM2PRH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008D   0CA5           00510     rrf PWM2PRL
008E   36A4           00511     lsrf PWM2DCH
008F   0CA3           00512     rrf PWM2DCL
0090   17AF           00513     bsf PWM2LDCON,LDA
0091   0008           00514     return
                      00515     
                      00516 ; sound effect, high pitch to low-pitch    
0092                  00517 sound_fx2
0092   1D80           00518     btfss flags, F_SOUND
0093   0008           00519     return
0094   1C80           00520     btfss flags, F_EVEN
0095   0008           00521     return
0096   003B           00522     banksel PWM2CON
0097   35A5           00523     lslf PWM2PRL
0098   0DA6           00524     rlf PWM2PRH
0099   35A3           00525     lslf PWM2DCL
009A   0DA4           00526     rlf PWM2DCH
009B   17AF           00527     bsf PWM2LDCON,LDA
009C   0008           00528     return
                      00529     
                      00530 ; initialize sound generation.
                      00531 ; input:
                      00532 ;   T = duration
                      00533 ;   WREG = index in frequency table    
                      00534 ; outpout:
                      00535 ;   none    
009D                  00536 sound_init
                      00537     pushw  ; ( d i -- )
009D   0019               M     movwi --SP
009E   1580           00538     bsf flags, F_SOUND
009F   003B           00539     banksel PWM2CON
00A0   0800           00540     movfw T
00A1   2???           00541     call frequency
00A2   00A6           00542     movwf PWM2PRH
00A3   0A00           00543     incf T,W
00A4   2???           00544     call frequency
00A5   00A5           00545     movwf PWM2PRL
00A6   3626           00546     lsrf PWM2PRH,W
00A7   00A4           00547     movwf PWM2DCH
00A8   0C25           00548     rrf PWM2PRL,W
00A9   00A3           00549     movwf PWM2DCL
00AA   17AF           00550     bsf PWM2LDCON,LDA
00AB   172B           00551     bsf PWM2CON,OE
00AC   17AB           00552     bsf PWM2CON,EN
00AD   002?           00553     banksel sound_timer
                      00554     pickn 1
00AE   3F01               M     moviw 1[SP]
00AF   00??           00555     movwf sound_timer
                      00556     dropn 2
00B0   3102               M     addfsr T,2
00B1   0008           00557     return
                      00558     
                      00559 ;task 5, read button and paddle position
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B2                  00560 user_input
00B2   0A??           00561     incf task
00B3   0A??           00562     incf lcount
00B4   2???           00563     call read_paddle
00B5   1B00           00564     btfsc flags, F_OVER
00B6   3???           00565     bra game_over
00B7   1A00           00566     btfsc flags,F_START
00B8   3???           00567     bra game_running
                      00568 ; game not running
00B9   2???           00569     call read_button
00BA   1D03           00570     skpz
00BB   3???           00571     bra skip_2_tasks
                      00572 ; start game    
00BC   2???           00573     call game_init
                      00574     leave
00BD   2???               M     goto isr_exit
00BE                  00575 game_running
00BE   1E80           00576     btfss flags, F_PAUSE
                      00577     leave
00BF   2???               M     goto isr_exit
                      00578 ; game on pause    
00C0                  00579 wait_trigger
00C0   2???           00580     call read_button
00C1   1D03           00581     skpz
00C2   3???           00582     bra skip_2_tasks
00C3   1280           00583     bcf flags,F_PAUSE
00C4   2???           00584     call set_ball_dx
                      00585     leave
00C5   2???               M     goto isr_exit
                      00586 ; game over
00C6                  00587 game_over
00C6   2???           00588     call read_button
00C7   1D03           00589     skpz
00C8   3???           00590     bra skip_2_tasks
00C9   1300           00591     bcf flags,F_OVER
00CA   2???           00592     call game_init
00CB   0A??           00593     incf task
00CC   0A??           00594     incf lcount
                      00595     leave
00CD   2???               M     goto isr_exit
                      00596 ; while game not running skip 'move_ball' and 'collision' tasks    
00CE                  00597 skip_2_tasks
00CE   08??           00598     movfw paddle_pos
00CF   3E04           00599     addlw 4
00D0   00??           00600     movwf ball_x
00D1   0A??           00601     incf task
00D2   0A??           00602     incf task
00D3   2???           00603     call lfsr16
                      00604     leave
00D4   2???               M     goto isr_exit
                      00605 
                      00606     
00D5                  00607 read_button
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D5   0020           00608     banksel PORTA
00D6   080C           00609     movfw PORTA
00D7   3908           00610     andlw 1<<START_BTN
00D8   0008           00611     return
                      00612     
00D9                  00613 read_paddle
00D9   003B           00614     banksel PWM2CON
00DA   13AB           00615     bcf PWM2CON,EN
00DB   0021           00616     banksel TRISA
00DC   140C           00617     bsf TRISA, PADDLE
00DD   0021           00618     banksel ADCON0
00DE   3003           00619     movlw 3
00DF   009D           00620     movwf ADCON0
00E0   189D           00621     btfsc ADCON0,NOT_DONE
00E1   2???           00622     goto $-1
00E2   3010           00623     movlw 4<<CHS0
00E3   009D           00624     movwf ADCON0
00E4   081C           00625     movfw ADRESH
00E5   1D80           00626     btfss flags, F_SOUND
00E6   3???           00627     bra $+3
00E7   003B           00628     banksel PWM2CON
00E8   17AB           00629     bsf PWM2CON,EN
00E9   00??           00630     movwf paddle_pos
00EA   304A           00631     movlw PADDLE_LIMIT
00EB   02??           00632     subwf paddle_pos,W
00EC   1C03           00633     skpc
00ED   3???           00634     bra $+3
00EE   304A           00635     movlw PADDLE_LIMIT
00EF   00??           00636     movwf paddle_pos
00F0   0021           00637     banksel TRISA
00F1   100C           00638     bcf TRISA, AUDIO
00F2   0008           00639     return
                      00640     
                      00641    
                      00642 ; task 6, move recking ball.   
00F3                  00643 move_ball
00F3   0B??           00644     decfsz ball_timer
00F4   3???           00645     bra move_ball_exit
00F5   08??           00646     movfw ball_speed
00F6   00??           00647     movwf ball_timer
00F7   08??           00648     movfw ball_dx
00F8   07??           00649     addwf ball_x
00F9   1D03           00650     skpz
00FA   3???           00651     bra right_bound
00FB   0A??           00652     incf ball_x
00FC   09??           00653     comf ball_dx
00FD   0A??           00654     incf ball_dx
00FE   3???           00655     bra move_y
00FF                  00656 right_bound    
00FF   08??           00657     movfw ball_x
0100   3C52           00658     sublw BALL_RIGHT_BOUND
0101   1803           00659     skpnc
0102   3???           00660     bra move_y
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0103   03??           00661     decf ball_x
0104   09??           00662     comf ball_dx
0105   0A??           00663     incf ball_dx
0106                  00664 move_y
0106   08??           00665     movfw ball_dy
0107   07??           00666     addwf ball_y
0108   303A           00667     movlw BALL_TOP_BOUND
0109   02??           00668     subwf ball_y,W
010A   1803           00669     skpnc
010B   3???           00670     bra bottom_bound
010C   09??           00671     comf ball_dy
010D   0A??           00672     incf ball_dy
010E   3???           00673     bra move_ball_exit
010F                  00674 bottom_bound
010F   08??           00675     movfw ball_y
0110   3CFA           00676     sublw BALL_BOTTOM_BOUND
0111   1803           00677     skpnc
0112   3???           00678     bra move_ball_exit
0113   09??           00679     comf ball_dy
0114   0A??           00680     incf ball_dy
0115                  00681 move_ball_exit    
0115   0A??           00682     incf task
0116   0A??           00683     incf lcount
                      00684     leave
0117   2???               M     goto isr_exit
                      00685 
                      00686 ; task 7, collision detection
0118                  00687 collision
0118   30??           00688     movlw high row1
0119   0087           00689     movwf FSR1H
011A   30??           00690     movlw low row1
011B   0086           00691     movwf FSR1L
011C   002?           00692     banksel mask
                      00693 ; pre-compute ball column and compute brick mask
                      00694 ; column = 3*ball_x/16
011D   35??           00695     lslf ball_x,W
011E   07??           00696     addwf ball_x,W
011F   0E89           00697     swapf WREG
0120   390F           00698     andlw 15
0121   00??           00699     movwf temp1
0122   3008           00700     movlw 8
0123   02??           00701     subwf temp1,W
0124   1C03           00702     skpc
0125   3???           00703     bra $+3
0126   00??           00704     movwf temp1
0127   3141           00705     addfsr FSR1,1
                      00706 ; create mask    
0128   3080           00707     movlw 0x80
0129   00??           00708     movwf mask
012A   08??           00709     movfw temp1
012B   1903           00710     skpnz
012C   3???           00711     bra $+4
012D   36??           00712     lsrf mask
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012E   0B??           00713     decfsz temp1
012F   3???           00714     bra $-2
0130   1B80           00715     btfsc ball_dy,7
0131   3???           00716     bra wall_test ; ball going up
0132                  00717 fallout_test
                      00718 ; if ball_y > LAST_VIDEO_LINE-BALL_HEIGTH/2 then ball lost
0132   30F6           00719     movlw LAST_VIDEO_LINE-BALL_HEIGHT/2
0133   02??           00720     subwf ball_y,W
0134   1C03           00721     skpc
0135   3???           00722     bra paddle_test
0136                  00723 ball_lost    
0136   1680           00724     bsf flags, F_PAUSE ; pause game
0137   0B??           00725     decfsz balls
0138   3???           00726     bra $+3
0139   1200           00727     bcf flags, F_START
013A   1700           00728     bsf flags, F_OVER
013B   3004           00729     movlw 4
013C   07??           00730     addwf paddle_pos,W
013D   00??           00731     movwf ball_x
013E   30EB           00732     movlw PADDLE_Y-BRICK_HEIGHT
013F   00??           00733     movwf ball_y
0140   30FC           00734     movlw -4
0141   00??           00735     movwf ball_dy
0142   3008           00736     movlw 8
                      00737     pushw
0143   0019               M     movwi --SP
0144   3002           00738     movlw 2
0145   2???           00739     call sound_init
0146   3???           00740     bra collision_exit
0147                  00741 paddle_test    
                      00742 ; paddle bounce test
0147   30EC           00743     movlw PADDLE_Y-BALL_HEIGHT+1
0148   02??           00744     subwf ball_y,W
0149   1C03           00745     skpc
014A   3???           00746     bra wall_test
                      00747 ; if ball_x over paddle bounce ball
014B                  00748 check_paddle_bounce
014B   3002           00749     movlw BALL_WIDTH/3
014C   02??           00750     subwf paddle_pos,W
                      00751     pushw
014D   0019               M     movwi --SP
014E   300A           00752     movlw (PADDLE_WIDTH-BALL_WIDTH)/3+(BALL_WIDTH/3)
014F   07??           00753     addwf paddle_pos,W
                      00754     pushw
0150   0019               M     movwi --SP
0151   08??           00755     movfw ball_x
0152   2???           00756     call between
0153   1C03           00757     skpc
0154   3???           00758     bra collision_exit
0155                  00759 paddle_bounce 
0155   08??           00760     movfw ball_dx
0156   00??           00761     movwf old_dx
0157   08??           00762     movfw paddle_pos
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0158   02??           00763     subwf ball_x,W
0159   3789           00764     asrf WREG
015A   3789           00765     asrf WREG
015B   3789           00766     asrf WREG
015C   00??           00767     movwf ball_dx
015D   06??           00768     xorwf old_dx,W
015E   1903           00769     skpnz
015F   2???           00770     call set_ball_dx
0160   30FC           00771     movlw -4
0161   00??           00772     movwf ball_dy
0162   3002           00773     movlw 2
                      00774     pushw
0163   0019               M     movwi --SP
0164   2???           00775     call sound_init
0165   3???           00776     bra collision_exit
                      00777 ; brick wall collision test    
0166                  00778 wall_test
0166   304A           00779     movlw ROW1_Y
0167   00??           00780     movwf temp1
0168   3072           00781     movlw ROW5_Y+BRICK_HEIGHT
0169   00??           00782     movwf temp2
016A   3007           00783     movlw BALL_HEIGHT-1
016B   1F80           00784     btfss ball_dy,7
016C   3???           00785     bra going_down
016D   07??           00786     addwf temp1
016E   07??           00787     addwf temp2
016F   3???           00788     bra $+3
0170                  00789 going_down
0170   02??           00790     subwf temp1
0171   02??           00791     subwf temp2
0172   08??           00792     movfw temp1
                      00793     pushw
0173   0019               M     movwi --SP
0174   08??           00794     movfw temp2
                      00795     pushw
0175   0019               M     movwi --SP
0176   08??           00796     movfw ball_y
0177   2???           00797     call between
0178   1C03           00798     skpc
0179   3???           00799     bra collision_exit
017A   08??           00800     movfw temp1
017B   02??           00801     subwf ball_y,W
017C   3689           00802     lsrf WREG
017D   3689           00803     lsrf WREG
017E   3689           00804     lsrf WREG
017F   000B           00805     brw
0180   3???           00806     bra row1_test
0181   3???           00807     bra row2_test
0182   3???           00808     bra row3_test
0183   3???           00809     bra row4_test
0184   3???           00810     bra row5_test
0185   0001           00811     reset
0186                  00812 row1_test
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0186   08??           00813     movfw mask
0187   0501           00814     andwf INDF1,W
0188   1903           00815     skpnz
0189   3???           00816     bra collision_exit
018A   09??           00817     comf mask,W
018B   0581           00818     andwf INDF1
018C   3009           00819     movlw 9
018D   2???           00820     call inc_score
018E   3???           00821     bra brick_bounce
018F                  00822 row2_test
018F   3142           00823     addfsr FSR1,2
0190   08??           00824     movfw mask
0191   0501           00825     andwf INDF1, W
0192   1903           00826     skpnz
0193   3???           00827     bra collision_exit
0194   09??           00828     comf mask,W
0195   0581           00829     andwf INDF1
0196   3006           00830     movlw 6
0197   2???           00831     call inc_score
0198   3???           00832     bra brick_bounce
0199                  00833 row3_test
0199   3144           00834     addfsr FSR1,4
019A   08??           00835     movfw mask
019B   0501           00836     andwf INDF1,W
019C   1903           00837     skpnz
019D   3???           00838     bra collision_exit
019E   09??           00839     comf mask,W
019F   0581           00840     andwf INDF1
01A0   3003           00841     movlw 3
01A1   2???           00842     call inc_score
01A2   3???           00843     bra brick_bounce
01A3                  00844 row4_test
01A3   3146           00845     addfsr FSR1,6
01A4   08??           00846     movfw mask
01A5   0501           00847     andwf INDF1,W
01A6   1903           00848     skpnz
01A7   3???           00849     bra collision_exit
01A8   09??           00850     comf mask,W
01A9   0581           00851     andwf INDF1
01AA   3002           00852     movlw 2
01AB   2???           00853     call inc_score
01AC   3???           00854     bra brick_bounce
01AD                  00855 row5_test    
01AD   3148           00856     addfsr FSR1,8
01AE   08??           00857     movfw mask
01AF   0501           00858     andwf INDF1,W
01B0   1903           00859     skpnz
01B1   3???           00860     bra collision_exit
01B2   09??           00861     comf mask,W
01B3   0581           00862     andwf INDF1
01B4   3001           00863     movlw 1
01B5   2???           00864     call inc_score
01B6                  00865 brick_bounce
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B6   09??           00866     comf ball_dy
01B7   0A??           00867     incf ball_dy
                      00868     ;call set_ball_dx
01B8   3001           00869     movlw 1
                      00870     pushw
01B9   0019               M     movwi --SP
01BA   3000           00871     movlw 0
01BB   2???           00872     call sound_init
01BC                  00873 collision_exit
01BC   0A??           00874     incf task
01BD   0A??           00875     incf lcount
                      00876     leave
01BE   2???               M     goto isr_exit
                      00877 
                      00878 ; check if  lb <= x < hb
                      00879 ; input:
                      00880 ;    WREG  x
                      00881 ;    stack ( lb hb -- )     
                      00882 ; output:
                      00883 ;   Carry bit set if true    
01BF                  00884 between
01BF   00??           00885     movwf temp2
                      00886     pickn 1
01C0   3F01               M     moviw 1[SP]
01C1   02??           00887     subwf temp2,W
01C2   1C03           00888     skpc
01C3   3???           00889     bra between_exit
01C4   0800           00890     movfw T
01C5   02??           00891     subwf temp2
01C6   0803           00892     movfw STATUS
01C7   3A01           00893     xorlw 1
01C8   0083           00894     movwf STATUS
01C9                  00895 between_exit    
                      00896     dropn 2
01C9   3102               M     addfsr T,2
01CA   0008           00897     return
                      00898     
                      00899 ; task 8, wait for first video line
01CB                  00900 video_first
01CB   0A??           00901     incf lcount
01CC   301E           00902     movlw FIRST_VIDEO_LINE
01CD   02??           00903     subwf lcount,W
01CE   1D03           00904     skpz
                      00905     leave
01CF   2???               M     goto isr_exit
01D0   01??           00906     clrf slice
01D1   0A??           00907     incf task
                      00908     leave
01D2   2???               M     goto isr_exit
                      00909    
                      00910 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00911 ; The following tasks are responsible to render video display.
                      00912 ; Each video line must be completed by setting color to black.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00913 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00914     
                      00915  
                      00916 ; task 9, draw score en ball count
01D3                  00917 draw_score ; lcount enter at 30 leave at 50
01D3   0021           00918     banksel TRISA
01D4   08??           00919     movfw slice
01D5   3689           00920     lsrf WREG
01D6   3689           00921     lsrf WREG
                      00922     pushw
01D7   0019               M     movwi --SP
01D8   300F           00923     movlw 0xf
01D9   05??           00924     andwf score+1,W
01DA   2???           00925     call digit_offset
01DB   0700           00926     addwf T,W
01DC   2???           00927     call digits
01DD   00??           00928     movwf d3
01DE   0E??           00929     swapf score+1,W
01DF   390F           00930     andlw 0xf
01E0   2???           00931     call digit_offset
01E1   0700           00932     addwf T,W
01E2   2???           00933     call digits
01E3   00??           00934     movwf d2
01E4   300F           00935     movlw 0xf
01E5   05??           00936     andwf score,W
01E6   2???           00937     call digit_offset
01E7   0700           00938     addwf T,W
01E8   2???           00939     call digits
01E9   2???           00940     call digit_row
01EA   08??           00941     movfw d2
01EB   2???           00942     call digit_row
01EC   08??           00943     movfw d3
01ED   2???           00944     call digit_row
                      00945     tdelay 60
  0014                    M     variable q=(60)/3
  0000                    M     variable r=(60)%3
                          M     if (q)
01EE   3014               M     movlw q
01EF   0B89               M     decfsz WREG
01F0   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F1   120C           00946     bcf TRISA,VIDEO_OUT
                      00947     tdelay 5
  0001                    M     variable q=(5)/3
  0002                    M     variable r=(5)%3
                          M     if (q)
01F2   3001               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F3   0B89               M     decfsz WREG
01F4   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
01F5   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01F6   160C           00948     bsf TRISA,VIDEO_OUT
                      00949     tdelay 30
  000A                    M     variable q=(30)/3
  0000                    M     variable r=(30)%3
                          M     if (q)
01F7   300A               M     movlw q
01F8   0B89               M     decfsz WREG
01F9   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
01FA   08??           00950     movfw balls
01FB   2???           00951     call digit_offset
01FC   0700           00952     addwf T,W
01FD   2???           00953     call digits
01FE   2???           00954     call digit_row
01FF                  00955 score_exit
                      00956     next_task 5*4
01FF   0A??               M     incf slice
0200   3014               M     movlw 5*4
0201   02??               M     subwf slice,W
0202   1D03               M     skpz
                          M     leave
0203   2???               M     goto isr_exit
0204   01??               M     clrf slice
0205   0A??               M     incf task
0206   3014               M     movlw 5*4
0207   07??               M     addwf lcount
                          M     leave
0208   2???               M     goto isr_exit
                      00957 
                      00958 ; display digit row pixels   
0209                  00959 digit_row
                      00960     pushw
0209   0019               M     movwi --SP
020A   0D80           00961     rlf T
020B   301A           00962     movlw BLACK
020C   1803           00963     skpnc
020D   300A           00964     movlw WHITE
020E   008C           00965     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020F   0D80           00966     rlf T
0210   301A           00967     movlw BLACK
0211   1803           00968     skpnc
0212   300A           00969     movlw WHITE
0213   008C           00970     movwf TRISA
0214   0D80           00971     rlf T
0215   301A           00972     movlw BLACK
0216   1803           00973     skpnc
0217   300A           00974     movlw WHITE
0218   008C           00975     movwf TRISA
                      00976     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0219   3001               M     movlw q
021A   0B89               M     decfsz WREG
021B   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00977     dropn 1
021C   3101               M     addfsr T,1
021D   160C           00978     bsf TRISA,VIDEO_OUT
021E   0008           00979     return
                      00980     
                      00981 ; task 10,  draw top wall, 8 screen lines    
021F                  00982 draw_top_wall ;lcount enter at 50 leave at 58
021F   1C80           00983     btfss flags, F_EVEN
0220   3???           00984     bra top_wall_exit
0221   0021           00985     banksel TRISA
                      00986     tdelay LEFT_MARGIN -2
  0010                    M     variable q=(LEFT_MARGIN -2)/3
  0002                    M     variable r=(LEFT_MARGIN -2)%3
                          M     if (q)
0222   3010               M     movlw q
0223   0B89               M     decfsz WREG
0224   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0225   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00987     white
0226   300A               M     movlw WHITE
0227   008C               M     movwf TRISA
                      00988     tdelay COURT_WIDTH+3*BORDER_WIDTH+1
  0057                    M     variable q=(COURT_WIDTH+3*BORDER_WIDTH+1)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M     variable r=(COURT_WIDTH+3*BORDER_WIDTH+1)%3
                          M     if (q)
0228   3057               M     movlw q
0229   0B89               M     decfsz WREG
022A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      00989     black
022B   301A               M     movlw BLACK
022C   008C               M     movwf TRISA
022D                  00990 top_wall_exit
                      00991     next_task BRICK_HEIGHT
022D   0A??               M     incf slice
022E   3008               M     movlw BRICK_HEIGHT
022F   02??               M     subwf slice,W
0230   1D03               M     skpz
                          M     leave
0231   2???               M     goto isr_exit
0232   01??               M     clrf slice
0233   0A??               M     incf task
0234   3008               M     movlw BRICK_HEIGHT
0235   07??               M     addwf lcount
                          M     leave
0236   2???               M     goto isr_exit
                      00992 
                      00993 ; task 11,  only on even field draw vertical side bands.    
0237                  00994 draw_void ;enter at 58 leave at 74| 250-58
0237   1C80           00995     btfss flags, F_EVEN
0238   3???           00996     bra no_wall_draw
0239   08??           00997     movfw ball_y
023A   02??           00998     subwf lcount,W
023B   1C03           00999     skpc
023C   3???           01000     bra no_ball_dly
023D   3008           01001     movlw BALL_HEIGHT
023E   07??           01002     addwf ball_y,W
023F   02??           01003     subwf lcount,W
0240   1C03           01004     skpc
0241   3???           01005     bra yes_ball
0242   3???           01006     bra no_ball
0243                  01007 no_ball_dly
                      01008     tdelay 6
  0002                    M     variable q=(6)/3
  0000                    M     variable r=(6)%3
                          M     if (q)
0243   3002               M     movlw q
0244   0B89               M     decfsz WREG
0245   3???               M     bra $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0246                  01009 no_ball    
                      01010     tdelay LEFT_MARGIN-13
  000D                    M     variable q=(LEFT_MARGIN-13)/3
  0000                    M     variable r=(LEFT_MARGIN-13)%3
                          M     if (q)
0246   300D               M     movlw q
0247   0B89               M     decfsz WREG
0248   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01011     draw_border BORDER_WIDTH
0249   0021               M     banksel TRISA
024A   148C               M     bsf TRISA,CHROMA
024B   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
024C   3001               M     movlw q
024D   0B89               M     decfsz WREG
024E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
024F   0000               M     nop
                          M     endif
0250   160C               M     bsf TRISA,VIDEO_OUT
                      01012     black
0251   301A               M     movlw BLACK
0252   008C               M     movwf TRISA
                      01013     tdelay COURT_WIDTH
  0052                    M     variable q=(COURT_WIDTH)/3
  0002                    M     variable r=(COURT_WIDTH)%3
                          M     if (q)
0253   3052               M     movlw q
0254   0B89               M     decfsz WREG
0255   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0256   3???               M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01014     draw_border BORDER_WIDTH
0257   0021               M     banksel TRISA
0258   148C               M     bsf TRISA,CHROMA
0259   120C               M     bcf TRISA,VIDEO_OUT
                          M     tdelay BORDER_WIDTH
  0001                    M     variable q=(BORDER_WIDTH)/3
  0001                    M     variable r=(BORDER_WIDTH)%3
                          M     if (q)
025A   3001               M     movlw q
025B   0B89               M     decfsz WREG
025C   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
025D   0000               M     nop
                          M     endif
025E   160C               M     bsf TRISA,VIDEO_OUT
025F   3???           01015     bra draw_void_exit
0260                  01016 yes_ball
0260   0021           01017     banksel TRISA
0261   08??           01018     movfw ball_x
0262   1903           01019     skpnz
0263   3???           01020     bra ball_at_left
0264   3C52           01021     sublw BALL_RIGHT_BOUND
0265   1903           01022     skpnz
0266   3???           01023     bra ball_at_right
0267                  01024 ball_in_middle    
0267   3001           01025     movlw 1
0268   02??           01026     subwf ball_x,W
0269   1903           01027     skpnz
026A   3E01           01028     addlw 1
026B   00??           01029     movwf temp1
                      01030     tdelay LEFT_MARGIN-22
  000A                    M     variable q=(LEFT_MARGIN-22)/3
  0000                    M     variable r=(LEFT_MARGIN-22)%3
                          M     if (q)
026C   300A               M     movlw q
026D   0B89               M     decfsz WREG
026E   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
026F   120C           01031     bcf TRISA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01032     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0270   3001               M     movlw q
0271   0B89               M     decfsz WREG
0272   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0273   08??           01033     movfw temp1
0274   160C           01034     bsf TRISA,VIDEO_OUT
0275   0B89           01035     decfsz WREG
0276   3???           01036     bra $-1
0277   120C           01037     bcf TRISA, VIDEO_OUT
                      01038     tdelay BALL_WIDTH-1
  0002                    M     variable q=(BALL_WIDTH-1)/3
  0001                    M     variable r=(BALL_WIDTH-1)%3
                          M     if (q)
0278   3002               M     movlw q
0279   0B89               M     decfsz WREG
027A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
027B   0000               M     nop
                          M     endif
027C   08??           01039     movfw ball_x
027D   160C           01040     bsf TRISA,VIDEO_OUT
027E   3C52           01041     sublw BALL_RIGHT_BOUND
027F   0B89           01042     decfsz WREG
0280   3???           01043     bra $-1
0281   120C           01044     bcf TRISA,VIDEO_OUT
                      01045     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
0282   3001               M     movlw q
0283   0B89               M     decfsz WREG
0284   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
0285   0000               M     nop
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0286   160C           01046     bsf TRISA,VIDEO_OUT
0287   3???           01047     bra draw_void_exit
0288                  01048 ball_at_left
                      01049     tdelay LEFT_MARGIN-15
  000C                    M     variable q=(LEFT_MARGIN-15)/3
  0001                    M     variable r=(LEFT_MARGIN-15)%3
                          M     if (q)
0288   300C               M     movlw q
0289   0B89               M     decfsz WREG
028A   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
028B   0000               M     nop
                          M     endif
028C   120C           01050     bcf TRISA,VIDEO_OUT
                      01051     tdelay 12
  0004                    M     variable q=(12)/3
  0000                    M     variable r=(12)%3
                          M     if (q)
028D   3004               M     movlw q
028E   0B89               M     decfsz WREG
028F   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0290   160C           01052     bsf TRISA,VIDEO_OUT
                      01053     tdelay COURT_WIDTH-6
  0050                    M     variable q=(COURT_WIDTH-6)/3
  0002                    M     variable r=(COURT_WIDTH-6)%3
                          M     if (q)
0291   3050               M     movlw q
0292   0B89               M     decfsz WREG
0293   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0294   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0295   0000           01054     nop
0296   120C           01055     bcf TRISA,VIDEO_OUT
                      01056     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0297   3001               M     movlw q
0298   0B89               M     decfsz WREG
0299   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
029A   0000               M     nop
                          M     endif
029B   160C           01057     bsf TRISA,VIDEO_OUT
029C   3???           01058     bra draw_void_exit
029D                  01059 ball_at_right
                      01060     tdelay LEFT_MARGIN-18
  000B                    M     variable q=(LEFT_MARGIN-18)/3
  0001                    M     variable r=(LEFT_MARGIN-18)%3
                          M     if (q)
029D   300B               M     movlw q
029E   0B89               M     decfsz WREG
029F   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02A0   0000               M     nop
                          M     endif
02A1   120C           01061     bcf TRISA,VIDEO_OUT
                      01062     tdelay 4
  0001                    M     variable q=(4)/3
  0001                    M     variable r=(4)%3
                          M     if (q)
02A2   3001               M     movlw q
02A3   0B89               M     decfsz WREG
02A4   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02A5   0000               M     nop
                          M     endif
02A6   160C           01063     bsf TRISA,VIDEO_OUT
                      01064     tdelay COURT_WIDTH-2
  0052                    M     variable q=(COURT_WIDTH-2)/3
  0000                    M     variable r=(COURT_WIDTH-2)%3
                          M     if (q)
02A7   3052               M     movlw q
02A8   0B89               M     decfsz WREG
02A9   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02AA   120C           01065     bcf TRISA,VIDEO_OUT
                      01066     tdelay 10
  0003                    M     variable q=(10)/3
  0001                    M     variable r=(10)%3
                          M     if (q)
02AB   3003               M     movlw q
02AC   0B89               M     decfsz WREG
02AD   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02AE   0000               M     nop
                          M     endif
02AF   160C           01067     bsf TRISA,VIDEO_OUT
02B0                  01068 draw_void_exit    
02B0   0A??           01069     incf slice
02B1   0A??           01070     incf lcount
02B2   30FB           01071     movlw LAST_VIDEO_LINE+1
02B3   02??           01072     subwf lcount,W
02B4   1D03           01073     skpz
                      01074     leave
02B5   2???               M     goto isr_exit
02B6   01??           01075     clrf slice
02B7   3013           01076     movlw 19
02B8   00??           01077     movwf task
                      01078     leave
02B9   2???               M     goto isr_exit
02BA                  01079 no_wall_draw
                      01080     next_task 2*BRICK_HEIGHT
02BA   0A??               M     incf slice
02BB   3010               M     movlw 2*BRICK_HEIGHT
02BC   02??               M     subwf slice,W
02BD   1D03               M     skpz
                          M     leave
02BE   2???               M     goto isr_exit
02BF   01??               M     clrf slice
02C0   0A??               M     incf task
02C1   3010               M     movlw 2*BRICK_HEIGHT
02C2   07??               M     addwf lcount
                          M     leave
02C3   2???               M     goto isr_exit
                      01081 
                      01082 ; display end message
02C4                  01083 display_end_msg
02C4   3028           01084     movlw 40
                      01085     pushw
02C5   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C6   3050           01086     movlw 80
                      01087     pushw
02C7   0019               M     movwi --SP
02C8   08??           01088     movfw slice
02C9   2???           01089     call between
02CA   1C03           01090     skpc
02CB   0008           01091     return
                      01092     tdelay 16
  0005                    M     variable q=(16)/3
  0001                    M     variable r=(16)%3
                          M     if (q)
02CC   3005               M     movlw q
02CD   0B89               M     decfsz WREG
02CE   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02CF   0000               M     nop
                          M     endif
02D0   0021           01093     banksel TRISA
02D1   3028           01094     movlw 40
02D2   02??           01095     subwf slice,W
02D3   3689           01096     lsrf WREG
02D4   3689           01097     lsrf WREG
02D5   3689           01098     lsrf WREG
02D6   3589           01099     lslf WREG
                      01100     pushw
02D7   0019               M     movwi --SP
02D8   2???           01101     call end_msg
02D9   00??           01102     movwf temp1
                      01103     popw
02DA   0012               M     moviw SP++
02DB   0A89           01104     incf WREG
02DC   2???           01105     call end_msg
02DD   00??           01106     movwf temp2
02DE   3008           01107     movlw YELLOW
02DF   2???           01108     call draw_wall
                      01109     black
02E0   301A               M     movlw BLACK
02E1   008C               M     movwf TRISA
02E2   0008           01110     return
                      01111     
                      01112 ; draw 16 bricks wall
                      01113 ; input:
                      01114 ;   row in temp1,temp2
                      01115 ;   color in WREG
                      01116 ; output:
                      01117 ;   none    
02E3                  01118 draw_wall; macro color
                      01119 ;    local next_brick
                      01120     pushw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E3   0019               M     movwi --SP
02E4   3010           01121     movlw 16
                      01122     pushw
02E5   0019               M     movwi --SP
02E6                  01123 next_brick
02E6   35??           01124     lslf temp2
02E7   0D??           01125     rlf temp1
02E8   301A           01126     movlw BLACK
02E9   1803           01127     skpnc
                      01128     pickn 1 ;movlw color
02EA   3F01               M     moviw 1[SP]
02EB   008C           01129     movwf TRISA
                      01130     tdelay BRICK_WIDTH-9
  0002                    M     variable q=(BRICK_WIDTH-9)/3
  0001                    M     variable r=(BRICK_WIDTH-9)%3
                          M     if (q)
02EC   3002               M     movlw q
02ED   0B89               M     decfsz WREG
02EE   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
02EF   0000               M     nop
                          M     endif
02F0   0B80           01131     decfsz T
02F1   3???           01132     bra next_brick
                      01133     dropn 2
02F2   3102               M     addfsr T,2
                      01134     ;endm
02F3   0008           01135     return
                      01136     
                      01137 ; task 12, draw top brick row
02F4                  01138 draw_row1 ; lcount enter at 74 leave at 82
                      01139     chroma_ref
02F4   003B               M     banksel PWM1CON
02F5   121B               M     bcf PWM1CON,POL
02F6   0021           01140     banksel TRISA
02F7   08??           01141     movfw row1
02F8   00??           01142     movwf temp1
02F9   08??           01143     movfw row1+1
02FA   00??           01144     movwf temp2
                      01145     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
02FB   300D               M     movlw q
02FC   0B89               M     decfsz WREG
02FD   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
02FE   3???               M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
02FF   3008           01146     movlw YELLOW
0300   2???           01147     call draw_wall
                      01148     black
0301   301A               M     movlw BLACK
0302   008C               M     movwf TRISA
                      01149     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0303   3001               M     movlw q
0304   0B89               M     decfsz WREG
0305   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01150     next_task BRICK_HEIGHT
0306   0A??               M     incf slice
0307   3008               M     movlw BRICK_HEIGHT
0308   02??               M     subwf slice,W
0309   1D03               M     skpz
                          M     leave
030A   2???               M     goto isr_exit
030B   01??               M     clrf slice
030C   0A??               M     incf task
030D   3008               M     movlw BRICK_HEIGHT
030E   07??               M     addwf lcount
                          M     leave
030F   2???               M     goto isr_exit
                      01151     
                      01152 ; task 13, draw 2nd brick row    
0310                  01153 draw_row2 ;lcount enter at 82 leave at 90
                      01154     chroma_invert
0310   003B               M     banksel PWM1CON
0311   161B               M     bsf PWM1CON,POL
0312   0021           01155     banksel TRISA
0313   08??           01156     movfw row2
0314   00??           01157     movwf temp1
0315   08??           01158     movfw row2+1
0316   00??           01159     movwf temp2
                      01160     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
0317   300D               M     movlw q
0318   0B89               M     decfsz WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0319   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
031A   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
031B   3008           01161     movlw MAUVE
031C   2???           01162     call draw_wall
                      01163     black
031D   301A               M     movlw BLACK
031E   008C               M     movwf TRISA
                      01164     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
031F   3001               M     movlw q
0320   0B89               M     decfsz WREG
0321   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01165     next_task BRICK_HEIGHT
0322   0A??               M     incf slice
0323   3008               M     movlw BRICK_HEIGHT
0324   02??               M     subwf slice,W
0325   1D03               M     skpz
                          M     leave
0326   2???               M     goto isr_exit
0327   01??               M     clrf slice
0328   0A??               M     incf task
0329   3008               M     movlw BRICK_HEIGHT
032A   07??               M     addwf lcount
                          M     leave
032B   2???               M     goto isr_exit
                      01166 
                      01167 ; task 14, draw 3rd brick row    
032C                  01168 draw_row3 ; lcount enter at 90 leave at 98
                      01169     chroma_invert
032C   003B               M     banksel PWM1CON
032D   161B               M     bsf PWM1CON,POL
032E   0021           01170     banksel TRISA
032F   08??           01171     movfw row3
0330   00??           01172     movwf temp1
0331   08??           01173     movfw row3+1
0332   00??           01174     movwf temp2
                      01175     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
0333   300D               M     movlw q
0334   0B89               M     decfsz WREG
0335   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0336   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0337   3018           01176     movlw BLUE
0338   2???           01177     call draw_wall
                      01178     black
0339   301A               M     movlw BLACK
033A   008C               M     movwf TRISA
                      01179     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
033B   3001               M     movlw q
033C   0B89               M     decfsz WREG
033D   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
033E                  01180 row3_exit    
                      01181     next_task BRICK_HEIGHT
033E   0A??               M     incf slice
033F   3008               M     movlw BRICK_HEIGHT
0340   02??               M     subwf slice,W
0341   1D03               M     skpz
                          M     leave
0342   2???               M     goto isr_exit
0343   01??               M     clrf slice
0344   0A??               M     incf task
0345   3008               M     movlw BRICK_HEIGHT
0346   07??               M     addwf lcount
                          M     leave
0347   2???               M     goto isr_exit
                      01182     
                      01183 ; task 15, draw 4th brick row    
0348                  01184 draw_row4 ; lcount enter at 98 leave at 106
                      01185     chroma_ref
0348   003B               M     banksel PWM1CON
0349   121B               M     bcf PWM1CON,POL
034A   0021           01186     banksel TRISA
034B   08??           01187     movfw row4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

034C   00??           01188     movwf temp1
034D   08??           01189     movfw row4+1
034E   00??           01190     movwf temp2
                      01191     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
034F   300D               M     movlw q
0350   0B89               M     decfsz WREG
0351   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
0352   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0353   3008           01192     movlw YELLOW
0354   2???           01193     call draw_wall
                      01194     black
0355   301A               M     movlw BLACK
0356   008C               M     movwf TRISA
                      01195     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0357   3001               M     movlw q
0358   0B89               M     decfsz WREG
0359   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01196     next_task BRICK_HEIGHT
035A   0A??               M     incf slice
035B   3008               M     movlw BRICK_HEIGHT
035C   02??               M     subwf slice,W
035D   1D03               M     skpz
                          M     leave
035E   2???               M     goto isr_exit
035F   01??               M     clrf slice
0360   0A??               M     incf task
0361   3008               M     movlw BRICK_HEIGHT
0362   07??               M     addwf lcount
                          M     leave
0363   2???               M     goto isr_exit
                      01197 
                      01198 ; task 16, draw 5th brick row    
0364                  01199 draw_row5 ; lcount enter at 106 leave at 114
                      01200     chroma_invert
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0364   003B               M     banksel PWM1CON
0365   161B               M     bsf PWM1CON,POL
0366   0021           01201     banksel TRISA
0367   08??           01202     movfw row5
0368   00??           01203     movwf temp1
0369   08??           01204     movfw row5+1
036A   00??           01205     movwf temp2
                      01206     tdelay LEFT_MARGIN-11
  000D                    M     variable q=(LEFT_MARGIN-11)/3
  0002                    M     variable r=(LEFT_MARGIN-11)%3
                          M     if (q)
036B   300D               M     movlw q
036C   0B89               M     decfsz WREG
036D   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
036E   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
036F   3008           01207     movlw MAUVE
0370   2???           01208     call draw_wall
                      01209     black
0371   301A               M     movlw BLACK
0372   008C               M     movwf TRISA
                      01210     tdelay 3
  0001                    M     variable q=(3)/3
  0000                    M     variable r=(3)%3
                          M     if (q)
0373   3001               M     movlw q
0374   0B89               M     decfsz WREG
0375   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
                      01211     black
0376   301A               M     movlw BLACK
0377   008C               M     movwf TRISA
                      01212     next_task BRICK_HEIGHT
0378   0A??               M     incf slice
0379   3008               M     movlw BRICK_HEIGHT
037A   02??               M     subwf slice,W
037B   1D03               M     skpz
                          M     leave
037C   2???               M     goto isr_exit
037D   01??               M     clrf slice
037E   0A??               M     incf task
037F   3008               M     movlw BRICK_HEIGHT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0380   07??               M     addwf lcount
                          M     leave
0381   2???               M     goto isr_exit
                      01213 
                      01214 ; task 17
                      01215 ; draw all rows between paddle and lower brick row    
0382                  01216 draw_empty ; lcount enter at 114 leave at LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0382   1B00           01217     btfsc flags, F_OVER
0383   2???           01218     call display_end_msg
0384   0A??           01219     incf slice
0385   0A??           01220     incf lcount
0386   30F3           01221     movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
0387   02??           01222     subwf lcount,W
0388   1D03           01223     skpz
                      01224     leave
0389   2???               M     goto isr_exit
038A   01??           01225     clrf slice
038B   0A??           01226     incf task
                      01227     leave
038C   2???               M     goto isr_exit
                      01228 
                      01229     
                      01230 ; task 18, draw paddle at bottom screen    
038D                  01231 draw_paddle
                      01232     tdelay LEFT_MARGIN+2
  0012                    M     variable q=(LEFT_MARGIN+2)/3
  0000                    M     variable r=(LEFT_MARGIN+2)%3
                          M     if (q)
038D   3012               M     movlw q
038E   0B89               M     decfsz WREG
038F   3???               M     bra $-1
                          M     endif
                          M     if (r==2)
                          M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
0390   08??           01233     movfw paddle_pos
0391   1903           01234     skpnz
0392   3???           01235     bra $+3
0393   0B89           01236     decfsz WREG
0394   3???           01237     bra $-1
0395   0021           01238     banksel TRISA
0396   120C           01239     bcf TRISA,VIDEO_OUT
                      01240     tdelay PADDLE_WIDTH
  000A                    M     variable q=(PADDLE_WIDTH)/3
  0002                    M     variable r=(PADDLE_WIDTH)%3
                          M     if (q)
0397   300A               M     movlw q
0398   0B89               M     decfsz WREG
0399   3???               M     bra $-1
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (r==2)
039A   3???               M     bra $+1
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     endif
039B   160C           01241     bsf TRISA,VIDEO_OUT
                      01242     next_task PADDLE_THICKNESS
039C   0A??               M     incf slice
039D   3008               M     movlw PADDLE_THICKNESS
039E   02??               M     subwf slice,W
039F   1D03               M     skpz
                          M     leave
03A0   2???               M     goto isr_exit
03A1   01??               M     clrf slice
03A2   0A??               M     incf task
03A3   3008               M     movlw PADDLE_THICKNESS
03A4   07??               M     addwf lcount
                          M     leave
03A5   2???               M     goto isr_exit
                      01243 
                      01244 ; task 19,  wait end of this field, reset task to zero    
03A6                  01245 wait_field_end
03A6   0A??           01246     incf lcount
03A7   1903           01247     skpnz
03A8   1400           01248     bsf flags, F_HI_LINE
03A9   1800           01249     btfsc flags, F_HI_LINE
03AA   2???           01250     goto hi_line
                      01251     leave
03AB   2???               M     goto isr_exit
03AC                  01252 hi_line
03AC   1880           01253     btfsc flags,F_EVEN
03AD   2???           01254     goto even_field
03AE   3005           01255     movlw 5
03AF   02??           01256     subwf lcount,W
03B0   1D03           01257     skpz
                      01258     leave
03B1   2???               M     goto isr_exit
03B2   2???           01259     goto field_end
03B3                  01260 even_field
03B3   3006           01261     movlw 6
03B4   02??           01262     subwf lcount,W
03B5   1D03           01263     skpz
                      01264     leave
03B6   2???               M     goto isr_exit
                      01265 ; even field last line is half_line    
                      01266 ; set PWM3 for line 263 half-line
03B7   003B           01267     banksel PWM3DC
03B8   3003           01268     movlw high HALF_LINE
03B9   00B6           01269     movwf PWM3PRH
03BA   308D           01270     movlw low HALF_LINE
03BB   00B5           01271     movwf PWM3PRL
03BC   17BF           01272     bsf PWM3LDCON,7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BD                  01273 field_end
03BD   01??           01274     clrf task
03BE   01??           01275     clrf slice
03BF   01??           01276     clrf lcount
03C0   1000           01277     bcf flags, F_HI_LINE
03C1   1500           01278     bsf flags, F_SYNC
                      01279 ; toggle odd/even field flag    
03C2   3002           01280     movlw 1<<F_EVEN
03C3   06??           01281     xorwf flags
                      01282     leave
03C4   2???               M     goto isr_exit
                      01283 
                      01284 ; helper functions
                      01285 
                      01286     
                      01287 ; increment user score
                      01288 ; This is a BCD addition where a single digit is added to score.   
                      01289 ; score is stored as big indian
                      01290 ; argument: 
                      01291 ;   WREG ->  bdc digit to add to score variable
03C5                  01292 inc_score
03C5   07??           01293     addwf score+1
03C6   1883           01294     btfsc STATUS,DC
03C7   3???           01295     bra $+6
03C8   300F           01296     movlw 15
03C9   05??           01297     andwf score+1,W
03CA   3C09           01298     sublw 9
03CB   1803           01299     skpnc
03CC   3???           01300     bra $+3
03CD   3006           01301     movlw 6
03CE   07??           01302     addwf score+1
03CF   0E??           01303     swapf score+1,W
03D0   390F           01304     andlw 15
03D1   3C09           01305     sublw 9
03D2   1803           01306     skpnc
03D3   3???           01307     bra game_over_test
03D4   3060           01308     movlw 0x60
03D5   07??           01309     addwf score+1
03D6   0A??           01310     incf score
03D7   3001           01311     movlw 1
03D8   00??           01312     movwf ball_speed
03D9                  01313 game_over_test ; all bricks destroyed?
03D9   3003           01314     movlw 3
03DA   02??           01315     subwf score,W
03DB   1D03           01316     skpz
03DC   0008           01317     return
03DD   3036           01318     movlw 0x36
03DE   02??           01319     subwf score+1,W
03DF   1903           01320     skpnz
03E0   1700           01321     bsf flags,F_OVER
03E1   0008           01322     return
                      01323     
                      01324 ;***********************************
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01325 ; digit_offset, compute digit position in 'digits' table
                      01326 ;   position = digit * 5
                      01327 ; 
                      01328 ; input: WREG -> digit value {0..9}
                      01329 ;         
                      01330 ; output: WREG -> displacement in table
                      01331 ;***********************************
03E2                  01332 digit_offset    
                      01333     pushw 
03E2   0019               M     movwi --SP
03E3   3589           01334     lslf WREG
03E4   3589           01335     lslf WREG
03E5   0780           01336     addwf T
                      01337     popw
03E6   0012               M     moviw SP++
03E7   0008           01338     return
                      01339     
03E8                  01340 brick_wall_init
03E8   30??           01341     movlw high row1
03E9   0087           01342     movwf FSR1H
03EA   30??           01343     movlw low row1
03EB   0086           01344     movwf FSR1L
03EC   300C           01345     movlw 12
03ED   00??           01346     movwf temp1
03EE   30FF           01347     movlw 0xff
03EF                  01348 bw_init
03EF   001E           01349     movwi FSR1++
03F0   0B??           01350     decfsz temp1
03F1   3???           01351     bra bw_init
03F2   0008           01352     return
                      01353 
                      01354 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
03F3                  01355 lfsr16
03F3   002?           01356     banksel seed
03F4   08??           01357     movfw seed+1
03F5   00??           01358     movwf temp1
03F6   3589           01359     lslf WREG
03F7   3589           01360     lslf WREG
03F8   00??           01361     movwf temp2
03F9   06??           01362     xorwf temp1
03FA   35??           01363     lslf temp2
03FB   08??           01364     movfw temp2
03FC   06??           01365     xorwf temp1
03FD   35??           01366     lslf temp2
03FE   35??           01367     lslf temp2,W
03FF   06??           01368     xorwf temp1
0400   35??           01369     lslf temp1
0401   0D??           01370     rlf seed
0402   0D??           01371     rlf seed+1
0403   08??           01372     movfw seed
0404   0008           01373     return
                      01374     
                      01375 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0405                  01376 set_ball_dx
0405   2???           01377     call lfsr16 ;random
0406   3007           01378     movlw 7
0407   05??           01379     andwf seed,W
0408   3589           01380     lslf WREG
0409   000B           01381     brw
040A   3000           01382     movlw 0
040B   3???           01383     bra set_ball_dx_exit
040C   3001           01384     movlw 1
040D   3???           01385     bra set_ball_dx_exit
040E   30FF           01386     movlw -1
040F   3???           01387     bra set_ball_dx_exit
0410   3000           01388     movlw 0
0411   3???           01389     bra set_ball_dx_exit
0412   3001           01390     movlw 1
0413   3???           01391     bra set_ball_dx_exit
0414   30FF           01392     movlw -1
0415   3???           01393     bra set_ball_dx_exit
0416   30FF           01394     movlw -1
0417   3???           01395     bra set_ball_dx_exit
0418   3001           01396     movlw 1
0419                  01397 set_ball_dx_exit
0419   00??           01398     movwf ball_dx
041A   0008           01399     return
                      01400     
041B                  01401 game_init
041B   01??           01402     clrf score
041C   01??           01403     clrf score+1
041D   2???           01404     call brick_wall_init
041E   002?           01405     banksel balls
041F   3003           01406     movlw 3
0420   00??           01407     movwf balls
0421   01??           01408     clrf ball_timer
0422   0A??           01409     incf ball_timer
0423   30EB           01410     movlw PADDLE_Y-BRICK_HEIGHT
0424   00??           01411     movwf ball_y
0425   2???           01412     call set_ball_dx
0426   30FC           01413     movlw -4
0427   00??           01414     movwf ball_dy
0428   3002           01415     movlw 2
0429   00??           01416     movwf ball_speed
042A   1600           01417     bsf flags, F_START
042B   1280           01418     bcf flags, F_PAUSE
042C   1300           01419     bcf flags, F_OVER
042D   0008           01420     return
                      01421     
                      01422 ; delay by TIMER0
                      01423 ; parameter
                      01424 ;   WREG -> 2*Tcy+7cy    
042E                  01425 t0delay 
042E   0989           01426     comf WREG
042F   0095           01427     movwf TMR0
0430   110B           01428     bcf INTCON,T0IF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0431   1D0B           01429     btfss INTCON,T0IF
0432   3???           01430     bra $-1
0433   0008           01431     return
                      01432     
                      01433 MAIN_PROG CODE                      ; let linker place main program
                      01434 
0000                  01435 initialize
                      01436 ; clear common RAM
0000   0185           01437     clrf FSR0H
0001   3070           01438     movlw 0x70
0002   0084           01439     movwf FSR0L
0003   0103           01440     clrw
0004   001A           01441     movwi FSR0++
0005   1F84           01442     btfss FSR0L,7
0006   3???           01443     bra $-2
                      01444 ; clear banked RAM
0007   0184           01445     clrf FSR0L
0008   3020           01446     movlw 0x20
0009   0085           01447     movwf FSR0H
000A   0103           01448     clrw 
000B   001A           01449     movwi FSR0++
000C   1C05           01450     btfss FSR0H,0
000D   3???           01451     bra $-2
                      01452 ; initialize LFSR seed
000E   002?           01453     banksel seed
000F   09??           01454     comf seed
0010   09??           01455     comf seed+1
0011   09??           01456     comf seed+2
0012   09??           01457     comf seed+3
                      01458 ;   setup arguments stack pointer
0013   30??           01459     movlw high (stack+STACK_SIZE)
0014   0085           01460     movwf FSR0H
0015   30??           01461     movlw low (stack+STACK_SIZE)
0016   0084           01462     movwf FSR0L
                      01463 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01464 ; TIMER0 prescale 1:2
0017   3050           01465     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01466     movwf OPTION_REG
                      01467 ; disable analog inputs, except AN0
0019   0023           01468     banksel ANSELA
001A   018C           01469     clrf ANSELA
                      01470 ; paddle potentiometer input     
001B   140C           01471     bsf ANSELA,PADDLE
001C   0021           01472     banksel ADCON1
001D   3020           01473     movlw (2<<ADCS0)
001E   009E           01474     movwf ADCON1
                      01475 ; pin setup
001F   0024           01476     banksel WPUA
0020   018C           01477     clrf WPUA
0021   0021           01478     banksel TRISA
0022   110C           01479     bcf TRISA,SYNC_OUT
0023   100C           01480     bcf TRISA,AUDIO
0024   0022           01481     banksel LATA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   160C           01482     bsf LATA, VIDEO_OUT
                      01483 ; PWM1 chroma signal on RA1
0026   003B           01484     banksel PWM1CON
0027   019F           01485     clrf PWM1LDCON
0028   0191           01486     clrf PWM1PHL
0029   0192           01487     clrf PWM1PHH
002A   0197           01488     clrf PWM1OFL
002B   0198           01489     clrf PWM1OFH
002C   0196           01490     clrf PWM1PRH
002D   3007           01491     movlw 7
002E   0095           01492     movwf PWM1PRL
002F   3004           01493     movlw 4
0030   0093           01494     movwf PWM1DCL
0031   0194           01495     clrf PWM1DCH
0032   179F           01496     bsf PWM1LDCON,7
0033   30C0           01497     movlw (1<<EN)|(1<<OE)
0034   009B           01498     movwf PWM1CON
                      01499 ; PWM2 sound
0035   003B           01500     banksel PWM2CON
0036   01A1           01501     clrf PWM2PHL
0037   01A2           01502     clrf PWM2PHH
0038   01A7           01503     clrf PWM2OFL
0039   01A8           01504     clrf PWM2OFH
003A   3030           01505     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01506     movwf PWM2CLKCON
003C   300D           01507     movlw high 3578;7
003D   00A6           01508     movwf PWM2PRH
003E   30FA           01509     movlw low 3578;7
003F   00A5           01510     movwf PWM2PRL
0040   3626           01511     lsrf PWM2PRH,W
0041   00A4           01512     movwf PWM2DCH
0042   0C25           01513     rrf PWM2PRL,W
0043   00A3           01514     movwf PWM2DCL
0044   17AF           01515     bsf PWM2LDCON,LDA
                      01516 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01517     banksel PWM3CON
0046   01BF           01518     clrf PWM3LDCON
0047   01B1           01519     clrf PWM3PHL
0048   01B2           01520     clrf PWM3PHH
0049   01B7           01521     clrf PWM3OFL
004A   01B8           01522     clrf PWM3OFH
004B   301B           01523     movlw low HPERIOD
004C   00B5           01524     movwf PWM3PRL
004D   3007           01525     movlw high HPERIOD
004E   00B6           01526     movwf PWM3PRH
004F   3086           01527     movlw HSYNC
0050   00B3           01528     movwf PWM3DCL
0051   01B4           01529     clrf PWM3DCH
0052   30D0           01530     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01531     movwf PWM3CON
0054   17BF           01532     bsf PWM3LDCON,7
0055   143C           01533     bsf PWM3INTE,PRIE
                      01534 ; enbable interrupt    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0056   0020           01535     banksel PIR3
0057   1313           01536     bcf PIR3,PWM3IF
0058   0021           01537     banksel PIE3
0059   1713           01538     bsf PIE3,PWM3IE
005A   170B           01539     bsf INTCON,PEIE
005B   178B           01540     bsf INTCON,GIE
005C   01??           01541     clrf flags
005D   1500           01542     bsf flags, F_SYNC
                      01543 ; all processing done in ISR    
005E   2???           01544     goto $
                      01545 
                      01546 ; digits character table
005F                  01547 digits
005F   000B           01548     brw
0060   3440 34A0 34A0 01549     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
0065   3440 34C0 3440 01550     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
006A   34E0 3420 34C0 01551     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
006F   34E0 3420 34C0 01552     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
0074   34A0 34A0 34E0 01553     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0079   34E0 3480 34E0 01554     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
007E   34C0 3480 34E0 01555     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
0083   34E0 3420 3420 01556     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0088   34E0 34A0 34E0 01557     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
008D   34E0 34A0 34E0 01558     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0092   0001           01559     reset
                      01560     
0093                  01561 frequency
0093   000B           01562     brw
0094   348B 34D3      01563     dt high 35795, low 35795 ; 100 hertz
0096   340D 34FB      01564     dt high 3579, low 3579 ; 1000 hertz
0098   0001           01565     reset
                      01566   
                      01567 ;display END! when game is over    
0099                  01568 end_msg
0099   000B           01569     brw
009A   34E8 34C8      01570     dt 0xe8,0xc8
009C   348E 34A8      01571     dt 0x8e,0xa8
009E   34EA 34A8      01572     dt 0xea,0xa8
00A0   348A 34A0      01573     dt 0x8a,0xa0
00A2   34EA 34C8      01574     dt 0xea,0xc8
                      01575     
                      01576 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01577 max_score 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01578  
3FA7 1EFF             01579     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000FA
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_RIGHT_BOUND                  00000052
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000008
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000005
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000010
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
COURT_WIDTH                       000000F8
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_EVEN                            00000001
F_HI_LINE                         00000000
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
G1ASDLA0                          00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
IOCAP                             00000391
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000FA
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000034
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      0000004A
PADDLE_THICKNESS                  00000008
PADDLE_WIDTH                      00000020
PADDLE_Y                          000000F3
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0008                         00000008
_ISR_0010                         00000010
_ISR_00E1                         000000E1
_ISR_00E6                         000000E6
_ISR_00ED                         000000ED
_ISR_0125                         00000125
_ISR_012C                         0000012C
_ISR_012F                         0000012F
_ISR_0138                         00000138
_ISR_016F                         0000016F
_ISR_01F0                         000001F0
_ISR_01F4                         000001F4
_ISR_01F5                         000001F5
_ISR_01F9                         000001F9
_ISR_021B                         0000021B
_ISR_0224                         00000224
_ISR_0225                         00000225
_ISR_022A                         0000022A
_ISR_0245                         00000245
_ISR_0248                         00000248
_ISR_024E                         0000024E
_ISR_0255                         00000255
_ISR_0256                         00000256
_ISR_025C                         0000025C
_ISR_026E                         0000026E
_ISR_0272                         00000272
_ISR_0276                         00000276
_ISR_027A                         0000027A
_ISR_0280                         00000280
_ISR_0284                         00000284
_ISR_028A                         0000028A
_ISR_028F                         0000028F
_ISR_0293                         00000293
_ISR_0294                         00000294
_ISR_0299                         00000299
_ISR_029F                         0000029F
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

_ISR_02A4                         000002A4
_ISR_02A9                         000002A9
_ISR_02AD                         000002AD
_ISR_02CE                         000002CE
_ISR_02EE                         000002EE
_ISR_02FD                         000002FD
_ISR_02FE                         000002FE
_ISR_0305                         00000305
_ISR_0319                         00000319
_ISR_031A                         0000031A
_ISR_0321                         00000321
_ISR_0335                         00000335
_ISR_0336                         00000336
_ISR_033D                         0000033D
_ISR_0351                         00000351
_ISR_0352                         00000352
_ISR_0359                         00000359
_ISR_036D                         0000036D
_ISR_036E                         0000036E
_ISR_0375                         00000375
_ISR_038F                         0000038F
_ISR_0392                         00000392
_ISR_0394                         00000394
_ISR_0399                         00000399
_ISR_039A                         0000039A
_ISR_03C7                         000003C7
_ISR_03CC                         000003CC
_ISR_0432                         00000432
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005E                   0000005E
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
ball_at_left                      00000288
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

ball_at_right                     0000029D
ball_dx                           00000009
ball_dy                           0000000A
ball_in_middle                    00000267
ball_lost                         00000136
ball_speed                        0000000B
ball_timer                        0000000E
ball_x                            00000007
ball_y                            00000008
balls                             000000B0
between                           000001BF
between_exit                      000001C9
black                             
blue                              
bottom_bound                      0000010F
brick_bounce                      000001B6
brick_wall_init                   000003E8
bw_init                           000003EF
check_paddle_bounce               0000014B
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000118
collision_exit                    000001BC
d1                                000000AD
d2                                000000AE
d3                                000000AF
dark_green                        
digit_offset                      000003E2
digit_row                         00000209
digits                            0000005F
display_end_msg                   000002C4
draw_border                       
draw_empty                        00000382
draw_paddle                       0000038D
draw_row1                         000002F4
draw_row2                         00000310
draw_row3                         0000032C
draw_row4                         00000348
draw_row5                         00000364
draw_score                        000001D3
draw_top_wall                     0000021F
draw_void                         00000237
draw_void_exit                    000002B0
draw_wall                         000002E3
dropn                             
eeprom                            00000780
end_msg                           00000099
even_field                        000003B3
fallout_test                      00000132
field_end                         000003BD
flags                             00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

frequency                         00000093
game_init                         0000041B
game_over                         000000C6
game_over_test                    000003D9
game_running                      000000BE
going_down                        00000170
gray                              white
hi_line                           000003AC
inc_score                         000003C5
initialize                        00000000
isr                               00000004
isr_exit                          0000002C
lcount                            00000001
leave                             
lfsr16                            000003F3
mask                              000000AC
mauve                             
max_score                         00000780
move_ball                         000000F3
move_ball_exit                    00000115
move_y                            00000106
next_brick                        000002E6
next_task                         
no_ball                           00000246
no_ball_dly                       00000243
no_wall_draw                      000002BA
old_dx                            0000000F
paddle_bounce                     00000155
paddle_pos                        00000006
paddle_test                       00000147
pickn                             
pokew                             
popw                              
porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000031
pushw                             
q                                 0000000A
r                                 00000002
read_button                       000000D5
read_paddle                       000000D9
right_bound                       000000FF
row1                              000000A0
row1_test                         00000186
row2                              000000A2
row2_test                         0000018F
row3                              000000A4
row3_exit                         0000033E
row3_test                         00000199
row4                              000000A6
row4_test                         000001A3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-17-2019  12:18:27         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

row5                              000000A8
row5_test                         000001AD
row6                              000000AA
score                             0000000C
score_exit                        000001FF
seed                              00000030
set_ball_dx                       00000405
set_ball_dx_exit                  00000419
set_presync                       0000003E
set_vsync                         00000056
skip_2_tasks                      000000CE
slice                             00000002
sound                             00000079
sound_fx1                         00000087
sound_fx2                         00000092
sound_init                        0000009D
sound_timer                       000000B1
stack                             00000020
swap_var                          
swapw                             
t0delay                           0000042E
task                              00000003
task_switch                       00000015
tdelay                            
temp1                             00000004
temp2                             00000005
top_wall_exit                     0000022D
user_input                        000000B2
video_first                       000001CB
vsync                             00000049
vsync_end                         0000006B
wait_field_end                    000003A6
wait_trigger                      000000C0
wall_test                         00000166
white                             
yellow                            
yes_ball                          00000260

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   322 suppressed

