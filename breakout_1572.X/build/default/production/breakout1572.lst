MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00034 ;    12        |  1      | task 5, sound timer
                      00035 ;    13        |  1      | task 6, user input
                      00036 ;    14        |  1      | task 7, move ball
                      00037 ;    15        |  1      | task 8, collision control
                      00038 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00039 ;    30-49     |  20     | task 10, display score and balls count
                      00040 ;    50-57     |  8      | task 11, draw top border
                      00041 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00042 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00043 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00044 ;    242-249   |  8      | task 15, draw paddle
                      00045 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00046 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00047  
                      00048     
                      00049     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00050     
8007   3FA7           00051     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00052     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00053     
                      00054     radix dec
                      00055 
                      00056 ; constants
  00000800            00057 PROG_SIZE equ 2048  ; program words
  00000080            00058 EEPROM_SIZE equ 128 ; high endurance flash words
                      00059  
  01B4F360            00060 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00061 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00062 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00063  
                      00064 ; NTSC signal 
  00003D76            00065 Fhorz equ 15734 ; horizontal frequency
  0000071B            00066 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00067 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00068 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00069 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00070 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00071 ; boolean flags 
  00000000            00072 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00073 F_EVEN equ 1    ; even field
  00000002            00074 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00075 F_SOUND equ 3   ; sound enabled 
  00000004            00076 F_START equ 4   ; game started 
  00000005            00077 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00078 F_OVER equ 6    ; game over
  00000007            00079 F_COOL equ 7    ; player got maximum score
                      00080  
                      00081 ;pins assignment
  00000000            00082 AUDIO EQU RA0
  00000000            00083 PADDLE equ RA0
  00000001            00084 CHROMA equ RA1
  00000002            00085 SYNC_OUT equ RA2
  00000003            00086 START_BTN equ RA3 
  00000004            00087 VIDEO_OUT equ RA4
  00000005            00088 CLKIN equ RA5
                      00089  
                      00090     ; constants used in video display
                      00091 ; values are in Tcy for x dimension.
                      00092 ; values are in scan lines for y dimension.    
  0000001E            00093 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  0000004A            00094 FIRST_BRICK_Y equ 74 ; lcount first brick scan line
  000000F9            00095 LAST_VIDEO_LINE  equ 249 ; last video line displayed
  00000045            00096 LEFT_MARGIN equ 69  ; tcy delay before any display
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00097 PLAY_WIDTH equ 48 ; pixels
  00000005            00098 PIXEL_WIDTH equ 5; pixel width in tcy 
  00000008            00099 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00100 BRICK_WIDTH equ 4  ; pixels
  00000004            00101 BORDER_WIDTH equ 4  ; Tcy
  00000002            00102 BALL_WIDTH equ 2 ; pixels
  000000C0            00103 BALL_MASK equ 0xC0 ;  
  00000008            00104 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00105 BALL_LEFT_BOUND equ 0 ; pixel
  0000002E            00106 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00107 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00108 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE
  00000008            00109 PADDLE_WIDTH equ 8 ; pixels
  00000004            00110 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00111 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  000000FF            00113 PADDLE_MASK equ 0xFF 
  00000006            00114 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00115 ROW1_Y equ 74
  00000052            00116 ROW2_Y equ 82
  0000005A            00117 ROW3_Y equ 90
  00000062            00118 ROW4_Y equ 98
  0000006A            00119 ROW5_Y equ 106
  00000072            00120 ROW6_Y equ 114 
                      00121 
                      00122 ;;;;;;;;;;;;;;;;;;;;;;
                      00123 ;; assembler macros ;;
                      00124 ;;;;;;;;;;;;;;;;;;;;;;
                      00125 
                      00126 ; leave task 
                      00127 leave macro
                      00128     goto isr_exit
                      00129     endm
                      00130     
                      00131 ; move to next task on slice limit
                      00132 ; parameters:
                      00133 ;   s  nomber of slices used by the task    
                      00134 next_task macro s    
                      00135     incf slice
                      00136     movlw s
                      00137     subwf slice,W
                      00138     skpz
                      00139     leave
                      00140     clrf slice
                      00141     incf task
                      00142     leave
                      00143     endm
                      00144     
                      00145     
                      00146 ; swap variable with WREG    
                      00147 swap_var macro var
                      00148     xorwf var
                      00149     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     endm
                      00152     
                      00153 
                      00154 ; delay in machine cycle T
                      00155 ; parameters:
                      00156 ;   mc   number of machine cycles    
                      00157 tdelay macro mc 
                      00158     if mc==0
                      00159     exitm
                      00160     endif
                      00161     if mc==1
                      00162     nop
                      00163     exitm
                      00164     endif
                      00165     if mc==2
                      00166     bra $+1
                      00167     exitm
                      00168     endif
                      00169     if mc==3
                      00170     nop
                      00171     bra $+1
                      00172     exitm
                      00173     endif
                      00174     if mc==4
                      00175     call _4tcy
                      00176     exitm
                      00177     endif
                      00178     if mc==5
                      00179     call _5tcy
                      00180     exitm
                      00181     endif
                      00182     if mc>5
                      00183     variable q=(mc-3)/3
                      00184     variable r=mc-3-3*q
                      00185     movlw q
                      00186     call _3ntcy ; tcy=3+3*q
                      00187     if (r==2)
                      00188     bra $+1
                      00189     exitm
                      00190     endif 
                      00191     if (r==1)
                      00192     nop
                      00193     exitm
                      00194     endif
                      00195     endif
                      00196     endm
                      00197 
                      00198 ; enable weak pull on VIDEO_OUT
                      00199 ; to create a porch
                      00200 porch_on macro
                      00201     banksel WPUA
                      00202     bsf WPUA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204     
                      00205 ; disable weak pull on VIDEO_OUT
                      00206 ; to remove porch
                      00207 porch_off macro
                      00208     banksel WPUA
                      00209     bcf WPUA,VIDEO_OUT
                      00210     endm
                      00211     
                      00212 ; enable chroma output
                      00213 chroma_on macro
                      00214     banksel TRISA
                      00215     bcf TRISA, CHROMA
                      00216     endm
                      00217     
                      00218 ;disable chroma output    
                      00219 chroma_off macro
                      00220     banksel TRISA
                      00221     bsf TRISA,CHROMA
                      00222     endm
                      00223     
                      00224 ; output chroma reference    
                      00225 chroma_ref macro
                      00226     banksel PWM1CON
                      00227     bcf PWM1CON,POL
                      00228     endm
                      00229     
                      00230 ; set chroma phase to 180 degree
                      00231 chroma_invert macro
                      00232     banksel PWM1CON
                      00233     bsf PWM1CON,POL
                      00234     endm
                      00235 
                      00236 ;;;;;;;;;;;;;;;;;;;;;;
                      00237 ;   colors macros
                      00238 ;   TRISA configuration    
                      00239 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00240 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00241 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00242 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00243 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00244 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00245 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00246 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00247  
                      00248 ;set video output to black    
                      00249 black macro
                      00250     movlw BLACK
                      00251     movwf TRISA
                      00252     endm
                      00253     
                      00254 ; set video output to white    
                      00255 white macro    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     movlw WHITE
                      00257     movwf TRISA
                      00258     endm
                      00259 
                      00260 #define gray white
                      00261     
                      00262 ; set video output to mauve    
                      00263 mauve macro
                      00264     movlw MAUVE
                      00265     movwf TRISA
                      00266     endm
                      00267 
                      00268 ; set video output to yellow   
                      00269 yellow macro
                      00270     movlw YELLOW
                      00271     movwf TRISA
                      00272     endm
                      00273     
                      00274 ; set video output to blue
                      00275 blue macro
                      00276     movlw BLUE
                      00277     movwf TRISA
                      00278     endm
                      00279     
                      00280 ; set video output to dark blue    
                      00281 dark_green macro
                      00282     movlw DARK_GREEN
                      00283     movwf TRISA
                      00284     endm
                      00285 
                      00286 ; shift out 1 bit    
                      00287 display_bit macro n
                      00288     lslf vbuffer+n
                      00289     movlw BLACK
                      00290     skpnc
                      00291     movfw fg_color
                      00292     movwf TRISA
                      00293     endm
                      00294     
                      00295 ; display a byte of pixels    
                      00296 ; input:
                      00297 ;   n is byte number {0..5}    
                      00298 display_byte macro n
                      00299     display_bit n
                      00300     display_bit n
                      00301     display_bit n
                      00302     display_bit n
                      00303     display_bit n
                      00304     display_bit n
                      00305     display_bit n
                      00306     display_bit n
                      00307     endm
                      00308     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309    
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00311 ;  stack manipulation macros
                      00312 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00313 STACK_SIZE equ 16 ; size of argument stack
                      00314 #define T INDF0 ; indirect access to top of argument stack
                      00315 #define SP FSR0 ; use FSR0 as stack pointer 
                      00316 ; push WREG on T
                      00317 pushw  macro
                      00318     movwi --SP
                      00319     endm
                      00320   
                      00321 ; pop WREG from T
                      00322 popw macro
                      00323     moviw SP++
                      00324     endm
                      00325     
                      00326 ; swap WREG with 
                      00327 swapw  macro
                      00328     xorwf T
                      00329     xorwf T,W
                      00330     xorwf T
                      00331     endm
                      00332 
                      00333 ; drop n elements from stack
                      00334 dropn macro n
                      00335     addfsr T,n
                      00336     endm
                      00337 
                      00338 ; copy nth element of stack to WREG
                      00339 ;  n {0..31}, 0 is T   
                      00340 pickn macro n
                      00341     moviw n[SP]
                      00342     endm
                      00343    
                      00344 ; copy WREG to nth element of stack
                      00345 ; n {0..31}, 0 is T
                      00346 pokew macro n
                      00347     movwi n[SP]
                      00348     endm
                      00349     
                      00350     
                      00351 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00352 ;;    variables
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00354  
                      00355     
                      00356     udata 0x20 ; bank 0
0020                  00357 stack res 16 ; arguments stack
0030                  00358 seed res 2 ; prng seed used by lfsr16
                      00359  
                      00360 ; video display manipulate TRISA register
                      00361 ; to avoid banksel during video update
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; place variables related to video in same bank as TRISA 
                      00363 v_array   udata 0xA0 ; bank 1
00A0                  00364 vbuffer res 6
00A6                  00365 temp3 res 1
00A7                  00366 row1 res 6; brick wall row1
00AD                  00367 fill1 res 2 
00AF                  00368 row2 res 6
00B5                  00369 fill2 res 2 
00B7                  00370 row3 res 6
00BD                  00371 fill3 res 2 
00BF                  00372 row4 res 6
00C5                  00373 fill4 res 2 
00C7                  00374 row5 res 6
00CD                  00375 fill5 res 2
00CF                  00376 row6 res 6
00D5                  00377 fill6 res 2 
00D7                  00378 fg_color res 1
00D8                  00379 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00380 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00381 ball_byte res 1 ; byte offset in vbuffer
00DC                  00382 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00383 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00384 balls res 1 ; number of recking balls available
                      00385  
                      00386 ; common 16 bytes RAM accessible whatever the selected bank 
                      00387     udata_shr 
0000                  00388 flags  res 1 ; boolean variables
0001                  00389 lcount res 1 ; video field line counter
0002                  00390 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00391 task res 1 ; where in video phase 
0004                  00392 temp1 res 1 ; temporary storage
0005                  00393 temp2 res 1 ; 
0006                  00394 paddle_pos res 1 
0007                  00395 ball_x res 1
0008                  00396 ball_y res 1
0009                  00397 ball_dx res 1
000A                  00398 ball_dy res 1
000B                  00399 ball_speed res 1
000C                  00400 score res 2 ; score stored in Binary Coded Decimal
000E                  00401 ball_timer res 1 
000F                  00402 odd_fld_pread res 1 ; value of paddle read during odd field
                      00403  
                      00404 ;; cpu reset entry point
                      00405 RES_VECT  CODE    0x0000            
0000   2???           00406     goto    initialize  ; go to beginning of program
0001   0001           00407     reset   
0002   0001           00408     reset
0003   0001           00409     reset
                      00410 
                      00411 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00412 ; interrupt service routine triggered by PWM3 period rollover
                      00413 ; after initialization is done all processing in done inside 
                      00414 ; this interrupt.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; It is designed as a round robin scheduler.    
                      00416 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00417 ISR CODE 0x0004
0004                  00418 isr
0004   0A??           00419     incf lcount
0005   1903           00420     skpnz
0006   1400           00421     bsf flags, F_BIT8
0007   1900           00422     btfsc flags, F_SYNC
0008   2???           00423     goto task_switch
0009   002?           00424     banksel vbuffer
000A   01??           00425     clrf vbuffer
000B   01??           00426     clrf vbuffer+1
000C   01??           00427     clrf vbuffer+2
000D   01??           00428     clrf vbuffer+3
000E   01??           00429     clrf vbuffer+4
000F   01??           00430     clrf vbuffer+5
                      00431 ; generate chroma sync
                      00432     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18>5
  0005                    M     variable q=(18-3)/3
  0000                    M     variable r=18-3-3*q
0010   3005               M     movlw q
0011   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     endif
                      00433     chroma_ref
0012   003B               M     banksel PWM1CON
0013   121B               M     bcf PWM1CON,POL
0014   0021           00434     banksel TRISA
0015   108C           00435     bcf TRISA,CHROMA
                      00436     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3
  0001                    M     variable r=16-3-3*q
0016   3004               M     movlw q
0017   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0018   0000               M     nop
                          M     exitm
0019   148C           00437     bsf TRISA,CHROMA
                      00438     porch_on
001A   0024               M     banksel WPUA
001B   160C               M     bsf WPUA,VIDEO_OUT
001C                  00439 task_switch ; round robin task scheduler   
001C   08??           00440     movfw task
001D   000B           00441     brw
001E   2???           00442     goto pre_vsync ;task 0, vertical pre-equalization pulses
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F   2???           00443     goto vsync ;task 1, vertical sync pulses
0020   2???           00444     goto post_vsync ;task 2, vertical post-equalization pulses
0021   2???           00445     goto vsync_end ;task 3, return to normal video line
0022   2???           00446     goto read_paddle; task 4, read paddle potentiometer
0023   2???           00447     goto sound ;task 5, check sound timer expiration
0024   2???           00448     goto read_button ;task 6,  read button
0025   2???           00449     goto move_ball ;task 7, move recking ball.
0026   2???           00450     goto collision ; task 8, check for collision with brick wall and paddle
0027   2???           00451     goto video_first ; task 9, wait FIRST_VIDEO line.
0028   2???           00452     goto draw_score ;task 10,  draw score en ball count
0029   2???           00453     goto draw_top_wall ;task 11,  draw top wall
002A   2???           00454     goto draw_sides ;task 12, draw play space
002B   2???           00455     goto draw_bricks  ;task 13, draw bricks rows
002C   2???           00456     goto draw_empty;task 14, draw empty space down to bottom
002D   2???           00457     goto draw_paddle ;task 15, draw paddle
002E   2???           00458     goto wait_field_end ;task 16, idle to end of video field
002F   0001           00459     reset ; error trap, task out of range
0030                  00460 isr_exit
0030   0021           00461     banksel TRISA
0031   1980           00462     btfsc flags, F_SOUND
0032   100C           00463     bcf TRISA,AUDIO
                      00464     porch_off
0033   0024               M     banksel WPUA
0034   120C               M     bcf WPUA,VIDEO_OUT
0035   003B           00465     banksel PWM3INTF
0036   103D           00466     bcf PWM3INTF,PRIF
0037   0009           00467     retfie
                      00468 
                      00469 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00470 ;;  all tasks routine are here            ;;
                      00471 ;;  each must be terminate by leave macro ;;    
                      00472 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00473     
                      00474 ; task 0, vertical synchronization pre equalization
                      00475 ; 6 half horizontal scan lines    
0038                  00476 pre_vsync
0038   08??           00477     movfw slice
0039   1903           00478     skpnz
003A   2???           00479     goto set_presync
                      00480     next_task 6
003B   0A??               M     incf slice
003C   3006               M     movlw 6
003D   02??               M     subwf slice,W
003E   1D03               M     skpz
                          M     leave
003F   2???               M     goto isr_exit
0040   01??               M     clrf slice
0041   0A??               M     incf task
                          M     leave
0042   2???               M     goto isr_exit
0043                  00481 set_presync    
0043   003B           00482     banksel PWM3DC
0044   3041           00483     movlw HEQUAL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0045   00B3           00484     movwf PWM3DCL
0046   01B4           00485     clrf PWM3DCH
0047   3003           00486     movlw high HALF_LINE
0048   00B6           00487     movwf PWM3PRH
0049   308D           00488     movlw low HALF_LINE
004A   00B5           00489     movwf PWM3PRL
004B   17BF           00490     bsf PWM3LDCON,7
004C   0A??           00491     incf slice
                      00492     leave
004D   2???               M     goto isr_exit
                      00493     
                      00494 ; task 1, vertical synchronization pulses
                      00495 ; 6 half horizontal scan lines    
004E                  00496 vsync 
004E   08??           00497     movfw slice
004F   1903           00498     skpnz
0050   2???           00499     goto set_vsync
                      00500     next_task 6
0051   0A??               M     incf slice
0052   3006               M     movlw 6
0053   02??               M     subwf slice,W
0054   1D03               M     skpz
                          M     leave
0055   2???               M     goto isr_exit
0056   01??               M     clrf slice
0057   0A??               M     incf task
                          M     leave
0058   2???               M     goto isr_exit
0059                  00501 set_vsync
0059   003B           00502     banksel PWM3DC
005A   3008           00503     movlw low VSYNC_PULSE
005B   00B3           00504     movwf PWM3DCL
005C   3003           00505     movlw high VSYNC_PULSE
005D   00B4           00506     movwf PWM3DCH
005E   17BF           00507     bsf PWM3LDCON,7
005F   0A??           00508     incf slice
                      00509     leave
0060   2???               M     goto isr_exit
                      00510     
                      00511 ; task 2, vertical synchronisation post equalization pulses
                      00512 ; 6 half horizontal scan lines    
0061                  00513 post_vsync
0061   08??           00514     movfw slice
0062   1903           00515     skpnz
0063   2???           00516     goto set_presync
0064   3006           00517     movlw 6
0065   02??           00518     subwf slice,W
0066   1903           00519     skpnz
0067   2???           00520     goto post_last
0068   0A??           00521     incf slice
                      00522     leave
0069   2???               M     goto isr_exit
006A                  00523 post_last    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   0A??           00524     incf task
006B   01??           00525     clrf slice
006C   1C80           00526     btfss flags, F_EVEN
                      00527     leave
006D   2???               M     goto isr_exit
                      00528     
                      00529 ; task 3, vertical synchronization completed, return to normal line
                      00530 ; rest horizonal line to its normal length.
                      00531 ; set lcount to 9.    
006E                  00532 vsync_end
006E   1100           00533     bcf flags, F_SYNC
006F   003B           00534     banksel PWM3DC
0070   3086           00535     movlw HSYNC
0071   00B3           00536     movwf PWM3DCL
0072   01B4           00537     clrf PWM3DCH
0073   3007           00538     movlw high HPERIOD
0074   00B6           00539     movwf PWM3PRH
0075   301B           00540     movlw low HPERIOD
0076   00B5           00541     movwf PWM3PRL
0077   17BF           00542     bsf PWM3LDCON,7
0078   0A??           00543     incf task
0079   36??           00544     lsrf lcount
                      00545     leave
007A   2???               M     goto isr_exit
                      00546 
                      00547 ; task 4, read paddle potentiometer
                      00548 ; paddle_pos is mean between 2 reading
                      00549 ; first reading during odd field is saved
                      00550 ; in 'odd_fld_pread' variable
                      00551 ; second reading during even field
                      00552 ; is added to first and result divided by 4
                      00553 ; to get paddle_pos    
007B                  00554 read_paddle
007B   0A??           00555     incf task
007C   1980           00556     btfsc flags, F_SOUND
                      00557     leave
007D   2???               M     goto isr_exit
007E   0021           00558     banksel TRISA
007F   140C           00559     bsf TRISA, PADDLE
0080   0021           00560     banksel ADCON0
0081   3003           00561     movlw 3
0082   009D           00562     movwf ADCON0
0083   189D           00563     btfsc ADCON0,NOT_DONE
0084   3???           00564     bra $-1
0085   081C           00565     movfw ADRESH
                      00566     pushw
0086   0019               M     movwi --SP
0087   3010           00567     movlw 4<<CHS0
0088   009D           00568     movwf ADCON0
0089   1C80           00569     btfss flags, F_EVEN
008A   3???           00570     bra even_field_read
                      00571     popw
008B   0012               M     moviw SP++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008C   00??           00572     movwf odd_fld_pread
                      00573     leave
008D   2???               M     goto isr_exit
                      00574 ; potentiometer read during even field
008E                  00575 even_field_read    
                      00576     popw
008E   0012               M     moviw SP++
008F   07??           00577     addwf odd_fld_pread
0090   0C??           00578     rrf odd_fld_pread
0091   36??           00579     lsrf odd_fld_pread,W
0092   00??           00580     movwf paddle_pos
0093   3028           00581     movlw PADDLE_LIMIT
0094   02??           00582     subwf paddle_pos,W
0095   3028           00583     movlw PADDLE_LIMIT
0096   1803           00584     skpnc
0097   00??           00585     movwf paddle_pos
                      00586 ; create paddle mask
0098   2???           00587     call compute_paddle_mask
0099   0021           00588     banksel TRISA
                      00589     leave
009A   2???               M     goto isr_exit
                      00590 
                      00591     
                      00592 ; task 5,  sound timer
                      00593 ; if sound active process it.    
009B                  00594 sound
009B   0A??           00595     incf task
009C   1D80           00596     btfss flags, F_SOUND
                      00597     leave
009D   2???               M     goto isr_exit
009E   1A80           00598     btfsc flags, F_PAUSE
009F   2???           00599     call sound_fx1
00A0   002?           00600     banksel sound_timer
00A1   0B??           00601     decfsz sound_timer
                      00602     leave
00A2   2???               M     goto isr_exit
00A3                  00603 sound_off    
00A3   1180           00604     bcf flags, F_SOUND
00A4   003B           00605     banksel PWM2CON
00A5   132B           00606     bcf PWM2CON,OE
00A6   13AB           00607     bcf PWM2CON,EN
00A7   0021           00608     banksel TRISA
00A8   140C           00609     bsf TRISA,PADDLE
                      00610     leave
00A9   2???               M     goto isr_exit
                      00611 
                      00612 ; sound effect, low pitch to high-pitch    
00AA                  00613 sound_fx1
00AA   1C80           00614     btfss flags, F_EVEN
00AB   0008           00615     return
00AC   003B           00616     banksel PWM2CON
00AD   36A6           00617     lsrf PWM2PRH
00AE   0CA5           00618     rrf PWM2PRL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AF   36A4           00619     lsrf PWM2DCH
00B0   0CA3           00620     rrf PWM2DCL
00B1   17AF           00621     bsf PWM2LDCON,LDA
00B2   0008           00622     return
                      00623     
                      00624 ;; sound effect, high pitch to low-pitch    
                      00625 ;sound_fx2
                      00626 ;    btfss flags, F_EVEN
                      00627 ;    return
                      00628 ;    banksel PWM2CON
                      00629 ;    lslf PWM2PRL
                      00630 ;    rlf PWM2PRH
                      00631 ;    lslf PWM2DCL
                      00632 ;    rlf PWM2DCH
                      00633 ;    bsf PWM2LDCON,LDA
                      00634 ;    return
                      00635     
                      00636 ; initialize sound generation.
                      00637 ; input:
                      00638 ;   T = duration
                      00639 ;   WREG = index in frequency table    
                      00640 ; outpout:
                      00641 ;   none    
00B3                  00642 sound_init
                      00643     pushw  ; ( d i -- )
00B3   0019               M     movwi --SP
00B4   1580           00644     bsf flags, F_SOUND
00B5   003B           00645     banksel PWM2CON
00B6   0800           00646     movfw T
00B7   2???           00647     call frequency
00B8   00A6           00648     movwf PWM2PRH
00B9   0A00           00649     incf T,W
00BA   2???           00650     call frequency
00BB   00A5           00651     movwf PWM2PRL
00BC   3626           00652     lsrf PWM2PRH,W
00BD   00A4           00653     movwf PWM2DCH
00BE   0C25           00654     rrf PWM2PRL,W
00BF   00A3           00655     movwf PWM2DCL
00C0   17AF           00656     bsf PWM2LDCON,LDA
00C1   172B           00657     bsf PWM2CON,OE
00C2   17AB           00658     bsf PWM2CON,EN
00C3   002?           00659     banksel sound_timer
                      00660     pickn 1
00C4   3F01               M     moviw 1[SP]
00C5   00??           00661     movwf sound_timer
                      00662     dropn 2
00C6   3102               M     addfsr T,2
00C7   0021           00663     banksel TRISA
00C8   100C           00664     bcf TRISA,AUDIO
00C9   0008           00665     return
                      00666     
                      00667 ;task 6, read button and paddle position
00CA                  00668 read_button
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   0A??           00669     incf task
00CB   0020           00670     banksel PORTA
00CC   080C           00671     movfw PORTA
00CD   3908           00672     andlw 1<<START_BTN
00CE   00??           00673     movwf temp1
00CF   1B00           00674     btfsc flags, F_OVER
00D0   3???           00675     bra game_over
00D1   1A00           00676     btfsc flags,F_START
00D2   3???           00677     bra game_running
                      00678 ; game not running
00D3   1D03           00679     skpz
00D4   3???           00680     bra skip_2_tasks
                      00681 ; start game    
00D5   2???           00682     call game_init
                      00683     leave
00D6   2???               M     goto isr_exit
00D7                  00684 game_running
00D7   1E80           00685     btfss flags, F_PAUSE
                      00686     leave
00D8   2???               M     goto isr_exit
                      00687 ; game on pause    
00D9                  00688 wait_trigger
00D9   1D03           00689     skpz
00DA   3???           00690     bra skip_2_tasks
00DB   1280           00691     bcf flags,F_PAUSE
00DC   2???           00692     call set_ball_dx
                      00693     leave
00DD   2???               M     goto isr_exit
                      00694 ; game over
00DE                  00695 game_over
00DE   1D03           00696     skpz
00DF   3???           00697     bra skip_2_tasks
00E0   2???           00698     call game_init
                      00699 ;    incf task
                      00700     leave
00E1   2???               M     goto isr_exit
                      00701 ; while game not running skip 'move_ball' and 'collision' tasks    
00E2                  00702 skip_2_tasks
00E2   08??           00703     movfw paddle_pos
00E3   3E02           00704     addlw 2
00E4   00??           00705     movwf ball_x
00E5   2???           00706     call compute_ball_mask
00E6   0A??           00707     incf task ; skip move_ball
00E7   0A??           00708     incf task ; skip collision
00E8   2???           00709     call lfsr16
                      00710     leave
00E9   2???               M     goto isr_exit
                      00711 
                      00712     
                      00713     
                      00714 
                      00715 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00716 ; paddle_byte=paddle_pos/8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00717 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00EA                  00718 compute_paddle_mask
00EA   36??           00719     lsrf paddle_pos,W
00EB   3689           00720     lsrf WREG
00EC   3689           00721     lsrf WREG
00ED   00??           00722     movwf paddle_byte
00EE   30FF           00723     movlw PADDLE_MASK
00EF   00??           00724     movwf paddle_mask
00F0   01??           00725     clrf paddle_mask+1
00F1   3007           00726     movlw 7
00F2   05??           00727     andwf paddle_pos,W
00F3   1903           00728     skpnz
00F4   0008           00729     return
00F5   36??           00730     lsrf paddle_mask
00F6   0C??           00731     rrf paddle_mask+1
00F7   0B89           00732     decfsz WREG
00F8   3???           00733     bra $-3
00F9   0008           00734     return
                      00735     
                      00736     
                      00737     
                      00738     
                      00739 ; task 7, move recking ball.   
00FA                  00740 move_ball
00FA   0B??           00741     decfsz ball_timer
00FB   3???           00742     bra move_ball_exit
00FC   08??           00743     movfw ball_speed
00FD   00??           00744     movwf ball_timer
00FE   08??           00745     movfw ball_dx
00FF   07??           00746     addwf ball_x
0100   1F80           00747     btfss ball_dx,7
0101   3???           00748     bra right_bound
0102                  00749 left_bound
0102   1F80           00750     btfss ball_x,7
0103   3???           00751     bra move_y
0104   01??           00752     clrf ball_x
0105   09??           00753     comf ball_dx
0106   0A??           00754     incf ball_dx
0107   3???           00755     bra move_y
0108                  00756 right_bound    
0108   08??           00757     movfw ball_x
0109   3C2E           00758     sublw BALL_RIGHT_BOUND
010A   1803           00759     skpnc
010B   3???           00760     bra move_y
010C   03??           00761     decf ball_x
010D   09??           00762     comf ball_dx
010E   0A??           00763     incf ball_dx
010F                  00764 move_y
010F   08??           00765     movfw ball_dy
0110   07??           00766     addwf ball_y
0111   1F80           00767     btfss ball_dy,7
0112   3???           00768     bra bottom_bound
0113                  00769 top_bound    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   303A           00770     movlw BALL_TOP_BOUND
0114   02??           00771     subwf ball_y,W
0115   1803           00772     skpnc
0116   3???           00773     bra move_ball_exit
0117   303A           00774     movlw BALL_TOP_BOUND
0118   00??           00775     movwf ball_y
0119   09??           00776     comf ball_dy
011A   0A??           00777     incf ball_dy
011B   3???           00778     bra move_ball_exit
011C                  00779 bottom_bound
011C   08??           00780     movfw ball_y
011D   3CED           00781     sublw PADDLE_Y-BALL_HEIGHT-1
011E   1803           00782     skpnc
011F   3???           00783     bra move_ball_exit
0120   2???           00784     call paddle_bounce
0121   1803           00785     skpnc
0122   3???           00786     bra move_ball_exit
0123                  00787 ball_lost
0123   1680           00788     bsf flags, F_PAUSE ; pause game
0124   002?           00789     banksel balls
0125   0B??           00790     decfsz balls
0126   3???           00791     bra $+3
0127   1200           00792     bcf flags, F_START
0128   1700           00793     bsf flags, F_OVER
0129   3002           00794     movlw 2
012A   07??           00795     addwf paddle_pos,W
012B   00??           00796     movwf ball_x
012C   30EF           00797     movlw PADDLE_Y-BALL_HEIGHT+1
012D   00??           00798     movwf ball_y
012E   30FC           00799     movlw -4
012F   00??           00800     movwf ball_dy
0130   3008           00801     movlw 8
                      00802     pushw
0131   0019               M     movwi --SP
0132   3002           00803     movlw 2
0133   2???           00804     call sound_init
0134   0A??           00805     incf task ; skip collision task
0135                  00806 move_ball_exit
0135   2???           00807     call compute_ball_mask
0136   0A??           00808     incf task
                      00809     leave
0137   2???               M     goto isr_exit
                      00810 
                      00811 ; check if ball is bouncing on paddle
                      00812 ; input:
                      00813 ;   none
                      00814 ; output:
                      00815 ;   C set if bounced    
0138                  00816 paddle_bounce
                      00817 ; if ball_x over paddle bounce ball
0138   08??           00818     movfw paddle_pos
                      00819     pushw
0139   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013A   1903           00820     skpnz
013B   0380           00821     decf T
013C   3E08           00822     addlw PADDLE_WIDTH
                      00823     pushw
013D   0019               M     movwi --SP
013E   08??           00824     movfw ball_x
013F   2???           00825     call between
0140   1803           00826     skpnc
0141   3???           00827     bra bouncing
0142   1003           00828     bcf STATUS,C
0143   0008           00829     return
0144                  00830 bouncing
0144   30EE           00831     movlw PADDLE_Y-BALL_HEIGHT
0145   00??           00832     movwf ball_y
0146   09??           00833     comf ball_dy
0147   0A??           00834     incf ball_dy
                      00835 ; bounce direction depend where paddle was hit.    
0148   08??           00836     movfw paddle_pos
0149   02??           00837     subwf ball_x,W
014A   1C03           00838     skpc
014B   3???           00839     bra bounce_left
014C   1903           00840     skpnz
014D   3???           00841     bra bounce_left
014E   3006           00842     movlw PADDLE_WIDTH-2
014F   07??           00843     addwf paddle_pos,W
0150   02??           00844     subwf ball_x,W
0151   3001           00845     movlw 1
0152   1803           00846     skpnc
0153   00??           00847     movwf ball_dx ; bounce right
0154   3???           00848     bra paddle_sound
0155                  00849 bounce_left
0155   30FF           00850     movlw -1
0156   00??           00851     movwf ball_dx
0157                  00852 paddle_sound    
0157   3002           00853     movlw 2
                      00854     pushw
0158   0019               M     movwi --SP
0159   2???           00855     call sound_init
                      00856 ; skip collision task
015A   0A??           00857     incf task
                      00858 ; report bounce    
015B   1403           00859     bsf STATUS,C
015C   0008           00860     return
                      00861     
                      00862     
                      00863 ; compute ball_mask and ball_byte
                      00864 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00865 ; ball_byte= ball_x/8     
015D                  00866 compute_ball_mask
015D   002?           00867     banksel vbuffer
015E   36??           00868     lsrf ball_x,W
015F   3689           00869     lsrf WREG
0160   3689           00870     lsrf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0161   00??           00871     movwf ball_byte
0162   30C0           00872     movlw BALL_MASK
0163   00??           00873     movwf ball_mask
0164   01??           00874     clrf ball_mask+1
0165   3007           00875     movlw 7
0166   05??           00876     andwf ball_x,W
0167   1903           00877     skpnz
0168   0008           00878     return
0169   36??           00879     lsrf ball_mask
016A   0C??           00880     rrf ball_mask+1
016B   0B89           00881     decfsz WREG
016C   3???           00882     bra $-3
016D   0008           00883     return
                      00884     
                      00885 ; task 8, collision detection
016E                  00886 collision
016E   304A           00887     movlw ROW1_Y
                      00888     pushw
016F   0019               M     movwi --SP
0170   307A           00889     movlw ROW6_Y+BRICK_HEIGHT
                      00890     pushw
0171   0019               M     movwi --SP
0172   08??           00891     movfw ball_y
0173   2???           00892     call between
0174   1C03           00893     skpc
0175   3???           00894     bra collision_exit
0176   002?           00895     banksel row1
0177   0187           00896     clrf FSR1H
0178   30??           00897     movlw low row1
0179   0086           00898     movwf FSR1L
017A   304A           00899     movlw ROW1_Y
017B   02??           00900     subwf ball_y,W
017C   39F8           00901     andlw 0xf8
                      00902     pushw
017D   0019               M     movwi --SP
017E   0786           00903     addwf FSR1L
017F   08??           00904     movfw ball_byte
0180   0786           00905     addwf FSR1L
0181   30F0           00906     movlw 0xf0
0182   1900           00907     btfsc ball_x,2
0183   0E89           00908     swapf WREG
0184   0501           00909     andwf INDF1,W
0185   1903           00910     skpnz
0186   3???           00911     bra collision_exit
0187   300F           00912     movlw 0x0f
0188   1900           00913     btfsc ball_x,2
0189   0E89           00914     swapf WREG
018A   0581           00915     andwf INDF1
018B   09??           00916     comf ball_dy
018C   0A??           00917     incf ball_dy
018D   08??           00918     movfw ball_dy
018E   07??           00919     addwf ball_y
                      00920     popw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018F   0012               M     moviw SP++
0190   3689           00921     lsrf WREG
0191   3689           00922     lsrf WREG
0192   000B           00923     brw
0193   3009           00924     movlw 9
0194   3???           00925     bra add_score
0195   3009           00926     movlw 9
0196   3???           00927     bra add_score
0197   3007           00928     movlw 7
0198   3???           00929     bra add_score
0199   3005           00930     movlw 5
019A   3???           00931     bra add_score
019B   3003           00932     movlw 3
019C   3???           00933     bra add_score
019D   3001           00934     movlw 1
019E                  00935 add_score    
019E   2???           00936     call inc_score
019F                  00937 pong_sound
019F   3001           00938     movlw 1
                      00939     pushw
01A0   0019               M     movwi --SP
01A1   3000           00940     movlw 0
01A2   2???           00941     call sound_init
01A3                  00942 collision_exit
01A3   0A??           00943     incf task
                      00944     leave
01A4   2???               M     goto isr_exit
                      00945 
                      00946     
                      00947     
                      00948 ; check if  lb <= x < hb
                      00949 ; 13 tcy    
                      00950 ; input:
                      00951 ;    WREG  x
                      00952 ;    stack ( lb hb -- )     
                      00953 ; output:
                      00954 ;   Carry bit set if true    
01A5                  00955 between
01A5   00??           00956     movwf temp2
                      00957     pickn 1
01A6   3F01               M     moviw 1[SP]
01A7   02??           00958     subwf temp2,W
01A8   1C03           00959     skpc
01A9   3???           00960     bra between_exit2
01AA   0800           00961     movfw T
01AB   02??           00962     subwf temp2
01AC   0803           00963     movfw STATUS
01AD   3A01           00964     xorlw 1
01AE   0083           00965     movwf STATUS
01AF                  00966 between_exit    
                      00967     dropn 2
01AF   3102               M     addfsr T,2
01B0   0008           00968     return  ; 13 tcy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00969 ; add tcy to have constant tcy for this routine whatever the path    
01B1                  00970 between_exit2
01B1   3???           00971     bra $+1
01B2   3???           00972     bra between_exit
                      00973     
                      00974 ; task 9, wait for first video line
01B3                  00975 video_first
01B3   301D           00976     movlw FIRST_VIDEO_LINE-1
01B4   02??           00977     subwf lcount,W
01B5   1D03           00978     skpz
                      00979     leave
01B6   2???               M     goto isr_exit
01B7   01??           00980     clrf slice
01B8   0A??           00981     incf task
                      00982     leave
01B9   2???               M     goto isr_exit
                      00983    
                      00984 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00985 ; The following tasks are responsible to render video display.
                      00986 ; Each video line must be completed by setting color to black.
                      00987 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00988 
                      00989 ; check if ball is visible on this scan line    
                      00990 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT    
                      00991 ;  22 tcy   
                      00992 ;  input:
                      00993 ;       none    
                      00994 ;  output:
                      00995 ;       C set if true   
01BA                  00996 ball_visible
01BA   08??           00997     movfw ball_y
                      00998     pushw
01BB   0019               M     movwi --SP
01BC   3E08           00999     addlw BALL_HEIGHT
                      01000     pushw
01BD   0019               M     movwi --SP
01BE   08??           01001     movfw lcount
01BF   2???           01002     call between ; +13 tcy
01C0   0008           01003     return
                      01004     
                      01005     
                      01006     
01C1                  01007 display_vbuffer
                      01008     display_byte 0
                          M     display_bit 0
01C1   35??               M     lslf vbuffer+0
01C2   301B               M     movlw BLACK
01C3   1803               M     skpnc
01C4   08??               M     movfw fg_color
01C5   008C               M     movwf TRISA
                          M     display_bit 0
01C6   35??               M     lslf vbuffer+0
01C7   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C8   1803               M     skpnc
01C9   08??               M     movfw fg_color
01CA   008C               M     movwf TRISA
                          M     display_bit 0
01CB   35??               M     lslf vbuffer+0
01CC   301B               M     movlw BLACK
01CD   1803               M     skpnc
01CE   08??               M     movfw fg_color
01CF   008C               M     movwf TRISA
                          M     display_bit 0
01D0   35??               M     lslf vbuffer+0
01D1   301B               M     movlw BLACK
01D2   1803               M     skpnc
01D3   08??               M     movfw fg_color
01D4   008C               M     movwf TRISA
                          M     display_bit 0
01D5   35??               M     lslf vbuffer+0
01D6   301B               M     movlw BLACK
01D7   1803               M     skpnc
01D8   08??               M     movfw fg_color
01D9   008C               M     movwf TRISA
                          M     display_bit 0
01DA   35??               M     lslf vbuffer+0
01DB   301B               M     movlw BLACK
01DC   1803               M     skpnc
01DD   08??               M     movfw fg_color
01DE   008C               M     movwf TRISA
                          M     display_bit 0
01DF   35??               M     lslf vbuffer+0
01E0   301B               M     movlw BLACK
01E1   1803               M     skpnc
01E2   08??               M     movfw fg_color
01E3   008C               M     movwf TRISA
                          M     display_bit 0
01E4   35??               M     lslf vbuffer+0
01E5   301B               M     movlw BLACK
01E6   1803               M     skpnc
01E7   08??               M     movfw fg_color
01E8   008C               M     movwf TRISA
                      01009     display_byte 1
                          M     display_bit 1
01E9   35??               M     lslf vbuffer+1
01EA   301B               M     movlw BLACK
01EB   1803               M     skpnc
01EC   08??               M     movfw fg_color
01ED   008C               M     movwf TRISA
                          M     display_bit 1
01EE   35??               M     lslf vbuffer+1
01EF   301B               M     movlw BLACK
01F0   1803               M     skpnc
01F1   08??               M     movfw fg_color
01F2   008C               M     movwf TRISA
                          M     display_bit 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F3   35??               M     lslf vbuffer+1
01F4   301B               M     movlw BLACK
01F5   1803               M     skpnc
01F6   08??               M     movfw fg_color
01F7   008C               M     movwf TRISA
                          M     display_bit 1
01F8   35??               M     lslf vbuffer+1
01F9   301B               M     movlw BLACK
01FA   1803               M     skpnc
01FB   08??               M     movfw fg_color
01FC   008C               M     movwf TRISA
                          M     display_bit 1
01FD   35??               M     lslf vbuffer+1
01FE   301B               M     movlw BLACK
01FF   1803               M     skpnc
0200   08??               M     movfw fg_color
0201   008C               M     movwf TRISA
                          M     display_bit 1
0202   35??               M     lslf vbuffer+1
0203   301B               M     movlw BLACK
0204   1803               M     skpnc
0205   08??               M     movfw fg_color
0206   008C               M     movwf TRISA
                          M     display_bit 1
0207   35??               M     lslf vbuffer+1
0208   301B               M     movlw BLACK
0209   1803               M     skpnc
020A   08??               M     movfw fg_color
020B   008C               M     movwf TRISA
                          M     display_bit 1
020C   35??               M     lslf vbuffer+1
020D   301B               M     movlw BLACK
020E   1803               M     skpnc
020F   08??               M     movfw fg_color
0210   008C               M     movwf TRISA
                      01010     display_byte 2
                          M     display_bit 2
0211   35??               M     lslf vbuffer+2
0212   301B               M     movlw BLACK
0213   1803               M     skpnc
0214   08??               M     movfw fg_color
0215   008C               M     movwf TRISA
                          M     display_bit 2
0216   35??               M     lslf vbuffer+2
0217   301B               M     movlw BLACK
0218   1803               M     skpnc
0219   08??               M     movfw fg_color
021A   008C               M     movwf TRISA
                          M     display_bit 2
021B   35??               M     lslf vbuffer+2
021C   301B               M     movlw BLACK
021D   1803               M     skpnc
021E   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021F   008C               M     movwf TRISA
                          M     display_bit 2
0220   35??               M     lslf vbuffer+2
0221   301B               M     movlw BLACK
0222   1803               M     skpnc
0223   08??               M     movfw fg_color
0224   008C               M     movwf TRISA
                          M     display_bit 2
0225   35??               M     lslf vbuffer+2
0226   301B               M     movlw BLACK
0227   1803               M     skpnc
0228   08??               M     movfw fg_color
0229   008C               M     movwf TRISA
                          M     display_bit 2
022A   35??               M     lslf vbuffer+2
022B   301B               M     movlw BLACK
022C   1803               M     skpnc
022D   08??               M     movfw fg_color
022E   008C               M     movwf TRISA
                          M     display_bit 2
022F   35??               M     lslf vbuffer+2
0230   301B               M     movlw BLACK
0231   1803               M     skpnc
0232   08??               M     movfw fg_color
0233   008C               M     movwf TRISA
                          M     display_bit 2
0234   35??               M     lslf vbuffer+2
0235   301B               M     movlw BLACK
0236   1803               M     skpnc
0237   08??               M     movfw fg_color
0238   008C               M     movwf TRISA
                      01011     display_byte 3
                          M     display_bit 3
0239   35??               M     lslf vbuffer+3
023A   301B               M     movlw BLACK
023B   1803               M     skpnc
023C   08??               M     movfw fg_color
023D   008C               M     movwf TRISA
                          M     display_bit 3
023E   35??               M     lslf vbuffer+3
023F   301B               M     movlw BLACK
0240   1803               M     skpnc
0241   08??               M     movfw fg_color
0242   008C               M     movwf TRISA
                          M     display_bit 3
0243   35??               M     lslf vbuffer+3
0244   301B               M     movlw BLACK
0245   1803               M     skpnc
0246   08??               M     movfw fg_color
0247   008C               M     movwf TRISA
                          M     display_bit 3
0248   35??               M     lslf vbuffer+3
0249   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024A   1803               M     skpnc
024B   08??               M     movfw fg_color
024C   008C               M     movwf TRISA
                          M     display_bit 3
024D   35??               M     lslf vbuffer+3
024E   301B               M     movlw BLACK
024F   1803               M     skpnc
0250   08??               M     movfw fg_color
0251   008C               M     movwf TRISA
                          M     display_bit 3
0252   35??               M     lslf vbuffer+3
0253   301B               M     movlw BLACK
0254   1803               M     skpnc
0255   08??               M     movfw fg_color
0256   008C               M     movwf TRISA
                          M     display_bit 3
0257   35??               M     lslf vbuffer+3
0258   301B               M     movlw BLACK
0259   1803               M     skpnc
025A   08??               M     movfw fg_color
025B   008C               M     movwf TRISA
                          M     display_bit 3
025C   35??               M     lslf vbuffer+3
025D   301B               M     movlw BLACK
025E   1803               M     skpnc
025F   08??               M     movfw fg_color
0260   008C               M     movwf TRISA
                      01012     display_byte 4
                          M     display_bit 4
0261   35??               M     lslf vbuffer+4
0262   301B               M     movlw BLACK
0263   1803               M     skpnc
0264   08??               M     movfw fg_color
0265   008C               M     movwf TRISA
                          M     display_bit 4
0266   35??               M     lslf vbuffer+4
0267   301B               M     movlw BLACK
0268   1803               M     skpnc
0269   08??               M     movfw fg_color
026A   008C               M     movwf TRISA
                          M     display_bit 4
026B   35??               M     lslf vbuffer+4
026C   301B               M     movlw BLACK
026D   1803               M     skpnc
026E   08??               M     movfw fg_color
026F   008C               M     movwf TRISA
                          M     display_bit 4
0270   35??               M     lslf vbuffer+4
0271   301B               M     movlw BLACK
0272   1803               M     skpnc
0273   08??               M     movfw fg_color
0274   008C               M     movwf TRISA
                          M     display_bit 4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0275   35??               M     lslf vbuffer+4
0276   301B               M     movlw BLACK
0277   1803               M     skpnc
0278   08??               M     movfw fg_color
0279   008C               M     movwf TRISA
                          M     display_bit 4
027A   35??               M     lslf vbuffer+4
027B   301B               M     movlw BLACK
027C   1803               M     skpnc
027D   08??               M     movfw fg_color
027E   008C               M     movwf TRISA
                          M     display_bit 4
027F   35??               M     lslf vbuffer+4
0280   301B               M     movlw BLACK
0281   1803               M     skpnc
0282   08??               M     movfw fg_color
0283   008C               M     movwf TRISA
                          M     display_bit 4
0284   35??               M     lslf vbuffer+4
0285   301B               M     movlw BLACK
0286   1803               M     skpnc
0287   08??               M     movfw fg_color
0288   008C               M     movwf TRISA
                      01013     display_byte 5
                          M     display_bit 5
0289   35??               M     lslf vbuffer+5
028A   301B               M     movlw BLACK
028B   1803               M     skpnc
028C   08??               M     movfw fg_color
028D   008C               M     movwf TRISA
                          M     display_bit 5
028E   35??               M     lslf vbuffer+5
028F   301B               M     movlw BLACK
0290   1803               M     skpnc
0291   08??               M     movfw fg_color
0292   008C               M     movwf TRISA
                          M     display_bit 5
0293   35??               M     lslf vbuffer+5
0294   301B               M     movlw BLACK
0295   1803               M     skpnc
0296   08??               M     movfw fg_color
0297   008C               M     movwf TRISA
                          M     display_bit 5
0298   35??               M     lslf vbuffer+5
0299   301B               M     movlw BLACK
029A   1803               M     skpnc
029B   08??               M     movfw fg_color
029C   008C               M     movwf TRISA
                          M     display_bit 5
029D   35??               M     lslf vbuffer+5
029E   301B               M     movlw BLACK
029F   1803               M     skpnc
02A0   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A1   008C               M     movwf TRISA
                          M     display_bit 5
02A2   35??               M     lslf vbuffer+5
02A3   301B               M     movlw BLACK
02A4   1803               M     skpnc
02A5   08??               M     movfw fg_color
02A6   008C               M     movwf TRISA
                          M     display_bit 5
02A7   35??               M     lslf vbuffer+5
02A8   301B               M     movlw BLACK
02A9   1803               M     skpnc
02AA   08??               M     movfw fg_color
02AB   008C               M     movwf TRISA
                          M     display_bit 5
02AC   35??               M     lslf vbuffer+5
02AD   301B               M     movlw BLACK
02AE   1803               M     skpnc
02AF   08??               M     movfw fg_color
02B0   008C               M     movwf TRISA
02B1   0008           01014     return
                      01015  
                      01016 ; task 10, draw score en ball count
                      01017 ;  lcount 30-49    
02B2                  01018 draw_score 
02B2   0021           01019     banksel TRISA
02B3   08??           01020     movfw slice
02B4   3689           01021     lsrf WREG
02B5   3689           01022     lsrf WREG
                      01023     pushw
02B6   0019               M     movwi --SP
02B7   300F           01024     movlw 0xf
02B8   05??           01025     andwf score,W
02B9   2???           01026     call digits
02BA   04??           01027     iorwf vbuffer
02BB   0E??           01028     swapf score+1,W
02BC   390F           01029     andlw 0xf
02BD   2???           01030     call digits
02BE   0E89           01031     swapf WREG
02BF   04??           01032     iorwf vbuffer
02C0   300F           01033     movlw 0xf
02C1   05??           01034     andwf score+1,W
02C2   2???           01035     call digits
02C3   04??           01036     iorwf vbuffer+1
02C4   08??           01037     movfw balls
02C5   2???           01038     call digits
02C6   04??           01039     iorwf vbuffer+5
                      01040     tdelay 9
                          M     if 9==0
                          M     exitm
                          M     endif
                          M     if 9==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 9==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 9>5
  0002                    M     variable q=(9-3)/3
  0000                    M     variable r=9-3-3*q
02C7   3002               M     movlw q
02C8   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02C9   2???           01041     call display_vbuffer
                      01042     dropn 1
02CA   3101               M     addfsr T,1
02CB                  01043 score_exit
                      01044     next_task 5*4
02CB   0A??               M     incf slice
02CC   3014               M     movlw 5*4
02CD   02??               M     subwf slice,W
02CE   1D03               M     skpz
                          M     leave
02CF   2???               M     goto isr_exit
02D0   01??               M     clrf slice
02D1   0A??               M     incf task
                          M     leave
02D2   2???               M     goto isr_exit
                      01045 
                      01046     
                      01047 ; task 11,  draw top wall, 8 screen lines 
                      01048 ; lcount 50-57    
02D3                  01049 draw_top_wall
02D3   0021           01050     banksel TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4   09??           01051     comf vbuffer
02D5   09??           01052     comf vbuffer+1
02D6   09??           01053     comf vbuffer+2
02D7   09??           01054     comf vbuffer+3
02D8   09??           01055     comf vbuffer+4
02D9   09??           01056     comf vbuffer+5
02DA   300B           01057     movlw WHITE
02DB   00??           01058     movwf fg_color
                      01059     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02DC   3016               M     movlw q
02DD   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01060     white
02DE   300B               M     movlw WHITE
02DF   008C               M     movwf TRISA
02E0   2???           01061     call display_vbuffer
                      01062     white
02E1   300B               M     movlw WHITE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02E2   008C               M     movwf TRISA
                      01063     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02E3   2???               M     call _4tcy
                          M     exitm
                      01064     black
02E4   301B               M     movlw BLACK
02E5   008C               M     movwf TRISA
                      01065     next_task BRICK_HEIGHT
02E6   0A??               M     incf slice
02E7   3008               M     movlw BRICK_HEIGHT
02E8   02??               M     subwf slice,W
02E9   1D03               M     skpz
                          M     leave
02EA   2???               M     goto isr_exit
02EB   01??               M     clrf slice
02EC   0A??               M     incf task
                          M     leave
02ED   2???               M     goto isr_exit
                      01066 
                      01067 ; put ball mask in video_buffer
                      01068 ; 38 tcy    
02EE                  01069 put_ball_in_buffer
02EE   2???           01070     call ball_visible ; +22tcy
02EF   1C03           01071     skpc
02F0   3???           01072     bra kill_time
02F1   0187           01073     clrf FSR1H
02F2   30??           01074     movlw low vbuffer
02F3   0086           01075     movwf FSR1L
02F4   08??           01076     movfw ball_byte
02F5   0786           01077     addwf FSR1L
02F6   08??           01078     movfw ball_mask
02F7   001E           01079     movwi FSR1++
02F8   08??           01080     movfw ball_mask+1
02F9   3FC0           01081     movwi [FSR1]
02FA   0008           01082     return ; 37 tcy
02FB                  01083 kill_time 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01084     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3
  0001                    M     variable r=7-3-3*q
02FB   3001               M     movlw q
02FC   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02FD   0000               M     nop
                          M     exitm
02FE   0008           01085     return ; 37 tcy
                      01086     
                      01087 ; task 12,  only on even field draw vertical sides and ball.
                      01088 ; lcount 58-73    
02FF                  01089 draw_sides 
02FF   0021           01090     banksel TRISA
0300   2???           01091     call put_ball_in_buffer
                      01092     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31>5
  000B                    M     variable q=(LEFT_MARGIN-31-3)/3
  0002                    M     variable r=LEFT_MARGIN-31-3-3*q
0301   300B               M     movlw q
0302   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
0303   3???               M     bra $+1
                          M     exitm
                      01093     white
0304   300B               M     movlw WHITE
0305   008C               M     movwf TRISA
0306   2???           01094     call display_vbuffer
                      01095     white
0307   300B               M     movlw WHITE
0308   008C               M     movwf TRISA
                      01096     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0309   2???               M     call _4tcy
                          M     exitm
                      01097     black
030A   301B               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

030B   008C               M     movwf TRISA
                      01098     next_task 2*BRICK_HEIGHT
030C   0A??               M     incf slice
030D   3010               M     movlw 2*BRICK_HEIGHT
030E   02??               M     subwf slice,W
030F   1D03               M     skpz
                          M     leave
0310   2???               M     goto isr_exit
0311   01??               M     clrf slice
0312   0A??               M     incf task
                          M     leave
0313   2???               M     goto isr_exit
                      01099  
0314                  01100 copy_row
0314   0016           01101     moviw FSR1++
0315   04??           01102     iorwf vbuffer
0316   0016           01103     moviw FSR1++
0317   04??           01104     iorwf vbuffer+1
0318   0016           01105     moviw FSR1++
0319   04??           01106     iorwf vbuffer+2
031A   0016           01107     moviw FSR1++
031B   04??           01108     iorwf vbuffer+3
031C   0016           01109     moviw FSR1++
031D   04??           01110     iorwf vbuffer+4
031E   0016           01111     moviw FSR1++
031F   04??           01112     iorwf vbuffer+5
0320   0008           01113     return    
                      01114 
0321                  01115 rows_common
0321   00??           01116     movwf fg_color
0322   0187           01117     clrf FSR1H
0323   2???           01118     call copy_row
                      01119     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
0324   0000               M     nop
                          M     exitm
                      01120     white
0325   300B               M     movlw WHITE
0326   008C               M     movwf TRISA
0327   2???           01121     call display_vbuffer
                      01122     white
0328   300B               M     movlw WHITE
0329   008C               M     movwf TRISA
                      01123     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
032A   2???               M     call _4tcy
                          M     exitm
                      01124     black
032B   301B               M     movlw BLACK
032C   008C               M     movwf TRISA
                      01125     next_task BRICKS_ROWS*BRICK_HEIGHT
032D   0A??               M     incf slice
032E   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
032F   02??               M     subwf slice,W
0330   1D03               M     skpz
                          M     leave
0331   2???               M     goto isr_exit
0332   01??               M     clrf slice
0333   0A??               M     incf task
                          M     leave
0334   2???               M     goto isr_exit
                      01126     
                      01127 ; task 13, draw brick rows
                      01128 ; lcount 74-121   
0335                  01129 draw_bricks
0335   002?           01130     banksel vbuffer
0336   2???           01131     call put_ball_in_buffer
0337   30??           01132     movlw low row1
0338   0086           01133     movwf FSR1L
0339   30F8           01134     movlw 0xf8
033A   05??           01135     andwf slice,W
033B   0786           01136     addwf FSR1L
033C   003B           01137     banksel PWM1CON
                      01138     pushw
033D   0019               M     movwi --SP
033E   3010           01139     movlw 2<<3
033F   0200           01140     subwf T,W
0340   1803           01141     skpnc
0341   161B           01142     bsf PWM1CON,POL
                      01143     popw
0342   0012               M     moviw SP++
0343   0021           01144     banksel TRISA
0344   3689           01145     lsrf WREG
0345   3689           01146     lsrf WREG
0346   000B           01147     brw
0347   3009           01148     movlw YELLOW
0348   3???           01149     bra rows_common
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0349   3009           01150     movlw YELLOW
034A   3???           01151     bra rows_common
034B   3009           01152     movlw MAUVE
034C   3???           01153     bra rows_common
034D   3009           01154     movlw MAUVE
034E   3???           01155     bra rows_common
034F   3019           01156     movlw BLUE
0350   3???           01157     bra rows_common
0351   3019           01158     movlw BLUE
0352   3???           01159     bra rows_common
                      01160     
  00000028            01161 MSG_FIRST equ 40
  00000028            01162 MSG_HEIGHT equ 40
  00000010            01163 MSG_PIXELS_COUNT equ 16 
                      01164 ; task 14
                      01165 ; draw all rows below bricks to paddle
                      01166 ; lcount 122-241 
0353                  01167 draw_empty
0353   0021           01168     banksel TRISA
0354   1B00           01169     btfsc flags, F_OVER
0355   3???           01170     bra print_msg
0356   2???           01171     call put_ball_in_buffer
0357   300B           01172     movlw WHITE
0358   00??           01173     movwf fg_color
                      01174     tdelay LEFT_MARGIN-35
                          M     if LEFT_MARGIN-35==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35>5
  000A                    M     variable q=(LEFT_MARGIN-35-3)/3
  0001                    M     variable r=LEFT_MARGIN-35-3-3*q
0359   300A               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035A   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
035B   0000               M     nop
                          M     exitm
                      01175     white
035C   300B               M     movlw WHITE
035D   008C               M     movwf TRISA
035E   2???           01176     call display_vbuffer
                      01177     white
035F   300B               M     movlw WHITE
0360   008C               M     movwf TRISA
                      01178     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0361   2???               M     call _4tcy
                          M     exitm
                      01179     black
0362   301B               M     movlw BLACK
0363   008C               M     movwf TRISA
0364   3???           01180     bra draw_empty_exit
0365                  01181 print_msg    
0365   3009           01182     movlw YELLOW ; message color
0366   00??           01183     movwf fg_color
0367   3028           01184     movlw MSG_FIRST
                      01185     pushw
0368   0019               M     movwi --SP
0369   3050           01186     movlw MSG_FIRST+MSG_HEIGHT
                      01187     pushw
036A   0019               M     movwi --SP
036B   08??           01188     movfw slice
036C   2???           01189     call between
036D   1C03           01190     skpc
036E   3???           01191     bra msg
036F   1F80           01192     btfss flags, F_COOL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0370   3???           01193     bra display_end
                      01194 ; perfect score display 'COOL' message
0371   30??           01195     movlw high cool_msg
0372   0087           01196     movwf FSR1H
0373   30??           01197     movlw low cool_msg
0374   0086           01198     movwf FSR1L
0375   2???           01199     call display_msg
0376   3???           01200     bra msg
                      01201 ; display 'END!' message    
0377                  01202 display_end
0377   30??           01203     movlw high end_msg
0378   0087           01204     movwf FSR1H
0379   30??           01205     movlw low end_msg
037A   0086           01206     movwf FSR1L
037B   2???           01207     call display_msg
037C                  01208 msg
037C   2???           01209     call display_vbuffer
037D                  01210 draw_empty_exit
                      01211     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
037D   0A??               M     incf slice
037E   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
037F   02??               M     subwf slice,W
0380   1D03               M     skpz
                          M     leave
0381   2???               M     goto isr_exit
0382   01??               M     clrf slice
0383   0A??               M     incf task
                          M     leave
0384   2???               M     goto isr_exit
                      01212 ;    incf slice
                      01213 ;    movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01214 ;    subwf lcount,W
                      01215 ;    skpz
                      01216 ;    leave
                      01217 ;    clrf slice
                      01218 ;    incf task
                      01219 ;    leave
                      01220 
                      01221 ; display end message
                      01222 ; message as a maximum of 24 vbuffer    
0385                  01223 display_msg
0385   3028           01224     movlw MSG_FIRST
0386   02??           01225     subwf slice,W
0387   3689           01226     lsrf WREG
0388   3689           01227     lsrf WREG
0389   3689           01228     lsrf WREG
038A   00??           01229     movwf temp1
038B   3589           01230     lslf WREG
038C   07??           01231     addwf temp1,W
038D   0786           01232     addwf FSR1L
038E   1803           01233     skpnc
038F   0A87           01234     incf FSR1H
0390   0016           01235     moviw FSR1++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0391   00??           01236     movwf vbuffer+1
0392   0016           01237     moviw FSR1++
0393   00??           01238     movwf vbuffer+2
0394   0016           01239     moviw FSR1++
0395   00??           01240     movwf vbuffer+3
0396   0008           01241     return
                      01242     
                      01243 ; task 15, draw paddle at bottom screen  
                      01244 ; lcount 242-249    
0397                  01245 draw_paddle
0397   0021           01246     banksel TRISA
0398   0187           01247     clrf FSR1H
0399   30??           01248     movlw low vbuffer
039A   0086           01249     movwf FSR1L
039B   08??           01250     movfw paddle_byte
039C   0786           01251     addwf FSR1L
039D   08??           01252     movfw paddle_mask
039E   001E           01253     movwi FSR1++
039F   08??           01254     movfw paddle_mask+1
03A0   3FC0           01255     movwi  [FSR1]
03A1   300B           01256     movlw WHITE
03A2   00??           01257     movwf fg_color
                      01258     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
03A3   3015               M     movlw q
03A4   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01259     white
03A5   300B               M     movlw WHITE
03A6   008C               M     movwf TRISA
03A7   2???           01260     call display_vbuffer
                      01261     white
03A8   300B               M     movlw WHITE
03A9   008C               M     movwf TRISA
                      01262     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
03AA   2???               M     call _4tcy
                          M     exitm
                      01263     black
03AB   301B               M     movlw BLACK
03AC   008C               M     movwf TRISA
                      01264     next_task PADDLE_THICKNESS
03AD   0A??               M     incf slice
03AE   3004               M     movlw PADDLE_THICKNESS
03AF   02??               M     subwf slice,W
03B0   1D03               M     skpz
                          M     leave
03B1   2???               M     goto isr_exit
03B2   01??               M     clrf slice
03B3   0A??               M     incf task
                          M     leave
03B4   2???               M     goto isr_exit
                      01265 
                      01266 ; task 16,  wait end of this field, reset task to zero    
                      01267 ; lcount 251-262/3    
03B5                  01268 wait_field_end
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B5   1800           01269     btfsc flags, F_BIT8
03B6   2???           01270     goto hi_line
                      01271     leave
03B7   2???               M     goto isr_exit
03B8                  01272 hi_line
03B8   1880           01273     btfsc flags,F_EVEN
03B9   2???           01274     goto even_field
03BA   3005           01275     movlw 5
03BB   02??           01276     subwf lcount,W
03BC   1D03           01277     skpz
                      01278     leave
03BD   2???               M     goto isr_exit
03BE   2???           01279     goto field_end
03BF                  01280 even_field
03BF   3006           01281     movlw 6
03C0   02??           01282     subwf lcount,W
03C1   1D03           01283     skpz
                      01284     leave
03C2   2???               M     goto isr_exit
                      01285 ; even field last line is half_line    
                      01286 ; set PWM3 for line 263 half-line
03C3   003B           01287     banksel PWM3DC
03C4   3003           01288     movlw high HALF_LINE
03C5   00B6           01289     movwf PWM3PRH
03C6   308D           01290     movlw low HALF_LINE
03C7   00B5           01291     movwf PWM3PRL
03C8   17BF           01292     bsf PWM3LDCON,7
03C9                  01293 field_end
03C9   01??           01294     clrf task
03CA   01??           01295     clrf slice
03CB   01??           01296     clrf lcount
03CC   1000           01297     bcf flags, F_BIT8
03CD   1500           01298     bsf flags, F_SYNC
                      01299 ; toggle odd/even field flag    
03CE   3002           01300     movlw 1<<F_EVEN
03CF   06??           01301     xorwf flags
                      01302     leave
03D0   2???               M     goto isr_exit
                      01303 
                      01304 ; helper functions
                      01305 
                      01306 ; delay = 4+(n-1)*3    
                      01307 ;input:
                      01308 ;   WREG <- n {1..255}
03D1                  01309 _3ntcy
03D1   0B89           01310     decfsz WREG
03D2   3???           01311     bra $-1
03D3   0008           01312     return
03D4                  01313 _5tcy ; call here for 5*tcy delay using a single instruction
03D4   0000           01314     nop
03D5                  01315 _4tcy ; call here for 4*Tcy delay using a single instruction    
03D5   0008           01316     return
                      01317 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01318 ; increment user score
                      01319 ; This is a BCD addition where a single digit is added to score.   
                      01320 ; score is stored as big indian
                      01321 ; argument: 
                      01322 ;   WREG ->  bdc digit to add to score variable
03D6                  01323 inc_score
03D6   07??           01324     addwf score+1
03D7   1883           01325     btfsc STATUS,DC
03D8   3???           01326     bra $+6
03D9   300F           01327     movlw 15
03DA   05??           01328     andwf score+1,W
03DB   3C09           01329     sublw 9
03DC   1803           01330     skpnc
03DD   3???           01331     bra $+3
03DE   3006           01332     movlw 6
03DF   07??           01333     addwf score+1
03E0   0E??           01334     swapf score+1,W
03E1   390F           01335     andlw 15
03E2   3C09           01336     sublw 9
03E3   1803           01337     skpnc
03E4   3???           01338     bra game_over_test
03E5   3060           01339     movlw 0x60
03E6   07??           01340     addwf score+1
03E7   0A??           01341     incf score
                      01342 ; double ball speed if score >=200
03E8   3002           01343     movlw 2
03E9   02??           01344     subwf score,W
03EA   1C03           01345     skpc
03EB   0008           01346     return
03EC   3001           01347     movlw 1
03ED   00??           01348     movwf ball_speed
03EE                  01349 game_over_test ; all bricks destroyed?
03EE   3004           01350     movlw 4
03EF   02??           01351     subwf score,W
03F0   1D03           01352     skpz
03F1   0008           01353     return
03F2   3008           01354     movlw 0x08
03F3   02??           01355     subwf score+1,W
03F4   1D03           01356     skpz
03F5   0008           01357     return
03F6   1700           01358     bsf flags,F_OVER ; game over
03F7   1780           01359     bsf flags,F_COOL ; with maximum score.
03F8   0008           01360     return
                      01361     
                      01362     
03F9                  01363 brick_wall_init
03F9   30??           01364     movlw high row1
03FA   0087           01365     movwf FSR1H
03FB   30??           01366     movlw low row1
03FC   0086           01367     movwf FSR1L
03FD   3030           01368     movlw BRICKS_ROWS*8
03FE   00??           01369     movwf temp1
03FF   30FF           01370     movlw 0xff
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0400                  01371 bw_init
0400   001E           01372     movwi FSR1++
0401   0B??           01373     decfsz temp1
0402   3???           01374     bra bw_init
0403   0008           01375     return
                      01376 
                      01377 ; compute tcy delay from pixel coordinateur
                      01378 ;  1 pixel is 5 tcy wide.
                      01379 ; input:
                      01380 ;   WREG  px
                      01381 ; output
                      01382 ;   WREG  tcy    
0404                  01383 px2tcy
                      01384    pushw
0404   0019               M     movwi --SP
0405   3589           01385    lslf WREG
0406   3589           01386    lslf WREG
0407   0780           01387    addwf T
                      01388    popw
0408   0012               M     moviw SP++
0409   0008           01389    return
                      01390 
                      01391    
                      01392     
                      01393     
                      01394     
                      01395 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
040A                  01396 lfsr16
040A   002?           01397     banksel seed
040B   08??           01398     movfw seed+1
040C   00??           01399     movwf temp1
040D   3589           01400     lslf WREG
040E   3589           01401     lslf WREG
040F   00??           01402     movwf temp2
0410   06??           01403     xorwf temp1
0411   35??           01404     lslf temp2
0412   08??           01405     movfw temp2
0413   06??           01406     xorwf temp1
0414   35??           01407     lslf temp2
0415   35??           01408     lslf temp2,W
0416   06??           01409     xorwf temp1
0417   35??           01410     lslf temp1
0418   0D??           01411     rlf seed
0419   0D??           01412     rlf seed+1
041A   08??           01413     movfw seed
041B   0008           01414     return
                      01415     
                      01416 
041C                  01417 set_ball_dx
041C   2???           01418     call lfsr16 ;random
041D   3007           01419     movlw 7
041E   05??           01420     andwf seed,W
041F   3589           01421     lslf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0420   000B           01422     brw
0421   3000           01423     movlw 0
0422   3???           01424     bra set_ball_dx_exit
0423   3001           01425     movlw 1
0424   3???           01426     bra set_ball_dx_exit
0425   30FF           01427     movlw -1
0426   3???           01428     bra set_ball_dx_exit
0427   3000           01429     movlw 0
0428   3???           01430     bra set_ball_dx_exit
0429   3001           01431     movlw 1
042A   3???           01432     bra set_ball_dx_exit
042B   30FF           01433     movlw -1
042C   3???           01434     bra set_ball_dx_exit
042D   30FF           01435     movlw -1
042E   3???           01436     bra set_ball_dx_exit
042F   3001           01437     movlw 1
0430                  01438 set_ball_dx_exit
0430   00??           01439     movwf ball_dx
0431   0008           01440     return
                      01441     
0432                  01442 game_init
0432   01??           01443     clrf score
0433   01??           01444     clrf score+1
0434   2???           01445     call brick_wall_init
0435   002?           01446     banksel balls
0436   3003           01447     movlw 3
0437   00??           01448     movwf balls
0438   01??           01449     clrf ball_timer
0439   0A??           01450     incf ball_timer
043A   30EF           01451     movlw PADDLE_Y-BALL_HEIGHT+1
043B   00??           01452     movwf ball_y
043C   2???           01453     call set_ball_dx
043D   30FC           01454     movlw -4
043E   00??           01455     movwf ball_dy
043F   3002           01456     movlw 2
0440   00??           01457     movwf ball_speed
0441   01??           01458     clrf flags
0442   1600           01459     bsf flags, F_START
0443   0008           01460     return
                      01461     
                      01462 ; delay by TIMER0
                      01463 ; parameter
                      01464 ;   WREG -> 2*Tcy+7cy    
0444                  01465 t0delay 
0444   0989           01466     comf WREG
0445   0095           01467     movwf TMR0
0446   110B           01468     bcf INTCON,T0IF
0447   1D0B           01469     btfss INTCON,T0IF
0448   3???           01470     bra $-1
0449   0008           01471     return
                      01472     
                      01473 MAIN_PROG CODE                      ; let linker place main program
                      01474 
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000                  01475 initialize
                      01476 ; clear common RAM
0000   0185           01477     clrf FSR0H
0001   3070           01478     movlw 0x70
0002   0084           01479     movwf FSR0L
0003   0103           01480     clrw
0004   001A           01481     movwi FSR0++
0005   1F84           01482     btfss FSR0L,7
0006   3???           01483     bra $-2
                      01484 ; clear banked RAM
0007   0184           01485     clrf FSR0L
0008   3020           01486     movlw 0x20
0009   0085           01487     movwf FSR0H
000A   0103           01488     clrw 
000B   001A           01489     movwi FSR0++
000C   1C05           01490     btfss FSR0H,0
000D   3???           01491     bra $-2
                      01492 ; initialize LFSR seed
000E   002?           01493     banksel seed
000F   09??           01494     comf seed
0010   09??           01495     comf seed+1
0011   09??           01496     comf seed+2
0012   09??           01497     comf seed+3
                      01498 ;   setup arguments stack pointer
0013   30??           01499     movlw high (stack+STACK_SIZE)
0014   0085           01500     movwf FSR0H
0015   30??           01501     movlw low (stack+STACK_SIZE)
0016   0084           01502     movwf FSR0L
                      01503 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01504 ; TIMER0 prescale 1:2
0017   3050           01505     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01506     movwf OPTION_REG
                      01507 ; disable analog inputs, except AN0
0019   0023           01508     banksel ANSELA
001A   018C           01509     clrf ANSELA
                      01510 ; paddle potentiometer input     
001B   140C           01511     bsf ANSELA,PADDLE
001C   0021           01512     banksel ADCON1
001D   3020           01513     movlw (2<<ADCS0)
001E   009E           01514     movwf ADCON1
                      01515 ; pin setup
001F   0024           01516     banksel WPUA
0020   018C           01517     clrf WPUA
0021   0021           01518     banksel TRISA
0022   110C           01519     bcf TRISA,SYNC_OUT
0023   0022           01520     banksel LATA
0024   160C           01521     bsf LATA, VIDEO_OUT
                      01522 ; PWM1 chroma signal on RA1
0025   003B           01523     banksel PWM1CON
0026   019F           01524     clrf PWM1LDCON
0027   0191           01525     clrf PWM1PHL
0028   0192           01526     clrf PWM1PHH
0029   0197           01527     clrf PWM1OFL
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   0198           01528     clrf PWM1OFH
002B   0196           01529     clrf PWM1PRH
002C   3007           01530     movlw 7
002D   0095           01531     movwf PWM1PRL
002E   3004           01532     movlw 4
002F   0093           01533     movwf PWM1DCL
0030   0194           01534     clrf PWM1DCH
0031   179F           01535     bsf PWM1LDCON,7
0032   30C0           01536     movlw (1<<EN)|(1<<OE)
0033   009B           01537     movwf PWM1CON
                      01538 ; PWM2 sound
0034   003B           01539     banksel PWM2CON
0035   01A1           01540     clrf PWM2PHL
0036   01A2           01541     clrf PWM2PHH
0037   01A7           01542     clrf PWM2OFL
0038   01A8           01543     clrf PWM2OFH
0039   3030           01544     movlw 3<<PWM2PS0 ; clock source FOSC/8
003A   00AE           01545     movwf PWM2CLKCON
003B   300D           01546     movlw high 3578;7
003C   00A6           01547     movwf PWM2PRH
003D   30FA           01548     movlw low 3578;7
003E   00A5           01549     movwf PWM2PRL
003F   3626           01550     lsrf PWM2PRH,W
0040   00A4           01551     movwf PWM2DCH
0041   0C25           01552     rrf PWM2PRL,W
0042   00A3           01553     movwf PWM2DCL
0043   17AF           01554     bsf PWM2LDCON,LDA
                      01555 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0044   003B           01556     banksel PWM3CON
0045   01BF           01557     clrf PWM3LDCON
0046   01B1           01558     clrf PWM3PHL
0047   01B2           01559     clrf PWM3PHH
0048   01B7           01560     clrf PWM3OFL
0049   01B8           01561     clrf PWM3OFH
004A   301B           01562     movlw low HPERIOD
004B   00B5           01563     movwf PWM3PRL
004C   3007           01564     movlw high HPERIOD
004D   00B6           01565     movwf PWM3PRH
004E   3086           01566     movlw HSYNC
004F   00B3           01567     movwf PWM3DCL
0050   01B4           01568     clrf PWM3DCH
0051   30D0           01569     movlw (1<<EN)|(1<<OE)|(1<<POL)
0052   00BB           01570     movwf PWM3CON
0053   17BF           01571     bsf PWM3LDCON,7
0054   143C           01572     bsf PWM3INTE,PRIE
                      01573 ; enbable interrupt    
0055   0020           01574     banksel PIR3
0056   1313           01575     bcf PIR3,PWM3IF
0057   0021           01576     banksel PIE3
0058   1713           01577     bsf PIE3,PWM3IE
0059   170B           01578     bsf INTCON,PEIE
005A   178B           01579     bsf INTCON,GIE
005B   2???           01580     call game_init
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005C   01??           01581     clrf flags
005D   1500           01582     bsf flags, F_SYNC
                      01583 ; test code
005E   1600           01584     bsf flags, F_START
                      01585 ; all processing done in ISR    
005F   2???           01586     goto $
                      01587 
                      01588 ;digits character table
                      01589 ; input:
                      01590 ;   T -> glyph row
                      01591 ;   WREG -> digit
                      01592 ; output:
                      01593 ;   WREG -> pixels
                      01594 ;   T -> glyph row    
0060                  01595 digits
                      01596     pushw 
0060   0019               M     movwi --SP
0061   3589           01597     lslf WREG
0062   3589           01598     lslf WREG
0063   0780           01599     addwf T
                      01600     popw
0064   0012               M     moviw SP++
0065   0700           01601     addwf T,W
0066   000B           01602     brw
0067   3440 34A0 34A0 01603     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006C   3440 34C0 3440 01604     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0071   34E0 3420 34C0 01605     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0076   34E0 3420 34C0 01606     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
007B   34A0 34A0 34E0 01607     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0080   34E0 3480 34E0 01608     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0085   34C0 3480 34E0 01609     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
008A   34E0 3420 3420 01610     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
008F   34E0 34A0 34E0 01611     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0094   34E0 34A0 34E0 01612     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
0099   0001           01613     reset
                      01614     
009A                  01615 frequency
009A   000B           01616     brw
009B   348B 34D3      01617     dt high 35795, low 35795 ; 100 hertz
009D   340D 34FB      01618     dt high 3579, low 3579 ; 1000 hertz
009F   0001           01619     reset
                      01620   
                      01621 ;display END! when game is over    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A0                  01622 end_msg
                      01623 ;    brw
00A0   00E8 00C8 0000 01624     data 0xe8,0xc8,0
00A3   008E 00A8 0000 01625     data 0x8e,0xa8,0
00A6   00EA 00A8 0000 01626     data 0xea,0xa8,0
00A9   008A 00A0 0000 01627     data 0x8a,0xa0,0
00AC   00EA 00C8 0000 01628     data 0xea,0xc8,0
                      01629   
00AF                  01630 cool_msg
                      01631 ;    brw
00AF   00EE 00E8 0000 01632     data 0xee,0xe8,0
00B2   008A 00A8 0000 01633     data 0x8a,0xa8,0
00B5   008A 00A8 0000 01634     data 0x8a,0xa8,0
00B8   008A 00A8 0000 01635     data 0x8a,0xa8,0
00BB   00EE 00EE 0000 01636     data 0xee,0xee,0
                      01637     
                      01638 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01639 max_score 
                      01640  
3FA7 1EFF             01641     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
YELLOW                            00000009
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_0084                         00000084
_ISR_00F8                         000000F8
_ISR_0126                         00000126
_ISR_016C                         0000016C
_ISR_01B1                         000001B1
_ISR_0303                         00000303
_ISR_03D2                         000003D2
_ISR_03D8                         000003D8
_ISR_03DD                         000003DD
_ISR_0448                         00000448
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_005F                   0000005F
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         0000019E
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         00000123
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001BA
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           000001A5
between_exit                      000001AF
between_exit2                     000001B1
black                             
blue                              
bottom_bound                      0000011C
bounce_left                       00000155
bouncing                          00000144
brick_wall_init                   000003F9
bw_init                           00000400
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         0000016E
collision_exit                    000001A3
compute_ball_mask                 0000015D
compute_paddle_mask               000000EA
cool_msg                          000000AF
copy_row                          00000314
dark_green                        
digits                            00000060
display_bit                       
display_byte                      
display_end                       00000377
display_msg                       00000385
display_vbuffer                   000001C1
draw_bricks                       00000335
draw_empty                        00000353
draw_empty_exit                   0000037D
draw_paddle                       00000397
draw_score                        000002B2
draw_sides                        000002FF
draw_top_wall                     000002D3
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

dropn                             
eeprom                            00000780
end_msg                           000000A0
even_field                        000003BF
even_field_read                   0000008E
fg_color                          000000D7
field_end                         000003C9
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         0000009A
game_init                         00000432
game_over                         000000DE
game_over_test                    000003EE
game_running                      000000D7
gray                              white
hi_line                           000003B8
inc_score                         000003D6
initialize                        00000000
isr                               00000004
isr_exit                          00000030
kill_time                         000002FB
lcount                            00000001
leave                             
left_bound                        00000102
lfsr16                            0000040A
mauve                             
max_score                         00000780
move_ball                         000000FA
move_ball_exit                    00000135
move_y                            0000010F
msg                               0000037C
next_task                         
odd_fld_pread                     0000000F
paddle_bounce                     00000138
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000157
pickn                             
pokew                             
pong_sound                        0000019F
popw                              
porch_off                         
porch_on                          
post_last                         0000006A
post_vsync                        00000061
pre_vsync                         00000038
print_msg                         00000365
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  19:32:16         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

pushw                             
put_ball_in_buffer                000002EE
px2tcy                            00000404
q                                 00000015
r                                 00000000
read_button                       000000CA
read_paddle                       0000007B
right_bound                       00000108
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       00000321
score                             0000000C
score_exit                        000002CB
seed                              00000030
set_ball_dx                       0000041C
set_ball_dx_exit                  00000430
set_presync                       00000043
set_vsync                         00000059
skip_2_tasks                      000000E2
slice                             00000002
sound                             0000009B
sound_fx1                         000000AA
sound_init                        000000B3
sound_off                         000000A3
sound_timer                       000000DE
stack                             00000020
swap_var                          
swapw                             
t0delay                           00000444
task                              00000003
task_switch                       0000001C
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         00000113
vbuffer                           000000A0
video_first                       000001B3
vsync                             0000004E
vsync_end                         0000006E
wait_field_end                    000003B5
wait_trigger                      000000D9
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   336 suppressed

