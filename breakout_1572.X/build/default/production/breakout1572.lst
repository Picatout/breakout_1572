MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00002 ;                BREAKOUT game
                      00003 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00004 ;             IMPLEMENTATION NOTES
                      00005 ;  PWM3 is used to generate NTSC synchronization signal.
                      00006 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00007 ;  Inside this interrupt there is a round robin task scheduler.
                      00008 ;  All video display and game logic is done inside these tasks.
                      00009 ;  After MCU initialization the main() procedure is an empty loop.
                      00010 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00011 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00012 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00013 ;  short of 140 nanoseconds.
                      00014 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00015 ;  must execute in less than 454 Tcy.    
                      00016 ;  The overhead before entering a task in at most 58Tcy.
                      00017 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00018 ;  To play safe any task should execute in less than 379Tcy.
                      00019 ;  VISIBLE video lines:
                      00020 ;   For the visibles video lines tasks some delay is introduce
                      00021 ;   before any display attempt to ensure the game left side is
                      00022 ;   inside visible part of the scan line.
                      00023 ;   Each visible line must be terminate by returning video_output to black
                      00024 ;   otherwise the sync signal will be mangled. 
                      00025 ;    
                      00026 ;  SCHEDULER
                      00027 ;  scan lines  | slices  |   usage
                      00028 ;  =================================
                      00029 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00030 ;    4-6       |  6      | task 1, vertical sync
                      00031 ;    7-9       |  6      | task 2, vertical post-equalization
                      00032 ;    10        |  1      | task 3, synchronization end
                      00033 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00034 ;    12        |  1      | task 5, sound timer
                      00035 ;    13        |  1      | task 6, user input
                      00036 ;    14        |  1      | task 7, move ball
                      00037 ;    15        |  1      | task 8, collision control
                      00038 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00039 ;    30-49     |  20     | task 10, display score and balls count
                      00040 ;    50-57     |  8      | task 11, draw top border
                      00041 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00042 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00043 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00044 ;    242-249   |  8      | task 15, draw paddle
                      00045 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00046 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00047  
                      00048     
                      00049     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00050     
8007   3FA7           00051     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00052     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00053     
                      00054     radix dec
                      00055 
                      00056 ; constants
  00000800            00057 PROG_SIZE equ 2048  ; program words
  00000080            00058 EEPROM_SIZE equ 128 ; high endurance flash words
                      00059  
  01B4F360            00060 Fosc equ 28636000 ; external oscillator frequency
  006D3CD8            00061 Fcy  equ (Fosc/4) ; cpu frequency, machine cycle  T=1/Fcy
  0000008C            00062 Tcy equ 140 ; CPU cycle in nanoseconds (139.683 nanosecond)
                      00063  
                      00064 ; NTSC signal 
  00003D76            00065 Fhorz equ 15734 ; horizontal frequency
  0000071B            00066 HPERIOD equ ((Fosc/Fhorz)-1)  ; horizontal period pwm count(63,55µS)
  00000086            00067 HSYNC  equ 134  ;  (4,7µS) ; horz. sync. pwm pulse count
  00000041            00068 HEQUAL equ 65 ; 2,3µS equalization pwm pulse count
  00000308            00069 VSYNC_PULSE equ 776 ; 27,1µS vertical sync. pwm pulse count
  0000038D            00070 HALF_LINE equ ((Fosc/Fhorz/2)-1) 
                      00071 ; boolean flags 
  00000000            00072 F_BIT8 equ 0    ; bit 8 of line counter
  00000001            00073 F_EVEN equ 1    ; even field
  00000002            00074 F_SYNC equ 2    ; vertical synchronization phase
  00000003            00075 F_SOUND equ 3   ; sound enabled 
  00000004            00076 F_START equ 4   ; game started 
  00000005            00077 F_PAUSE equ 5   ; game pause after a ball lost
  00000006            00078 F_OVER equ 6    ; game over
  00000007            00079 F_COOL equ 7    ; player got maximum score
                      00080  
                      00081 ;pins assignment
  00000000            00082 AUDIO EQU RA0
  00000000            00083 PADDLE equ RA0
  00000001            00084 CHROMA equ RA1
  00000002            00085 SYNC_OUT equ RA2
  00000003            00086 START_BTN equ RA3 
  00000004            00087 VIDEO_OUT equ RA4
  00000005            00088 CLKIN equ RA5
                      00089  
                      00090     ; constants used in video display
                      00091 ; values are in Tcy for x dimension.
                      00092 ; values are in scan lines for y dimension.    
  0000001E            00093 FIRST_VIDEO_LINE equ 30 ; first video line displayed
  0000004A            00094 FIRST_BRICK_Y equ 74 ; lcount first brick scan line
  000000F9            00095 LAST_VIDEO_LINE  equ 249 ; last video line displayed
  00000045            00096 LEFT_MARGIN equ 69  ; tcy delay before any display
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000030            00097 PLAY_WIDTH equ 48 ; pixels
  00000005            00098 PIXEL_WIDTH equ 5; pixel width in tcy 
  00000008            00099 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00100 BRICK_WIDTH equ 4  ; pixels
  00000004            00101 BORDER_WIDTH equ 4  ; Tcy
  00000002            00102 BALL_WIDTH equ 2 ; pixels
  000000C0            00103 BALL_MASK equ 0xC0 ;  
  00000008            00104 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00105 BALL_LEFT_BOUND equ 0 ; pixel
  0000002E            00106 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00107 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00108 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE
  00000008            00109 PADDLE_WIDTH equ 8 ; pixels
  00000004            00110 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00111 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00112 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; 
  000000FF            00113 PADDLE_MASK equ 0xFF 
  00000006            00114 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00115 ROW1_Y equ 74
  00000052            00116 ROW2_Y equ 82
  0000005A            00117 ROW3_Y equ 90
  00000062            00118 ROW4_Y equ 98
  0000006A            00119 ROW5_Y equ 106
  00000072            00120 ROW6_Y equ 114 
                      00121 
                      00122 ;;;;;;;;;;;;;;;;;;;;;;
                      00123 ;; assembler macros ;;
                      00124 ;;;;;;;;;;;;;;;;;;;;;;
                      00125 
                      00126 ; leave task 
                      00127 leave macro
                      00128     goto isr_exit
                      00129     endm
                      00130     
                      00131 ; move to next task on slice limit
                      00132 ; parameters:
                      00133 ;   s  nomber of slices used by the task    
                      00134 next_task macro s    
                      00135     incf slice
                      00136     movlw s
                      00137     subwf slice,W
                      00138     skpz
                      00139     leave
                      00140     clrf slice
                      00141     incf task
                      00142     leave
                      00143     endm
                      00144     
                      00145     
                      00146 ; swap variable with WREG    
                      00147 swap_var macro var
                      00148     xorwf var
                      00149     xorwf var,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     xorwf var
                      00151     endm
                      00152     
                      00153 
                      00154 ; delay in machine cycle T
                      00155 ; parameters:
                      00156 ;   mc   number of machine cycles    
                      00157 tdelay macro mc 
                      00158     if mc==0
                      00159     exitm
                      00160     endif
                      00161     if mc==1
                      00162     nop
                      00163     exitm
                      00164     endif
                      00165     if mc==2
                      00166     bra $+1
                      00167     exitm
                      00168     endif
                      00169     if mc==3
                      00170     nop
                      00171     bra $+1
                      00172     exitm
                      00173     endif
                      00174     if mc==4
                      00175     call _4tcy
                      00176     exitm
                      00177     endif
                      00178     if mc==5
                      00179     call _5tcy
                      00180     exitm
                      00181     endif
                      00182     if mc>5
                      00183     variable q=(mc-3)/3
                      00184     variable r=mc-3-3*q
                      00185     movlw q
                      00186     call _3ntcy ; tcy=3+3*q
                      00187     if (r==2)
                      00188     bra $+1
                      00189     exitm
                      00190     endif 
                      00191     if (r==1)
                      00192     nop
                      00193     exitm
                      00194     endif
                      00195     endif
                      00196     endm
                      00197 
                      00198 ; enable weak pull on VIDEO_OUT
                      00199 ; to create a porch
                      00200 porch_on macro
                      00201     banksel WPUA
                      00202     bsf WPUA,VIDEO_OUT
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204     
                      00205 ; disable weak pull on VIDEO_OUT
                      00206 ; to remove porch
                      00207 porch_off macro
                      00208     banksel WPUA
                      00209     bcf WPUA,VIDEO_OUT
                      00210     endm
                      00211     
                      00212 ; enable chroma output
                      00213 chroma_on macro
                      00214     banksel TRISA
                      00215     bcf TRISA, CHROMA
                      00216     endm
                      00217     
                      00218 ;disable chroma output    
                      00219 chroma_off macro
                      00220     banksel TRISA
                      00221     bsf TRISA,CHROMA
                      00222     endm
                      00223     
                      00224 ; output chroma reference    
                      00225 chroma_ref macro
                      00226     banksel PWM1CON
                      00227     bcf PWM1CON,POL
                      00228     endm
                      00229     
                      00230 ; set chroma phase to 180 degree
                      00231 chroma_invert macro
                      00232     banksel PWM1CON
                      00233     bsf PWM1CON,POL
                      00234     endm
                      00235 
                      00236 ;;;;;;;;;;;;;;;;;;;;;;
                      00237 ;   colors macros
                      00238 ;   TRISA configuration    
                      00239 ;;;;;;;;;;;;;;;;;;;;;;;
  00000008            00240 OTHERS equ (0<<SYNC_OUT)|(0<<AUDIO)|(1<<START_BTN)    
  0000001A            00241 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000A            00242 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00243 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000008            00244 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000018            00245 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000018            00246 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00247  
                      00248 ;set video output to black    
                      00249 black macro
                      00250     movlw BLACK
                      00251     movwf TRISA
                      00252     endm
                      00253     
                      00254 ; set video output to white    
                      00255 white macro    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256     movlw WHITE
                      00257     movwf TRISA
                      00258     endm
                      00259 
                      00260 #define gray white
                      00261     
                      00262 ; set video output to mauve    
                      00263 mauve macro
                      00264     movlw MAUVE
                      00265     movwf TRISA
                      00266     endm
                      00267 
                      00268 ; set video output to yellow   
                      00269 yellow macro
                      00270     movlw YELLOW
                      00271     movwf TRISA
                      00272     endm
                      00273     
                      00274 ; set video output to blue
                      00275 blue macro
                      00276     movlw BLUE
                      00277     movwf TRISA
                      00278     endm
                      00279     
                      00280 ; set video output to dark blue    
                      00281 dark_green macro
                      00282     movlw DARK_GREEN
                      00283     movwf TRISA
                      00284     endm
                      00285 
                      00286 ; shift out 1 bit    
                      00287 display_bit macro n
                      00288     lslf vbuffer+n
                      00289     movlw BLACK
                      00290     skpnc
                      00291     movfw fg_color
                      00292     movwf TRISA
                      00293     endm
                      00294     
                      00295 ; display a byte of pixels    
                      00296 ; input:
                      00297 ;   n is byte number {0..5}    
                      00298 display_byte macro n
                      00299     display_bit n
                      00300     display_bit n
                      00301     display_bit n
                      00302     display_bit n
                      00303     display_bit n
                      00304     display_bit n
                      00305     display_bit n
                      00306     display_bit n
                      00307     endm
                      00308     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309    
                      00310 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00311 ;  stack manipulation macros
                      00312 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000010            00313 STACK_SIZE equ 16 ; size of argument stack
                      00314 #define T INDF0 ; indirect access to top of argument stack
                      00315 #define SP FSR0 ; use FSR0 as stack pointer 
                      00316 ; push WREG on T
                      00317 pushw  macro
                      00318     movwi --SP
                      00319     endm
                      00320   
                      00321 ; pop WREG from T
                      00322 popw macro
                      00323     moviw SP++
                      00324     endm
                      00325     
                      00326 ; swap WREG with 
                      00327 swapw  macro
                      00328     xorwf T
                      00329     xorwf T,W
                      00330     xorwf T
                      00331     endm
                      00332 
                      00333 ; drop n elements from stack
                      00334 dropn macro n
                      00335     addfsr T,n
                      00336     endm
                      00337 
                      00338 ; copy nth element of stack to WREG
                      00339 ;  n {0..31}, 0 is T   
                      00340 pickn macro n
                      00341     moviw n[SP]
                      00342     endm
                      00343    
                      00344 ; copy WREG to nth element of stack
                      00345 ; n {0..31}, 0 is T
                      00346 pokew macro n
                      00347     movwi n[SP]
                      00348     endm
                      00349     
                      00350     
                      00351 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00352 ;;    variables
                      00353 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00354  
                      00355     
                      00356     udata 0x20 ; bank 0
0020                  00357 stack res 16 ; arguments stack
0030                  00358 seed res 2 ; prng seed used by lfsr16
                      00359  
                      00360 ; video display manipulate TRISA register
                      00361 ; to avoid banksel during video update
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 ; place variables related to video in same bank as TRISA 
                      00363 v_array   udata 0xA0 ; bank 1
00A0                  00364 vbuffer res 6
00A6                  00365 temp3 res 1
00A7                  00366 row1 res 6; brick wall row1
00AD                  00367 fill1 res 2 
00AF                  00368 row2 res 6
00B5                  00369 fill2 res 2 
00B7                  00370 row3 res 6
00BD                  00371 fill3 res 2 
00BF                  00372 row4 res 6
00C5                  00373 fill4 res 2 
00C7                  00374 row5 res 6
00CD                  00375 fill5 res 2
00CF                  00376 row6 res 6
00D5                  00377 fill6 res 2 
00D7                  00378 fg_color res 1
00D8                  00379 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00380 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00381 ball_byte res 1 ; byte offset in vbuffer
00DC                  00382 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00383 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00384 balls res 1 ; number of recking balls available
                      00385  
                      00386 ; common 16 bytes RAM accessible whatever the selected bank 
                      00387     udata_shr 
0000                  00388 flags  res 1 ; boolean variables
0001                  00389 lcount res 1 ; video field line counter
0002                  00390 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00391 task res 1 ; where in video phase 
0004                  00392 temp1 res 1 ; temporary storage
0005                  00393 temp2 res 1 ; 
0006                  00394 paddle_pos res 1 
0007                  00395 ball_x res 1
0008                  00396 ball_y res 1
0009                  00397 ball_dx res 1
000A                  00398 ball_dy res 1
000B                  00399 ball_speed res 1
000C                  00400 score res 2 ; score stored in Binary Coded Decimal
000E                  00401 ball_timer res 1 
000F                  00402 old_dx res 1 ; previous value of ball_dx at paddle_bounce
                      00403  
                      00404 ;; cpu reset entry point
                      00405 RES_VECT  CODE    0x0000            
0000   2???           00406     goto    initialize  ; go to beginning of program
0001   0001           00407     reset   
0002   0001           00408     reset
0003   0001           00409     reset
                      00410 
                      00411 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00412 ; interrupt service routine triggered by PWM3 period rollover
                      00413 ; after initialization is done all processing in done inside 
                      00414 ; this interrupt.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ; It is designed as a round robin scheduler.    
                      00416 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00417 ISR CODE 0x0004
0004                  00418 isr
0004   0A??           00419     incf lcount
0005   1903           00420     skpnz
0006   1400           00421     bsf flags, F_BIT8
0007   1900           00422     btfsc flags, F_SYNC
0008   2???           00423     goto task_switch
0009   002?           00424     banksel vbuffer
000A   01??           00425     clrf vbuffer
000B   01??           00426     clrf vbuffer+1
000C   01??           00427     clrf vbuffer+2
000D   01??           00428     clrf vbuffer+3
000E   01??           00429     clrf vbuffer+4
000F   01??           00430     clrf vbuffer+5
                      00431 ; generate chroma sync
                      00432     tdelay 18
                          M     if 18==0
                          M     exitm
                          M     endif
                          M     if 18==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 18==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 18==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 18==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 18>5
  0005                    M     variable q=(18-3)/3
  0000                    M     variable r=18-3-3*q
0010   3005               M     movlw q
0011   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     endif
                      00433     chroma_ref
0012   003B               M     banksel PWM1CON
0013   121B               M     bcf PWM1CON,POL
0014   0021           00434     banksel TRISA
0015   108C           00435     bcf TRISA,CHROMA
                      00436     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3
  0001                    M     variable r=16-3-3*q
0016   3004               M     movlw q
0017   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0018   0000               M     nop
                          M     exitm
0019   148C           00437     bsf TRISA,CHROMA
                      00438     porch_on
001A   0024               M     banksel WPUA
001B   160C               M     bsf WPUA,VIDEO_OUT
001C                  00439 task_switch ; round robin task scheduler   
001C   08??           00440     movfw task
001D   000B           00441     brw
001E   2???           00442     goto pre_vsync ;task 0, vertical pre-equalization pulses
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F   2???           00443     goto vsync ;task 1, vertical sync pulses
0020   2???           00444     goto post_vsync ;task 2, vertical post-equalization pulses
0021   2???           00445     goto vsync_end ;task 3, return to normal video line
0022   2???           00446     goto reserved_task; task 4, do nothing, reserved 
0023   2???           00447     goto sound ;task 5, check sound timer expiration
0024   2???           00448     goto user_input ;task 6,  read button and paddle
0025   2???           00449     goto move_ball ;task 7, move recking ball.
0026   2???           00450     goto collision ; task 8, check for collision with brick wall and paddle
0027   2???           00451     goto video_first ; task 9, wait FIRST_VIDEO line.
0028   2???           00452     goto draw_score ;task 10,  draw score en ball count
0029   2???           00453     goto draw_top_wall ;task 11,  draw top wall
002A   2???           00454     goto draw_sides ;task 12, draw play space
002B   2???           00455     goto draw_bricks  ;task 13, draw bricks rows
002C   2???           00456     goto draw_empty;task 14, draw empty space down to bottom
002D   2???           00457     goto draw_paddle ;task 15, draw paddle
002E   2???           00458     goto wait_field_end ;task 16, idle to end of video field
002F   0001           00459     reset ; error trap, task out of range
0030                  00460 isr_exit  
                      00461     porch_off
0030   0024               M     banksel WPUA
0031   120C               M     bcf WPUA,VIDEO_OUT
0032   003B           00462     banksel PWM3INTF
0033   103D           00463     bcf PWM3INTF,PRIF
0034   0009           00464     retfie
                      00465 
                      00466 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00467 ;;  all tasks routine are here            ;;
                      00468 ;;  each must be terminate by leave macro ;;    
                      00469 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00470     
                      00471 ; task 0, vertical synchronization pre equalization
                      00472 ; 6 half horizontal scan lines    
0035                  00473 pre_vsync
0035   08??           00474     movfw slice
0036   1903           00475     skpnz
0037   2???           00476     goto set_presync
                      00477     next_task 6
0038   0A??               M     incf slice
0039   3006               M     movlw 6
003A   02??               M     subwf slice,W
003B   1D03               M     skpz
                          M     leave
003C   2???               M     goto isr_exit
003D   01??               M     clrf slice
003E   0A??               M     incf task
                          M     leave
003F   2???               M     goto isr_exit
0040                  00478 set_presync    
0040   003B           00479     banksel PWM3DC
0041   3041           00480     movlw HEQUAL
0042   00B3           00481     movwf PWM3DCL
0043   01B4           00482     clrf PWM3DCH
0044   3003           00483     movlw high HALF_LINE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0045   00B6           00484     movwf PWM3PRH
0046   308D           00485     movlw low HALF_LINE
0047   00B5           00486     movwf PWM3PRL
0048   17BF           00487     bsf PWM3LDCON,7
0049   0A??           00488     incf slice
                      00489     leave
004A   2???               M     goto isr_exit
                      00490     
                      00491 ; task 1, vertical synchronization pulses
                      00492 ; 6 half horizontal scan lines    
004B                  00493 vsync 
004B   08??           00494     movfw slice
004C   1903           00495     skpnz
004D   2???           00496     goto set_vsync
                      00497     next_task 6
004E   0A??               M     incf slice
004F   3006               M     movlw 6
0050   02??               M     subwf slice,W
0051   1D03               M     skpz
                          M     leave
0052   2???               M     goto isr_exit
0053   01??               M     clrf slice
0054   0A??               M     incf task
                          M     leave
0055   2???               M     goto isr_exit
0056                  00498 set_vsync
0056   003B           00499     banksel PWM3DC
0057   3008           00500     movlw low VSYNC_PULSE
0058   00B3           00501     movwf PWM3DCL
0059   3003           00502     movlw high VSYNC_PULSE
005A   00B4           00503     movwf PWM3DCH
005B   17BF           00504     bsf PWM3LDCON,7
005C   0A??           00505     incf slice
                      00506     leave
005D   2???               M     goto isr_exit
                      00507     
                      00508 ; task 2, vertical synchronisation post equalization pulses
                      00509 ; 6 half horizontal scan lines    
005E                  00510 post_vsync
005E   08??           00511     movfw slice
005F   1903           00512     skpnz
0060   2???           00513     goto set_presync
0061   3006           00514     movlw 6
0062   02??           00515     subwf slice,W
0063   1903           00516     skpnz
0064   2???           00517     goto post_last
0065   0A??           00518     incf slice
                      00519     leave
0066   2???               M     goto isr_exit
0067                  00520 post_last    
0067   0A??           00521     incf task
0068   01??           00522     clrf slice
0069   1C80           00523     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00524     leave
006A   2???               M     goto isr_exit
                      00525     
                      00526 ; task 3, vertical synchronization completed, return to normal line
                      00527 ; rest horizonal line to its normal length.
                      00528 ; set lcount to 9.    
006B                  00529 vsync_end
006B   1100           00530     bcf flags, F_SYNC
006C   003B           00531     banksel PWM3DC
006D   3086           00532     movlw HSYNC
006E   00B3           00533     movwf PWM3DCL
006F   01B4           00534     clrf PWM3DCH
0070   3007           00535     movlw high HPERIOD
0071   00B6           00536     movwf PWM3PRH
0072   301B           00537     movlw low HPERIOD
0073   00B5           00538     movwf PWM3PRL
0074   17BF           00539     bsf PWM3LDCON,7
0075   0A??           00540     incf task
0076   36??           00541     lsrf lcount
                      00542     leave
0077   2???               M     goto isr_exit
                      00543 
                      00544 ; task 4, reserved slot
0078                  00545 reserved_task
0078   0A??           00546     incf task
                      00547     leave
0079   2???               M     goto isr_exit
                      00548     
                      00549 ; task 5,  sound timer
                      00550 ; if sound active process it.    
007A                  00551 sound
007A   0A??           00552     incf task
007B   1D80           00553     btfss flags, F_SOUND
                      00554     leave
007C   2???               M     goto isr_exit
007D   1A80           00555     btfsc flags, F_PAUSE
007E   2???           00556     call sound_fx1
007F   002?           00557     banksel sound_timer
0080   0B??           00558     decfsz sound_timer
                      00559     leave
0081   2???               M     goto isr_exit
0082   1180           00560     bcf flags, F_SOUND
0083   003B           00561     banksel PWM2CON
0084   132B           00562     bcf PWM2CON,OE
0085   13AB           00563     bcf PWM2CON,EN
                      00564     leave
0086   2???               M     goto isr_exit
                      00565 
                      00566 ; sound effect, low pitch to high-pitch    
0087                  00567 sound_fx1
0087   1D80           00568     btfss flags, F_SOUND
0088   0008           00569     return
0089   1C80           00570     btfss flags, F_EVEN
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008A   0008           00571     return
008B   003B           00572     banksel PWM2CON
008C   36A6           00573     lsrf PWM2PRH
008D   0CA5           00574     rrf PWM2PRL
008E   36A4           00575     lsrf PWM2DCH
008F   0CA3           00576     rrf PWM2DCL
0090   17AF           00577     bsf PWM2LDCON,LDA
0091   0008           00578     return
                      00579     
                      00580 ;; sound effect, high pitch to low-pitch    
                      00581 ;sound_fx2
                      00582 ;    btfss flags, F_SOUND
                      00583 ;    return
                      00584 ;    btfss flags, F_EVEN
                      00585 ;    return
                      00586 ;    banksel PWM2CON
                      00587 ;    lslf PWM2PRL
                      00588 ;    rlf PWM2PRH
                      00589 ;    lslf PWM2DCL
                      00590 ;    rlf PWM2DCH
                      00591 ;    bsf PWM2LDCON,LDA
                      00592 ;    return
                      00593     
                      00594 ; initialize sound generation.
                      00595 ; input:
                      00596 ;   T = duration
                      00597 ;   WREG = index in frequency table    
                      00598 ; outpout:
                      00599 ;   none    
0092                  00600 sound_init
                      00601     pushw  ; ( d i -- )
0092   0019               M     movwi --SP
0093   1580           00602     bsf flags, F_SOUND
0094   003B           00603     banksel PWM2CON
0095   0800           00604     movfw T
0096   2???           00605     call frequency
0097   00A6           00606     movwf PWM2PRH
0098   0A00           00607     incf T,W
0099   2???           00608     call frequency
009A   00A5           00609     movwf PWM2PRL
009B   3626           00610     lsrf PWM2PRH,W
009C   00A4           00611     movwf PWM2DCH
009D   0C25           00612     rrf PWM2PRL,W
009E   00A3           00613     movwf PWM2DCL
009F   17AF           00614     bsf PWM2LDCON,LDA
00A0   172B           00615     bsf PWM2CON,OE
00A1   17AB           00616     bsf PWM2CON,EN
00A2   002?           00617     banksel sound_timer
                      00618     pickn 1
00A3   3F01               M     moviw 1[SP]
00A4   00??           00619     movwf sound_timer
                      00620     dropn 2
00A5   3102               M     addfsr T,2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A6   0008           00621     return
                      00622     
                      00623 ;task 6, read button and paddle position
00A7                  00624 user_input
00A7   0A??           00625     incf task
00A8   2???           00626     call read_paddle
00A9   1B00           00627     btfsc flags, F_OVER
00AA   3???           00628     bra game_over
00AB   1A00           00629     btfsc flags,F_START
00AC   3???           00630     bra game_running
                      00631 ; game not running
00AD   2???           00632     call read_button
00AE   1D03           00633     skpz
00AF   3???           00634     bra skip_2_tasks
                      00635 ; start game    
00B0   2???           00636     call game_init
                      00637     leave
00B1   2???               M     goto isr_exit
00B2                  00638 game_running
00B2   1E80           00639     btfss flags, F_PAUSE
                      00640     leave
00B3   2???               M     goto isr_exit
                      00641 ; game on pause    
00B4                  00642 wait_trigger
00B4   2???           00643     call read_button
00B5   1D03           00644     skpz
00B6   3???           00645     bra skip_2_tasks
00B7   1280           00646     bcf flags,F_PAUSE
00B8   2???           00647     call set_ball_dx
                      00648     leave
00B9   2???               M     goto isr_exit
                      00649 ; game over
00BA                  00650 game_over
00BA   2???           00651     call read_button
00BB   1D03           00652     skpz
00BC   3???           00653     bra skip_2_tasks
00BD   2???           00654     call game_init
                      00655 ;    incf task
                      00656     leave
00BE   2???               M     goto isr_exit
                      00657 ; while game not running skip 'move_ball' and 'collision' tasks    
00BF                  00658 skip_2_tasks
00BF   08??           00659     movfw paddle_pos
00C0   3E02           00660     addlw 2
00C1   00??           00661     movwf ball_x
00C2   2???           00662     call compute_ball_mask
00C3   0A??           00663     incf task ; skip move_ball
00C4   0A??           00664     incf task ; skip collision
00C5   2???           00665     call lfsr16
                      00666     leave
00C6   2???               M     goto isr_exit
                      00667 
                      00668     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C7                  00669 read_button
00C7   0020           00670     banksel PORTA
00C8   080C           00671     movfw PORTA
00C9   3908           00672     andlw 1<<START_BTN
00CA   0008           00673     return
                      00674     
00CB                  00675 read_paddle
00CB   003B           00676     banksel PWM2CON
00CC   13AB           00677     bcf PWM2CON,EN
00CD   0021           00678     banksel TRISA
00CE   140C           00679     bsf TRISA, PADDLE
00CF   0021           00680     banksel ADCON0
00D0   3003           00681     movlw 3
00D1   009D           00682     movwf ADCON0
00D2   189D           00683     btfsc ADCON0,NOT_DONE
00D3   2???           00684     goto $-1
00D4   3010           00685     movlw 4<<CHS0
00D5   009D           00686     movwf ADCON0
00D6   361C           00687     lsrf ADRESH,W
00D7   00??           00688     movwf paddle_pos
                      00689     ;lsrf paddle_pos
00D8   3028           00690     movlw PADDLE_LIMIT
00D9   02??           00691     subwf paddle_pos,W
00DA   3028           00692     movlw PADDLE_LIMIT
00DB   1803           00693     skpnc
00DC   00??           00694     movwf paddle_pos
00DD   1D80           00695     btfss flags, F_SOUND
00DE   3???           00696     bra $+3
00DF   003B           00697     banksel PWM2CON
00E0   17AB           00698     bsf PWM2CON,EN
00E1   0021           00699     banksel TRISA
00E2   100C           00700     bcf TRISA, AUDIO
                      00701 ; create paddle mask
00E3   2???           00702     call compute_paddle_mask
00E4   0008           00703     return
                      00704 
                      00705 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00706 ; paddle_byte=paddle_pos/8
                      00707 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)    
00E5                  00708 compute_paddle_mask
00E5   36??           00709     lsrf paddle_pos,W
00E6   3689           00710     lsrf WREG
00E7   3689           00711     lsrf WREG
00E8   00??           00712     movwf paddle_byte
00E9   30FF           00713     movlw PADDLE_MASK
00EA   00??           00714     movwf paddle_mask
00EB   01??           00715     clrf paddle_mask+1
00EC   3007           00716     movlw 7
00ED   05??           00717     andwf paddle_pos,W
00EE   1903           00718     skpnz
00EF   0008           00719     return
00F0   36??           00720     lsrf paddle_mask
00F1   0C??           00721     rrf paddle_mask+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F2   0B89           00722     decfsz WREG
00F3   3???           00723     bra $-3
00F4   0008           00724     return
                      00725     
                      00726     
                      00727     
                      00728     
                      00729 ; task 7, move recking ball.   
00F5                  00730 move_ball
00F5   0B??           00731     decfsz ball_timer
00F6   3???           00732     bra move_ball_exit
00F7   08??           00733     movfw ball_speed
00F8   00??           00734     movwf ball_timer
00F9   08??           00735     movfw ball_dx
00FA   07??           00736     addwf ball_x
00FB   1F80           00737     btfss ball_dx,7
00FC   3???           00738     bra right_bound
00FD                  00739 left_bound
00FD   1F80           00740     btfss ball_x,7
00FE   3???           00741     bra move_y
00FF   01??           00742     clrf ball_x
0100   09??           00743     comf ball_dx
0101   0A??           00744     incf ball_dx
0102   3???           00745     bra move_y
0103                  00746 right_bound    
0103   08??           00747     movfw ball_x
0104   3C2E           00748     sublw BALL_RIGHT_BOUND
0105   1803           00749     skpnc
0106   3???           00750     bra move_y
0107   03??           00751     decf ball_x
0108   09??           00752     comf ball_dx
0109   0A??           00753     incf ball_dx
010A                  00754 move_y
010A   08??           00755     movfw ball_dy
010B   07??           00756     addwf ball_y
010C   1F80           00757     btfss ball_dy,7
010D   3???           00758     bra bottom_bound
010E                  00759 top_bound    
010E   303A           00760     movlw BALL_TOP_BOUND
010F   02??           00761     subwf ball_y,W
0110   1803           00762     skpnc
0111   3???           00763     bra move_ball_exit
0112   303A           00764     movlw BALL_TOP_BOUND
0113   00??           00765     movwf ball_y
0114   09??           00766     comf ball_dy
0115   0A??           00767     incf ball_dy
0116   3???           00768     bra move_ball_exit
0117                  00769 bottom_bound
0117   08??           00770     movfw ball_y
0118   3CED           00771     sublw PADDLE_Y-BALL_HEIGHT-1
0119   1803           00772     skpnc
011A   3???           00773     bra move_ball_exit
011B   2???           00774     call paddle_bounce
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011C   1803           00775     skpnc
011D   3???           00776     bra move_ball_exit
011E                  00777 ball_lost
011E   1680           00778     bsf flags, F_PAUSE ; pause game
011F   002?           00779     banksel balls
0120   0B??           00780     decfsz balls
0121   3???           00781     bra $+3
0122   1200           00782     bcf flags, F_START
0123   1700           00783     bsf flags, F_OVER
0124   3002           00784     movlw 2
0125   07??           00785     addwf paddle_pos,W
0126   00??           00786     movwf ball_x
0127   30EF           00787     movlw PADDLE_Y-BALL_HEIGHT+1
0128   00??           00788     movwf ball_y
0129   30FC           00789     movlw -4
012A   00??           00790     movwf ball_dy
012B   3008           00791     movlw 8
                      00792     pushw
012C   0019               M     movwi --SP
012D   3002           00793     movlw 2
012E   2???           00794     call sound_init
012F   0A??           00795     incf task ; skip collision task
0130                  00796 move_ball_exit
0130   2???           00797     call compute_ball_mask
0131   0A??           00798     incf task
                      00799     leave
0132   2???               M     goto isr_exit
                      00800 
                      00801 ; check if ball is bouncing on paddle
                      00802 ; input:
                      00803 ;   none
                      00804 ; output:
                      00805 ;   C set if bounced    
0133                  00806 paddle_bounce
                      00807 ; if ball_x over paddle bounce ball
0133   08??           00808     movfw paddle_pos
                      00809     pushw
0134   0019               M     movwi --SP
0135   1903           00810     skpnz
0136   0380           00811     decf T
0137   3E08           00812     addlw PADDLE_WIDTH
                      00813     pushw
0138   0019               M     movwi --SP
0139   08??           00814     movfw ball_x
013A   2???           00815     call between
013B   1803           00816     skpnc
013C   3???           00817     bra bouncing
013D   1003           00818     bcf STATUS,C
013E   0008           00819     return
013F                  00820 bouncing
013F   30EE           00821     movlw PADDLE_Y-BALL_HEIGHT
0140   00??           00822     movwf ball_y
0141   09??           00823     comf ball_dy
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0142   0A??           00824     incf ball_dy
                      00825 ; bounce direction depend where paddle was hit.    
0143   08??           00826     movfw paddle_pos
0144   02??           00827     subwf ball_x,W
0145   1C03           00828     skpc
0146   3???           00829     bra bounce_left
0147   1903           00830     skpnz
0148   3???           00831     bra bounce_left
0149   3006           00832     movlw PADDLE_WIDTH-2
014A   07??           00833     addwf paddle_pos,W
014B   02??           00834     subwf ball_x,W
014C   3001           00835     movlw 1
014D   1803           00836     skpnc
014E   00??           00837     movwf ball_dx ; bounce right
014F   3???           00838     bra paddle_sound
0150                  00839 bounce_left
0150   30FF           00840     movlw -1
0151   00??           00841     movwf ball_dx
0152                  00842 paddle_sound    
0152   3002           00843     movlw 2
                      00844     pushw
0153   0019               M     movwi --SP
0154   2???           00845     call sound_init
                      00846 ; skip collision task
0155   0A??           00847     incf task
                      00848 ; report bounce    
0156   1403           00849     bsf STATUS,C
0157   0008           00850     return
                      00851     
                      00852     
                      00853 ; compute ball_mask and ball_byte
                      00854 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00855 ; ball_byte= ball_x/8     
0158                  00856 compute_ball_mask
0158   002?           00857     banksel vbuffer
0159   36??           00858     lsrf ball_x,W
015A   3689           00859     lsrf WREG
015B   3689           00860     lsrf WREG
015C   00??           00861     movwf ball_byte
015D   30C0           00862     movlw BALL_MASK
015E   00??           00863     movwf ball_mask
015F   01??           00864     clrf ball_mask+1
0160   3007           00865     movlw 7
0161   05??           00866     andwf ball_x,W
0162   1903           00867     skpnz
0163   0008           00868     return
0164   36??           00869     lsrf ball_mask
0165   0C??           00870     rrf ball_mask+1
0166   0B89           00871     decfsz WREG
0167   3???           00872     bra $-3
0168   0008           00873     return
                      00874     
                      00875 ; task 8, collision detection
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0169                  00876 collision
0169   304A           00877     movlw ROW1_Y
                      00878     pushw
016A   0019               M     movwi --SP
016B   307A           00879     movlw ROW6_Y+BRICK_HEIGHT
                      00880     pushw
016C   0019               M     movwi --SP
016D   08??           00881     movfw ball_y
016E   2???           00882     call between
016F   1C03           00883     skpc
0170   3???           00884     bra collision_exit
0171   002?           00885     banksel row1
0172   0187           00886     clrf FSR1H
0173   30??           00887     movlw low row1
0174   0086           00888     movwf FSR1L
0175   304A           00889     movlw ROW1_Y
0176   02??           00890     subwf ball_y,W
0177   39F8           00891     andlw 0xf8
                      00892     pushw
0178   0019               M     movwi --SP
0179   0786           00893     addwf FSR1L
017A   08??           00894     movfw ball_byte
017B   0786           00895     addwf FSR1L
017C   30F0           00896     movlw 0xf0
017D   1900           00897     btfsc ball_x,2
017E   0E89           00898     swapf WREG
017F   0501           00899     andwf INDF1,W
0180   1903           00900     skpnz
0181   3???           00901     bra collision_exit
0182   300F           00902     movlw 0x0f
0183   1900           00903     btfsc ball_x,2
0184   0E89           00904     swapf WREG
0185   0581           00905     andwf INDF1
0186   09??           00906     comf ball_dy
0187   0A??           00907     incf ball_dy
0188   08??           00908     movfw ball_dy
0189   07??           00909     addwf ball_y
                      00910     popw
018A   0012               M     moviw SP++
018B   3689           00911     lsrf WREG
018C   3689           00912     lsrf WREG
018D   000B           00913     brw
018E   3009           00914     movlw 9
018F   3???           00915     bra add_score
0190   3009           00916     movlw 9
0191   3???           00917     bra add_score
0192   3007           00918     movlw 7
0193   3???           00919     bra add_score
0194   3005           00920     movlw 5
0195   3???           00921     bra add_score
0196   3003           00922     movlw 3
0197   3???           00923     bra add_score
0198   3001           00924     movlw 1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0199                  00925 add_score    
0199   2???           00926     call inc_score
019A                  00927 pong_sound
019A   3001           00928     movlw 1
                      00929     pushw
019B   0019               M     movwi --SP
019C   3000           00930     movlw 0
019D   2???           00931     call sound_init
019E                  00932 collision_exit
019E   0A??           00933     incf task
                      00934     leave
019F   2???               M     goto isr_exit
                      00935 
                      00936     
                      00937     
                      00938 ; check if  lb <= x < hb
                      00939 ; 13 tcy    
                      00940 ; input:
                      00941 ;    WREG  x
                      00942 ;    stack ( lb hb -- )     
                      00943 ; output:
                      00944 ;   Carry bit set if true    
01A0                  00945 between
01A0   00??           00946     movwf temp2
                      00947     pickn 1
01A1   3F01               M     moviw 1[SP]
01A2   02??           00948     subwf temp2,W
01A3   1C03           00949     skpc
01A4   3???           00950     bra between_exit2
01A5   0800           00951     movfw T
01A6   02??           00952     subwf temp2
01A7   0803           00953     movfw STATUS
01A8   3A01           00954     xorlw 1
01A9   0083           00955     movwf STATUS
01AA                  00956 between_exit    
                      00957     dropn 2
01AA   3102               M     addfsr T,2
01AB   0008           00958     return  ; 13 tcy
                      00959 ; add tcy to have constant tcy for this routine whatever the path    
01AC                  00960 between_exit2
01AC   3???           00961     bra $+1
01AD   3???           00962     bra between_exit
                      00963     
                      00964 ; task 9, wait for first video line
01AE                  00965 video_first
01AE   301D           00966     movlw FIRST_VIDEO_LINE-1
01AF   02??           00967     subwf lcount,W
01B0   1D03           00968     skpz
                      00969     leave
01B1   2???               M     goto isr_exit
01B2   01??           00970     clrf slice
01B3   0A??           00971     incf task
                      00972     leave
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B4   2???               M     goto isr_exit
                      00973    
                      00974 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00975 ; The following tasks are responsible to render video display.
                      00976 ; Each video line must be completed by setting color to black.
                      00977 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00978 
                      00979 ; check if ball is visible on this scan line    
                      00980 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT    
                      00981 ;  22 tcy   
                      00982 ;  input:
                      00983 ;       none    
                      00984 ;  output:
                      00985 ;       C set if true   
01B5                  00986 ball_visible
01B5   08??           00987     movfw ball_y
                      00988     pushw
01B6   0019               M     movwi --SP
01B7   3E08           00989     addlw BALL_HEIGHT
                      00990     pushw
01B8   0019               M     movwi --SP
01B9   08??           00991     movfw lcount
01BA   2???           00992     call between ; +13 tcy
01BB   0008           00993     return
                      00994     
                      00995     
                      00996     
01BC                  00997 display_vbuffer
                      00998     display_byte 0
                          M     display_bit 0
01BC   35??               M     lslf vbuffer+0
01BD   301A               M     movlw BLACK
01BE   1803               M     skpnc
01BF   08??               M     movfw fg_color
01C0   008C               M     movwf TRISA
                          M     display_bit 0
01C1   35??               M     lslf vbuffer+0
01C2   301A               M     movlw BLACK
01C3   1803               M     skpnc
01C4   08??               M     movfw fg_color
01C5   008C               M     movwf TRISA
                          M     display_bit 0
01C6   35??               M     lslf vbuffer+0
01C7   301A               M     movlw BLACK
01C8   1803               M     skpnc
01C9   08??               M     movfw fg_color
01CA   008C               M     movwf TRISA
                          M     display_bit 0
01CB   35??               M     lslf vbuffer+0
01CC   301A               M     movlw BLACK
01CD   1803               M     skpnc
01CE   08??               M     movfw fg_color
01CF   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 0
01D0   35??               M     lslf vbuffer+0
01D1   301A               M     movlw BLACK
01D2   1803               M     skpnc
01D3   08??               M     movfw fg_color
01D4   008C               M     movwf TRISA
                          M     display_bit 0
01D5   35??               M     lslf vbuffer+0
01D6   301A               M     movlw BLACK
01D7   1803               M     skpnc
01D8   08??               M     movfw fg_color
01D9   008C               M     movwf TRISA
                          M     display_bit 0
01DA   35??               M     lslf vbuffer+0
01DB   301A               M     movlw BLACK
01DC   1803               M     skpnc
01DD   08??               M     movfw fg_color
01DE   008C               M     movwf TRISA
                          M     display_bit 0
01DF   35??               M     lslf vbuffer+0
01E0   301A               M     movlw BLACK
01E1   1803               M     skpnc
01E2   08??               M     movfw fg_color
01E3   008C               M     movwf TRISA
                      00999     display_byte 1
                          M     display_bit 1
01E4   35??               M     lslf vbuffer+1
01E5   301A               M     movlw BLACK
01E6   1803               M     skpnc
01E7   08??               M     movfw fg_color
01E8   008C               M     movwf TRISA
                          M     display_bit 1
01E9   35??               M     lslf vbuffer+1
01EA   301A               M     movlw BLACK
01EB   1803               M     skpnc
01EC   08??               M     movfw fg_color
01ED   008C               M     movwf TRISA
                          M     display_bit 1
01EE   35??               M     lslf vbuffer+1
01EF   301A               M     movlw BLACK
01F0   1803               M     skpnc
01F1   08??               M     movfw fg_color
01F2   008C               M     movwf TRISA
                          M     display_bit 1
01F3   35??               M     lslf vbuffer+1
01F4   301A               M     movlw BLACK
01F5   1803               M     skpnc
01F6   08??               M     movfw fg_color
01F7   008C               M     movwf TRISA
                          M     display_bit 1
01F8   35??               M     lslf vbuffer+1
01F9   301A               M     movlw BLACK
01FA   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FB   08??               M     movfw fg_color
01FC   008C               M     movwf TRISA
                          M     display_bit 1
01FD   35??               M     lslf vbuffer+1
01FE   301A               M     movlw BLACK
01FF   1803               M     skpnc
0200   08??               M     movfw fg_color
0201   008C               M     movwf TRISA
                          M     display_bit 1
0202   35??               M     lslf vbuffer+1
0203   301A               M     movlw BLACK
0204   1803               M     skpnc
0205   08??               M     movfw fg_color
0206   008C               M     movwf TRISA
                          M     display_bit 1
0207   35??               M     lslf vbuffer+1
0208   301A               M     movlw BLACK
0209   1803               M     skpnc
020A   08??               M     movfw fg_color
020B   008C               M     movwf TRISA
                      01000     display_byte 2
                          M     display_bit 2
020C   35??               M     lslf vbuffer+2
020D   301A               M     movlw BLACK
020E   1803               M     skpnc
020F   08??               M     movfw fg_color
0210   008C               M     movwf TRISA
                          M     display_bit 2
0211   35??               M     lslf vbuffer+2
0212   301A               M     movlw BLACK
0213   1803               M     skpnc
0214   08??               M     movfw fg_color
0215   008C               M     movwf TRISA
                          M     display_bit 2
0216   35??               M     lslf vbuffer+2
0217   301A               M     movlw BLACK
0218   1803               M     skpnc
0219   08??               M     movfw fg_color
021A   008C               M     movwf TRISA
                          M     display_bit 2
021B   35??               M     lslf vbuffer+2
021C   301A               M     movlw BLACK
021D   1803               M     skpnc
021E   08??               M     movfw fg_color
021F   008C               M     movwf TRISA
                          M     display_bit 2
0220   35??               M     lslf vbuffer+2
0221   301A               M     movlw BLACK
0222   1803               M     skpnc
0223   08??               M     movfw fg_color
0224   008C               M     movwf TRISA
                          M     display_bit 2
0225   35??               M     lslf vbuffer+2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0226   301A               M     movlw BLACK
0227   1803               M     skpnc
0228   08??               M     movfw fg_color
0229   008C               M     movwf TRISA
                          M     display_bit 2
022A   35??               M     lslf vbuffer+2
022B   301A               M     movlw BLACK
022C   1803               M     skpnc
022D   08??               M     movfw fg_color
022E   008C               M     movwf TRISA
                          M     display_bit 2
022F   35??               M     lslf vbuffer+2
0230   301A               M     movlw BLACK
0231   1803               M     skpnc
0232   08??               M     movfw fg_color
0233   008C               M     movwf TRISA
                      01001     display_byte 3
                          M     display_bit 3
0234   35??               M     lslf vbuffer+3
0235   301A               M     movlw BLACK
0236   1803               M     skpnc
0237   08??               M     movfw fg_color
0238   008C               M     movwf TRISA
                          M     display_bit 3
0239   35??               M     lslf vbuffer+3
023A   301A               M     movlw BLACK
023B   1803               M     skpnc
023C   08??               M     movfw fg_color
023D   008C               M     movwf TRISA
                          M     display_bit 3
023E   35??               M     lslf vbuffer+3
023F   301A               M     movlw BLACK
0240   1803               M     skpnc
0241   08??               M     movfw fg_color
0242   008C               M     movwf TRISA
                          M     display_bit 3
0243   35??               M     lslf vbuffer+3
0244   301A               M     movlw BLACK
0245   1803               M     skpnc
0246   08??               M     movfw fg_color
0247   008C               M     movwf TRISA
                          M     display_bit 3
0248   35??               M     lslf vbuffer+3
0249   301A               M     movlw BLACK
024A   1803               M     skpnc
024B   08??               M     movfw fg_color
024C   008C               M     movwf TRISA
                          M     display_bit 3
024D   35??               M     lslf vbuffer+3
024E   301A               M     movlw BLACK
024F   1803               M     skpnc
0250   08??               M     movfw fg_color
0251   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 3
0252   35??               M     lslf vbuffer+3
0253   301A               M     movlw BLACK
0254   1803               M     skpnc
0255   08??               M     movfw fg_color
0256   008C               M     movwf TRISA
                          M     display_bit 3
0257   35??               M     lslf vbuffer+3
0258   301A               M     movlw BLACK
0259   1803               M     skpnc
025A   08??               M     movfw fg_color
025B   008C               M     movwf TRISA
                      01002     display_byte 4
                          M     display_bit 4
025C   35??               M     lslf vbuffer+4
025D   301A               M     movlw BLACK
025E   1803               M     skpnc
025F   08??               M     movfw fg_color
0260   008C               M     movwf TRISA
                          M     display_bit 4
0261   35??               M     lslf vbuffer+4
0262   301A               M     movlw BLACK
0263   1803               M     skpnc
0264   08??               M     movfw fg_color
0265   008C               M     movwf TRISA
                          M     display_bit 4
0266   35??               M     lslf vbuffer+4
0267   301A               M     movlw BLACK
0268   1803               M     skpnc
0269   08??               M     movfw fg_color
026A   008C               M     movwf TRISA
                          M     display_bit 4
026B   35??               M     lslf vbuffer+4
026C   301A               M     movlw BLACK
026D   1803               M     skpnc
026E   08??               M     movfw fg_color
026F   008C               M     movwf TRISA
                          M     display_bit 4
0270   35??               M     lslf vbuffer+4
0271   301A               M     movlw BLACK
0272   1803               M     skpnc
0273   08??               M     movfw fg_color
0274   008C               M     movwf TRISA
                          M     display_bit 4
0275   35??               M     lslf vbuffer+4
0276   301A               M     movlw BLACK
0277   1803               M     skpnc
0278   08??               M     movfw fg_color
0279   008C               M     movwf TRISA
                          M     display_bit 4
027A   35??               M     lslf vbuffer+4
027B   301A               M     movlw BLACK
027C   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

027D   08??               M     movfw fg_color
027E   008C               M     movwf TRISA
                          M     display_bit 4
027F   35??               M     lslf vbuffer+4
0280   301A               M     movlw BLACK
0281   1803               M     skpnc
0282   08??               M     movfw fg_color
0283   008C               M     movwf TRISA
                      01003     display_byte 5
                          M     display_bit 5
0284   35??               M     lslf vbuffer+5
0285   301A               M     movlw BLACK
0286   1803               M     skpnc
0287   08??               M     movfw fg_color
0288   008C               M     movwf TRISA
                          M     display_bit 5
0289   35??               M     lslf vbuffer+5
028A   301A               M     movlw BLACK
028B   1803               M     skpnc
028C   08??               M     movfw fg_color
028D   008C               M     movwf TRISA
                          M     display_bit 5
028E   35??               M     lslf vbuffer+5
028F   301A               M     movlw BLACK
0290   1803               M     skpnc
0291   08??               M     movfw fg_color
0292   008C               M     movwf TRISA
                          M     display_bit 5
0293   35??               M     lslf vbuffer+5
0294   301A               M     movlw BLACK
0295   1803               M     skpnc
0296   08??               M     movfw fg_color
0297   008C               M     movwf TRISA
                          M     display_bit 5
0298   35??               M     lslf vbuffer+5
0299   301A               M     movlw BLACK
029A   1803               M     skpnc
029B   08??               M     movfw fg_color
029C   008C               M     movwf TRISA
                          M     display_bit 5
029D   35??               M     lslf vbuffer+5
029E   301A               M     movlw BLACK
029F   1803               M     skpnc
02A0   08??               M     movfw fg_color
02A1   008C               M     movwf TRISA
                          M     display_bit 5
02A2   35??               M     lslf vbuffer+5
02A3   301A               M     movlw BLACK
02A4   1803               M     skpnc
02A5   08??               M     movfw fg_color
02A6   008C               M     movwf TRISA
                          M     display_bit 5
02A7   35??               M     lslf vbuffer+5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A8   301A               M     movlw BLACK
02A9   1803               M     skpnc
02AA   08??               M     movfw fg_color
02AB   008C               M     movwf TRISA
02AC   0008           01004     return
                      01005  
                      01006 ; task 10, draw score en ball count
                      01007 ;  lcount 30-49    
02AD                  01008 draw_score 
02AD   0021           01009     banksel TRISA
02AE   08??           01010     movfw slice
02AF   3689           01011     lsrf WREG
02B0   3689           01012     lsrf WREG
                      01013     pushw
02B1   0019               M     movwi --SP
02B2   300F           01014     movlw 0xf
02B3   05??           01015     andwf score,W
02B4   2???           01016     call digits
02B5   04??           01017     iorwf vbuffer
02B6   0E??           01018     swapf score+1,W
02B7   390F           01019     andlw 0xf
02B8   2???           01020     call digits
02B9   0E89           01021     swapf WREG
02BA   04??           01022     iorwf vbuffer
02BB   300F           01023     movlw 0xf
02BC   05??           01024     andwf score+1,W
02BD   2???           01025     call digits
02BE   04??           01026     iorwf vbuffer+1
02BF   08??           01027     movfw balls
02C0   2???           01028     call digits
02C1   04??           01029     iorwf vbuffer+5
                      01030     tdelay 9
                          M     if 9==0
                          M     exitm
                          M     endif
                          M     if 9==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 9==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 9==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 9==5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 9>5
  0002                    M     variable q=(9-3)/3
  0000                    M     variable r=9-3-3*q
02C2   3002               M     movlw q
02C3   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
02C4   2???           01031     call display_vbuffer
                      01032     dropn 1
02C5   3101               M     addfsr T,1
02C6                  01033 score_exit
                      01034     next_task 5*4
02C6   0A??               M     incf slice
02C7   3014               M     movlw 5*4
02C8   02??               M     subwf slice,W
02C9   1D03               M     skpz
                          M     leave
02CA   2???               M     goto isr_exit
02CB   01??               M     clrf slice
02CC   0A??               M     incf task
                          M     leave
02CD   2???               M     goto isr_exit
                      01035 
                      01036     
                      01037 ; task 11,  draw top wall, 8 screen lines 
                      01038 ; lcount 50-57    
02CE                  01039 draw_top_wall
02CE   0021           01040     banksel TRISA
02CF   09??           01041     comf vbuffer
02D0   09??           01042     comf vbuffer+1
02D1   09??           01043     comf vbuffer+2
02D2   09??           01044     comf vbuffer+3
02D3   09??           01045     comf vbuffer+4
02D4   09??           01046     comf vbuffer+5
02D5   300A           01047     movlw WHITE
02D6   00??           01048     movwf fg_color
                      01049     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02D7   3016               M     movlw q
02D8   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01050     white
02D9   300A               M     movlw WHITE
02DA   008C               M     movwf TRISA
02DB   2???           01051     call display_vbuffer
                      01052     white
02DC   300A               M     movlw WHITE
02DD   008C               M     movwf TRISA
                      01053     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02DE   2???               M     call _4tcy
                          M     exitm
                      01054     black
02DF   301A               M     movlw BLACK
02E0   008C               M     movwf TRISA
                      01055     next_task BRICK_HEIGHT
02E1   0A??               M     incf slice
02E2   3008               M     movlw BRICK_HEIGHT
02E3   02??               M     subwf slice,W
02E4   1D03               M     skpz
                          M     leave
02E5   2???               M     goto isr_exit
02E6   01??               M     clrf slice
02E7   0A??               M     incf task
                          M     leave
02E8   2???               M     goto isr_exit
                      01056 
                      01057 ; put ball mask in video_buffer
                      01058 ; 38 tcy    
02E9                  01059 put_ball_in_buffer
02E9   2???           01060     call ball_visible ; +22tcy
02EA   1C03           01061     skpc
02EB   3???           01062     bra kill_time
02EC   0187           01063     clrf FSR1H
02ED   30??           01064     movlw low vbuffer
02EE   0086           01065     movwf FSR1L
02EF   08??           01066     movfw ball_byte
02F0   0786           01067     addwf FSR1L
02F1   08??           01068     movfw ball_mask
02F2   001E           01069     movwi FSR1++
02F3   08??           01070     movfw ball_mask+1
02F4   3FC0           01071     movwi [FSR1]
02F5   0008           01072     return ; 37 tcy
02F6                  01073 kill_time 
                      01074     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3
  0001                    M     variable r=7-3-3*q
02F6   3001               M     movlw q
02F7   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02F8   0000               M     nop
                          M     exitm
02F9   0008           01075     return ; 37 tcy
                      01076     
                      01077 ; task 12,  only on even field draw vertical sides and ball.
                      01078 ; lcount 58-73    
02FA                  01079 draw_sides 
02FA   0021           01080     banksel TRISA
02FB   2???           01081     call put_ball_in_buffer
                      01082     tdelay LEFT_MARGIN-31
                          M     if LEFT_MARGIN-31==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-31==5
                          M     call _5tcy
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if LEFT_MARGIN-31>5
  000B                    M     variable q=(LEFT_MARGIN-31-3)/3
  0002                    M     variable r=LEFT_MARGIN-31-3-3*q
02FC   300B               M     movlw q
02FD   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
02FE   3???               M     bra $+1
                          M     exitm
                      01083     white
02FF   300A               M     movlw WHITE
0300   008C               M     movwf TRISA
0301   2???           01084     call display_vbuffer
                      01085     white
0302   300A               M     movlw WHITE
0303   008C               M     movwf TRISA
                      01086     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0304   2???               M     call _4tcy
                          M     exitm
                      01087     black
0305   301A               M     movlw BLACK
0306   008C               M     movwf TRISA
                      01088     next_task 2*BRICK_HEIGHT
0307   0A??               M     incf slice
0308   3010               M     movlw 2*BRICK_HEIGHT
0309   02??               M     subwf slice,W
030A   1D03               M     skpz
                          M     leave
030B   2???               M     goto isr_exit
030C   01??               M     clrf slice
030D   0A??               M     incf task
                          M     leave
030E   2???               M     goto isr_exit
                      01089  
030F                  01090 copy_row
030F   0016           01091     moviw FSR1++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0310   04??           01092     iorwf vbuffer
0311   0016           01093     moviw FSR1++
0312   04??           01094     iorwf vbuffer+1
0313   0016           01095     moviw FSR1++
0314   04??           01096     iorwf vbuffer+2
0315   0016           01097     moviw FSR1++
0316   04??           01098     iorwf vbuffer+3
0317   0016           01099     moviw FSR1++
0318   04??           01100     iorwf vbuffer+4
0319   0016           01101     moviw FSR1++
031A   04??           01102     iorwf vbuffer+5
031B   0008           01103     return    
                      01104 
031C                  01105 rows_common
031C   00??           01106     movwf fg_color
031D   0187           01107     clrf FSR1H
031E   2???           01108     call copy_row
                      01109     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
031F   0000               M     nop
                          M     exitm
                      01110     white
0320   300A               M     movlw WHITE
0321   008C               M     movwf TRISA
0322   2???           01111     call display_vbuffer
                      01112     white
0323   300A               M     movlw WHITE
0324   008C               M     movwf TRISA
                      01113     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0325   2???               M     call _4tcy
                          M     exitm
                      01114     black
0326   301A               M     movlw BLACK
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0327   008C               M     movwf TRISA
                      01115     next_task BRICKS_ROWS*BRICK_HEIGHT
0328   0A??               M     incf slice
0329   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
032A   02??               M     subwf slice,W
032B   1D03               M     skpz
                          M     leave
032C   2???               M     goto isr_exit
032D   01??               M     clrf slice
032E   0A??               M     incf task
                          M     leave
032F   2???               M     goto isr_exit
                      01116     
                      01117 ; task 13, draw brick rows
                      01118 ; lcount 74-121   
0330                  01119 draw_bricks
0330   002?           01120     banksel vbuffer
0331   2???           01121     call put_ball_in_buffer
0332   30??           01122     movlw low row1
0333   0086           01123     movwf FSR1L
0334   30F8           01124     movlw 0xf8
0335   05??           01125     andwf slice,W
0336   0786           01126     addwf FSR1L
0337   003B           01127     banksel PWM1CON
                      01128     pushw
0338   0019               M     movwi --SP
0339   3010           01129     movlw 2<<3
033A   0200           01130     subwf T,W
033B   1803           01131     skpnc
033C   161B           01132     bsf PWM1CON,POL
                      01133     popw
033D   0012               M     moviw SP++
033E   0021           01134     banksel TRISA
033F   3689           01135     lsrf WREG
0340   3689           01136     lsrf WREG
0341   000B           01137     brw
0342   3008           01138     movlw YELLOW
0343   3???           01139     bra rows_common
0344   3008           01140     movlw YELLOW
0345   3???           01141     bra rows_common
0346   3008           01142     movlw MAUVE
0347   3???           01143     bra rows_common
0348   3008           01144     movlw MAUVE
0349   3???           01145     bra rows_common
034A   3018           01146     movlw BLUE
034B   3???           01147     bra rows_common
034C   3018           01148     movlw BLUE
034D   3???           01149     bra rows_common
                      01150     
  00000028            01151 MSG_FIRST equ 40
  00000028            01152 MSG_HEIGHT equ 40
  00000010            01153 MSG_PIXELS_COUNT equ 16 
                      01154 ; task 14
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01155 ; draw all rows below bricks to paddle
                      01156 ; lcount 122-241 
034E                  01157 draw_empty
034E   0021           01158     banksel TRISA
034F   1B00           01159     btfsc flags, F_OVER
0350   3???           01160     bra print_msg
0351   2???           01161     call put_ball_in_buffer
0352   300A           01162     movlw WHITE
0353   00??           01163     movwf fg_color
                      01164     tdelay LEFT_MARGIN-35
                          M     if LEFT_MARGIN-35==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-35>5
  000A                    M     variable q=(LEFT_MARGIN-35-3)/3
  0001                    M     variable r=LEFT_MARGIN-35-3-3*q
0354   300A               M     movlw q
0355   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0356   0000               M     nop
                          M     exitm
                      01165     white
0357   300A               M     movlw WHITE
0358   008C               M     movwf TRISA
0359   2???           01166     call display_vbuffer
                      01167     white
035A   300A               M     movlw WHITE
035B   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01168     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
035C   2???               M     call _4tcy
                          M     exitm
                      01169     black
035D   301A               M     movlw BLACK
035E   008C               M     movwf TRISA
035F   3???           01170     bra draw_empty_exit
0360                  01171 print_msg    
0360   3008           01172     movlw YELLOW ; message color
0361   00??           01173     movwf fg_color
0362   3028           01174     movlw MSG_FIRST
                      01175     pushw
0363   0019               M     movwi --SP
0364   3050           01176     movlw MSG_FIRST+MSG_HEIGHT
                      01177     pushw
0365   0019               M     movwi --SP
0366   08??           01178     movfw slice
0367   2???           01179     call between
0368   1C03           01180     skpc
0369   3???           01181     bra msg
036A   1F80           01182     btfss flags, F_COOL
036B   3???           01183     bra display_end
                      01184 ; perfect score display 'COOL' message
036C   30??           01185     movlw high cool_msg
036D   0087           01186     movwf FSR1H
036E   30??           01187     movlw low cool_msg
036F   0086           01188     movwf FSR1L
0370   2???           01189     call display_msg
0371   3???           01190     bra msg
                      01191 ; display 'END!' message    
0372                  01192 display_end
0372   30??           01193     movlw high end_msg
0373   0087           01194     movwf FSR1H
0374   30??           01195     movlw low end_msg
0375   0086           01196     movwf FSR1L
0376   2???           01197     call display_msg
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0377                  01198 msg
0377   2???           01199     call display_vbuffer
0378                  01200 draw_empty_exit
                      01201     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0378   0A??               M     incf slice
0379   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
037A   02??               M     subwf slice,W
037B   1D03               M     skpz
                          M     leave
037C   2???               M     goto isr_exit
037D   01??               M     clrf slice
037E   0A??               M     incf task
                          M     leave
037F   2???               M     goto isr_exit
                      01202 ;    incf slice
                      01203 ;    movlw LAST_VIDEO_LINE-PADDLE_THICKNESS+1
                      01204 ;    subwf lcount,W
                      01205 ;    skpz
                      01206 ;    leave
                      01207 ;    clrf slice
                      01208 ;    incf task
                      01209 ;    leave
                      01210 
                      01211 ; display end message
                      01212 ; message as a maximum of 24 vbuffer    
0380                  01213 display_msg
0380   3028           01214     movlw MSG_FIRST
0381   02??           01215     subwf slice,W
0382   3689           01216     lsrf WREG
0383   3689           01217     lsrf WREG
0384   3689           01218     lsrf WREG
0385   00??           01219     movwf temp1
0386   3589           01220     lslf WREG
0387   07??           01221     addwf temp1,W
0388   0786           01222     addwf FSR1L
0389   1803           01223     skpnc
038A   0A87           01224     incf FSR1H
038B   0016           01225     moviw FSR1++
038C   00??           01226     movwf vbuffer+1
038D   0016           01227     moviw FSR1++
038E   00??           01228     movwf vbuffer+2
038F   0016           01229     moviw FSR1++
0390   00??           01230     movwf vbuffer+3
0391   0008           01231     return
                      01232     
                      01233 ; task 15, draw paddle at bottom screen  
                      01234 ; lcount 242-249    
0392                  01235 draw_paddle
0392   0021           01236     banksel TRISA
0393   0187           01237     clrf FSR1H
0394   30??           01238     movlw low vbuffer
0395   0086           01239     movwf FSR1L
0396   08??           01240     movfw paddle_byte
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0397   0786           01241     addwf FSR1L
0398   08??           01242     movfw paddle_mask
0399   001E           01243     movwi FSR1++
039A   08??           01244     movfw paddle_mask+1
039B   3FC0           01245     movwi  [FSR1]
039C   300A           01246     movlw WHITE
039D   00??           01247     movwf fg_color
                      01248     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
039E   3015               M     movlw q
039F   2???               M     call _3ntcy ; tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01249     white
03A0   300A               M     movlw WHITE
03A1   008C               M     movwf TRISA
03A2   2???           01250     call display_vbuffer
                      01251     white
03A3   300A               M     movlw WHITE
03A4   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01252     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
03A5   2???               M     call _4tcy
                          M     exitm
                      01253     black
03A6   301A               M     movlw BLACK
03A7   008C               M     movwf TRISA
                      01254     next_task PADDLE_THICKNESS
03A8   0A??               M     incf slice
03A9   3004               M     movlw PADDLE_THICKNESS
03AA   02??               M     subwf slice,W
03AB   1D03               M     skpz
                          M     leave
03AC   2???               M     goto isr_exit
03AD   01??               M     clrf slice
03AE   0A??               M     incf task
                          M     leave
03AF   2???               M     goto isr_exit
                      01255 
                      01256 ; task 16,  wait end of this field, reset task to zero    
                      01257 ; lcount 251-262/3    
03B0                  01258 wait_field_end
03B0   1800           01259     btfsc flags, F_BIT8
03B1   2???           01260     goto hi_line
                      01261     leave
03B2   2???               M     goto isr_exit
03B3                  01262 hi_line
03B3   1880           01263     btfsc flags,F_EVEN
03B4   2???           01264     goto even_field
03B5   3005           01265     movlw 5
03B6   02??           01266     subwf lcount,W
03B7   1D03           01267     skpz
                      01268     leave
03B8   2???               M     goto isr_exit
03B9   2???           01269     goto field_end
03BA                  01270 even_field
03BA   3006           01271     movlw 6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03BB   02??           01272     subwf lcount,W
03BC   1D03           01273     skpz
                      01274     leave
03BD   2???               M     goto isr_exit
                      01275 ; even field last line is half_line    
                      01276 ; set PWM3 for line 263 half-line
03BE   003B           01277     banksel PWM3DC
03BF   3003           01278     movlw high HALF_LINE
03C0   00B6           01279     movwf PWM3PRH
03C1   308D           01280     movlw low HALF_LINE
03C2   00B5           01281     movwf PWM3PRL
03C3   17BF           01282     bsf PWM3LDCON,7
03C4                  01283 field_end
03C4   01??           01284     clrf task
03C5   01??           01285     clrf slice
03C6   01??           01286     clrf lcount
03C7   1000           01287     bcf flags, F_BIT8
03C8   1500           01288     bsf flags, F_SYNC
                      01289 ; toggle odd/even field flag    
03C9   3002           01290     movlw 1<<F_EVEN
03CA   06??           01291     xorwf flags
                      01292     leave
03CB   2???               M     goto isr_exit
                      01293 
                      01294 ; helper functions
                      01295 
                      01296 ; delay = 4+(n-1)*3    
                      01297 ;input:
                      01298 ;   WREG <- n {1..255}
03CC                  01299 _3ntcy
03CC   0B89           01300     decfsz WREG
03CD   3???           01301     bra $-1
03CE   0008           01302     return
03CF                  01303 _5tcy ; call here for 5*tcy delay using a single instruction
03CF   0000           01304     nop
03D0                  01305 _4tcy ; call here for 4*Tcy delay using a single instruction    
03D0   0008           01306     return
                      01307 
                      01308 ; increment user score
                      01309 ; This is a BCD addition where a single digit is added to score.   
                      01310 ; score is stored as big indian
                      01311 ; argument: 
                      01312 ;   WREG ->  bdc digit to add to score variable
03D1                  01313 inc_score
03D1   07??           01314     addwf score+1
03D2   1883           01315     btfsc STATUS,DC
03D3   3???           01316     bra $+6
03D4   300F           01317     movlw 15
03D5   05??           01318     andwf score+1,W
03D6   3C09           01319     sublw 9
03D7   1803           01320     skpnc
03D8   3???           01321     bra $+3
03D9   3006           01322     movlw 6
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DA   07??           01323     addwf score+1
03DB   0E??           01324     swapf score+1,W
03DC   390F           01325     andlw 15
03DD   3C09           01326     sublw 9
03DE   1803           01327     skpnc
03DF   3???           01328     bra game_over_test
03E0   3060           01329     movlw 0x60
03E1   07??           01330     addwf score+1
03E2   0A??           01331     incf score
                      01332 ; double ball speed if score >=200
03E3   3002           01333     movlw 2
03E4   02??           01334     subwf score,W
03E5   1C03           01335     skpc
03E6   0008           01336     return
03E7   3001           01337     movlw 1
03E8   00??           01338     movwf ball_speed
03E9                  01339 game_over_test ; all bricks destroyed?
03E9   3004           01340     movlw 4
03EA   02??           01341     subwf score,W
03EB   1D03           01342     skpz
03EC   0008           01343     return
03ED   3008           01344     movlw 0x08
03EE   02??           01345     subwf score+1,W
03EF   1D03           01346     skpz
03F0   0008           01347     return
03F1   1700           01348     bsf flags,F_OVER ; game over
03F2   1780           01349     bsf flags,F_COOL ; with maximum score.
03F3   0008           01350     return
                      01351     
                      01352     
03F4                  01353 brick_wall_init
03F4   30??           01354     movlw high row1
03F5   0087           01355     movwf FSR1H
03F6   30??           01356     movlw low row1
03F7   0086           01357     movwf FSR1L
03F8   3030           01358     movlw BRICKS_ROWS*8
03F9   00??           01359     movwf temp1
03FA   30FF           01360     movlw 0xff
03FB                  01361 bw_init
03FB   001E           01362     movwi FSR1++
03FC   0B??           01363     decfsz temp1
03FD   3???           01364     bra bw_init
03FE   0008           01365     return
                      01366 
                      01367 ; compute tcy delay from pixel coordinateur
                      01368 ;  1 pixel is 5 tcy wide.
                      01369 ; input:
                      01370 ;   WREG  px
                      01371 ; output
                      01372 ;   WREG  tcy    
03FF                  01373 px2tcy
                      01374    pushw
03FF   0019               M     movwi --SP
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0400   3589           01375    lslf WREG
0401   3589           01376    lslf WREG
0402   0780           01377    addwf T
                      01378    popw
0403   0012               M     moviw SP++
0404   0008           01379    return
                      01380 
                      01381    
                      01382     
                      01383     
                      01384     
                      01385 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs    
0405                  01386 lfsr16
0405   002?           01387     banksel seed
0406   08??           01388     movfw seed+1
0407   00??           01389     movwf temp1
0408   3589           01390     lslf WREG
0409   3589           01391     lslf WREG
040A   00??           01392     movwf temp2
040B   06??           01393     xorwf temp1
040C   35??           01394     lslf temp2
040D   08??           01395     movfw temp2
040E   06??           01396     xorwf temp1
040F   35??           01397     lslf temp2
0410   35??           01398     lslf temp2,W
0411   06??           01399     xorwf temp1
0412   35??           01400     lslf temp1
0413   0D??           01401     rlf seed
0414   0D??           01402     rlf seed+1
0415   08??           01403     movfw seed
0416   0008           01404     return
                      01405     
                      01406 
0417                  01407 set_ball_dx
0417   2???           01408     call lfsr16 ;random
0418   3007           01409     movlw 7
0419   05??           01410     andwf seed,W
041A   3589           01411     lslf WREG
041B   000B           01412     brw
041C   3000           01413     movlw 0
041D   3???           01414     bra set_ball_dx_exit
041E   3001           01415     movlw 1
041F   3???           01416     bra set_ball_dx_exit
0420   30FF           01417     movlw -1
0421   3???           01418     bra set_ball_dx_exit
0422   3000           01419     movlw 0
0423   3???           01420     bra set_ball_dx_exit
0424   3001           01421     movlw 1
0425   3???           01422     bra set_ball_dx_exit
0426   30FF           01423     movlw -1
0427   3???           01424     bra set_ball_dx_exit
0428   30FF           01425     movlw -1
0429   3???           01426     bra set_ball_dx_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042A   3001           01427     movlw 1
042B                  01428 set_ball_dx_exit
042B   00??           01429     movwf ball_dx
042C   0008           01430     return
                      01431     
042D                  01432 game_init
042D   01??           01433     clrf score
042E   01??           01434     clrf score+1
042F   2???           01435     call brick_wall_init
0430   002?           01436     banksel balls
0431   3003           01437     movlw 3
0432   00??           01438     movwf balls
0433   01??           01439     clrf ball_timer
0434   0A??           01440     incf ball_timer
0435   30EF           01441     movlw PADDLE_Y-BALL_HEIGHT+1
0436   00??           01442     movwf ball_y
0437   2???           01443     call set_ball_dx
0438   30FC           01444     movlw -4
0439   00??           01445     movwf ball_dy
043A   3002           01446     movlw 2
043B   00??           01447     movwf ball_speed
043C   01??           01448     clrf flags
043D   1600           01449     bsf flags, F_START
043E   0008           01450     return
                      01451     
                      01452 ; delay by TIMER0
                      01453 ; parameter
                      01454 ;   WREG -> 2*Tcy+7cy    
043F                  01455 t0delay 
043F   0989           01456     comf WREG
0440   0095           01457     movwf TMR0
0441   110B           01458     bcf INTCON,T0IF
0442   1D0B           01459     btfss INTCON,T0IF
0443   3???           01460     bra $-1
0444   0008           01461     return
                      01462     
                      01463 MAIN_PROG CODE                      ; let linker place main program
                      01464 
0000                  01465 initialize
                      01466 ; clear common RAM
0000   0185           01467     clrf FSR0H
0001   3070           01468     movlw 0x70
0002   0084           01469     movwf FSR0L
0003   0103           01470     clrw
0004   001A           01471     movwi FSR0++
0005   1F84           01472     btfss FSR0L,7
0006   3???           01473     bra $-2
                      01474 ; clear banked RAM
0007   0184           01475     clrf FSR0L
0008   3020           01476     movlw 0x20
0009   0085           01477     movwf FSR0H
000A   0103           01478     clrw 
000B   001A           01479     movwi FSR0++
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   1C05           01480     btfss FSR0H,0
000D   3???           01481     bra $-2
                      01482 ; initialize LFSR seed
000E   002?           01483     banksel seed
000F   09??           01484     comf seed
0010   09??           01485     comf seed+1
0011   09??           01486     comf seed+2
0012   09??           01487     comf seed+3
                      01488 ;   setup arguments stack pointer
0013   30??           01489     movlw high (stack+STACK_SIZE)
0014   0085           01490     movwf FSR0H
0015   30??           01491     movlw low (stack+STACK_SIZE)
0016   0084           01492     movwf FSR0L
                      01493 ; setup OPTION register to enable weak pullup and prescale used by TIMER
                      01494 ; TIMER0 prescale 1:2
0017   3050           01495     movlw ~((1<<NOT_WPUEN)|(1<<TMR0CS)|(1<<PSA)|(7<<PS0_OPTION_REG))
0018   0095           01496     movwf OPTION_REG
                      01497 ; disable analog inputs, except AN0
0019   0023           01498     banksel ANSELA
001A   018C           01499     clrf ANSELA
                      01500 ; paddle potentiometer input     
001B   140C           01501     bsf ANSELA,PADDLE
001C   0021           01502     banksel ADCON1
001D   3020           01503     movlw (2<<ADCS0)
001E   009E           01504     movwf ADCON1
                      01505 ; pin setup
001F   0024           01506     banksel WPUA
0020   018C           01507     clrf WPUA
0021   0021           01508     banksel TRISA
0022   110C           01509     bcf TRISA,SYNC_OUT
0023   100C           01510     bcf TRISA,AUDIO
0024   0022           01511     banksel LATA
0025   160C           01512     bsf LATA, VIDEO_OUT
                      01513 ; PWM1 chroma signal on RA1
0026   003B           01514     banksel PWM1CON
0027   019F           01515     clrf PWM1LDCON
0028   0191           01516     clrf PWM1PHL
0029   0192           01517     clrf PWM1PHH
002A   0197           01518     clrf PWM1OFL
002B   0198           01519     clrf PWM1OFH
002C   0196           01520     clrf PWM1PRH
002D   3007           01521     movlw 7
002E   0095           01522     movwf PWM1PRL
002F   3004           01523     movlw 4
0030   0093           01524     movwf PWM1DCL
0031   0194           01525     clrf PWM1DCH
0032   179F           01526     bsf PWM1LDCON,7
0033   30C0           01527     movlw (1<<EN)|(1<<OE)
0034   009B           01528     movwf PWM1CON
                      01529 ; PWM2 sound
0035   003B           01530     banksel PWM2CON
0036   01A1           01531     clrf PWM2PHL
0037   01A2           01532     clrf PWM2PHH
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0038   01A7           01533     clrf PWM2OFL
0039   01A8           01534     clrf PWM2OFH
003A   3030           01535     movlw 3<<PWM2PS0 ; clock source FOSC/8
003B   00AE           01536     movwf PWM2CLKCON
003C   300D           01537     movlw high 3578;7
003D   00A6           01538     movwf PWM2PRH
003E   30FA           01539     movlw low 3578;7
003F   00A5           01540     movwf PWM2PRL
0040   3626           01541     lsrf PWM2PRH,W
0041   00A4           01542     movwf PWM2DCH
0042   0C25           01543     rrf PWM2PRL,W
0043   00A3           01544     movwf PWM2DCL
0044   17AF           01545     bsf PWM2LDCON,LDA
                      01546 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0045   003B           01547     banksel PWM3CON
0046   01BF           01548     clrf PWM3LDCON
0047   01B1           01549     clrf PWM3PHL
0048   01B2           01550     clrf PWM3PHH
0049   01B7           01551     clrf PWM3OFL
004A   01B8           01552     clrf PWM3OFH
004B   301B           01553     movlw low HPERIOD
004C   00B5           01554     movwf PWM3PRL
004D   3007           01555     movlw high HPERIOD
004E   00B6           01556     movwf PWM3PRH
004F   3086           01557     movlw HSYNC
0050   00B3           01558     movwf PWM3DCL
0051   01B4           01559     clrf PWM3DCH
0052   30D0           01560     movlw (1<<EN)|(1<<OE)|(1<<POL)
0053   00BB           01561     movwf PWM3CON
0054   17BF           01562     bsf PWM3LDCON,7
0055   143C           01563     bsf PWM3INTE,PRIE
                      01564 ; enbable interrupt    
0056   0020           01565     banksel PIR3
0057   1313           01566     bcf PIR3,PWM3IF
0058   0021           01567     banksel PIE3
0059   1713           01568     bsf PIE3,PWM3IE
005A   170B           01569     bsf INTCON,PEIE
005B   178B           01570     bsf INTCON,GIE
005C   2???           01571     call game_init
005D   01??           01572     clrf flags
005E   1500           01573     bsf flags, F_SYNC
                      01574 ; test code
005F   1600           01575     bsf flags, F_START
                      01576 ; all processing done in ISR    
0060   2???           01577     goto $
                      01578 
                      01579 ;digits character table
                      01580 ; input:
                      01581 ;   T -> glyph row
                      01582 ;   WREG -> digit
                      01583 ; output:
                      01584 ;   WREG -> pixels
                      01585 ;   T -> glyph row    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0061                  01586 digits
                      01587     pushw 
0061   0019               M     movwi --SP
0062   3589           01588     lslf WREG
0063   3589           01589     lslf WREG
0064   0780           01590     addwf T
                      01591     popw
0065   0012               M     moviw SP++
0066   0700           01592     addwf T,W
0067   000B           01593     brw
0068   3440 34A0 34A0 01594     dt  0x40,0xA0,0xA0,0xA0,0x40 ; 0
       34A0 3440 
006D   3440 34C0 3440 01595     dt  0x40,0xC0,0x40,0x40,0xE0 ; 1
       3440 34E0 
0072   34E0 3420 34C0 01596     dt  0xE0,0x20,0xC0,0x80,0xE0 ; 2
       3480 34E0 
0077   34E0 3420 34C0 01597     dt  0xE0,0x20,0xC0,0x20,0xE0 ; 3
       3420 34E0 
007C   34A0 34A0 34E0 01598     dt  0xA0,0xA0,0xE0,0x20,0x20 ; 4
       3420 3420 
0081   34E0 3480 34E0 01599     dt  0xE0,0x80,0xE0,0x20,0xE0 ; 5
       3420 34E0 
0086   34C0 3480 34E0 01600     dt  0xC0,0x80,0xE0,0xA0,0xE0 ; 6
       34A0 34E0 
008B   34E0 3420 3420 01601     dt  0xE0,0x20,0x20,0x20,0x20 ; 7
       3420 3420 
0090   34E0 34A0 34E0 01602     dt  0xE0,0xA0,0xE0,0xA0,0xE0 ; 8
       34A0 34E0 
0095   34E0 34A0 34E0 01603     dt  0xE0,0xA0,0xE0,0x20,0x60 ; 9
       3420 3460 
009A   0001           01604     reset
                      01605     
009B                  01606 frequency
009B   000B           01607     brw
009C   348B 34D3      01608     dt high 35795, low 35795 ; 100 hertz
009E   340D 34FB      01609     dt high 3579, low 3579 ; 1000 hertz
00A0   0001           01610     reset
                      01611   
                      01612 ;display END! when game is over    
00A1                  01613 end_msg
                      01614 ;    brw
00A1   00E8 00C8 0000 01615     data 0xe8,0xc8,0
00A4   008E 00A8 0000 01616     data 0x8e,0xa8,0
00A7   00EA 00A8 0000 01617     data 0xea,0xa8,0
00AA   008A 00A0 0000 01618     data 0x8a,0xa0,0
00AD   00EA 00C8 0000 01619     data 0xea,0xc8,0
                      01620   
00B0                  01621 cool_msg
                      01622 ;    brw
00B0   00EE 00E8 0000 01623     data 0xee,0xe8,0
00B3   008A 00A8 0000 01624     data 0x8a,0xa8,0
00B6   008A 00A8 0000 01625     data 0x8a,0xa8,0
00B9   008A 00A8 0000 01626     data 0x8a,0xa8,0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BC   00EE 00EE 0000 01627     data 0xee,0xee,0
                      01628     
                      01629 eeprom org (PROG_SIZE-EEPROM_SIZE)
0780                  01630 max_score 
                      01631  
3FA7 1EFF             01632     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001A
BLUE                              00000018
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000018
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fcy                               006D3CD8
Fhorz                             00003D76
Fosc                              01B4F360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

G1ARSEN                           00000006
G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

IOCAN5                            00000005
IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000008
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

NOT_TO                            00000004
NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000008
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PMDAT                             00000193
PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000010
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 65


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
Tcy                               0000008C
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000A
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 66


SYMBOL TABLE
  LABEL                             VALUE 

WUE                               00000001
YELLOW                            00000008
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_00D3                         000000D3
_ISR_00DE                         000000DE
_ISR_00F3                         000000F3
_ISR_0121                         00000121
_ISR_0167                         00000167
_ISR_01AC                         000001AC
_ISR_02FE                         000002FE
_ISR_03CD                         000003CD
_ISR_03D3                         000003D3
_ISR_03D8                         000003D8
_ISR_0443                         00000443
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0006                   00000006
_MAIN_PROG_000D                   0000000D
_MAIN_PROG_0060                   00000060
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000199
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         0000011E
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001B5
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           000001A0
between_exit                      000001AA
between_exit2                     000001AC
black                             
blue                              
bottom_bound                      00000117
bounce_left                       00000150
bouncing                          0000013F
brick_wall_init                   000003F4
bw_init                           000003FB
chroma_invert                     
chroma_off                        
chroma_on                         
chroma_ref                        
collision                         00000169
collision_exit                    0000019E
compute_ball_mask                 00000158
compute_paddle_mask               000000E5
cool_msg                          000000B0
copy_row                          0000030F
dark_green                        
digits                            00000061
display_bit                       
display_byte                      
display_end                       00000372
display_msg                       00000380
display_vbuffer                   000001BC
draw_bricks                       00000330
draw_empty                        0000034E
draw_empty_exit                   00000378
draw_paddle                       00000392
draw_score                        000002AD
draw_sides                        000002FA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

draw_top_wall                     000002CE
dropn                             
eeprom                            00000780
end_msg                           000000A1
even_field                        000003BA
fg_color                          000000D7
field_end                         000003C4
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         0000009B
game_init                         0000042D
game_over                         000000BA
game_over_test                    000003E9
game_running                      000000B2
gray                              white
hi_line                           000003B3
inc_score                         000003D1
initialize                        00000000
isr                               00000004
isr_exit                          00000030
kill_time                         000002F6
lcount                            00000001
leave                             
left_bound                        000000FD
lfsr16                            00000405
mauve                             
max_score                         00000780
move_ball                         000000F5
move_ball_exit                    00000130
move_y                            0000010A
msg                               00000377
next_task                         
old_dx                            0000000F
paddle_bounce                     00000133
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000152
pickn                             
pokew                             
pong_sound                        0000019A
popw                              
porch_off                         
porch_on                          
post_last                         00000067
post_vsync                        0000005E
pre_vsync                         00000035
print_msg                         00000360
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

pushw                             
put_ball_in_buffer                000002E9
px2tcy                            000003FF
q                                 00000015
r                                 00000000
read_button                       000000C7
read_paddle                       000000CB
reserved_task                     00000078
right_bound                       00000103
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
row6                              000000CF
rows_common                       0000031C
score                             0000000C
score_exit                        000002C6
seed                              00000030
set_ball_dx                       00000417
set_ball_dx_exit                  0000042B
set_presync                       00000040
set_vsync                         00000056
skip_2_tasks                      000000BF
slice                             00000002
sound                             0000007A
sound_fx1                         00000087
sound_init                        00000092
sound_timer                       000000DE
stack                             00000020
swap_var                          
swapw                             
t0delay                           0000043F
task                              00000003
task_switch                       0000001C
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         0000010E
user_input                        000000A7
vbuffer                           000000A0
video_first                       000001AE
vsync                             0000004B
vsync_end                         0000006B
wait_field_end                    000003B0
wait_trigger                      000000B4
white                             
yellow                            

MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-23-2019  11:19:26         PAGE 70





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   335 suppressed

