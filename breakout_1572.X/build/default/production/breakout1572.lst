MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; Copyright Jacques Deschênes 2019 
                      00002 ; This file is part of breakout_1572.
                      00003 ;
                      00004 ;     breakout_1572 is free software: you can redistribute it and/or modify
                      00005 ;     it under the terms of the GNU General Public License as published by
                      00006 ;     the Free Software Foundation, either version 3 of the License, or
                      00007 ;     (at your option) any later version.
                      00008 ;
                      00009 ;     breakout_1572 is distributed in the hope that it will be useful,
                      00010 ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                      00011 ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                      00012 ;     GNU General Public License for more details.
                      00013 ;
                      00014 ;     You should have received a copy of the GNU General Public License
                      00015 ;     along with breakout_1572.  If not, see <http://www.gnu.org/licenses/>.
                      00016 
                      00017 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00018 ;                BREAKOUT game
                      00019 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00020 ;             IMPLEMENTATION NOTES
                      00021 ;  PWM3 is used to generate NTSC synchronization signal.
                      00022 ;  An interrupt is triggered at begin of each horizontal scan line.
                      00023 ;  Inside this interrupt there is a round robin task scheduler.
                      00024 ;  All video display and game logic is done inside these tasks.
                      00025 ;  After MCU initialization the main() procedure is an empty loop.
                      00026 ;  The PIC12F1572 is clocked by an external oscillator running at
                      00027 ;  8 times NTSC chroma frequency  28.636Mhz.    
                      00028 ;  The CPU Fcy is 2*NTSC chroma frequency 7.159Mhz. This give a Tcy
                      00029 ;  short of 140 nanoseconds.
                      00030 ;  NTSC horizontal frequency being 15734 Hertz code inside the ISR
                      00031 ;  must execute in less than 454 Tcy.    
                      00032 ;  The overhead before entering a task in at most 58Tcy.
                      00033 ;  The 'next_task' macro and the 'isr_exit' code use 17Tcy at most.
                      00034 ;  To play safe any task should execute in less than 379Tcy.
                      00035 ;  VISIBLE video lines:
                      00036 ;   For the visibles video lines tasks some delay is introduce
                      00037 ;   before any display attempt to ensure the game left side is
                      00038 ;   inside visible part of the scan line.
                      00039 ;   Each visible line must be terminate by returning video_output to black
                      00040 ;   otherwise the sync signal will be mangled. 
                      00041 ;    
                      00042 ;  SCHEDULER
                      00043 ;  scan lines  | slices  |   usage
                      00044 ;  =================================
                      00045 ;    1-3       |  6      | task 0, vertical pre-equalization
                      00046 ;    4-6       |  6      | task 1, vertical sync
                      00047 ;    7-9       |  6      | task 2, vertical post-equalization
                      00048 ;    10        |  1      | task 3, synchronization end
                      00049 ;    11        |  1      | task 4, reserved slot, do nothing    
                      00050 ;    12        |  1      | task 5, sound timer
                      00051 ;    13        |  1      | task 6, user input
                      00052 ;    14        |  1      | task 7, move ball
                      00053 ;    15        |  1      | task 8, collision control
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;    16-29     |  14     | task 9, do nothing until first visible line    
                      00055 ;    30-49     |  20     | task 10, display score and balls count
                      00056 ;    50-57     |  8      | task 11, draw top border
                      00057 ;    58-73     |  16     | task 12, draw space over bricks rows
                      00058 ;    74-121    |  48     | task 13, draw 6 bricks rows
                      00059 ;    122-241   |  120    | task 14, draw space below bricks rows
                      00060 ;    242-249   |  8      | task 15, draw paddle
                      00061 ;    250-262/3 |  11/12  | task 16, wait end of field    
                      00062 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00063  
                      00064     
                      00065     include p12f1572.inc
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 21 2019
                      00005 ;  MPASM PIC12F1572 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2019 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      01601         LIST
                      00066     
8007   3FA7           00067     __config _CONFIG1, _FOSC_ECH & _WDTE_OFF & _MCLRE_OFF
8008   1EFF           00068     __config _CONFIG2, _PLLEN_OFF & _LVP_OFF
                      00069     
                      00070     radix dec
                      00071 
                      00072 ; constants
  00000800            00073 PROG_SIZE equ 2048  ; program words
  00000080            00074 EEPROM_SIZE equ 128 ; high endurance flash words
                      00075  
  01B4F360            00076 Fosc equ 28636000 ; external oscillator frequency
                      00077  
                      00078 ; NTSC signal 
  00003D76            00079 Fhorz equ 15734 ; horizontal frequency
  0000071B            00080 HPERIOD equ ((Fosc/Fhorz)-1)  ; PWM3PR count for horizontal period (63,55µS)
  00000086            00081 HSYNC  equ 134  ;  (4,7µS) PWM3DC count for horz. sync pulse
  00000041            00082 HEQUAL equ 65 ; PWM3DC count for 2,3µS equalization pulse
  00000308            00083 VSYNC_PULSE equ 776 ; PWM3PR count for 27,1µS vertical sync. pulse
  0000038D            00084 HALF_LINE equ ((Fosc/Fhorz/2)-1) ; PWM3PR count for vsync lines,  half HPERIOD
                      00085 ; boolean flags 
  00000000            00086 F_BIT8 equ 0    ; bit 8 of scan line counter
  00000001            00087 F_EVEN equ 1    ; even field
  00000002            00088 F_SYNC equ 2    ; set during vertical synchronization phase
  00000003            00089 F_SOUND equ 3   ; sound enabled 
  00000004            00090 F_START equ 4   ; game started 
  00000005            00091 F_PAUSE equ 5   ; game paused after a ball lost
  00000006            00092 F_OVER equ 6    ; game over
  00000007            00093 F_COOL equ 7    ; player got maximum score
                      00094  
                      00095 ;pins assignment
  00000000            00096 AUDIO EQU RA0  ; PWM2 output for audio tones
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00097 PADDLE equ RA0 ;  analog input for potentiometer controlling paddle position
  00000001            00098 CHROMA equ RA1  ;   chroma signal output
  00000002            00099 SYNC_OUT equ RA2  ; NTSC signal synchronization
  00000003            00100 START_BTN equ RA3 ; start button input
  00000004            00101 VIDEO_OUT equ RA4 ; video luminance output
  00000005            00102 CLKIN equ RA5     ; external oscillateur input.
                      00103  
                      00104     ; constants used in video display
                      00105 ; values are in pixels for x dimension.
                      00106 ; values are in number of scan lines for y dimension.
                      00107 ; Tcy are delay counted in MCU cycles.    
  0000001E            00108 FIRST_VIDEO_LINE equ 30 ; first scan line displayed
  0000004A            00109 FIRST_BRICK_Y equ 74 ; top of first brick row scan line
  000000F9            00110 LAST_VIDEO_LINE  equ 249 ; last scan line displayed
  00000045            00111 LEFT_MARGIN equ 69  ; Tcy delay before any display
  00000030            00112 PLAY_WIDTH equ 48 ; pixels
  00000005            00113 PIXEL_WIDTH equ 5; pixel width in Tcy 
  00000008            00114 BRICK_HEIGHT equ 8  ; scan lines
  00000004            00115 BRICK_WIDTH equ 4  ; pixels
  00000004            00116 BORDER_WIDTH equ 4  ; Tcy
  00000002            00117 BALL_WIDTH equ 2 ; pixels
  000000C0            00118 BALL_MASK equ 0xC0 ;  applied to vbuffer to display ball
  00000008            00119 BALL_HEIGHT equ 8 ; scan lines 
  00000000            00120 BALL_LEFT_BOUND equ 0 ; pixels
  0000002E            00121 BALL_RIGHT_BOUND equ (PLAY_WIDTH-BALL_WIDTH) ; pixels
  0000003A            00122 BALL_TOP_BOUND equ 58  ; scan lines
  000000F9            00123 BALL_BOTTOM_BOUND equ LAST_VIDEO_LINE ;scan line
  00000008            00124 PADDLE_WIDTH equ 8 ; pixels
  00000004            00125 PADDLE_THICKNESS equ 4 ; scan lines
  00000028            00126 PADDLE_LIMIT equ PLAY_WIDTH-PADDLE_WIDTH ; pixels
  000000F6            00127 PADDLE_Y equ LAST_VIDEO_LINE-PADDLE_THICKNESS+1 ; scan line 
  000000FF            00128 PADDLE_MASK equ 0xFF ; applied to vbuffer to display paddle
  00000006            00129 BRICKS_ROWS equ 6 ; number of bricks rows
  0000004A            00130 ROW1_Y equ 74 ; row first scan line
  00000052            00131 ROW2_Y equ 82
  0000005A            00132 ROW3_Y equ 90
  00000062            00133 ROW4_Y equ 98
  0000006A            00134 ROW5_Y equ 106
  00000072            00135 ROW6_Y equ 114 
                      00136 
                      00137 ;;;;;;;;;;;;;;;;;;;;;;
                      00138 ;; assembler macros ;;
                      00139 ;;;;;;;;;;;;;;;;;;;;;;
                      00140 
                      00141 ; leave task by exiting interrupt service routine. 
                      00142 leave macro
                      00143     goto isr_exit
                      00144     endm
                      00145     
                      00146 ; move to next task on slice limit
                      00147 ; parameters:
                      00148 ;   s  nomber of slices used by the task    
                      00149 next_task macro s    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00150     incf slice
                      00151     movlw s
                      00152     subwf slice,W
                      00153     skpz
                      00154     leave
                      00155     clrf slice
                      00156     incf task
                      00157     leave
                      00158     endm
                      00159     
                      00160     
                      00161 ; delay in machine cycle Tcy
                      00162 ; parameters:
                      00163 ;   mc   number of machine cycles (Tcy)   
                      00164 tdelay macro mc 
                      00165     if mc==0
                      00166     exitm
                      00167     endif
                      00168     if mc==1
                      00169     nop
                      00170     exitm
                      00171     endif
                      00172     if mc==2
                      00173     bra $+1
                      00174     exitm
                      00175     endif
                      00176     if mc==3
                      00177     nop
                      00178     bra $+1
                      00179     exitm
                      00180     endif
                      00181     if mc==4
                      00182     call _4tcy
                      00183     exitm
                      00184     endif
                      00185     if mc==5
                      00186     call _5tcy
                      00187     exitm
                      00188     endif
                      00189     if mc>5
                      00190     variable q=(mc-3)/3 
                      00191     variable r=mc-3-3*q
                      00192     movlw q
                      00193     call _3ntcy ; Tcy=3+3*q
                      00194     if (r==2)
                      00195     bra $+1
                      00196     exitm
                      00197     endif 
                      00198     if (r==1)
                      00199     nop
                      00200     exitm
                      00201     endif
                      00202     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00203     endm
                      00204 
                      00205 
                      00206 ;;;;;;;;;;;;;;;;;;;;;;
                      00207 ;   colors macros
                      00208 ;   TRISA configuration    
                      00209 ;;;;;;;;;;;;;;;;;;;;;;;
  00000009            00210 OTHERS equ (0<<SYNC_OUT)|(1<<PADDLE)|(1<<START_BTN)    
  0000001B            00211 BLACK equ (1<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  0000000B            00212 WHITE equ (1<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00213 MAUVE equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000009            00214 YELLOW equ (0<<CHROMA)|(0<<VIDEO_OUT)|OTHERS
  00000019            00215 BLUE equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
  00000019            00216 DARK_GREEN equ (0<<CHROMA)|(1<<VIDEO_OUT)|OTHERS
                      00217 
                      00218 ; for the colors macros TRISA bank must be pre-selected 
                      00219 ;set video output to black    
                      00220 black macro
                      00221     movlw BLACK
                      00222     movwf TRISA
                      00223     endm
                      00224     
                      00225 ; set video output to white    
                      00226 white macro    
                      00227     movlw WHITE
                      00228     movwf TRISA
                      00229     endm
                      00230 
                      00231 ; set video output to mauve    
                      00232 mauve macro
                      00233     movlw MAUVE
                      00234     movwf TRISA
                      00235     endm
                      00236 
                      00237 ; set video output to yellow   
                      00238 yellow macro
                      00239     movlw YELLOW
                      00240     movwf TRISA
                      00241     endm
                      00242     
                      00243 ; set video output to blue
                      00244 blue macro
                      00245     movlw BLUE
                      00246     movwf TRISA
                      00247     endm
                      00248     
                      00249 ; set video output to dark green    
                      00250 dark_green macro
                      00251     movlw DARK_GREEN
                      00252     movwf TRISA
                      00253     endm
                      00254 
                      00255 ; shift out 1 bit    
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00256 display_bit macro n
                      00257     lslf vbuffer+n
                      00258     movlw BLACK
                      00259     skpnc
                      00260     movfw fg_color
                      00261     movwf TRISA
                      00262     endm
                      00263     
                      00264 ; display a byte of pixels from vbuffer
                      00265 ; this macro expansion result in 8*5 -> 40 instructions    
                      00266 ; input:
                      00267 ;   n is byte number {0..5}    
                      00268 display_byte macro n
                      00269     display_bit n
                      00270     display_bit n
                      00271     display_bit n
                      00272     display_bit n
                      00273     display_bit n
                      00274     display_bit n
                      00275     display_bit n
                      00276     display_bit n
                      00277     endm
                      00278     
                      00279    
                      00280 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00281 ;  stack manipulation macros
                      00282 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
  00000050            00283 STACK_SIZE equ 80 ; size of argument stack
                      00284 #define T INDF0 ; indirect access to top of argument stack
                      00285 #define SP FSR0 ; use FSR0 as stack pointer 
                      00286 ; push WREG on T
                      00287 pushw  macro
                      00288     movwi --SP
                      00289     endm
                      00290   
                      00291 ; pop WREG from T
                      00292 popw macro
                      00293     moviw SP++
                      00294     endm
                      00295 
                      00296 ; drop n elements from stack
                      00297 dropn macro n
                      00298     addfsr T,n
                      00299     endm
                      00300 
                      00301 ; copy nth element of stack to WREG
                      00302 ;  n {0..31}, 0 is T   
                      00303 pickn macro n
                      00304     moviw n[SP]
                      00305     endm
                      00306    
                      00307     
                      00308     
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00310 ;;    variables
                      00311 ;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00312  
                      00313     
                      00314     udata 0x20 ; bank 0 
0020                  00315 stack res STACK_SIZE ; arguments stack
                      00316  
                      00317 ; video display manipulate TRISA register
                      00318 ; to avoid banksel during video update
                      00319 ; place variables related to video in same bank as TRISA 
                      00320 v_array   udata 0xA0 ; bank 1
00A0                  00321 vbuffer res 6
00A6                  00322 temp3 res 1 ; to simplify mask application on last byte of vbuffer 
00A7                  00323 row1 res 6; brick wall row1
00AD                  00324 fill1 res 2 ; to simplify computation, faster to multiply and divide by 8 rather than 6.
00AF                  00325 row2 res 6
00B5                  00326 fill2 res 2 
00B7                  00327 row3 res 6
00BD                  00328 fill3 res 2 
00BF                  00329 row4 res 6
00C5                  00330 fill4 res 2 
00C7                  00331 row5 res 6
00CD                  00332 fill5 res 2
00CF                  00333 row6 res 6
00D5                  00334 fill6 res 2 
00D7                  00335 fg_color res 1
00D8                  00336 paddle_byte res 1 ; paddle offset in vbuffer
00D9                  00337 paddle_mask res 2 ; paddle mask to put in vbuffer 
00DB                  00338 ball_byte res 1 ; ball byte offset in vbuffer
00DC                  00339 ball_mask res 2 ; ball mask to put in vbuffer 
00DE                  00340 sound_timer res 1 ; sound duration in multiple of 16.7msec. 
00DF                  00341 balls res 1 ; number of recking balls available
                      00342  
                      00343 ; common 16 bytes RAM accessible whatever the selected bank 
                      00344     udata_shr 
0000                  00345 flags  res 1 ; boolean variables
0001                  00346 lcount res 1 ; video field line counter
0002                  00347 slice res 1 ; task slice counter, a task may use more than one slice.
0003                  00348 task res 1 ; where in video phase 
0004                  00349 temp1 res 1 ; temporary storage
0005                  00350 temp2 res 1 ; 
0006                  00351 paddle_pos res 1 
0007                  00352 ball_x res 1
0008                  00353 ball_y res 1
0009                  00354 ball_dx res 1
000A                  00355 ball_dy res 1
000B                  00356 ball_speed res 1
000C                  00357 score res 2 ; score stored in Binary Coded Decimal
000E                  00358 ball_timer res 1 
000F                  00359 seed res 1 ; pseudo random number generator used by lfsr8
                      00360  
                      00361 ;; cpu reset entry point
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00362 RES_VECT  CODE    0x0000            
0000   2???           00363     goto    initialize  ; go to beginning of program
                      00364     
                      00365 ; delay = 3+3*n  (including the call)    
                      00366 ; SEE tdelay macro
                      00367 ;input:
                      00368 ;   WREG <- n {1..255}
0001                  00369 _3ntcy
0001   0B89           00370     decfsz WREG
0002   3???           00371     bra $-1
0003                  00372 _4tcy
0003   0008           00373     return  
                      00374 
                      00375 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00376 ; interrupt service routine triggered by PWM3 period rollover
                      00377 ; after initialization all processing in done inside 
                      00378 ; this interrupt.
                      00379 ; It is designed as a round robin scheduler.    
                      00380 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
                      00381 ISR CODE 0x0004
0004                  00382 isr
0004   0A??           00383     incf lcount
0005   1903           00384     skpnz
0006   1400           00385     bsf flags, F_BIT8
0007   1900           00386     btfsc flags, F_SYNC
0008   2???           00387     goto task_switch
                      00388 ; clear video buffer before each line display
0009   003B           00389     banksel PWM1CON
000A   121B           00390     bcf PWM1CON,POL
000B   0021           00391     banksel TRISA
000C   01??           00392     clrf vbuffer
000D   01??           00393     clrf vbuffer+1
000E   01??           00394     clrf vbuffer+2
000F   01??           00395     clrf vbuffer+3
0010   01??           00396     clrf vbuffer+4
0011   01??           00397     clrf vbuffer+5
                      00398 ; generate chroma synchronization
                      00399     tdelay 15
                          M     if 15==0
                          M     exitm
                          M     endif
                          M     if 15==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 15==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 15==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 15==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 15==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 15>5
  0004                    M     variable q=(15-3)/3 
  0000                    M     variable r=15-3-3*q
0012   3004               M     movlw q
0013   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
0014   108C           00400     bcf TRISA,CHROMA
                      00401     tdelay 16
                          M     if 16==0
                          M     exitm
                          M     endif
                          M     if 16==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 16==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 16==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 16==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 16>5
  0004                    M     variable q=(16-3)/3 
  0001                    M     variable r=16-3-3*q
0015   3004               M     movlw q
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
0017   0000               M     nop
                          M     exitm
0018   148C           00402     bsf TRISA,CHROMA
0019                  00403 task_switch ; round robin task scheduler   
0019   08??           00404     movfw task
001A   000B           00405     brw
001B   2???           00406     goto pre_vsync ;task 0, vertical pre-equalization pulses
001C   2???           00407     goto vsync ;task 1, vertical sync pulses
001D   2???           00408     goto post_vsync ;task 2, vertical post-equalization pulses
001E   2???           00409     goto vsync_end ;task 3, return to normal video line
001F   2???           00410     goto read_paddle; task 4, read paddle potentiometer
0020   2???           00411     goto sound ;task 5, check sound timer expiration
0021   2???           00412     goto read_button ;task 6,  read button
0022   2???           00413     goto move_ball ;task 7, move recking ball.
0023   2???           00414     goto collision ; task 8, check for collision with bricks.
0024   2???           00415     goto video_first ; task 9, wait FIRST_VIDEO line.
0025   2???           00416     goto draw_score ;task 10,  draw score en ball count
0026   2???           00417     goto draw_top_wall ;task 11,  draw top wall
0027   2???           00418     goto draw_sides ;task 12, draw play space with sides walls
0028   2???           00419     goto draw_bricks  ;task 13, draw bricks rows
0029   2???           00420     goto draw_empty;task 14, draw empty space with sides walls down to bottom
002A   2???           00421     goto draw_paddle ;task 15, draw paddle
002B   2???           00422     goto wait_field_end ;task 16, idle to end of video field
002C   0001           00423     reset ; error trap, task out of range
002D                  00424 isr_exit
002D   0021           00425     banksel TRISA
002E   1980           00426     btfsc flags, F_SOUND
002F   100C           00427     bcf TRISA,PADDLE
0030   003B           00428     banksel PWM3INTF
0031   103D           00429     bcf PWM3INTF,PRIF
0032   0009           00430     retfie
                      00431 
                      00432 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00433 ;;  all tasks routine are here            ;;
                      00434 ;;  each must be terminate by leave macro ;;    
                      00435 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00436     
                      00437 ; task 0, vertical synchronization pre equalization
                      00438 ; 6 half horizontal scan lines    
0033                  00439 pre_vsync
0033   08??           00440     movfw slice
0034   1903           00441     skpnz
0035   2???           00442     goto set_presync
                      00443     next_task 6
0036   0A??               M     incf slice
0037   3006               M     movlw 6
0038   02??               M     subwf slice,W
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0039   1D03               M     skpz
                          M     leave
003A   2???               M     goto isr_exit
003B   01??               M     clrf slice
003C   0A??               M     incf task
                          M     leave
003D   2???               M     goto isr_exit
003E                  00444 set_presync    
003E   003B           00445     banksel PWM3DC
003F   3041           00446     movlw HEQUAL
0040   00B3           00447     movwf PWM3DCL
0041   3003           00448     movlw high HALF_LINE
0042   00B6           00449     movwf PWM3PRH
0043   308D           00450     movlw low HALF_LINE
0044   00B5           00451     movwf PWM3PRL
0045   17BF           00452     bsf PWM3LDCON,7
0046   0A??           00453     incf slice
                      00454     leave
0047   2???               M     goto isr_exit
                      00455     
                      00456 ; task 1, vertical synchronization pulses
                      00457 ; 6 half horizontal scan lines    
0048                  00458 vsync 
0048   08??           00459     movfw slice
0049   1903           00460     skpnz
004A   2???           00461     goto set_vsync
                      00462     next_task 6
004B   0A??               M     incf slice
004C   3006               M     movlw 6
004D   02??               M     subwf slice,W
004E   1D03               M     skpz
                          M     leave
004F   2???               M     goto isr_exit
0050   01??               M     clrf slice
0051   0A??               M     incf task
                          M     leave
0052   2???               M     goto isr_exit
0053                  00463 set_vsync
0053   003B           00464     banksel PWM3DC
0054   3008           00465     movlw low VSYNC_PULSE
0055   00B3           00466     movwf PWM3DCL
0056   3003           00467     movlw high VSYNC_PULSE
0057   00B4           00468     movwf PWM3DCH
0058   17BF           00469     bsf PWM3LDCON,7
0059   0A??           00470     incf slice
                      00471     leave
005A   2???               M     goto isr_exit
                      00472     
                      00473 ; task 2, vertical synchronisation post equalization pulses
                      00474 ; 6 half horizontal scan lines    
005B                  00475 post_vsync
005B   08??           00476     movfw slice
005C   1903           00477     skpnz
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005D   2???           00478     goto set_presync
005E   3006           00479     movlw 6
005F   02??           00480     subwf slice,W
0060   1903           00481     skpnz
0061   2???           00482     goto post_last
0062   0A??           00483     incf slice
                      00484     leave
0063   2???               M     goto isr_exit
0064                  00485 post_last    
0064   0A??           00486     incf task
0065   01??           00487     clrf slice
0066   1C80           00488     btfss flags, F_EVEN
                      00489     leave
0067   2???               M     goto isr_exit
                      00490     
                      00491 ; task 3, vertical synchronization completed, return to normal line
                      00492 ; rest horizonal line to its normal length.
                      00493 ; set lcount to 9.    
0068                  00494 vsync_end
0068   1100           00495     bcf flags, F_SYNC
0069   003B           00496     banksel PWM3DC
006A   3086           00497     movlw HSYNC
006B   00B3           00498     movwf PWM3DCL
006C   01B4           00499     clrf PWM3DCH
006D   3007           00500     movlw high HPERIOD
006E   00B6           00501     movwf PWM3PRH
006F   301B           00502     movlw low HPERIOD
0070   00B5           00503     movwf PWM3PRL
0071   17BF           00504     bsf PWM3LDCON,7
0072   0A??           00505     incf task
                      00506  ; divide lcount by 2 go get correct scan line count    
0073   36??           00507     lsrf lcount
0074   2???           00508     call lfsr8 ; update prng 60 times/sec.
                      00509     leave
0075   2???               M     goto isr_exit
                      00510 
                      00511 ; task 4, read paddle potentiometer
0076                  00512 read_paddle
0076   0A??           00513     incf task
0077   1980           00514     btfsc flags, F_SOUND
                      00515     leave
0078   2???               M     goto isr_exit
0079   140C           00516     bsf TRISA, PADDLE
007A   3003           00517     movlw 3
007B   009D           00518     movwf ADCON0
007C   189D           00519     btfsc ADCON0,NOT_DONE
007D   3???           00520     bra $-1
007E   361C           00521     lsrf ADRESH,W
007F   00??           00522     movwf paddle_pos
0080   3028           00523     movlw PADDLE_LIMIT
0081   02??           00524     subwf paddle_pos,W
0082   3028           00525     movlw PADDLE_LIMIT
0083   1803           00526     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0084   00??           00527     movwf paddle_pos
0085   3010           00528     movlw 4<<CHS0
0086   009D           00529     movwf ADCON0
                      00530 ; create paddle mask
                      00531 ; paddle_mask and paddle_byte used when it is time to display paddle
                      00532 ; paddle_byte=paddle_pos/8
                      00533 ; paddle_mask=PADDLE_MASK>>(paddle_pos%8)   
0087   36??           00534     lsrf paddle_pos,W
0088   3689           00535     lsrf WREG
0089   3689           00536     lsrf WREG
008A   00??           00537     movwf paddle_byte
008B   30FF           00538     movlw PADDLE_MASK
008C   00??           00539     movwf paddle_mask
008D   01??           00540     clrf paddle_mask+1
008E   3007           00541     movlw 7
008F   05??           00542     andwf paddle_pos,W
0090   1903           00543     skpnz
                      00544     leave
0091   2???               M     goto isr_exit
0092   36??           00545     lsrf paddle_mask
0093   0C??           00546     rrf paddle_mask+1
0094   0B89           00547     decfsz WREG
0095   3???           00548     bra $-3
                      00549     leave
0096   2???               M     goto isr_exit
                      00550     
                      00551 ; task 5,  sound timer
                      00552 ; if sound active process it.    
0097                  00553 sound
0097   0A??           00554     incf task
0098   1D80           00555     btfss flags, F_SOUND
                      00556     leave
0099   2???               M     goto isr_exit
009A   1A80           00557     btfsc flags, F_PAUSE
009B   2???           00558     call sound_fx1
009C   002?           00559     banksel sound_timer
009D   0B??           00560     decfsz sound_timer
                      00561     leave
009E   2???               M     goto isr_exit
009F                  00562 sound_off    
009F   1180           00563     bcf flags, F_SOUND
00A0   003B           00564     banksel PWM2CON
00A1   132B           00565     bcf PWM2CON,OE
00A2   13AB           00566     bcf PWM2CON,EN
00A3   0021           00567     banksel TRISA
00A4   140C           00568     bsf TRISA,PADDLE
                      00569     leave
00A5   2???               M     goto isr_exit
                      00570 
                      00571 ; sound effect, low pitch to high-pitch    
00A6                  00572 sound_fx1
00A6   1C80           00573     btfss flags, F_EVEN
00A7   0008           00574     return
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A8   003B           00575     banksel PWM2CON
00A9   36A6           00576     lsrf PWM2PRH
00AA   0CA5           00577     rrf PWM2PRL
00AB   36A4           00578     lsrf PWM2DCH
00AC   0CA3           00579     rrf PWM2DCL
00AD   17AF           00580     bsf PWM2LDCON,LDA
00AE   0008           00581     return
                      00582     
                      00583 ; initialize sound generation.
                      00584 ; input:
                      00585 ;   T = duration
                      00586 ;   WREG = index in frequency table    
                      00587 ; outpout:
                      00588 ;   none    
00AF                  00589 sound_init
                      00590     pushw  ; ( d i -- )
00AF   0019               M     movwi --SP
00B0   1580           00591     bsf flags, F_SOUND
00B1   003B           00592     banksel PWM2CON
00B2   0800           00593     movfw T
00B3   2???           00594     call frequency
00B4   00A6           00595     movwf PWM2PRH
00B5   0A00           00596     incf T,W
00B6   2???           00597     call frequency
00B7   00A5           00598     movwf PWM2PRL
00B8   3626           00599     lsrf PWM2PRH,W
00B9   00A4           00600     movwf PWM2DCH
00BA   0C25           00601     rrf PWM2PRL,W
00BB   00A3           00602     movwf PWM2DCL
00BC   17AF           00603     bsf PWM2LDCON,LDA
00BD   172B           00604     bsf PWM2CON,OE
00BE   17AB           00605     bsf PWM2CON,EN
                      00606     pickn 1
00BF   3F01               M     moviw 1[SP]
00C0   002?           00607     banksel sound_timer
00C1   00??           00608     movwf sound_timer
                      00609     dropn 2
00C2   3102               M     addfsr T,2
00C3   0021           00610     banksel TRISA
00C4   100C           00611     bcf TRISA,AUDIO
00C5   0008           00612     return
                      00613     
                      00614 ;task 6, read button and paddle position
00C6                  00615 read_button
00C6   0A??           00616     incf task
00C7   0020           00617     banksel PORTA
00C8   080C           00618     movfw PORTA
00C9   3908           00619     andlw 1<<START_BTN
00CA   00??           00620     movwf temp1
00CB   1B00           00621     btfsc flags, F_OVER
00CC   3???           00622     bra game_over
00CD   1A00           00623     btfsc flags,F_START
00CE   3???           00624     bra game_running
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00625 ; game not running
00CF   1D03           00626     skpz
00D0   3???           00627     bra skip_2_tasks
                      00628 ; start game    
00D1   2???           00629     call game_init
00D2   1600           00630     bsf flags, F_START
                      00631     leave
00D3   2???               M     goto isr_exit
00D4                  00632 game_running
00D4   1E80           00633     btfss flags, F_PAUSE
                      00634     leave
00D5   2???               M     goto isr_exit
                      00635 ; game on pause    
00D6                  00636 wait_trigger
00D6   1D03           00637     skpz
00D7   3???           00638     bra skip_2_tasks
00D8   1280           00639     bcf flags,F_PAUSE
00D9   2???           00640     call set_ball_dx
                      00641     leave
00DA   2???               M     goto isr_exit
                      00642 ; game over
00DB                  00643 game_over
00DB   1D03           00644     skpz
00DC   3???           00645     bra skip_2_tasks
00DD   2???           00646     call game_init
00DE   1600           00647     bsf flags, F_START
                      00648     leave
00DF   2???               M     goto isr_exit
                      00649 ; while game not running skip 'move_ball' and 'collision' tasks    
00E0                  00650 skip_2_tasks
00E0   08??           00651     movfw paddle_pos
00E1   3E02           00652     addlw 2
00E2   00??           00653     movwf ball_x
                      00654 ;    call compute_ball_mask
00E3   0A??           00655     incf task ; skip move_ball
00E4   3???           00656     bra move_ball_exit
                      00657 ;    incf task ; skip collision
                      00658 ;    leave
                      00659 
                      00660     
                      00661     
                      00662 
                      00663     
                      00664 ; task 7, move recking ball.   
                      00665 ; also check for ball bounce on paddle
                      00666 ; and ball lost at bottom    
00E5                  00667 move_ball
00E5   0B??           00668     decfsz ball_timer
00E6   3???           00669     bra move_ball_exit
00E7   08??           00670     movfw ball_speed
00E8   00??           00671     movwf ball_timer
00E9   08??           00672     movfw ball_dx
00EA   07??           00673     addwf ball_x
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EB   1F80           00674     btfss ball_dx,7
00EC   3???           00675     bra right_bound
00ED                  00676 left_bound
00ED   1F80           00677     btfss ball_x,7
00EE   3???           00678     bra move_y
00EF   01??           00679     clrf ball_x
00F0   09??           00680     comf ball_dx
00F1   0A??           00681     incf ball_dx
00F2   3???           00682     bra move_y
00F3                  00683 right_bound    
00F3   08??           00684     movfw ball_x
00F4   3C2E           00685     sublw BALL_RIGHT_BOUND
00F5   1803           00686     skpnc
00F6   3???           00687     bra move_y
00F7   03??           00688     decf ball_x
00F8   09??           00689     comf ball_dx
00F9   0A??           00690     incf ball_dx
00FA                  00691 move_y
00FA   08??           00692     movfw ball_dy
00FB   07??           00693     addwf ball_y
00FC   1F80           00694     btfss ball_dy,7
00FD   3???           00695     bra bottom_bound
00FE                  00696 top_bound    
00FE   303A           00697     movlw BALL_TOP_BOUND
00FF   02??           00698     subwf ball_y,W
0100   1803           00699     skpnc
0101   3???           00700     bra move_ball_exit
0102   303A           00701     movlw BALL_TOP_BOUND
0103   00??           00702     movwf ball_y
0104   09??           00703     comf ball_dy
0105   0A??           00704     incf ball_dy
0106   3???           00705     bra move_ball_exit
0107                  00706 bottom_bound
0107   08??           00707     movfw ball_y
0108   3CED           00708     sublw PADDLE_Y-BALL_HEIGHT-1
0109   1803           00709     skpnc
010A   3???           00710     bra move_ball_exit
010B   2???           00711     call paddle_bounce
010C   1803           00712     skpnc
010D   3???           00713     bra move_ball_exit
010E                  00714 ball_lost
010E   1680           00715     bsf flags, F_PAUSE ; pause game
010F   002?           00716     banksel balls
0110   0B??           00717     decfsz balls
0111   3???           00718     bra $+3
0112   1200           00719     bcf flags, F_START
0113   1700           00720     bsf flags, F_OVER
0114   3002           00721     movlw 2
0115   07??           00722     addwf paddle_pos,W
0116   00??           00723     movwf ball_x
0117   30EF           00724     movlw PADDLE_Y-BALL_HEIGHT+1
0118   00??           00725     movwf ball_y
0119   30FC           00726     movlw -4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011A   00??           00727     movwf ball_dy
011B   3008           00728     movlw 8
                      00729     pushw
011C   0019               M     movwi --SP
011D   3002           00730     movlw 2
011E   2???           00731     call sound_init
011F   0A??           00732     incf task ; skip collision task
0120                  00733 move_ball_exit
0120   2???           00734     call compute_ball_mask
0121   0A??           00735     incf task
                      00736     leave
0122   2???               M     goto isr_exit
                      00737 
                      00738 ; check if ball is bouncing on paddle
                      00739 ; input:
                      00740 ;   none
                      00741 ; output:
                      00742 ;   C set if bounced    
0123                  00743 paddle_bounce
                      00744 ; if ball_x over paddle bounce ball
0123   08??           00745     movfw paddle_pos
                      00746     pushw
0124   0019               M     movwi --SP
0125   1903           00747     skpnz
0126   0380           00748     decf T
0127   3E08           00749     addlw PADDLE_WIDTH
                      00750     pushw
0128   0019               M     movwi --SP
0129   08??           00751     movfw ball_x
012A   2???           00752     call between
012B   1803           00753     skpnc
012C   3???           00754     bra bouncing
012D   1003           00755     bcf STATUS,C
012E   0008           00756     return
012F                  00757 bouncing
012F   30EE           00758     movlw PADDLE_Y-BALL_HEIGHT
0130   00??           00759     movwf ball_y
0131   09??           00760     comf ball_dy
0132   0A??           00761     incf ball_dy
                      00762 ; bounce direction depend where paddle was hit.    
0133   08??           00763     movfw paddle_pos
0134   02??           00764     subwf ball_x,W
0135   1C03           00765     skpc
0136   3???           00766     bra bounce_left
0137   1903           00767     skpnz
0138   3???           00768     bra bounce_left
0139   3006           00769     movlw PADDLE_WIDTH-2
013A   07??           00770     addwf paddle_pos,W
013B   02??           00771     subwf ball_x,W
013C   3001           00772     movlw 1
013D   1803           00773     skpnc
013E   00??           00774     movwf ball_dx ; bounce right
013F   3???           00775     bra paddle_sound
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0140                  00776 bounce_left
0140   30FF           00777     movlw -1
0141   00??           00778     movwf ball_dx
0142                  00779 paddle_sound    
0142   3002           00780     movlw 2
                      00781     pushw
0143   0019               M     movwi --SP
0144   2???           00782     call sound_init
                      00783 ; skip collision task
0145   0A??           00784     incf task
                      00785 ; report bounce    
0146   1403           00786     bsf STATUS,C
0147   0008           00787     return
                      00788     
                      00789     
                      00790 ; compute ball_mask and ball_byte
                      00791 ; ball_mask= BALL_MASK>>(ball_x%8)
                      00792 ; ball_byte= ball_x/8     
0148                  00793 compute_ball_mask
0148   002?           00794     banksel vbuffer
0149   36??           00795     lsrf ball_x,W
014A   3689           00796     lsrf WREG
014B   3689           00797     lsrf WREG
014C   00??           00798     movwf ball_byte
014D   30C0           00799     movlw BALL_MASK
014E   00??           00800     movwf ball_mask
014F   01??           00801     clrf ball_mask+1
0150   3007           00802     movlw 7
0151   05??           00803     andwf ball_x,W
0152   1903           00804     skpnz
0153   0008           00805     return
0154   36??           00806     lsrf ball_mask
0155   0C??           00807     rrf ball_mask+1
0156   0B89           00808     decfsz WREG
0157   3???           00809     bra $-3
0158   0008           00810     return
                      00811     
                      00812 ; task 8, check collision with bricks
0159                  00813 collision
0159   304A           00814     movlw ROW1_Y
                      00815     pushw
015A   0019               M     movwi --SP
015B   307A           00816     movlw ROW6_Y+BRICK_HEIGHT
                      00817     pushw
015C   0019               M     movwi --SP
015D   08??           00818     movfw ball_y
015E   2???           00819     call between
015F   1C03           00820     skpc
0160   3???           00821     bra collision_exit
0161   002?           00822     banksel row1
0162   0187           00823     clrf FSR1H
0163   30??           00824     movlw low row1
0164   0086           00825     movwf FSR1L
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0165   304A           00826     movlw ROW1_Y
0166   02??           00827     subwf ball_y,W
0167   39F8           00828     andlw 0xf8
                      00829     pushw
0168   0019               M     movwi --SP
0169   0786           00830     addwf FSR1L
016A   08??           00831     movfw ball_byte
016B   0786           00832     addwf FSR1L
016C   30F0           00833     movlw 0xf0
016D   1900           00834     btfsc ball_x,2
016E   0E89           00835     swapf WREG
016F   0501           00836     andwf INDF1,W
0170   1903           00837     skpnz
0171   3???           00838     bra collision_exit
0172   300F           00839     movlw 0x0f
0173   1900           00840     btfsc ball_x,2
0174   0E89           00841     swapf WREG
0175   0581           00842     andwf INDF1
0176   09??           00843     comf ball_dy
0177   0A??           00844     incf ball_dy
0178   08??           00845     movfw ball_dy
0179   07??           00846     addwf ball_y
                      00847     popw
017A   0012               M     moviw SP++
017B   3689           00848     lsrf WREG
017C   3689           00849     lsrf WREG
017D   000B           00850     brw
017E   3009           00851     movlw 9
017F   3???           00852     bra add_score
0180   3009           00853     movlw 9
0181   3???           00854     bra add_score
0182   3007           00855     movlw 7
0183   3???           00856     bra add_score
0184   3005           00857     movlw 5
0185   3???           00858     bra add_score
0186   3003           00859     movlw 3
0187   3???           00860     bra add_score
0188   3001           00861     movlw 1
0189                  00862 add_score    
0189   2???           00863     call inc_score
018A                  00864 pong_sound
018A   3001           00865     movlw 1
                      00866     pushw
018B   0019               M     movwi --SP
018C   3000           00867     movlw 0
018D   2???           00868     call sound_init
018E                  00869 collision_exit
018E   0A??           00870     incf task
                      00871     leave
018F   2???               M     goto isr_exit
                      00872     
                      00873 ; check if  lb <= x < hb
                      00874 ; design to take same number of Tcy whatever the path.
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00875 ; 13 tcy    
                      00876 ; input:
                      00877 ;    WREG  x
                      00878 ;    stack ( lb hb -- )     
                      00879 ; output:
                      00880 ;   Carry bit set if true    
0190                  00881 between
0190   00??           00882     movwf temp2
                      00883     pickn 1
0191   3F01               M     moviw 1[SP]
0192   02??           00884     subwf temp2,W
0193   1C03           00885     skpc
0194   3???           00886     bra between_exit2
0195   0800           00887     movfw T
0196   02??           00888     subwf temp2
0197   0803           00889     movfw STATUS
0198   3A01           00890     xorlw 1
0199   0083           00891     movwf STATUS
019A                  00892 between_exit    
                      00893     dropn 2
019A   3102               M     addfsr T,2
019B   0008           00894     return  ; 13 tcy
                      00895 ; add tcy to have constant tcy for this routine whatever the path    
019C                  00896 between_exit2
019C   3???           00897     bra $+1
019D   3???           00898     bra between_exit
                      00899     
                      00900 ; task 9, wait for first video line
019E                  00901 video_first
019E   301D           00902     movlw FIRST_VIDEO_LINE-1
019F   02??           00903     subwf lcount,W
01A0   1D03           00904     skpz
                      00905     leave
01A1   2???               M     goto isr_exit
01A2   01??           00906     clrf slice
01A3   0A??           00907     incf task
                      00908     leave
01A4   2???               M     goto isr_exit
                      00909    
                      00910 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00911 ; The following tasks are responsible to render video display.
                      00912 ; Each video line must be completed by setting color to black.
                      00913 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00914 
                      00915 ; check if ball is visible on this scan line    
                      00916 ; visible if ball_y <=lcount<ball_y+BALL_HEIGHT
                      00917 ; designed to use a constant number of Tcy    
                      00918 ;  22 tcy   
                      00919 ;  input:
                      00920 ;       none    
                      00921 ;  output:
                      00922 ;       C set if true   
01A5                  00923 ball_visible
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A5   08??           00924     movfw ball_y
                      00925     pushw
01A6   0019               M     movwi --SP
01A7   3E08           00926     addlw BALL_HEIGHT
                      00927     pushw
01A8   0019               M     movwi --SP
01A9   08??           00928     movfw lcount
01AA   2???           00929     call between ; +13 tcy
01AB   0008           00930     return
                      00931     
                      00932     
                      00933 ; display vbuffer
                      00934 ; the 6 macros display_byte unroll to 240 instructions    
01AC                  00935 display_vbuffer
                      00936     display_byte 0
                          M     display_bit 0
01AC   35??               M     lslf vbuffer+0
01AD   301B               M     movlw BLACK
01AE   1803               M     skpnc
01AF   08??               M     movfw fg_color
01B0   008C               M     movwf TRISA
                          M     display_bit 0
01B1   35??               M     lslf vbuffer+0
01B2   301B               M     movlw BLACK
01B3   1803               M     skpnc
01B4   08??               M     movfw fg_color
01B5   008C               M     movwf TRISA
                          M     display_bit 0
01B6   35??               M     lslf vbuffer+0
01B7   301B               M     movlw BLACK
01B8   1803               M     skpnc
01B9   08??               M     movfw fg_color
01BA   008C               M     movwf TRISA
                          M     display_bit 0
01BB   35??               M     lslf vbuffer+0
01BC   301B               M     movlw BLACK
01BD   1803               M     skpnc
01BE   08??               M     movfw fg_color
01BF   008C               M     movwf TRISA
                          M     display_bit 0
01C0   35??               M     lslf vbuffer+0
01C1   301B               M     movlw BLACK
01C2   1803               M     skpnc
01C3   08??               M     movfw fg_color
01C4   008C               M     movwf TRISA
                          M     display_bit 0
01C5   35??               M     lslf vbuffer+0
01C6   301B               M     movlw BLACK
01C7   1803               M     skpnc
01C8   08??               M     movfw fg_color
01C9   008C               M     movwf TRISA
                          M     display_bit 0
01CA   35??               M     lslf vbuffer+0
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CB   301B               M     movlw BLACK
01CC   1803               M     skpnc
01CD   08??               M     movfw fg_color
01CE   008C               M     movwf TRISA
                          M     display_bit 0
01CF   35??               M     lslf vbuffer+0
01D0   301B               M     movlw BLACK
01D1   1803               M     skpnc
01D2   08??               M     movfw fg_color
01D3   008C               M     movwf TRISA
                      00937     display_byte 1
                          M     display_bit 1
01D4   35??               M     lslf vbuffer+1
01D5   301B               M     movlw BLACK
01D6   1803               M     skpnc
01D7   08??               M     movfw fg_color
01D8   008C               M     movwf TRISA
                          M     display_bit 1
01D9   35??               M     lslf vbuffer+1
01DA   301B               M     movlw BLACK
01DB   1803               M     skpnc
01DC   08??               M     movfw fg_color
01DD   008C               M     movwf TRISA
                          M     display_bit 1
01DE   35??               M     lslf vbuffer+1
01DF   301B               M     movlw BLACK
01E0   1803               M     skpnc
01E1   08??               M     movfw fg_color
01E2   008C               M     movwf TRISA
                          M     display_bit 1
01E3   35??               M     lslf vbuffer+1
01E4   301B               M     movlw BLACK
01E5   1803               M     skpnc
01E6   08??               M     movfw fg_color
01E7   008C               M     movwf TRISA
                          M     display_bit 1
01E8   35??               M     lslf vbuffer+1
01E9   301B               M     movlw BLACK
01EA   1803               M     skpnc
01EB   08??               M     movfw fg_color
01EC   008C               M     movwf TRISA
                          M     display_bit 1
01ED   35??               M     lslf vbuffer+1
01EE   301B               M     movlw BLACK
01EF   1803               M     skpnc
01F0   08??               M     movfw fg_color
01F1   008C               M     movwf TRISA
                          M     display_bit 1
01F2   35??               M     lslf vbuffer+1
01F3   301B               M     movlw BLACK
01F4   1803               M     skpnc
01F5   08??               M     movfw fg_color
01F6   008C               M     movwf TRISA
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     display_bit 1
01F7   35??               M     lslf vbuffer+1
01F8   301B               M     movlw BLACK
01F9   1803               M     skpnc
01FA   08??               M     movfw fg_color
01FB   008C               M     movwf TRISA
                      00938     display_byte 2
                          M     display_bit 2
01FC   35??               M     lslf vbuffer+2
01FD   301B               M     movlw BLACK
01FE   1803               M     skpnc
01FF   08??               M     movfw fg_color
0200   008C               M     movwf TRISA
                          M     display_bit 2
0201   35??               M     lslf vbuffer+2
0202   301B               M     movlw BLACK
0203   1803               M     skpnc
0204   08??               M     movfw fg_color
0205   008C               M     movwf TRISA
                          M     display_bit 2
0206   35??               M     lslf vbuffer+2
0207   301B               M     movlw BLACK
0208   1803               M     skpnc
0209   08??               M     movfw fg_color
020A   008C               M     movwf TRISA
                          M     display_bit 2
020B   35??               M     lslf vbuffer+2
020C   301B               M     movlw BLACK
020D   1803               M     skpnc
020E   08??               M     movfw fg_color
020F   008C               M     movwf TRISA
                          M     display_bit 2
0210   35??               M     lslf vbuffer+2
0211   301B               M     movlw BLACK
0212   1803               M     skpnc
0213   08??               M     movfw fg_color
0214   008C               M     movwf TRISA
                          M     display_bit 2
0215   35??               M     lslf vbuffer+2
0216   301B               M     movlw BLACK
0217   1803               M     skpnc
0218   08??               M     movfw fg_color
0219   008C               M     movwf TRISA
                          M     display_bit 2
021A   35??               M     lslf vbuffer+2
021B   301B               M     movlw BLACK
021C   1803               M     skpnc
021D   08??               M     movfw fg_color
021E   008C               M     movwf TRISA
                          M     display_bit 2
021F   35??               M     lslf vbuffer+2
0220   301B               M     movlw BLACK
0221   1803               M     skpnc
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0222   08??               M     movfw fg_color
0223   008C               M     movwf TRISA
                      00939     display_byte 3
                          M     display_bit 3
0224   35??               M     lslf vbuffer+3
0225   301B               M     movlw BLACK
0226   1803               M     skpnc
0227   08??               M     movfw fg_color
0228   008C               M     movwf TRISA
                          M     display_bit 3
0229   35??               M     lslf vbuffer+3
022A   301B               M     movlw BLACK
022B   1803               M     skpnc
022C   08??               M     movfw fg_color
022D   008C               M     movwf TRISA
                          M     display_bit 3
022E   35??               M     lslf vbuffer+3
022F   301B               M     movlw BLACK
0230   1803               M     skpnc
0231   08??               M     movfw fg_color
0232   008C               M     movwf TRISA
                          M     display_bit 3
0233   35??               M     lslf vbuffer+3
0234   301B               M     movlw BLACK
0235   1803               M     skpnc
0236   08??               M     movfw fg_color
0237   008C               M     movwf TRISA
                          M     display_bit 3
0238   35??               M     lslf vbuffer+3
0239   301B               M     movlw BLACK
023A   1803               M     skpnc
023B   08??               M     movfw fg_color
023C   008C               M     movwf TRISA
                          M     display_bit 3
023D   35??               M     lslf vbuffer+3
023E   301B               M     movlw BLACK
023F   1803               M     skpnc
0240   08??               M     movfw fg_color
0241   008C               M     movwf TRISA
                          M     display_bit 3
0242   35??               M     lslf vbuffer+3
0243   301B               M     movlw BLACK
0244   1803               M     skpnc
0245   08??               M     movfw fg_color
0246   008C               M     movwf TRISA
                          M     display_bit 3
0247   35??               M     lslf vbuffer+3
0248   301B               M     movlw BLACK
0249   1803               M     skpnc
024A   08??               M     movfw fg_color
024B   008C               M     movwf TRISA
                      00940     display_byte 4
                          M     display_bit 4
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024C   35??               M     lslf vbuffer+4
024D   301B               M     movlw BLACK
024E   1803               M     skpnc
024F   08??               M     movfw fg_color
0250   008C               M     movwf TRISA
                          M     display_bit 4
0251   35??               M     lslf vbuffer+4
0252   301B               M     movlw BLACK
0253   1803               M     skpnc
0254   08??               M     movfw fg_color
0255   008C               M     movwf TRISA
                          M     display_bit 4
0256   35??               M     lslf vbuffer+4
0257   301B               M     movlw BLACK
0258   1803               M     skpnc
0259   08??               M     movfw fg_color
025A   008C               M     movwf TRISA
                          M     display_bit 4
025B   35??               M     lslf vbuffer+4
025C   301B               M     movlw BLACK
025D   1803               M     skpnc
025E   08??               M     movfw fg_color
025F   008C               M     movwf TRISA
                          M     display_bit 4
0260   35??               M     lslf vbuffer+4
0261   301B               M     movlw BLACK
0262   1803               M     skpnc
0263   08??               M     movfw fg_color
0264   008C               M     movwf TRISA
                          M     display_bit 4
0265   35??               M     lslf vbuffer+4
0266   301B               M     movlw BLACK
0267   1803               M     skpnc
0268   08??               M     movfw fg_color
0269   008C               M     movwf TRISA
                          M     display_bit 4
026A   35??               M     lslf vbuffer+4
026B   301B               M     movlw BLACK
026C   1803               M     skpnc
026D   08??               M     movfw fg_color
026E   008C               M     movwf TRISA
                          M     display_bit 4
026F   35??               M     lslf vbuffer+4
0270   301B               M     movlw BLACK
0271   1803               M     skpnc
0272   08??               M     movfw fg_color
0273   008C               M     movwf TRISA
                      00941     display_byte 5
                          M     display_bit 5
0274   35??               M     lslf vbuffer+5
0275   301B               M     movlw BLACK
0276   1803               M     skpnc
0277   08??               M     movfw fg_color
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0278   008C               M     movwf TRISA
                          M     display_bit 5
0279   35??               M     lslf vbuffer+5
027A   301B               M     movlw BLACK
027B   1803               M     skpnc
027C   08??               M     movfw fg_color
027D   008C               M     movwf TRISA
                          M     display_bit 5
027E   35??               M     lslf vbuffer+5
027F   301B               M     movlw BLACK
0280   1803               M     skpnc
0281   08??               M     movfw fg_color
0282   008C               M     movwf TRISA
                          M     display_bit 5
0283   35??               M     lslf vbuffer+5
0284   301B               M     movlw BLACK
0285   1803               M     skpnc
0286   08??               M     movfw fg_color
0287   008C               M     movwf TRISA
                          M     display_bit 5
0288   35??               M     lslf vbuffer+5
0289   301B               M     movlw BLACK
028A   1803               M     skpnc
028B   08??               M     movfw fg_color
028C   008C               M     movwf TRISA
                          M     display_bit 5
028D   35??               M     lslf vbuffer+5
028E   301B               M     movlw BLACK
028F   1803               M     skpnc
0290   08??               M     movfw fg_color
0291   008C               M     movwf TRISA
                          M     display_bit 5
0292   35??               M     lslf vbuffer+5
0293   301B               M     movlw BLACK
0294   1803               M     skpnc
0295   08??               M     movfw fg_color
0296   008C               M     movwf TRISA
                          M     display_bit 5
0297   35??               M     lslf vbuffer+5
0298   301B               M     movlw BLACK
0299   1803               M     skpnc
029A   08??               M     movfw fg_color
029B   008C               M     movwf TRISA
029C   0008           00942     return
                      00943  
                      00944 ; task 10, draw score en ball count
                      00945 ;  lcount 30-49    
029D                  00946 draw_score 
                      00947 ;    banksel TRISA
029D   08??           00948     movfw slice
029E   3689           00949     lsrf WREG
029F   3689           00950     lsrf WREG
                      00951     pushw
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A0   0019               M     movwi --SP
02A1   08??           00952     movfw score
02A2   2???           00953     call digits
02A3   0E89           00954     swapf WREG
02A4   04??           00955     iorwf vbuffer
02A5   0E??           00956     swapf score+1,W
02A6   2???           00957     call digits
02A7   04??           00958     iorwf vbuffer
02A8   08??           00959     movfw score+1
02A9   2???           00960     call digits
02AA   0E89           00961     swapf WREG
02AB   04??           00962     iorwf vbuffer+1
02AC   08??           00963     movfw balls
02AD   2???           00964     call digits
02AE   04??           00965     iorwf vbuffer+4
02AF   2???           00966     call display_vbuffer
                      00967     dropn 1
02B0   3101               M     addfsr T,1
02B1                  00968 score_exit
                      00969     next_task 5*4
02B1   0A??               M     incf slice
02B2   3014               M     movlw 5*4
02B3   02??               M     subwf slice,W
02B4   1D03               M     skpz
                          M     leave
02B5   2???               M     goto isr_exit
02B6   01??               M     clrf slice
02B7   0A??               M     incf task
                          M     leave
02B8   2???               M     goto isr_exit
                      00970 
                      00971     
                      00972 ; task 11,  draw top wall, 8 screen lines 
                      00973 ; lcount 50-57    
02B9                  00974 draw_top_wall
                      00975 ;    banksel TRISA
02B9   09??           00976     comf vbuffer
02BA   09??           00977     comf vbuffer+1
02BB   09??           00978     comf vbuffer+2
02BC   09??           00979     comf vbuffer+3
02BD   09??           00980     comf vbuffer+4
02BE   09??           00981     comf vbuffer+5
02BF   300B           00982     movlw WHITE
02C0   00??           00983     movwf fg_color
                      00984     tdelay LEFT_MARGIN
                          M     if LEFT_MARGIN==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==2
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN>5
  0016                    M     variable q=(LEFT_MARGIN-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3*q
02C1   3016               M     movlw q
02C2   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      00985     white
02C3   300B               M     movlw WHITE
02C4   008C               M     movwf TRISA
02C5   2???           00986     call display_vbuffer
                      00987     white
02C6   300B               M     movlw WHITE
02C7   008C               M     movwf TRISA
                      00988     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if BORDER_WIDTH==4
02C8   2???               M     call _4tcy
                          M     exitm
                      00989     black
02C9   301B               M     movlw BLACK
02CA   008C               M     movwf TRISA
                      00990     next_task BRICK_HEIGHT
02CB   0A??               M     incf slice
02CC   3008               M     movlw BRICK_HEIGHT
02CD   02??               M     subwf slice,W
02CE   1D03               M     skpz
                          M     leave
02CF   2???               M     goto isr_exit
02D0   01??               M     clrf slice
02D1   0A??               M     incf task
                          M     leave
02D2   2???               M     goto isr_exit
                      00991 
                      00992 ; put ball mask in video_buffer
                      00993 ; designed to take a constant number of Tcy    
                      00994 ; 38 Tcy    
02D3                  00995 put_ball_in_buffer
02D3   2???           00996     call ball_visible ; +22 Tcy
02D4   1C03           00997     skpc
02D5   3???           00998     bra kill_time
02D6   0187           00999     clrf FSR1H
02D7   30??           01000     movlw low vbuffer
02D8   0086           01001     movwf FSR1L
02D9   08??           01002     movfw ball_byte
02DA   0786           01003     addwf FSR1L
02DB   08??           01004     movfw ball_mask
02DC   001E           01005     movwi FSR1++
02DD   08??           01006     movfw ball_mask+1
02DE   3FC0           01007     movwi [FSR1]
02DF   0008           01008     return ; 37 tcy
02E0                  01009 kill_time 
                      01010     tdelay 7
                          M     if 7==0
                          M     exitm
                          M     endif
                          M     if 7==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 7==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if 7==3
                          M     nop
                          M     bra $+1
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if 7==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if 7==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if 7>5
  0001                    M     variable q=(7-3)/3  
  0001                    M     variable r=7-3-3*q
02E0   3001               M     movlw q
02E1   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
02E2   0000               M     nop
                          M     exitm
02E3   0008           01011     return ; 37 tcy
                      01012 
02E4                  01013 empty_common    
02E4   2???           01014     call put_ball_in_buffer
02E5   300B           01015     movlw WHITE
02E6   00??           01016     movwf fg_color
                      01017     tdelay LEFT_MARGIN-37
                          M     if LEFT_MARGIN-37==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-37>5
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0009                    M     variable q=(LEFT_MARGIN-37-3)/3 
  0002                    M     variable r=LEFT_MARGIN-37-3-3*q
02E7   3009               M     movlw q
02E8   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
02E9   3???               M     bra $+1
                          M     exitm
                      01018     white
02EA   300B               M     movlw WHITE
02EB   008C               M     movwf TRISA
02EC   2???           01019     call display_vbuffer
                      01020     white
02ED   300B               M     movlw WHITE
02EE   008C               M     movwf TRISA
                      01021     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
02EF   2???               M     call _4tcy
                          M     exitm
                      01022     black
02F0   301B               M     movlw BLACK
02F1   008C               M     movwf TRISA
02F2   0008           01023     return
                      01024     
                      01025 ; task 12,  draw vertical sides over bricks.
                      01026 ; lcount 58-73    
02F3                  01027 draw_sides 
                      01028 ;    banksel TRISA
                      01029     tdelay 2
                          M     if 2==0
                          M     exitm
                          M     endif
                          M     if 2==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if 2==2
02F3   3???               M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
02F4   2???           01030     call empty_common
                      01031     next_task 2*BRICK_HEIGHT
02F5   0A??               M     incf slice
02F6   3010               M     movlw 2*BRICK_HEIGHT
02F7   02??               M     subwf slice,W
02F8   1D03               M     skpz
                          M     leave
02F9   2???               M     goto isr_exit
02FA   01??               M     clrf slice
02FB   0A??               M     incf task
                          M     leave
02FC   2???               M     goto isr_exit
                      01032  
                      01033 ; copy a brick row in vbuffer
                      01034 ; FSR1 initialized to point row    
02FD                  01035 copy_row
02FD   0016           01036     moviw FSR1++
02FE   04??           01037     iorwf vbuffer
02FF   0016           01038     moviw FSR1++
0300   04??           01039     iorwf vbuffer+1
0301   0016           01040     moviw FSR1++
0302   04??           01041     iorwf vbuffer+2
0303   0016           01042     moviw FSR1++
0304   04??           01043     iorwf vbuffer+3
0305   0016           01044     moviw FSR1++
0306   04??           01045     iorwf vbuffer+4
0307   0016           01046     moviw FSR1++
0308   04??           01047     iorwf vbuffer+5
0309   0008           01048     return    
                      01049 
                      01050 ;common code to all bricks row display    
030A                  01051 rows_common
030A   00??           01052     movwf fg_color
030B   0187           01053     clrf FSR1H
030C   2???           01054     call copy_row
                      01055     tdelay 1
                          M     if 1==0
                          M     exitm
                          M     endif
                          M     if 1==1
030D   0000               M     nop
                          M     exitm
                      01056     white
030E   300B               M     movlw WHITE
030F   008C               M     movwf TRISA
0310   2???           01057     call display_vbuffer
                      01058     white
0311   300B               M     movlw WHITE
0312   008C               M     movwf TRISA
                      01059     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
0313   2???               M     call _4tcy
                          M     exitm
                      01060     black
0314   301B               M     movlw BLACK
0315   008C               M     movwf TRISA
                      01061     next_task BRICKS_ROWS*BRICK_HEIGHT
0316   0A??               M     incf slice
0317   3030               M     movlw BRICKS_ROWS*BRICK_HEIGHT
0318   02??               M     subwf slice,W
0319   1D03               M     skpz
                          M     leave
031A   2???               M     goto isr_exit
031B   01??               M     clrf slice
031C   0A??               M     incf task
                          M     leave
031D   2???               M     goto isr_exit
                      01062     
                      01063 ; task 13, draw brick rows
                      01064 ; lcount 74-121   
031E                  01065 draw_bricks
                      01066 ;    banksel vbuffer
031E   2???           01067     call put_ball_in_buffer
031F   30??           01068     movlw low row1
0320   0086           01069     movwf FSR1L
0321   30F8           01070     movlw 0xf8
0322   05??           01071     andwf slice,W
0323   0786           01072     addwf FSR1L
0324   003B           01073     banksel PWM1CON
                      01074     pushw
0325   0019               M     movwi --SP
0326   3010           01075     movlw 2<<3
0327   0200           01076     subwf T,W
0328   1803           01077     skpnc
0329   161B           01078     bsf PWM1CON,POL
                      01079     popw
032A   0012               M     moviw SP++
032B   0021           01080     banksel TRISA
032C   3689           01081     lsrf WREG
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

032D   3689           01082     lsrf WREG
                      01083     ; select color according to row index {0..5}
032E   000B           01084     brw
032F   3009           01085     movlw YELLOW
0330   3???           01086     bra rows_common
0331   3009           01087     movlw YELLOW
0332   3???           01088     bra rows_common
0333   3009           01089     movlw MAUVE
0334   3???           01090     bra rows_common
0335   3009           01091     movlw MAUVE
0336   3???           01092     bra rows_common
0337   3019           01093     movlw BLUE
0338   3???           01094     bra rows_common
0339   3019           01095     movlw BLUE
033A   3???           01096     bra rows_common
                      01097     
  00000028            01098 MSG_FIRST equ 40
  00000028            01099 MSG_HEIGHT equ 40
  00000010            01100 MSG_PIXELS_COUNT equ 16 
                      01101 ; task 14
                      01102 ; draw all rows below bricks down to paddle
                      01103 ; also display message when game over. 
                      01104 ; lcount 122-241 
033B                  01105 draw_empty
                      01106 ;    banksel TRISA
033B   1B00           01107     btfsc flags, F_OVER
033C   3???           01108     bra print_msg
033D   2???           01109     call empty_common
033E   3???           01110     bra draw_empty_exit
033F                  01111 print_msg    
033F   3009           01112     movlw YELLOW ; message color
0340   00??           01113     movwf fg_color
0341   3028           01114     movlw MSG_FIRST
                      01115     pushw
0342   0019               M     movwi --SP
0343   3050           01116     movlw MSG_FIRST+MSG_HEIGHT
                      01117     pushw
0344   0019               M     movwi --SP
0345   08??           01118     movfw slice
0346   2???           01119     call between
0347   1C03           01120     skpc
0348   3???           01121     bra msg01
0349   30??           01122     movlw high end_msg
034A   0087           01123     movwf FSR1H
034B   30??           01124     movlw low end_msg
034C   0086           01125     movwf FSR1L
034D   1003           01126     clrc
034E   300A           01127     movlw 10
034F   1B80           01128     btfsc flags,F_COOL
0350   0786           01129     addwf FSR1L
0351   1803           01130     skpnc
0352   0A87           01131     incf FSR1H
                      01132 ; copy message bitmap in vbuffer
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01133 ; message is  16 pixels wide
0353                  01134 copy_msg
0353   3028           01135     movlw MSG_FIRST
0354   02??           01136     subwf slice,W
0355   39F8           01137     andlw 0xf8
0356   3689           01138     lsrf WREG
0357   3689           01139     lsrf WREG
0358   0786           01140     addwf FSR1L
0359   1803           01141     skpnc
035A   0A87           01142     incf FSR1H
035B   0016           01143     moviw FSR1++
035C   00??           01144     movwf vbuffer+1
035D   0016           01145     moviw FSR1++
035E   00??           01146     movwf vbuffer+2
035F                  01147 msg01    
035F   2???           01148     call display_vbuffer
0360                  01149 draw_empty_exit
                      01150     next_task PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0360   0A??               M     incf slice
0361   307C               M     movlw PADDLE_Y-ROW6_Y-BRICK_HEIGHT
0362   02??               M     subwf slice,W
0363   1D03               M     skpz
                          M     leave
0364   2???               M     goto isr_exit
0365   01??               M     clrf slice
0366   0A??               M     incf task
                          M     leave
0367   2???               M     goto isr_exit
                      01151 
                      01152     
                      01153 ; task 15, draw paddle at bottom screen  
                      01154 ; lcount 242-249    
0368                  01155 draw_paddle
                      01156 ;    banksel TRISA
0368   0187           01157     clrf FSR1H
0369   30??           01158     movlw low vbuffer
036A   0086           01159     movwf FSR1L
036B   08??           01160     movfw paddle_byte
036C   0786           01161     addwf FSR1L
036D   08??           01162     movfw paddle_mask
036E   001E           01163     movwi FSR1++
036F   08??           01164     movfw paddle_mask+1
0370   3FC0           01165     movwi  [FSR1]
0371   300B           01166     movlw WHITE
0372   00??           01167     movwf fg_color
                      01168     tdelay LEFT_MARGIN-3
                          M     if LEFT_MARGIN-3==0
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==1
                          M     nop
                          M     exitm
                          M     endif
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if LEFT_MARGIN-3==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==3
                          M     nop
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==4
                          M     call _4tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3==5
                          M     call _5tcy
                          M     exitm
                          M     endif
                          M     if LEFT_MARGIN-3>5
  0015                    M     variable q=(LEFT_MARGIN-3-3)/3 
  0000                    M     variable r=LEFT_MARGIN-3-3-3*q
0373   3015               M     movlw q
0374   2???               M     call _3ntcy ; Tcy=3+3*q
                          M     if (r==2)
                          M     bra $+1
                          M     exitm
                          M     endif 
                          M     if (r==1)
                          M     nop
                          M     exitm
                          M     endif
                          M     endif
                      01169     white
0375   300B               M     movlw WHITE
0376   008C               M     movwf TRISA
0377   2???           01170     call display_vbuffer
                      01171     white
0378   300B               M     movlw WHITE
0379   008C               M     movwf TRISA
                      01172     tdelay BORDER_WIDTH
                          M     if BORDER_WIDTH==0
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==1
                          M     nop
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==2
                          M     bra $+1
                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==3
                          M     nop
                          M     bra $+1
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     exitm
                          M     endif
                          M     if BORDER_WIDTH==4
037A   2???               M     call _4tcy
                          M     exitm
                      01173     black
037B   301B               M     movlw BLACK
037C   008C               M     movwf TRISA
                      01174     next_task PADDLE_THICKNESS
037D   0A??               M     incf slice
037E   3004               M     movlw PADDLE_THICKNESS
037F   02??               M     subwf slice,W
0380   1D03               M     skpz
                          M     leave
0381   2???               M     goto isr_exit
0382   01??               M     clrf slice
0383   0A??               M     incf task
                          M     leave
0384   2???               M     goto isr_exit
                      01175 
                      01176 ; task 16,  wait end of this field, reset task to zero    
                      01177 ; lcount 251-262/3    
0385                  01178 wait_field_end
0385   1800           01179     btfsc flags, F_BIT8
0386   2???           01180     goto hi_line
                      01181     leave
0387   2???               M     goto isr_exit
0388                  01182 hi_line
0388   1880           01183     btfsc flags,F_EVEN
0389   2???           01184     goto even_field
038A   3005           01185     movlw 5
038B   02??           01186     subwf lcount,W
038C   1D03           01187     skpz
                      01188     leave
038D   2???               M     goto isr_exit
038E   2???           01189     goto field_end
038F                  01190 even_field
038F   3006           01191     movlw 6
0390   02??           01192     subwf lcount,W
0391   1D03           01193     skpz
                      01194     leave
0392   2???               M     goto isr_exit
                      01195 ; even field last line is half_line    
                      01196 ; set PWM3 for line 263 half-line
0393   003B           01197     banksel PWM3DC
0394   3003           01198     movlw high HALF_LINE
0395   00B6           01199     movwf PWM3PRH
0396   308D           01200     movlw low HALF_LINE
0397   00B5           01201     movwf PWM3PRL
0398   17BF           01202     bsf PWM3LDCON,7
0399                  01203 field_end
0399   01??           01204     clrf task
039A   01??           01205     clrf slice
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

039B   01??           01206     clrf lcount
039C   1000           01207     bcf flags, F_BIT8
039D   1500           01208     bsf flags, F_SYNC
                      01209 ; toggle odd/even field flag    
039E   3002           01210     movlw 1<<F_EVEN
039F   06??           01211     xorwf flags
                      01212     leave
03A0   2???               M     goto isr_exit
                      01213 
                      01214 ; helper functions
                      01215 
                      01216 
                      01217 ; increment user score
                      01218 ; This is a BCD addition where a single digit is added to score.   
                      01219 ; score is stored as big indian
                      01220 ; argument: 
                      01221 ;   WREG ->  bdc digit to add to score variable
03A1                  01222 inc_score
03A1   07??           01223     addwf score+1
03A2   1883           01224     btfsc STATUS,DC
03A3   3???           01225     bra $+6
03A4   300F           01226     movlw 15
03A5   05??           01227     andwf score+1,W
03A6   3C09           01228     sublw 9
03A7   1803           01229     skpnc
03A8   3???           01230     bra $+3
03A9   3006           01231     movlw 6
03AA   07??           01232     addwf score+1
03AB   0E??           01233     swapf score+1,W
03AC   390F           01234     andlw 15
03AD   3C09           01235     sublw 9
03AE   1803           01236     skpnc
03AF   3???           01237     bra game_over_test
03B0   3060           01238     movlw 0x60
03B1   07??           01239     addwf score+1
03B2   0A??           01240     incf score
                      01241 ; double ball speed if score >=200
03B3   3002           01242     movlw 2
03B4   02??           01243     subwf score,W
03B5   1C03           01244     skpc
03B6   0008           01245     return
03B7   3001           01246     movlw 1
03B8   00??           01247     movwf ball_speed
03B9                  01248 game_over_test ; all bricks destroyed?
03B9   3004           01249     movlw 4
03BA   02??           01250     subwf score,W
03BB   1D03           01251     skpz
03BC   0008           01252     return
03BD   3008           01253     movlw 0x08
03BE   02??           01254     subwf score+1,W
03BF   1D03           01255     skpz
03C0   0008           01256     return
03C1   1700           01257     bsf flags,F_OVER ; game over
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C2   1780           01258     bsf flags,F_COOL ; with maximum score.
03C3   0008           01259     return
                      01260     
                      01261     
03C4                  01262 brick_wall_init
03C4   30??           01263     movlw high row1
03C5   0087           01264     movwf FSR1H
03C6   30??           01265     movlw low row1
03C7   0086           01266     movwf FSR1L
03C8   3030           01267     movlw BRICKS_ROWS*8
03C9   00??           01268     movwf temp1
03CA   30FF           01269     movlw 0xff
03CB                  01270 bw_init
03CB   001E           01271     movwi FSR1++
03CC   0B??           01272     decfsz temp1
03CD   3???           01273     bra bw_init
03CE   0008           01274     return
                      01275 
                      01276 ; pseudo random number generator    
                      01277 ; REF: https://en.wikipedia.org/wiki/LFSR#Fibonacci_LFSRs  
  000000B8            01278 POLY equ 0xb8 
03CF                  01279 lfsr8
                      01280 ;    banksel seed
03CF   36??           01281     lsrf seed
03D0   30B8           01282     movlw POLY
03D1   1803           01283     skpnc
03D2   06??           01284     xorwf seed
                      01285 ; call here for 5 Tcy delay using a single instruction
                      01286 ; see tdelay macro 
03D3                  01287 _5tcy
03D3   08??           01288     movfw seed
03D4   0008           01289     return
                      01290     
                      01291 ; ball is sent at random direcction at serve.
03D5                  01292 set_ball_dx
03D5   2???           01293     call lfsr8 ;random
03D6   3907           01294     andlw 7
03D7   3589           01295     lslf WREG
03D8   000B           01296     brw
03D9   3001           01297     movlw 1
03DA   3???           01298     bra set_ball_dx_exit
03DB   30FF           01299     movlw -1
03DC   3???           01300     bra set_ball_dx_exit
03DD   3001           01301     movlw 1
03DE   3???           01302     bra set_ball_dx_exit
03DF   30FF           01303     movlw -1
03E0   3???           01304     bra set_ball_dx_exit
03E1   3001           01305     movlw 1
03E2   3???           01306     bra set_ball_dx_exit
03E3   30FF           01307     movlw -1
03E4   3???           01308     bra set_ball_dx_exit
03E5   3001           01309     movlw 1
03E6   3???           01310     bra set_ball_dx_exit
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03E7   3000           01311     movlw 0
03E8                  01312 set_ball_dx_exit
03E8   00??           01313     movwf ball_dx
03E9   0008           01314     return
                      01315     
03EA                  01316 game_init
03EA   01??           01317     clrf score
03EB   01??           01318     clrf score+1
03EC   2???           01319     call brick_wall_init
03ED   002?           01320     banksel balls
03EE   3003           01321     movlw 3
03EF   00??           01322     movwf balls
03F0   01??           01323     clrf ball_timer
03F1   0A??           01324     incf ball_timer
03F2   30EF           01325     movlw PADDLE_Y-BALL_HEIGHT+1
03F3   00??           01326     movwf ball_y
03F4   2???           01327     call set_ball_dx
03F5   30FC           01328     movlw -4
03F6   00??           01329     movwf ball_dy
03F7   3002           01330     movlw 2
03F8   00??           01331     movwf ball_speed
03F9   01??           01332     clrf flags
03FA   0008           01333     return
                      01334     
                      01335 MAIN_PROG CODE                      ; let linker place main program
                      01336 
0000                  01337 initialize
                      01338 ; clear common RAM
0000   3070           01339     movlw 0x70
0001   0084           01340     movwf FSR0L
0002   0103           01341     clrw
0003   001A           01342     movwi FSR0++
0004   1F84           01343     btfss FSR0L,7
0005   3???           01344     bra $-2
                      01345 ; initialize LFSR seed
0006   1400           01346     bsf seed,0
                      01347 ; disable analog inputs, except AN0
0007   0023           01348     banksel ANSELA
0008   018C           01349     clrf ANSELA
                      01350 ; paddle potentiometer input     
0009   140C           01351     bsf ANSELA,PADDLE
                      01352 ;   setup arguments stack pointer
000A   30??           01353     movlw low (stack+STACK_SIZE)
000B   0084           01354     movwf FSR0L
                      01355 ; adc clock Fosc/32    
000C   0021           01356     banksel ADCON1
000D   3020           01357     movlw (2<<ADCS0)
000E   009E           01358     movwf ADCON1
                      01359 ; pin setup
                      01360 ; video luminance output always set to 1.    
000F   0022           01361     banksel LATA
0010   160C           01362     bsf LATA, VIDEO_OUT
                      01363 ; nstc sync output
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011   0021           01364     banksel TRISA
0012   110C           01365     bcf TRISA,SYNC_OUT
                      01366 ;  clear all PWM special fonction registers
                      01367 ;  to start configuration in a clean state.
0013   300D           01368     movlw high PWMEN
0014   0087           01369     movwf FSR1H
0015   308E           01370     movlw low PWMEN
0016   0086           01371     movwf FSR1L
0017                  01372 clr_pwm_sfr
0017   0181           01373     clrf INDF1
0018   0A86           01374     incf FSR1L
0019   30C1           01375     movlw 0xc1
001A   0206           01376     subwf FSR1L,W
001B   1D03           01377     skpz
001C   3???           01378     bra clr_pwm_sfr
                      01379 ; PWM1 chroma signal on RA1
001D   003B           01380     banksel PWM1CON
001E   30C0           01381     movlw (1<<EN)|(1<<OE)
001F   009B           01382     movwf PWM1CON
0020   3007           01383     movlw 7
0021   0095           01384     movwf PWM1PRL
0022   3004           01385     movlw 4
0023   0093           01386     movwf PWM1DCL
0024   179F           01387     bsf PWM1LDCON,7
                      01388 ; PWM2 sound, clock source Fosc/8
0025   3030           01389     movlw 3<<PWM2PS0
0026   00AE           01390     movwf PWM2CLKCON
                      01391 ; PWM3 set to horizontal period 15734 hertz, output on RA2
0027   301B           01392     movlw low HPERIOD
0028   00B5           01393     movwf PWM3PRL
0029   3007           01394     movlw high HPERIOD
002A   00B6           01395     movwf PWM3PRH
002B   3086           01396     movlw HSYNC
002C   00B3           01397     movwf PWM3DCL
002D   30D0           01398     movlw (1<<EN)|(1<<OE)|(1<<POL)
002E   00BB           01399     movwf PWM3CON
002F   17BF           01400     bsf PWM3LDCON,7
0030   143C           01401     bsf PWM3INTE,PRIE
                      01402 ; enbable interrupt
                      01403 ; only interrupt used is PWM3PR rollover    
0031   0020           01404     banksel PIR3
0032   1313           01405     bcf PIR3,PWM3IF
0033   0021           01406     banksel PIE3
0034   1713           01407     bsf PIE3,PWM3IE
0035   170B           01408     bsf INTCON,PEIE
0036   178B           01409     bsf INTCON,GIE
0037   2???           01410     call game_init
                      01411 ; test code
                      01412 ; all processing done in ISR    
0038   2???           01413     goto $
                      01414 
                      01415 ;digits character table
                      01416 ; input:
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01417 ;   T -> glyph row
                      01418 ;   WREG -> digit
                      01419 ; output:
                      01420 ;   WREG -> pixels
                      01421 ;   T -> glyph row  
                      01422 ; 2 digits packed in 5 bytes
                      01423 ; high nibble even digit, low nibble odd digit    
0039                  01424 digits
0039   00??           01425     movwf temp1
003A   390E           01426     andlw 0x0e
003B   00??           01427     movwf temp2
003C   35??           01428     lslf temp2
003D   35??           01429     lslf temp2
003E   07??           01430     addwf temp2
003F   36??           01431     lsrf temp2,W
0040   0700           01432     addwf T,W
0041   2???           01433     call digit_row
0042   1C00           01434     btfss temp1,0
0043   0E89           01435     swapf WREG
0044   390F           01436     andlw 0xf
0045   0008           01437     return
0046                  01438 digit_row    
0046   000B           01439     brw
0047   3444 34AC 34A4 01440     dt  H'44',H'AC',H'A4',H'A4',H'4E' ; 0, 1
       34A4 344E 
004C   34EE 3422 34CC 01441     dt  H'EE',H'22',H'CC',H'82',H'EE' ; 2, 3
       3482 34EE 
0051   34AE 34A8 34EE 01442     dt  H'AE',H'A8',H'EE',H'22',H'2E' ; 4, 5
       3422 342E 
0056   34CE 3482 34E2 01443     dt  H'CE',H'82',H'E2',H'A2',H'E2' ; 6, 7
       34A2 34E2 
005B   34EE 34AA 34EE 01444     dt  H'EE',H'AA',H'EE',H'A2',H'E6' ; 8, 9
       34A2 34E6 
                      01445     
                      01446 ; PWM2PR count for sound frequencies    
0060                  01447 frequency
0060   000B           01448     brw
0061   348B 34D3      01449     dt high 35795, low 35795 ; 100 hertz
0063   340D 34FB      01450     dt high 3579, low 3579 ; 1000 hertz
                      01451   
                      01452 ; END! message bitmap
0065                  01453 end_msg
                      01454 ;    brw
0065   00F4 005C      01455     data 0xf4,0x5c
0067   0086 0052      01456     data 0x86,0x52
0069   00E5 0052      01457     data 0xe5,0x52
006B   0084 00D2      01458     data 0x84,0xd2
006D   00F4 005C      01459     data 0xf4,0x5c
                      01460   
                      01461 ; COOL message bitmap    
006F                  01462 cool_msg
                      01463 ;    brw
006F   00EE 00E8      01464     data 0xee,0xe8
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0071   008A 00A8      01465     data 0x8a,0xa8
0073   008A 00A8      01466     data 0x8a,0xa8
0075   008A 00A8      01467     data 0x8a,0xa8
0077   00EE 00EF      01468     data 0xee,0xef
                      01469     
                      01470     
                      01471 eeprom org (PROG_SIZE-EEPROM_SIZE)
                      01472  
3FA7 1EFF             01473     END
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCON2                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA4                             00000004
ANSELA                            0000018C
APFCON                            0000011D
APFCON0                           0000011D
AUDIO                             00000000
BALL_BOTTOM_BOUND                 000000F9
BALL_HEIGHT                       00000008
BALL_LEFT_BOUND                   00000000
BALL_MASK                         000000C0
BALL_RIGHT_BOUND                  0000002E
BALL_TOP_BOUND                    0000003A
BALL_WIDTH                        00000002
BAUDCON                           0000019F
BLACK                             0000001B
BLUE                              00000019
BORCON                            00000116
BORDER_WIDTH                      00000004
BORFS                             00000006
BORRDY                            00000000
BRG16                             00000003
BRGH                              00000002
BRICKS_ROWS                       00000006
BRICK_HEIGHT                      00000008
BRICK_WIDTH                       00000004
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1NCH2                            00000002
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
CDAFVR0                           00000002
CDAFVR1                           00000003
CFGS                              00000006
CHROMA                            00000001
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CLKIN                             00000005
CM1CON0                           00000111
CM1CON1                           00000112
CMOUT                             00000115
CREN                              00000004
CS0                               00000000
CS1                               00000001
CSRC                              00000007
CWG1CON0                          00000693
CWG1CON1                          00000694
CWG1CON2                          00000695
CWG1DBF                           00000692
CWG1DBF0                          00000000
CWG1DBF1                          00000001
CWG1DBF2                          00000002
CWG1DBF3                          00000003
CWG1DBF4                          00000004
CWG1DBF5                          00000005
CWG1DBR                           00000691
CWG1DBR0                          00000000
CWG1DBR1                          00000001
CWG1DBR2                          00000002
CWG1DBR3                          00000003
CWG1DBR4                          00000004
CWG1DBR5                          00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

CWGASEL                           00000006
CWGBSEL                           00000005
C_SHAD                            00000000
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DARK_GREEN                        00000019
DC                                00000001
DCIE                              00000001
DCIF                              00000001
DC_SHAD                           00000001
EEPROM_SIZE                       00000080
EN                                00000007
F                                 00000001
FERR                              00000002
FIRST_BRICK_Y                     0000004A
FIRST_VIDEO_LINE                  0000001E
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR0_SHAD                         00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FSR1_SHAD                         00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
F_BIT8                            00000000
F_COOL                            00000007
F_EVEN                            00000001
F_OVER                            00000006
F_PAUSE                           00000005
F_SOUND                           00000003
F_START                           00000004
F_SYNC                            00000002
Fhorz                             00003D76
Fosc                              01B4F360
G1ARSEN                           00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

G1ASDLA0                          00000004
G1ASDLA1                          00000005
G1ASDLB0                          00000006
G1ASDLB1                          00000007
G1ASDSC1                          00000002
G1ASDSFLT                         00000001
G1ASE                             00000007
G1CS0                             00000000
G1EN                              00000007
G1IS0                             00000000
G1IS1                             00000001
G1IS2                             00000002
G1OEA                             00000005
G1OEB                             00000006
G1POLA                            00000003
G1POLB                            00000004
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
HALF_LINE                         0000038D
HEQUAL                            00000041
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HPERIOD                           0000071B
HSYNC                             00000086
INDF0                             00000000
INDF1                             00000001
INLVLA                            0000038C
INLVLA0                           00000000
INLVLA1                           00000001
INLVLA2                           00000002
INLVLA3                           00000003
INLVLA4                           00000004
INLVLA5                           00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCAF                             00000393
IOCAF0                            00000000
IOCAF1                            00000001
IOCAF2                            00000002
IOCAF3                            00000003
IOCAF4                            00000004
IOCAF5                            00000005
IOCAN                             00000392
IOCAN0                            00000000
IOCAN1                            00000001
IOCAN2                            00000002
IOCAN3                            00000003
IOCAN4                            00000004
IOCAN5                            00000005
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

IOCAP                             00000391
IOCAP0                            00000000
IOCAP1                            00000001
IOCAP2                            00000002
IOCAP3                            00000003
IOCAP4                            00000004
IOCAP5                            00000005
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
LAST_VIDEO_LINE                   000000F9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA4                             00000004
LATA5                             00000005
LDA                               00000007
LDS0                              00000000
LDS1                              00000001
LDT                               00000006
LEFT_MARGIN                       00000045
LFIOFR                            00000001
LWLO                              00000005
MAUVE                             00000009
MC1OUT                            00000000
MFIOFR                            00000002
MODE0                             00000002
MODE1                             00000003
MPWM1EN                           00000000
MPWM1LD                           00000000
MPWM1OUT                          00000000
MPWM2EN                           00000001
MPWM2LD                           00000001
MPWM2OUT                          00000001
MPWM3EN                           00000002
MPWM3LD                           00000002
MPWM3OUT                          00000002
MSG_FIRST                         00000028
MSG_HEIGHT                        00000028
MSG_PIXELS_COUNT                  00000010
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_RWDT                          00000004
NOT_T1SYNC                        00000002
NOT_TO                            00000004
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

NOT_WPUEN                         00000007
ODA0                              00000000
ODA1                              00000001
ODA2                              00000002
ODA4                              00000004
ODA5                              00000005
ODCONA                            0000028C
OE                                00000006
OERR                              00000001
OFIE                              00000003
OFIF                              00000003
OFM0                              00000005
OFM1                              00000006
OFO                               00000004
OFS0                              00000000
OFS1                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSTS                              00000005
OTHERS                            00000009
OUT                               00000005
P1SEL                             00000000
P2SEL                             00000001
PADDLE                            00000000
PADDLE_LIMIT                      00000028
PADDLE_MASK                       000000FF
PADDLE_THICKNESS                  00000004
PADDLE_WIDTH                      00000008
PADDLE_Y                          000000F6
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PHIE                              00000002
PHIF                              00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIXEL_WIDTH                       00000005
PLAY_WIDTH                        00000030
PLLR                              00000006
PMADR                             00000191
PMADRH                            00000192
PMADRL                            00000191
PMCON1                            00000195
PMCON2                            00000196
PMDAT                             00000193
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

PMDATH                            00000194
PMDATL                            00000193
POL                               00000004
POLY                              000000B8
PORTA                             0000000C
PR2                               0000001B
PRIE                              00000000
PRIF                              00000000
PROG_SIZE                         00000800
PS0_OPTION_REG                    00000000
PS0_PWM1CLKCON                    00000004
PS0_PWM2CLKCON                    00000004
PS0_PWM3CLKCON                    00000004
PS1_OPTION_REG                    00000001
PS1_PWM1CLKCON                    00000005
PS1_PWM2CLKCON                    00000005
PS1_PWM3CLKCON                    00000005
PS2_OPTION_REG                    00000002
PS2_PWM1CLKCON                    00000006
PS2_PWM2CLKCON                    00000006
PS2_PWM3CLKCON                    00000006
PSA                               00000003
PWM1CLKCON                        00000D9E
PWM1CON                           00000D9B
PWM1CS0                           00000000
PWM1CS1                           00000001
PWM1DC                            00000D93
PWM1DCH                           00000D94
PWM1DCH0                          00000000
PWM1DCH1                          00000001
PWM1DCH2                          00000002
PWM1DCH3                          00000003
PWM1DCH4                          00000004
PWM1DCH5                          00000005
PWM1DCH6                          00000006
PWM1DCH7                          00000007
PWM1DCIE                          00000001
PWM1DCIF                          00000001
PWM1DCL                           00000D93
PWM1DCL0                          00000000
PWM1DCL1                          00000001
PWM1DCL2                          00000002
PWM1DCL3                          00000003
PWM1DCL4                          00000004
PWM1DCL5                          00000005
PWM1DCL6                          00000006
PWM1DCL7                          00000007
PWM1EN                            00000007
PWM1EN_A                          00000000
PWM1IE                            00000004
PWM1IF                            00000004
PWM1INTCON                        00000D9C
PWM1INTE                          00000D9C
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

PWM1INTF                          00000D9D
PWM1INTFLG                        00000D9D
PWM1LD                            00000007
PWM1LDA_A                         00000000
PWM1LDCON                         00000D9F
PWM1LDM                           00000006
PWM1LDS0                          00000000
PWM1LDS1                          00000001
PWM1MODE0                         00000002
PWM1MODE1                         00000003
PWM1OE                            00000006
PWM1OF                            00000D97
PWM1OFCON                         00000DA0
PWM1OFH                           00000D98
PWM1OFH0                          00000000
PWM1OFH1                          00000001
PWM1OFH2                          00000002
PWM1OFH3                          00000003
PWM1OFH4                          00000004
PWM1OFH5                          00000005
PWM1OFH6                          00000006
PWM1OFH7                          00000007
PWM1OFIE                          00000003
PWM1OFIF                          00000003
PWM1OFL                           00000D97
PWM1OFL0                          00000000
PWM1OFL1                          00000001
PWM1OFL2                          00000002
PWM1OFL3                          00000003
PWM1OFL4                          00000004
PWM1OFL5                          00000005
PWM1OFL6                          00000006
PWM1OFL7                          00000007
PWM1OFM0                          00000005
PWM1OFM1                          00000006
PWM1OFMC                          00000004
PWM1OFS0                          00000000
PWM1OFS1                          00000001
PWM1OUT                           00000005
PWM1OUT_A                         00000000
PWM1PH                            00000D91
PWM1PHH                           00000D92
PWM1PHH0                          00000000
PWM1PHH1                          00000001
PWM1PHH2                          00000002
PWM1PHH3                          00000003
PWM1PHH4                          00000004
PWM1PHH5                          00000005
PWM1PHH6                          00000006
PWM1PHH7                          00000007
PWM1PHIE                          00000002
PWM1PHIF                          00000002
PWM1PHL                           00000D91
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

PWM1PHL0                          00000000
PWM1PHL1                          00000001
PWM1PHL2                          00000002
PWM1PHL3                          00000003
PWM1PHL4                          00000004
PWM1PHL5                          00000005
PWM1PHL6                          00000006
PWM1PHL7                          00000007
PWM1POL                           00000004
PWM1PR                            00000D95
PWM1PRH                           00000D96
PWM1PRH0                          00000000
PWM1PRH1                          00000001
PWM1PRH2                          00000002
PWM1PRH3                          00000003
PWM1PRH4                          00000004
PWM1PRH5                          00000005
PWM1PRH6                          00000006
PWM1PRH7                          00000007
PWM1PRIE                          00000000
PWM1PRIF                          00000000
PWM1PRL                           00000D95
PWM1PRL0                          00000000
PWM1PRL1                          00000001
PWM1PRL2                          00000002
PWM1PRL3                          00000003
PWM1PRL4                          00000004
PWM1PRL5                          00000005
PWM1PRL6                          00000006
PWM1PRL7                          00000007
PWM1PS0                           00000004
PWM1PS1                           00000005
PWM1PS2                           00000006
PWM1TMR                           00000D99
PWM1TMRH                          00000D9A
PWM1TMRH0                         00000000
PWM1TMRH1                         00000001
PWM1TMRH2                         00000002
PWM1TMRH3                         00000003
PWM1TMRH4                         00000004
PWM1TMRH5                         00000005
PWM1TMRH6                         00000006
PWM1TMRH7                         00000007
PWM1TMRL                          00000D99
PWM1TMRL0                         00000000
PWM1TMRL1                         00000001
PWM1TMRL2                         00000002
PWM1TMRL3                         00000003
PWM1TMRL4                         00000004
PWM1TMRL5                         00000005
PWM1TMRL6                         00000006
PWM1TMRL7                         00000007
PWM2CLKCON                        00000DAE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

PWM2CON                           00000DAB
PWM2CS0                           00000000
PWM2CS1                           00000001
PWM2DC                            00000DA3
PWM2DCH                           00000DA4
PWM2DCH0                          00000000
PWM2DCH1                          00000001
PWM2DCH2                          00000002
PWM2DCH3                          00000003
PWM2DCH4                          00000004
PWM2DCH5                          00000005
PWM2DCH6                          00000006
PWM2DCH7                          00000007
PWM2DCIE                          00000001
PWM2DCIF                          00000001
PWM2DCL                           00000DA3
PWM2DCL0                          00000000
PWM2DCL1                          00000001
PWM2DCL2                          00000002
PWM2DCL3                          00000003
PWM2DCL4                          00000004
PWM2DCL5                          00000005
PWM2DCL6                          00000006
PWM2DCL7                          00000007
PWM2EN                            00000007
PWM2EN_A                          00000001
PWM2IE                            00000005
PWM2IF                            00000005
PWM2INTCON                        00000DAC
PWM2INTE                          00000DAC
PWM2INTF                          00000DAD
PWM2INTFLG                        00000DAD
PWM2LD                            00000007
PWM2LDA_A                         00000001
PWM2LDCON                         00000DAF
PWM2LDM                           00000006
PWM2LDS0                          00000000
PWM2LDS1                          00000001
PWM2MODE0                         00000002
PWM2MODE1                         00000003
PWM2OE                            00000006
PWM2OF                            00000DA7
PWM2OFCON                         00000DB0
PWM2OFH                           00000DA8
PWM2OFH0                          00000000
PWM2OFH1                          00000001
PWM2OFH2                          00000002
PWM2OFH3                          00000003
PWM2OFH4                          00000004
PWM2OFH5                          00000005
PWM2OFH6                          00000006
PWM2OFH7                          00000007
PWM2OFIE                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

PWM2OFIF                          00000003
PWM2OFL                           00000DA7
PWM2OFL0                          00000000
PWM2OFL1                          00000001
PWM2OFL2                          00000002
PWM2OFL3                          00000003
PWM2OFL4                          00000004
PWM2OFL5                          00000005
PWM2OFL6                          00000006
PWM2OFL7                          00000007
PWM2OFM0                          00000005
PWM2OFM1                          00000006
PWM2OFMC                          00000004
PWM2OFS0                          00000000
PWM2OFS1                          00000001
PWM2OUT                           00000005
PWM2OUT_A                         00000001
PWM2PH                            00000DA1
PWM2PHH                           00000DA2
PWM2PHH0                          00000000
PWM2PHH1                          00000001
PWM2PHH2                          00000002
PWM2PHH3                          00000003
PWM2PHH4                          00000004
PWM2PHH5                          00000005
PWM2PHH6                          00000006
PWM2PHH7                          00000007
PWM2PHIE                          00000002
PWM2PHIF                          00000002
PWM2PHL                           00000DA1
PWM2PHL0                          00000000
PWM2PHL1                          00000001
PWM2PHL2                          00000002
PWM2PHL3                          00000003
PWM2PHL4                          00000004
PWM2PHL5                          00000005
PWM2PHL6                          00000006
PWM2PHL7                          00000007
PWM2POL                           00000004
PWM2PR                            00000DA5
PWM2PRH                           00000DA6
PWM2PRH0                          00000000
PWM2PRH1                          00000001
PWM2PRH2                          00000002
PWM2PRH3                          00000003
PWM2PRH4                          00000004
PWM2PRH5                          00000005
PWM2PRH6                          00000006
PWM2PRH7                          00000007
PWM2PRIE                          00000000
PWM2PRIF                          00000000
PWM2PRL                           00000DA5
PWM2PRL0                          00000000
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

PWM2PRL1                          00000001
PWM2PRL2                          00000002
PWM2PRL3                          00000003
PWM2PRL4                          00000004
PWM2PRL5                          00000005
PWM2PRL6                          00000006
PWM2PRL7                          00000007
PWM2PS0                           00000004
PWM2PS1                           00000005
PWM2PS2                           00000006
PWM2TMR                           00000DA9
PWM2TMRH                          00000DAA
PWM2TMRH0                         00000000
PWM2TMRH1                         00000001
PWM2TMRH2                         00000002
PWM2TMRH3                         00000003
PWM2TMRH4                         00000004
PWM2TMRH5                         00000005
PWM2TMRH6                         00000006
PWM2TMRH7                         00000007
PWM2TMRL                          00000DA9
PWM2TMRL0                         00000000
PWM2TMRL1                         00000001
PWM2TMRL2                         00000002
PWM2TMRL3                         00000003
PWM2TMRL4                         00000004
PWM2TMRL5                         00000005
PWM2TMRL6                         00000006
PWM2TMRL7                         00000007
PWM3CLKCON                        00000DBE
PWM3CON                           00000DBB
PWM3CS0                           00000000
PWM3CS1                           00000001
PWM3DC                            00000DB3
PWM3DCH                           00000DB4
PWM3DCH0                          00000000
PWM3DCH1                          00000001
PWM3DCH2                          00000002
PWM3DCH3                          00000003
PWM3DCH4                          00000004
PWM3DCH5                          00000005
PWM3DCH6                          00000006
PWM3DCH7                          00000007
PWM3DCIE                          00000001
PWM3DCIF                          00000001
PWM3DCL                           00000DB3
PWM3DCL0                          00000000
PWM3DCL1                          00000001
PWM3DCL2                          00000002
PWM3DCL3                          00000003
PWM3DCL4                          00000004
PWM3DCL5                          00000005
PWM3DCL6                          00000006
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

PWM3DCL7                          00000007
PWM3EN                            00000007
PWM3EN_A                          00000002
PWM3IE                            00000006
PWM3IF                            00000006
PWM3INTCON                        00000DBC
PWM3INTE                          00000DBC
PWM3INTF                          00000DBD
PWM3INTFLG                        00000DBD
PWM3LD                            00000007
PWM3LDA_A                         00000002
PWM3LDCON                         00000DBF
PWM3LDM                           00000006
PWM3LDS0                          00000000
PWM3LDS1                          00000001
PWM3MODE0                         00000002
PWM3MODE1                         00000003
PWM3OE                            00000006
PWM3OF                            00000DB7
PWM3OFCON                         00000DC0
PWM3OFH                           00000DB8
PWM3OFH0                          00000000
PWM3OFH1                          00000001
PWM3OFH2                          00000002
PWM3OFH3                          00000003
PWM3OFH4                          00000004
PWM3OFH5                          00000005
PWM3OFH6                          00000006
PWM3OFH7                          00000007
PWM3OFIE                          00000003
PWM3OFIF                          00000003
PWM3OFL                           00000DB7
PWM3OFL0                          00000000
PWM3OFL1                          00000001
PWM3OFL2                          00000002
PWM3OFL3                          00000003
PWM3OFL4                          00000004
PWM3OFL5                          00000005
PWM3OFL6                          00000006
PWM3OFL7                          00000007
PWM3OFM0                          00000005
PWM3OFM1                          00000006
PWM3OFMC                          00000004
PWM3OFS0                          00000000
PWM3OFS1                          00000001
PWM3OUT                           00000005
PWM3OUT_A                         00000002
PWM3PH                            00000DB1
PWM3PHH                           00000DB2
PWM3PHH0                          00000000
PWM3PHH1                          00000001
PWM3PHH2                          00000002
PWM3PHH3                          00000003
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

PWM3PHH4                          00000004
PWM3PHH5                          00000005
PWM3PHH6                          00000006
PWM3PHH7                          00000007
PWM3PHIE                          00000002
PWM3PHIF                          00000002
PWM3PHL                           00000DB1
PWM3PHL0                          00000000
PWM3PHL1                          00000001
PWM3PHL2                          00000002
PWM3PHL3                          00000003
PWM3PHL4                          00000004
PWM3PHL5                          00000005
PWM3PHL6                          00000006
PWM3PHL7                          00000007
PWM3POL                           00000004
PWM3PR                            00000DB5
PWM3PRH                           00000DB6
PWM3PRH0                          00000000
PWM3PRH1                          00000001
PWM3PRH2                          00000002
PWM3PRH3                          00000003
PWM3PRH4                          00000004
PWM3PRH5                          00000005
PWM3PRH6                          00000006
PWM3PRH7                          00000007
PWM3PRIE                          00000000
PWM3PRIF                          00000000
PWM3PRL                           00000DB5
PWM3PRL0                          00000000
PWM3PRL1                          00000001
PWM3PRL2                          00000002
PWM3PRL3                          00000003
PWM3PRL4                          00000004
PWM3PRL5                          00000005
PWM3PRL6                          00000006
PWM3PRL7                          00000007
PWM3PS0                           00000004
PWM3PS1                           00000005
PWM3PS2                           00000006
PWM3TMR                           00000DB9
PWM3TMRH                          00000DBA
PWM3TMRH0                         00000000
PWM3TMRH1                         00000001
PWM3TMRH2                         00000002
PWM3TMRH3                         00000003
PWM3TMRH4                         00000004
PWM3TMRH5                         00000005
PWM3TMRH6                         00000006
PWM3TMRH7                         00000007
PWM3TMRL                          00000DB9
PWM3TMRL0                         00000000
PWM3TMRL1                         00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 58


SYMBOL TABLE
  LABEL                             VALUE 

PWM3TMRL2                         00000002
PWM3TMRL3                         00000003
PWM3TMRL4                         00000004
PWM3TMRL5                         00000005
PWM3TMRL6                         00000006
PWM3TMRL7                         00000007
PWMEN                             00000D8E
PWMLD                             00000D8F
PWMOUT                            00000D90
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
ROW1_Y                            0000004A
ROW2_Y                            00000052
ROW3_Y                            0000005A
ROW4_Y                            00000062
ROW5_Y                            0000006A
ROW6_Y                            00000072
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
SBOREN                            00000007
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SENDB                             00000003
SLRA0                             00000000
SLRA1                             00000001
SLRA2                             00000002
SLRA4                             00000004
SLRA5                             00000005
SLRCONA                           0000030C
SP                                FSR0
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SREN                              00000005
STACK_SIZE                        00000050
START_BTN                         00000003
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 59


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR                            00000FED
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SYNC_OUT                          00000002
T                                 INDF0
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSEL                            00000003
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOS                               00000FEE
TOSH                              00000FEF
TOSL                              00000FEE
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 60


SYMBOL TABLE
  LABEL                             VALUE 

TRIGSEL0                          00000004
TRIGSEL1                          00000005
TRIGSEL2                          00000006
TRIGSEL3                          00000007
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000002
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
VIDEO_OUT                         00000004
VREGCON                           00000197
VREGPM                            00000001
VSYNC_PULSE                       00000308
W                                 00000000
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WHITE                             0000000B
WPUA                              0000020C
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA3                             00000003
WPUA4                             00000004
WPUA5                             00000005
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 61


SYMBOL TABLE
  LABEL                             VALUE 

YELLOW                            00000009
Z                                 00000002
Z_SHAD                            00000002
_BOREN_NSLEEP                     00003DFF
_BOREN_OFF                        000039FF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003BFF
_BORV_19                          00003FFF
_BORV_HI                          00003BFF
_BORV_LO                          00003FFF
_CLKOUTEN_OFF                     00003FFF
_CLKOUTEN_ON                      000037FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CP_OFF                           00003FFF
_CP_ON                            00003F7F
_DEVID1                           00008006
_FOSC_ECH                         00003FFF
_FOSC_ECL                         00003FFD
_FOSC_ECM                         00003FFE
_FOSC_INTOSC                      00003FFC
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_ISR_007D                         0000007D
_ISR_0095                         00000095
_ISR_0111                         00000111
_ISR_0157                         00000157
_ISR_019C                         0000019C
_ISR_02E9                         000002E9
_ISR_02F3                         000002F3
_ISR_03A3                         000003A3
_ISR_03A8                         000003A8
_LPBOREN_OFF                      00003FFF
_LPBOREN_ON                       000037FF
_LVP_OFF                          00001FFF
_LVP_ON                           00003FFF
_MAIN_PROG_0005                   00000005
_MAIN_PROG_0038                   00000038
_MCLRE_OFF                        00003FBF
_MCLRE_ON                         00003FFF
_PLLEN_OFF                        00003EFF
_PLLEN_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FDF
_RES_VECT_0002                    00000002
_STVREN_OFF                       00003DFF
_STVREN_ON                        00003FFF
_WDTE_NSLEEP                      00003FF7
_WDTE_OFF                         00003FE7
_WDTE_ON                          00003FFF
_WDTE_SWDTEN                      00003FEF
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 62


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ALL                          00003FFC
_WRT_BOOT                         00003FFE
_WRT_HALF                         00003FFD
_WRT_OFF                          00003FFF
__12F1572                         00000001
add_score                         00000189
ball_byte                         000000DB
ball_dx                           00000009
ball_dy                           0000000A
ball_lost                         0000010E
ball_mask                         000000DC
ball_speed                        0000000B
ball_timer                        0000000E
ball_visible                      000001A5
ball_x                            00000007
ball_y                            00000008
balls                             000000DF
between                           00000190
between_exit                      0000019A
between_exit2                     0000019C
black                             
blue                              
bottom_bound                      00000107
bounce_left                       00000140
bouncing                          0000012F
brick_wall_init                   000003C4
bw_init                           000003CB
clr_pwm_sfr                       00000017
collision                         00000159
collision_exit                    0000018E
compute_ball_mask                 00000148
cool_msg                          0000006F
copy_msg                          00000353
copy_row                          000002FD
dark_green                        
digit_row                         00000046
digits                            00000039
display_bit                       
display_byte                      
display_vbuffer                   000001AC
draw_bricks                       0000031E
draw_empty                        0000033B
draw_empty_exit                   00000360
draw_paddle                       00000368
draw_score                        0000029D
draw_sides                        000002F3
draw_top_wall                     000002B9
dropn                             
eeprom                            00000780
empty_common                      000002E4
end_msg                           00000065
even_field                        0000038F
fg_color                          000000D7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 63


SYMBOL TABLE
  LABEL                             VALUE 

field_end                         00000399
fill1                             000000AD
fill2                             000000B5
fill3                             000000BD
fill4                             000000C5
fill5                             000000CD
fill6                             000000D5
flags                             00000000
frequency                         00000060
game_init                         000003EA
game_over                         000000DB
game_over_test                    000003B9
game_running                      000000D4
hi_line                           00000388
inc_score                         000003A1
initialize                        00000000
isr                               00000004
isr_exit                          0000002D
kill_time                         000002E0
lcount                            00000001
leave                             
left_bound                        000000ED
lfsr8                             000003CF
mauve                             
move_ball                         000000E5
move_ball_exit                    00000120
move_y                            000000FA
msg01                             0000035F
next_task                         
paddle_bounce                     00000123
paddle_byte                       000000D8
paddle_mask                       000000D9
paddle_pos                        00000006
paddle_sound                      00000142
pickn                             
pong_sound                        0000018A
popw                              
post_last                         00000064
post_vsync                        0000005B
pre_vsync                         00000033
print_msg                         0000033F
pushw                             
put_ball_in_buffer                000002D3
q                                 00000015
r                                 00000000
read_button                       000000C6
read_paddle                       00000076
right_bound                       000000F3
row1                              000000A7
row2                              000000AF
row3                              000000B7
row4                              000000BF
row5                              000000C7
MPASM 5.83  /HOME/JACQUES/GITHUB/BREAKOUT_15   3-25-2019  16:53:30         PAGE 64


SYMBOL TABLE
  LABEL                             VALUE 

row6                              000000CF
rows_common                       0000030A
score                             0000000C
score_exit                        000002B1
seed                              0000000F
set_ball_dx                       000003D5
set_ball_dx_exit                  000003E8
set_presync                       0000003E
set_vsync                         00000053
skip_2_tasks                      000000E0
slice                             00000002
sound                             00000097
sound_fx1                         000000A6
sound_init                        000000AF
sound_off                         0000009F
sound_timer                       000000DE
stack                             00000020
task                              00000003
task_switch                       00000019
tdelay                            
temp1                             00000004
temp2                             00000005
temp3                             000000A6
top_bound                         000000FE
vbuffer                           000000A0
video_first                       0000019E
vsync                             00000048
vsync_end                         00000068
wait_field_end                    00000385
wait_trigger                      000000D6
white                             
yellow                            

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   288 suppressed

